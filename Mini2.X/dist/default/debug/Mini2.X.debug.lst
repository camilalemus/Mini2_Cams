

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 12 19:09:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  001A                     _RCREG	set	26
   465  0019                     _TXREG	set	25
   466  0018                     _RCSTAbits	set	24
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCON	set	20
   469  000C                     _PIR1bits	set	12
   470  0008                     _PORTD	set	8
   471  0006                     _PORTB	set	6
   472  0006                     _PORTBbits	set	6
   473  0005                     _PORTA	set	5
   474  0064                     _TXIF	set	100
   475  0063                     _SSPIF	set	99
   476  005E                     _PEIE	set	94
   477  005F                     _GIE	set	95
   478  009A                     _SPBRGH	set	154
   479  0099                     _SPBRG	set	153
   480  008C                     _PIE1bits	set	140
   481  0098                     _TXSTAbits	set	152
   482  0091                     _SSPCON2bits	set	145
   483  0087                     _TRISCbits	set	135
   484  0094                     _SSPSTAT	set	148
   485  0093                     _SSPADD	set	147
   486  0091                     _SSPCON2	set	145
   487  0085                     _TRISA	set	133
   488  0088                     _TRISD	set	136
   489  0086                     _TRISB	set	134
   490  0463                     _SSPIE	set	1123
   491  043C                     _TRISC4	set	1084
   492  043B                     _TRISC3	set	1083
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:
   499  0800                     stringtab:
   500  0800                     __stringtab:
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:
   513  0806                     STR_2:
   514  0806  342E               	retlw	46	;'.'
   515  0807  3400               	retlw	0
   516  0808                     STR_1:
   517  0808  3453               	retlw	83	;'S'
   518  0809  3400               	retlw	0
   519                           
   520                           	psect	cinit
   521  07EB                     start_initialization:	
   522                           ; #config settings
   523                           
   524  07EB                     __initialization:
   525                           
   526                           ; Clear objects allocated to BANK0
   527  07EB  1383               	bcf	3,7	;select IRP bank0
   528  07EC  3065               	movlw	low __pbssBANK0
   529  07ED  0084               	movwf	4
   530  07EE  306E               	movlw	low (__pbssBANK0+9)
   531  07EF  120A  158A  210B  120A  118A  	fcall	clear_ram0
   532                           
   533                           ; Clear objects allocated to BANK1
   534  07F4  30A0               	movlw	low __pbssBANK1
   535  07F5  0084               	movwf	4
   536  07F6  30CC               	movlw	low (__pbssBANK1+44)
   537  07F7  120A  158A  210B  120A  118A  	fcall	clear_ram0
   538  07FC                     end_of_initialization:	
   539                           ;End of C runtime variable initialization code
   540                           
   541  07FC                     __end_of__initialization:
   542  07FC  0183               	clrf	3
   543  07FD  120A  158A  2BAB   	ljmp	_main	;jump to C main() function
   544                           
   545                           	psect	bssBANK0
   546  0065                     __pbssBANK0:
   547  0065                     _temp:
   548  0065                     	ds	4
   549  0069                     _RX:
   550  0069                     	ds	1
   551  006A                     _centi:
   552  006A                     	ds	1
   553  006B                     _deci:
   554  006B                     	ds	1
   555  006C                     _uni:
   556  006C                     	ds	1
   557  006D                     _dec:
   558  006D                     	ds	1
   559                           
   560                           	psect	bssBANK1
   561  00A0                     __pbssBANK1:
   562  00A0                     _t_fine:
   563  00A0                     	ds	4
   564  00A4                     _adc_P:
   565  00A4                     	ds	4
   566  00A8                     _adc_T:
   567  00A8                     	ds	4
   568  00AC                     _BMP280_calib:
   569  00AC                     	ds	24
   570  00C4                     _pressure:
   571  00C4                     	ds	4
   572  00C8                     _temperature:
   573  00C8                     	ds	4
   574                           
   575                           	psect	clrtext
   576  090B                     clear_ram0:	
   577                           ;	Called with FSR containing the base address, and
   578                           ;	W with the last address+1
   579                           
   580  090B  0064               	clrwdt	;clear the watchdog before getting into this loop
   581  090C                     clrloop0:
   582  090C  0180               	clrf	0	;clear RAM location pointed to by FSR
   583  090D  0A84               	incf	4,f	;increment pointer
   584  090E  0604               	xorwf	4,w	;XOR with final address
   585  090F  1903               	btfsc	3,2	;have we reached the end yet?
   586  0910  3400               	retlw	0	;all done for this memory range, return
   587  0911  0604               	xorwf	4,w	;XOR again to restore value
   588  0912  290C               	goto	clrloop0	;do the next byte
   589                           
   590                           	psect	cstackCOMMON
   591  0071                     __pcstackCOMMON:
   592  0071                     ?_setup:
   593  0071                     ?_Send_Temp:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0071                     ?_Send_String:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0071                     ?_Send_Data:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0071                     ?_Receive_Data:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0071                     ??_Receive_Data:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0071                     ?_main:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0071                     ?_isr:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0071                     ??_isr:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0071                     ?_I2C_Master_Wait:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0071                     ?_I2C_Master_Start:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0071                     ?_I2C_Master_Stop:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0071                     ?_BMP280_Read8:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0071                     ?_BMP280_Update:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0071                     ?_BMP280_readTemperature:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0071                     ?_BMP280_readPressure:	
   636                           ; 2 bytes @ 0x0
   637                           
   638                           
   639                           ; 2 bytes @ 0x0
   640  0071                     	ds	3
   641  0074                     ??_Send_Data:
   642  0074                     ??_I2C_Master_Wait:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0074                     ??_I2C_Master_Start:	
   646                           ; 1 bytes @ 0x3
   647                           
   648  0074                     ??_I2C_Master_Stop:	
   649                           ; 1 bytes @ 0x3
   650                           
   651  0074                     ?_I2C_Master_Write:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0074                     ??___lldiv:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0074                     ??___aldiv:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0074                     ?_I2C_Master_Read:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0074                     ?___wmul:	
   664                           ; 2 bytes @ 0x3
   665                           
   666  0074                     Send_Data@X:	
   667                           ; 2 bytes @ 0x3
   668                           
   669  0074                     I2C_Master_Write@d:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0074                     I2C_Master_Read@a:	
   673                           ; 2 bytes @ 0x3
   674                           
   675  0074                     ___wmul@multiplier:	
   676                           ; 2 bytes @ 0x3
   677                           
   678                           
   679                           ; 2 bytes @ 0x3
   680  0074                     	ds	1
   681  0075                     ??_Send_String:
   682  0075                     ___aldiv@counter:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0075                     ___lldiv@quotient:	
   686                           ; 1 bytes @ 0x4
   687                           
   688                           
   689                           ; 4 bytes @ 0x4
   690  0075                     	ds	1
   691  0076                     ??_I2C_Master_Write:
   692  0076                     ??_I2C_Master_Read:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0076                     ?_BMP280_Write:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0076                     BMP280_Write@_data:	
   699                           ; 1 bytes @ 0x5
   700                           
   701  0076                     Send_String@X:	
   702                           ; 1 bytes @ 0x5
   703                           
   704  0076                     ___aldiv@sign:	
   705                           ; 1 bytes @ 0x5
   706                           
   707  0076                     ___wmul@multiplicand:	
   708                           ; 1 bytes @ 0x5
   709                           
   710                           
   711                           ; 2 bytes @ 0x5
   712  0076                     	ds	1
   713  0077                     ??_BMP280_Write:
   714  0077                     ___aldiv@quotient:	
   715                           ; 1 bytes @ 0x6
   716                           
   717                           
   718                           ; 4 bytes @ 0x6
   719  0077                     	ds	1
   720  0078                     ??___wmul:
   721  0078                     I2C_Master_Read@temp1:	
   722                           ; 1 bytes @ 0x7
   723                           
   724  0078                     ___wmul@product:	
   725                           ; 2 bytes @ 0x7
   726                           
   727                           
   728                           ; 2 bytes @ 0x7
   729  0078                     	ds	1
   730  0079                     BMP280_Write@reg_addr:
   731  0079                     ___lldiv@counter:	
   732                           ; 1 bytes @ 0x8
   733                           
   734                           
   735                           ; 1 bytes @ 0x8
   736  0079                     	ds	1
   737  007A                     ??_setup:
   738  007A                     BMP280_begin@mode:	
   739                           ; 1 bytes @ 0x9
   740                           
   741                           
   742                           ; 1 bytes @ 0x9
   743  007A                     	ds	1
   744                           
   745                           	psect	cstackBANK0
   746  0020                     __pcstackBANK0:
   747  0020                     ??_BMP280_Read8:
   748  0020                     ?_BMP280_Configure:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     ??_BMP280_Update:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ?_BMP280_Read16:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     ?___lldiv:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0020                     ?___aldiv:	
   761                           ; 4 bytes @ 0x0
   762                           
   763  0020                     BMP280_Configure@T_sampling:	
   764                           ; 4 bytes @ 0x0
   765                           
   766  0020                     ___lldiv@divisor:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0020                     ___aldiv@divisor:	
   770                           ; 4 bytes @ 0x0
   771                           
   772                           
   773                           ; 4 bytes @ 0x0
   774  0020                     	ds	1
   775  0021                     BMP280_Configure@P_sampling:
   776                           
   777                           ; 1 bytes @ 0x1
   778  0021                     	ds	1
   779  0022                     ??_BMP280_Read16:
   780  0022                     BMP280_Read8@reg_addr:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0022                     BMP280_Configure@filter:	
   784                           ; 1 bytes @ 0x2
   785                           
   786                           
   787                           ; 1 bytes @ 0x2
   788  0022                     	ds	1
   789  0023                     BMP280_Read8@ret:
   790  0023                     BMP280_Configure@standby:	
   791                           ; 1 bytes @ 0x3
   792                           
   793                           
   794                           ; 1 bytes @ 0x3
   795  0023                     	ds	1
   796  0024                     ??_BMP280_Configure:
   797  0024                     BMP280_Read16@reg_addr:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0024                     BMP280_Update@ret:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0024                     ___lldiv@dividend:	
   804                           ; 4 bytes @ 0x4
   805                           
   806  0024                     ___aldiv@dividend:	
   807                           ; 4 bytes @ 0x4
   808                           
   809                           
   810                           ; 4 bytes @ 0x4
   811  0024                     	ds	1
   812  0025                     BMP280_Read16@ret:
   813                           
   814                           ; 2 bytes @ 0x5
   815  0025                     	ds	2
   816  0027                     BMP280_Configure@mode:
   817                           
   818                           ; 1 bytes @ 0x7
   819  0027                     	ds	1
   820  0028                     ??_Send_Temp:
   821  0028                     ?_I2C_Master_Init:	
   822                           ; 1 bytes @ 0x8
   823                           
   824  0028                     ?___lmul:	
   825                           ; 1 bytes @ 0x8
   826                           
   827  0028                     BMP280_Configure@_ctrl_meas:	
   828                           ; 4 bytes @ 0x8
   829                           
   830  0028                     I2C_Master_Init@c:	
   831                           ; 1 bytes @ 0x8
   832                           
   833  0028                     ___lmul@multiplier:	
   834                           ; 4 bytes @ 0x8
   835                           
   836                           
   837                           ; 4 bytes @ 0x8
   838  0028                     	ds	1
   839  0029                     BMP280_Configure@_config:
   840                           
   841                           ; 1 bytes @ 0x9
   842  0029                     	ds	1
   843  002A                     ?_BMP280_begin:
   844  002A                     BMP280_begin@T_sampling:	
   845                           ; 2 bytes @ 0xA
   846                           
   847                           
   848                           ; 1 bytes @ 0xA
   849  002A                     	ds	1
   850  002B                     BMP280_begin@P_sampling:
   851                           
   852                           ; 1 bytes @ 0xB
   853  002B                     	ds	1
   854  002C                     ??_I2C_Master_Init:
   855  002C                     BMP280_begin@filter:	
   856                           ; 1 bytes @ 0xC
   857                           
   858  002C                     ___lmul@multiplicand:	
   859                           ; 1 bytes @ 0xC
   860                           
   861                           
   862                           ; 4 bytes @ 0xC
   863  002C                     	ds	1
   864  002D                     BMP280_begin@standby:
   865                           
   866                           ; 1 bytes @ 0xD
   867  002D                     	ds	1
   868  002E                     ??_BMP280_begin:
   869                           
   870                           ; 1 bytes @ 0xE
   871  002E                     	ds	2
   872  0030                     ??___lmul:
   873                           
   874                           ; 1 bytes @ 0x10
   875  0030                     	ds	1
   876  0031                     ___lmul@product:
   877                           
   878                           ; 4 bytes @ 0x11
   879  0031                     	ds	4
   880  0035                     ??_BMP280_readTemperature:
   881  0035                     ??_BMP280_readPressure:	
   882                           ; 1 bytes @ 0x15
   883                           
   884                           
   885                           ; 1 bytes @ 0x15
   886  0035                     	ds	16
   887  0045                     BMP280_readTemperature@var1:
   888  0045                     _BMP280_readPressure$1205:	
   889                           ; 4 bytes @ 0x25
   890                           
   891                           
   892                           ; 4 bytes @ 0x25
   893  0045                     	ds	4
   894  0049                     BMP280_readTemperature@var2:
   895  0049                     _BMP280_readPressure$1206:	
   896                           ; 4 bytes @ 0x29
   897                           
   898                           
   899                           ; 4 bytes @ 0x29
   900  0049                     	ds	4
   901  004D                     _BMP280_readTemperature$1203:
   902  004D                     _BMP280_readPressure$1207:	
   903                           ; 4 bytes @ 0x2D
   904                           
   905                           
   906                           ; 4 bytes @ 0x2D
   907  004D                     	ds	4
   908  0051                     BMP280_readTemperature@temp:
   909  0051                     BMP280_readPressure@pres:	
   910                           ; 1 bytes @ 0x31
   911                           
   912                           
   913                           ; 1 bytes @ 0x31
   914  0051                     	ds	1
   915  0052                     _BMP280_readTemperature$1202:
   916  0052                     _BMP280_readPressure$1204:	
   917                           ; 4 bytes @ 0x32
   918                           
   919                           
   920                           ; 4 bytes @ 0x32
   921  0052                     	ds	4
   922  0056                     BMP280_readPressure@var2:
   923                           
   924                           ; 4 bytes @ 0x36
   925  0056                     	ds	4
   926  005A                     BMP280_readPressure@p:
   927                           
   928                           ; 4 bytes @ 0x3A
   929  005A                     	ds	4
   930  005E                     BMP280_readPressure@var1:
   931                           
   932                           ; 4 bytes @ 0x3E
   933  005E                     	ds	4
   934  0062                     ??_main:
   935                           
   936                           ; 1 bytes @ 0x42
   937  0062                     	ds	3
   938                           
   939                           	psect	maintext
   940  0BAB                     __pmaintext:	
   941 ;;
   942 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   943 ;;
   944 ;; *************** function _main *****************
   945 ;; Defined at:
   946 ;;		line 126 in file "mainm2.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : B00/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0
   962 ;;      Temps:          0       3       0       0       0
   963 ;;      Totals:         0       3       0       0       0
   964 ;;Total ram usage:        3 bytes
   965 ;; Hardware stack levels required when called:    7
   966 ;; This function calls:
   967 ;;		_BMP280_begin
   968 ;;		_BMP280_readPressure
   969 ;;		_BMP280_readTemperature
   970 ;;		_Send_Data
   971 ;;		_Send_String
   972 ;;		_Send_Temp
   973 ;;		_setup
   974 ;; This function is called by:
   975 ;;		Startup code after reset
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function _main
   981  0BAB                     _main:
   982  0BAB                     l1455:	
   983                           ;incstack = 0
   984                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   985                           
   986                           
   987                           ;mainm2.c: 127:     setup();
   988  0BAB  120A  158A  2168  120A  158A  	fcall	_setup
   989                           
   990                           ;mainm2.c: 128:     BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, STAN
      +                          DBY_0_5);
   991  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
   992  0BB1  1303               	bcf	3,6	;RP1=0, select bank0
   993  0BB2  01AA               	clrf	BMP280_begin@T_sampling
   994  0BB3  0AAA               	incf	BMP280_begin@T_sampling,f
   995  0BB4  01AB               	clrf	BMP280_begin@P_sampling
   996  0BB5  0AAB               	incf	BMP280_begin@P_sampling,f
   997  0BB6  01AC               	clrf	BMP280_begin@filter
   998  0BB7  01AD               	clrf	BMP280_begin@standby
   999  0BB8  3003               	movlw	3
  1000  0BB9  120A  158A  25B1  120A  158A  	fcall	_BMP280_begin
  1001  0BBE                     l1457:
  1002                           
  1003                           ;mainm2.c: 130:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1004  0BBE  3003               	movlw	3
  1005  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0BC1  00E4               	movwf	??_main+2
  1008  0BC2  3008               	movlw	8
  1009  0BC3  00E3               	movwf	??_main+1
  1010  0BC4  3076               	movlw	118
  1011  0BC5  00E2               	movwf	??_main
  1012  0BC6                     u1397:
  1013  0BC6  0BE2               	decfsz	??_main,f
  1014  0BC7  2BC6               	goto	u1397
  1015  0BC8  0BE3               	decfsz	??_main+1,f
  1016  0BC9  2BC6               	goto	u1397
  1017  0BCA  0BE4               	decfsz	??_main+2,f
  1018  0BCB  2BC6               	goto	u1397
  1019  0BCC  0000               	nop
  1020  0BCD                     l1459:
  1021                           
  1022                           ;mainm2.c: 131:         PORTA = 0b11111111;
  1023  0BCD  30FF               	movlw	255
  1024  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0BD0  0085               	movwf	5	;volatile
  1027  0BD1                     l1461:
  1028                           
  1029                           ;mainm2.c: 132:         BMP280_readTemperature(&temperature);
  1030  0BD1  30C8               	movlw	(low (_temperature| 0))& (0+255)
  1031  0BD2  120A  118A  2053  120A  158A  	fcall	_BMP280_readTemperature
  1032  0BD7                     l1463:
  1033                           
  1034                           ;mainm2.c: 133:         BMP280_readPressure(&pressure);
  1035  0BD7  30C4               	movlw	(low (_pressure| 0))& (0+255)
  1036  0BD8  120A  118A  22B5  120A  158A  	fcall	_BMP280_readPressure
  1037                           
  1038                           ;mainm2.c: 134:         Send_Temp();
  1039  0BDD  120A  158A  26D5  120A  158A  	fcall	_Send_Temp
  1040  0BE2                     l1465:
  1041                           
  1042                           ;mainm2.c: 135:         Send_String("S");
  1043  0BE2  3003               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1044  0BE3  120A  158A  2184  120A  158A  	fcall	_Send_String
  1045  0BE8                     l1467:
  1046                           
  1047                           ;mainm2.c: 136:         Send_Data(dec);
  1048  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0BEA  086D               	movf	_dec,w
  1051  0BEB  120A  158A  2139  120A  158A  	fcall	_Send_Data
  1052  0BF0                     l1469:
  1053                           
  1054                           ;mainm2.c: 137:         Send_Data(uni);
  1055  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0BF2  086C               	movf	_uni,w
  1058  0BF3  120A  158A  2139  120A  158A  	fcall	_Send_Data
  1059  0BF8                     l1471:
  1060                           
  1061                           ;mainm2.c: 138:         Send_String(".");
  1062  0BF8  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1063  0BF9  120A  158A  2184  120A  158A  	fcall	_Send_String
  1064                           
  1065                           ;mainm2.c: 139:         Send_Data(deci);
  1066  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0C00  086B               	movf	_deci,w
  1069  0C01  120A  158A  2139  120A  158A  	fcall	_Send_Data
  1070                           
  1071                           ;mainm2.c: 140:         Send_Data(centi);
  1072  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0C08  086A               	movf	_centi,w
  1075  0C09  120A  158A  2139  120A  158A  	fcall	_Send_Data
  1076                           
  1077                           ;mainm2.c: 142:         switch (RX) {
  1078  0C0E  2C1A               	goto	l1475
  1079  0C0F                     l71:	
  1080                           ;mainm2.c: 143:             case 49:
  1081                           
  1082                           
  1083                           ;mainm2.c: 144:                 PORTBbits.RB7 = 1;
  1084  0C0F  1786               	bsf	6,7	;volatile
  1085                           
  1086                           ;mainm2.c: 145:                 break;
  1087  0C10  2BBE               	goto	l1457
  1088  0C11                     l73:	
  1089                           ;mainm2.c: 146:             case 48:
  1090                           
  1091                           
  1092                           ;mainm2.c: 147:                 PORTBbits.RB7 = 0;
  1093  0C11  1386               	bcf	6,7	;volatile
  1094                           
  1095                           ;mainm2.c: 148:                 break;
  1096  0C12  2BBE               	goto	l1457
  1097  0C13                     l74:	
  1098                           ;mainm2.c: 149:             case 50:
  1099                           
  1100                           
  1101                           ;mainm2.c: 150:                 PORTBbits.RB6 = 0;
  1102  0C13  1306               	bcf	6,6	;volatile
  1103                           
  1104                           ;mainm2.c: 151:                 break;
  1105  0C14  2BBE               	goto	l1457
  1106  0C15                     l75:	
  1107                           ;mainm2.c: 152:             case 51:
  1108                           
  1109                           
  1110                           ;mainm2.c: 153:                 PORTBbits.RB6 = 1;
  1111  0C15  1706               	bsf	6,6	;volatile
  1112                           
  1113                           ;mainm2.c: 154:                 break;
  1114  0C16  2BBE               	goto	l1457
  1115  0C17                     l76:	
  1116                           ;mainm2.c: 155:             default:
  1117                           
  1118                           
  1119                           ;mainm2.c: 156:                 PORTBbits.RB7 = 0;
  1120  0C17  1386               	bcf	6,7	;volatile
  1121                           
  1122                           ;mainm2.c: 157:                 PORTBbits.RB6 = 0;
  1123  0C18  1306               	bcf	6,6	;volatile
  1124                           
  1125                           ;mainm2.c: 158:                 break;
  1126  0C19  2BBE               	goto	l1457
  1127  0C1A                     l1475:
  1128  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0C1C  0869               	movf	_RX,w
  1131  0C1D  00E2               	movwf	??_main
  1132  0C1E  01E3               	clrf	??_main+1
  1133                           
  1134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1135                           ; Switch size 1, requested type "simple"
  1136                           ; Number of cases is 1, Range of values is 0 to 0
  1137                           ; switch strategies available:
  1138                           ; Name         Instructions Cycles
  1139                           ; simple_byte            4     3 (average)
  1140                           ; direct_byte           11     8 (fixed)
  1141                           ; jumptable            260     6 (fixed)
  1142                           ;	Chosen strategy is simple_byte
  1143  0C1F  0863               	movf	??_main+1,w
  1144  0C20  3A00               	xorlw	0	; case 0
  1145  0C21  1903               	skipnz
  1146  0C22  2C24               	goto	l1523
  1147  0C23  2C17               	goto	l76
  1148  0C24                     l1523:
  1149                           
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 4, Range of values is 48 to 51
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte           13     7 (average)
  1155                           ; direct_byte           23    11 (fixed)
  1156                           ; jumptable            263     9 (fixed)
  1157                           ;	Chosen strategy is simple_byte
  1158  0C24  0862               	movf	??_main,w
  1159  0C25  3A30               	xorlw	48	; case 48
  1160  0C26  1903               	skipnz
  1161  0C27  2C11               	goto	l73
  1162  0C28  3A01               	xorlw	1	; case 49
  1163  0C29  1903               	skipnz
  1164  0C2A  2C0F               	goto	l71
  1165  0C2B  3A03               	xorlw	3	; case 50
  1166  0C2C  1903               	skipnz
  1167  0C2D  2C13               	goto	l74
  1168  0C2E  3A01               	xorlw	1	; case 51
  1169  0C2F  1903               	skipnz
  1170  0C30  2C15               	goto	l75
  1171  0C31  2C17               	goto	l76
  1172  0C32  120A  118A  280C   	ljmp	start
  1173  0C35                     __end_of_main:
  1174                           
  1175                           	psect	text1
  1176  0968                     __ptext1:	
  1177 ;; *************** function _setup *****************
  1178 ;; Defined at:
  1179 ;;		line 169 in file "mainm2.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0, pclath, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0
  1196 ;;      Totals:         0       0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    4
  1200 ;; This function calls:
  1201 ;;		_I2C_Master_Init
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _setup
  1209  0968                     _setup:
  1210  0968                     l1379:	
  1211                           ;incstack = 0
  1212                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1213                           
  1214                           
  1215                           ;mainm2.c: 170:     ANSEL = 0;
  1216  0968  1683               	bsf	3,5	;RP0=1, select bank3
  1217  0969  1703               	bsf	3,6	;RP1=1, select bank3
  1218  096A  0188               	clrf	8	;volatile
  1219                           
  1220                           ;mainm2.c: 171:     ANSELH = 0;
  1221  096B  0189               	clrf	9	;volatile
  1222                           
  1223                           ;mainm2.c: 172:     TRISB = 0;
  1224  096C  1683               	bsf	3,5	;RP0=1, select bank1
  1225  096D  1303               	bcf	3,6	;RP1=0, select bank1
  1226  096E  0186               	clrf	6	;volatile
  1227                           
  1228                           ;mainm2.c: 173:     TRISD = 0;
  1229  096F  0188               	clrf	8	;volatile
  1230                           
  1231                           ;mainm2.c: 174:     TRISA = 0;
  1232  0970  0185               	clrf	5	;volatile
  1233                           
  1234                           ;mainm2.c: 175:     PORTB = 0;
  1235  0971  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0972  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0973  0186               	clrf	6	;volatile
  1238                           
  1239                           ;mainm2.c: 176:     PORTD = 0;
  1240  0974  0188               	clrf	8	;volatile
  1241                           
  1242                           ;mainm2.c: 177:     PORTA = 0;
  1243  0975  0185               	clrf	5	;volatile
  1244  0976                     l1381:
  1245                           
  1246                           ;mainm2.c: 179:     I2C_Master_Init(100000);
  1247  0976  3000               	movlw	0
  1248  0977  00AB               	movwf	I2C_Master_Init@c+3
  1249  0978  3001               	movlw	1
  1250  0979  00AA               	movwf	I2C_Master_Init@c+2
  1251  097A  3086               	movlw	134
  1252  097B  00A9               	movwf	I2C_Master_Init@c+1
  1253  097C  30A0               	movlw	160
  1254  097D  00A8               	movwf	I2C_Master_Init@c
  1255  097E  120A  158A  2223  120A  158A  	fcall	_I2C_Master_Init
  1256  0983                     l82:
  1257  0983  0008               	return
  1258  0984                     __end_of_setup:
  1259                           
  1260                           	psect	text2
  1261  0A23                     __ptext2:	
  1262 ;; *************** function _I2C_Master_Init *****************
  1263 ;; Defined at:
  1264 ;;		line 17 in file "I2C.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  c               4    8[BANK0 ] const unsigned long 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       4       0       0       0
  1279 ;;      Locals:         0       0       0       0       0
  1280 ;;      Temps:          0       4       0       0       0
  1281 ;;      Totals:         0       8       0       0       0
  1282 ;;Total ram usage:        8 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    3
  1285 ;; This function calls:
  1286 ;;		___lldiv
  1287 ;; This function is called by:
  1288 ;;		_setup
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _I2C_Master_Init
  1294  0A23                     _I2C_Master_Init:
  1295  0A23                     l1251:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1298                           
  1299                           
  1300                           ;I2C.c: 18:     SSPCON = 0b00101000;
  1301  0A23  3028               	movlw	40
  1302  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0A26  0094               	movwf	20	;volatile
  1305  0A27                     l1253:
  1306                           
  1307                           ;I2C.c: 19:     SSPCON2 = 0;
  1308  0A27  1683               	bsf	3,5	;RP0=1, select bank1
  1309  0A28  1303               	bcf	3,6	;RP1=0, select bank1
  1310  0A29  0191               	clrf	17	;volatile
  1311  0A2A                     l1255:
  1312                           
  1313                           ;I2C.c: 20:     SSPADD = (8000000 / (4 * c)) - 1;
  1314  0A2A  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0A2B  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0A2C  0828               	movf	I2C_Master_Init@c,w
  1317  0A2D  00AC               	movwf	??_I2C_Master_Init
  1318  0A2E  0829               	movf	I2C_Master_Init@c+1,w
  1319  0A2F  00AD               	movwf	??_I2C_Master_Init+1
  1320  0A30  082A               	movf	I2C_Master_Init@c+2,w
  1321  0A31  00AE               	movwf	??_I2C_Master_Init+2
  1322  0A32  082B               	movf	I2C_Master_Init@c+3,w
  1323  0A33  00AF               	movwf	??_I2C_Master_Init+3
  1324  0A34  3002               	movlw	2
  1325  0A35                     u815:
  1326  0A35  1003               	clrc
  1327  0A36  0DAC               	rlf	??_I2C_Master_Init,f
  1328  0A37  0DAD               	rlf	??_I2C_Master_Init+1,f
  1329  0A38  0DAE               	rlf	??_I2C_Master_Init+2,f
  1330  0A39  0DAF               	rlf	??_I2C_Master_Init+3,f
  1331  0A3A                     u810:
  1332  0A3A  3EFF               	addlw	-1
  1333  0A3B  1D03               	skipz
  1334  0A3C  2A35               	goto	u815
  1335  0A3D  082F               	movf	??_I2C_Master_Init+3,w
  1336  0A3E  00A3               	movwf	___lldiv@divisor+3
  1337  0A3F  082E               	movf	??_I2C_Master_Init+2,w
  1338  0A40  00A2               	movwf	___lldiv@divisor+2
  1339  0A41  082D               	movf	??_I2C_Master_Init+1,w
  1340  0A42  00A1               	movwf	___lldiv@divisor+1
  1341  0A43  082C               	movf	??_I2C_Master_Init,w
  1342  0A44  00A0               	movwf	___lldiv@divisor
  1343  0A45  3000               	movlw	0
  1344  0A46  00A7               	movwf	___lldiv@dividend+3
  1345  0A47  307A               	movlw	122
  1346  0A48  00A6               	movwf	___lldiv@dividend+2
  1347  0A49  3012               	movlw	18
  1348  0A4A  00A5               	movwf	___lldiv@dividend+1
  1349  0A4B  3000               	movlw	0
  1350  0A4C  00A4               	movwf	___lldiv@dividend
  1351  0A4D  120A  158A  2343  120A  158A  	fcall	___lldiv
  1352  0A52  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0A53  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0A54  0820               	movf	?___lldiv,w
  1355  0A55  3EFF               	addlw	255
  1356  0A56  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0A57  1303               	bcf	3,6	;RP1=0, select bank1
  1358  0A58  0093               	movwf	19	;volatile
  1359  0A59                     l1257:
  1360                           
  1361                           ;I2C.c: 21:     SSPSTAT = 0;
  1362  0A59  0194               	clrf	20	;volatile
  1363  0A5A                     l1259:
  1364                           
  1365                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1366  0A5A  1587               	bsf	7,3	;volatile
  1367  0A5B                     l1261:
  1368                           
  1369                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1370  0A5B  1607               	bsf	7,4	;volatile
  1371  0A5C                     l120:
  1372  0A5C  0008               	return
  1373  0A5D                     __end_of_I2C_Master_Init:
  1374                           
  1375                           	psect	text3
  1376  0ED5                     __ptext3:	
  1377 ;; *************** function _Send_Temp *****************
  1378 ;; Defined at:
  1379 ;;		line 186 in file "mainm2.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0
  1395 ;;      Temps:          0      10       0       0       0
  1396 ;;      Totals:         0      10       0       0       0
  1397 ;;Total ram usage:       10 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		___lldiv
  1402 ;;		___wmul
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _Send_Temp
  1410  0ED5                     _Send_Temp:
  1411  0ED5                     l1425:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _Send_Temp: [wreg+status,2+status,0+pclath+cstack]
  1414                           
  1415                           
  1416                           ;mainm2.c: 187:     temp = temperature;
  1417  0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0ED7  084B               	movf	(_temperature+3)^(0+128),w
  1420  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0EDA  00E8               	movwf	_temp+3
  1423  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  1424  0EDC  1303               	bcf	3,6	;RP1=0, select bank1
  1425  0EDD  084A               	movf	(_temperature+2)^(0+128),w
  1426  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0EE0  00E7               	movwf	_temp+2
  1429  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  1431  0EE3  0849               	movf	(_temperature+1)^(0+128),w
  1432  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0EE6  00E6               	movwf	_temp+1
  1435  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0EE9  0848               	movf	_temperature^(0+128),w
  1438  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0EEC  00E5               	movwf	_temp
  1441  0EED                     l1427:
  1442                           
  1443                           ;mainm2.c: 188:     dec = temp /1000;
  1444  0EED  3000               	movlw	0
  1445  0EEE  00A3               	movwf	___lldiv@divisor+3
  1446  0EEF  3000               	movlw	0
  1447  0EF0  00A2               	movwf	___lldiv@divisor+2
  1448  0EF1  3003               	movlw	3
  1449  0EF2  00A1               	movwf	___lldiv@divisor+1
  1450  0EF3  30E8               	movlw	232
  1451  0EF4  00A0               	movwf	___lldiv@divisor
  1452  0EF5  0868               	movf	_temp+3,w
  1453  0EF6  00A7               	movwf	___lldiv@dividend+3
  1454  0EF7  0867               	movf	_temp+2,w
  1455  0EF8  00A6               	movwf	___lldiv@dividend+2
  1456  0EF9  0866               	movf	_temp+1,w
  1457  0EFA  00A5               	movwf	___lldiv@dividend+1
  1458  0EFB  0865               	movf	_temp,w
  1459  0EFC  00A4               	movwf	___lldiv@dividend
  1460  0EFD  120A  158A  2343  120A  158A  	fcall	___lldiv
  1461  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0F04  0820               	movf	?___lldiv,w
  1464  0F05  00A8               	movwf	??_Send_Temp
  1465  0F06  0828               	movf	??_Send_Temp,w
  1466  0F07  00ED               	movwf	_dec
  1467  0F08                     l1429:
  1468                           
  1469                           ;mainm2.c: 189:     temp = temp - (dec*1000);
  1470  0F08  086D               	movf	_dec,w
  1471  0F09  00A8               	movwf	??_Send_Temp
  1472  0F0A  01A9               	clrf	??_Send_Temp+1
  1473  0F0B  0828               	movf	??_Send_Temp,w
  1474  0F0C  00F4               	movwf	___wmul@multiplier
  1475  0F0D  0829               	movf	??_Send_Temp+1,w
  1476  0F0E  00F5               	movwf	___wmul@multiplier+1
  1477  0F0F  30E8               	movlw	232
  1478  0F10  00F6               	movwf	___wmul@multiplicand
  1479  0F11  3003               	movlw	3
  1480  0F12  00F7               	movwf	___wmul@multiplicand+1
  1481  0F13  120A  158A  21A3  120A  158A  	fcall	___wmul
  1482  0F18  0874               	movf	?___wmul,w
  1483  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0F1B  00AA               	movwf	??_Send_Temp+2
  1486  0F1C  0875               	movf	?___wmul+1,w
  1487  0F1D  00AB               	movwf	??_Send_Temp+3
  1488  0F1E  3000               	movlw	0
  1489  0F1F  1BAB               	btfsc	??_Send_Temp+3,7
  1490  0F20  30FF               	movlw	255
  1491  0F21  00AC               	movwf	??_Send_Temp+4
  1492  0F22  00AD               	movwf	??_Send_Temp+5
  1493  0F23  0865               	movf	_temp,w
  1494  0F24  00AE               	movwf	??_Send_Temp+6
  1495  0F25  0866               	movf	_temp+1,w
  1496  0F26  00AF               	movwf	??_Send_Temp+7
  1497  0F27  0867               	movf	_temp+2,w
  1498  0F28  00B0               	movwf	??_Send_Temp+8
  1499  0F29  0868               	movf	_temp+3,w
  1500  0F2A  00B1               	movwf	??_Send_Temp+9
  1501  0F2B  082A               	movf	??_Send_Temp+2,w
  1502  0F2C  02AE               	subwf	??_Send_Temp+6,f
  1503  0F2D  082B               	movf	??_Send_Temp+3,w
  1504  0F2E  1C03               	skipc
  1505  0F2F  0F2B               	incfsz	??_Send_Temp+3,w
  1506  0F30  2F32               	goto	u1311
  1507  0F31  2F33               	goto	u1312
  1508  0F32                     u1311:
  1509  0F32  02AF               	subwf	??_Send_Temp+7,f
  1510  0F33                     u1312:
  1511  0F33  082C               	movf	??_Send_Temp+4,w
  1512  0F34  1C03               	skipc
  1513  0F35  0F2C               	incfsz	??_Send_Temp+4,w
  1514  0F36  2F38               	goto	u1313
  1515  0F37  2F39               	goto	u1314
  1516  0F38                     u1313:
  1517  0F38  02B0               	subwf	??_Send_Temp+8,f
  1518  0F39                     u1314:
  1519  0F39  082D               	movf	??_Send_Temp+5,w
  1520  0F3A  1C03               	skipc
  1521  0F3B  0F2D               	incfsz	??_Send_Temp+5,w
  1522  0F3C  2F3E               	goto	u1315
  1523  0F3D  2F3F               	goto	u1316
  1524  0F3E                     u1315:
  1525  0F3E  02B1               	subwf	??_Send_Temp+9,f
  1526  0F3F                     u1316:
  1527  0F3F  0831               	movf	??_Send_Temp+9,w
  1528  0F40  00E8               	movwf	_temp+3
  1529  0F41  0830               	movf	??_Send_Temp+8,w
  1530  0F42  00E7               	movwf	_temp+2
  1531  0F43  082F               	movf	??_Send_Temp+7,w
  1532  0F44  00E6               	movwf	_temp+1
  1533  0F45  082E               	movf	??_Send_Temp+6,w
  1534  0F46  00E5               	movwf	_temp
  1535  0F47                     l1431:
  1536                           
  1537                           ;mainm2.c: 190:     uni = temp /100;
  1538  0F47  3000               	movlw	0
  1539  0F48  00A3               	movwf	___lldiv@divisor+3
  1540  0F49  3000               	movlw	0
  1541  0F4A  00A2               	movwf	___lldiv@divisor+2
  1542  0F4B  3000               	movlw	0
  1543  0F4C  00A1               	movwf	___lldiv@divisor+1
  1544  0F4D  3064               	movlw	100
  1545  0F4E  00A0               	movwf	___lldiv@divisor
  1546  0F4F  0868               	movf	_temp+3,w
  1547  0F50  00A7               	movwf	___lldiv@dividend+3
  1548  0F51  0867               	movf	_temp+2,w
  1549  0F52  00A6               	movwf	___lldiv@dividend+2
  1550  0F53  0866               	movf	_temp+1,w
  1551  0F54  00A5               	movwf	___lldiv@dividend+1
  1552  0F55  0865               	movf	_temp,w
  1553  0F56  00A4               	movwf	___lldiv@dividend
  1554  0F57  120A  158A  2343  120A  158A  	fcall	___lldiv
  1555  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0F5E  0820               	movf	?___lldiv,w
  1558  0F5F  00A8               	movwf	??_Send_Temp
  1559  0F60  0828               	movf	??_Send_Temp,w
  1560  0F61  00EC               	movwf	_uni
  1561  0F62                     l1433:
  1562                           
  1563                           ;mainm2.c: 191:     temp = temp - (uni*100);
  1564  0F62  086C               	movf	_uni,w
  1565  0F63  00A8               	movwf	??_Send_Temp
  1566  0F64  01A9               	clrf	??_Send_Temp+1
  1567  0F65  0828               	movf	??_Send_Temp,w
  1568  0F66  00F4               	movwf	___wmul@multiplier
  1569  0F67  0829               	movf	??_Send_Temp+1,w
  1570  0F68  00F5               	movwf	___wmul@multiplier+1
  1571  0F69  3064               	movlw	100
  1572  0F6A  00F6               	movwf	___wmul@multiplicand
  1573  0F6B  3000               	movlw	0
  1574  0F6C  00F7               	movwf	___wmul@multiplicand+1
  1575  0F6D  120A  158A  21A3  120A  158A  	fcall	___wmul
  1576  0F72  0874               	movf	?___wmul,w
  1577  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0F75  00AA               	movwf	??_Send_Temp+2
  1580  0F76  0875               	movf	?___wmul+1,w
  1581  0F77  00AB               	movwf	??_Send_Temp+3
  1582  0F78  3000               	movlw	0
  1583  0F79  1BAB               	btfsc	??_Send_Temp+3,7
  1584  0F7A  30FF               	movlw	255
  1585  0F7B  00AC               	movwf	??_Send_Temp+4
  1586  0F7C  00AD               	movwf	??_Send_Temp+5
  1587  0F7D  0865               	movf	_temp,w
  1588  0F7E  00AE               	movwf	??_Send_Temp+6
  1589  0F7F  0866               	movf	_temp+1,w
  1590  0F80  00AF               	movwf	??_Send_Temp+7
  1591  0F81  0867               	movf	_temp+2,w
  1592  0F82  00B0               	movwf	??_Send_Temp+8
  1593  0F83  0868               	movf	_temp+3,w
  1594  0F84  00B1               	movwf	??_Send_Temp+9
  1595  0F85  082A               	movf	??_Send_Temp+2,w
  1596  0F86  02AE               	subwf	??_Send_Temp+6,f
  1597  0F87  082B               	movf	??_Send_Temp+3,w
  1598  0F88  1C03               	skipc
  1599  0F89  0F2B               	incfsz	??_Send_Temp+3,w
  1600  0F8A  2F8C               	goto	u1321
  1601  0F8B  2F8D               	goto	u1322
  1602  0F8C                     u1321:
  1603  0F8C  02AF               	subwf	??_Send_Temp+7,f
  1604  0F8D                     u1322:
  1605  0F8D  082C               	movf	??_Send_Temp+4,w
  1606  0F8E  1C03               	skipc
  1607  0F8F  0F2C               	incfsz	??_Send_Temp+4,w
  1608  0F90  2F92               	goto	u1323
  1609  0F91  2F93               	goto	u1324
  1610  0F92                     u1323:
  1611  0F92  02B0               	subwf	??_Send_Temp+8,f
  1612  0F93                     u1324:
  1613  0F93  082D               	movf	??_Send_Temp+5,w
  1614  0F94  1C03               	skipc
  1615  0F95  0F2D               	incfsz	??_Send_Temp+5,w
  1616  0F96  2F98               	goto	u1325
  1617  0F97  2F99               	goto	u1326
  1618  0F98                     u1325:
  1619  0F98  02B1               	subwf	??_Send_Temp+9,f
  1620  0F99                     u1326:
  1621  0F99  0831               	movf	??_Send_Temp+9,w
  1622  0F9A  00E8               	movwf	_temp+3
  1623  0F9B  0830               	movf	??_Send_Temp+8,w
  1624  0F9C  00E7               	movwf	_temp+2
  1625  0F9D  082F               	movf	??_Send_Temp+7,w
  1626  0F9E  00E6               	movwf	_temp+1
  1627  0F9F  082E               	movf	??_Send_Temp+6,w
  1628  0FA0  00E5               	movwf	_temp
  1629  0FA1                     l1435:
  1630                           
  1631                           ;mainm2.c: 192:     deci = temp /10;
  1632  0FA1  3000               	movlw	0
  1633  0FA2  00A3               	movwf	___lldiv@divisor+3
  1634  0FA3  3000               	movlw	0
  1635  0FA4  00A2               	movwf	___lldiv@divisor+2
  1636  0FA5  3000               	movlw	0
  1637  0FA6  00A1               	movwf	___lldiv@divisor+1
  1638  0FA7  300A               	movlw	10
  1639  0FA8  00A0               	movwf	___lldiv@divisor
  1640  0FA9  0868               	movf	_temp+3,w
  1641  0FAA  00A7               	movwf	___lldiv@dividend+3
  1642  0FAB  0867               	movf	_temp+2,w
  1643  0FAC  00A6               	movwf	___lldiv@dividend+2
  1644  0FAD  0866               	movf	_temp+1,w
  1645  0FAE  00A5               	movwf	___lldiv@dividend+1
  1646  0FAF  0865               	movf	_temp,w
  1647  0FB0  00A4               	movwf	___lldiv@dividend
  1648  0FB1  120A  158A  2343  120A  158A  	fcall	___lldiv
  1649  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0FB8  0820               	movf	?___lldiv,w
  1652  0FB9  00A8               	movwf	??_Send_Temp
  1653  0FBA  0828               	movf	??_Send_Temp,w
  1654  0FBB  00EB               	movwf	_deci
  1655  0FBC                     l1437:
  1656                           
  1657                           ;mainm2.c: 193:     temp = temp - (deci*10);
  1658  0FBC  086B               	movf	_deci,w
  1659  0FBD  00A8               	movwf	??_Send_Temp
  1660  0FBE  01A9               	clrf	??_Send_Temp+1
  1661  0FBF  0828               	movf	??_Send_Temp,w
  1662  0FC0  00F4               	movwf	___wmul@multiplier
  1663  0FC1  0829               	movf	??_Send_Temp+1,w
  1664  0FC2  00F5               	movwf	___wmul@multiplier+1
  1665  0FC3  300A               	movlw	10
  1666  0FC4  00F6               	movwf	___wmul@multiplicand
  1667  0FC5  3000               	movlw	0
  1668  0FC6  00F7               	movwf	___wmul@multiplicand+1
  1669  0FC7  120A  158A  21A3  120A  158A  	fcall	___wmul
  1670  0FCC  0874               	movf	?___wmul,w
  1671  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0FCF  00AA               	movwf	??_Send_Temp+2
  1674  0FD0  0875               	movf	?___wmul+1,w
  1675  0FD1  00AB               	movwf	??_Send_Temp+3
  1676  0FD2  3000               	movlw	0
  1677  0FD3  1BAB               	btfsc	??_Send_Temp+3,7
  1678  0FD4  30FF               	movlw	255
  1679  0FD5  00AC               	movwf	??_Send_Temp+4
  1680  0FD6  00AD               	movwf	??_Send_Temp+5
  1681  0FD7  0865               	movf	_temp,w
  1682  0FD8  00AE               	movwf	??_Send_Temp+6
  1683  0FD9  0866               	movf	_temp+1,w
  1684  0FDA  00AF               	movwf	??_Send_Temp+7
  1685  0FDB  0867               	movf	_temp+2,w
  1686  0FDC  00B0               	movwf	??_Send_Temp+8
  1687  0FDD  0868               	movf	_temp+3,w
  1688  0FDE  00B1               	movwf	??_Send_Temp+9
  1689  0FDF  082A               	movf	??_Send_Temp+2,w
  1690  0FE0  02AE               	subwf	??_Send_Temp+6,f
  1691  0FE1  082B               	movf	??_Send_Temp+3,w
  1692  0FE2  1C03               	skipc
  1693  0FE3  0F2B               	incfsz	??_Send_Temp+3,w
  1694  0FE4  2FE6               	goto	u1331
  1695  0FE5  2FE7               	goto	u1332
  1696  0FE6                     u1331:
  1697  0FE6  02AF               	subwf	??_Send_Temp+7,f
  1698  0FE7                     u1332:
  1699  0FE7  082C               	movf	??_Send_Temp+4,w
  1700  0FE8  1C03               	skipc
  1701  0FE9  0F2C               	incfsz	??_Send_Temp+4,w
  1702  0FEA  2FEC               	goto	u1333
  1703  0FEB  2FED               	goto	u1334
  1704  0FEC                     u1333:
  1705  0FEC  02B0               	subwf	??_Send_Temp+8,f
  1706  0FED                     u1334:
  1707  0FED  082D               	movf	??_Send_Temp+5,w
  1708  0FEE  1C03               	skipc
  1709  0FEF  0F2D               	incfsz	??_Send_Temp+5,w
  1710  0FF0  2FF2               	goto	u1335
  1711  0FF1  2FF3               	goto	u1336
  1712  0FF2                     u1335:
  1713  0FF2  02B1               	subwf	??_Send_Temp+9,f
  1714  0FF3                     u1336:
  1715  0FF3  0831               	movf	??_Send_Temp+9,w
  1716  0FF4  00E8               	movwf	_temp+3
  1717  0FF5  0830               	movf	??_Send_Temp+8,w
  1718  0FF6  00E7               	movwf	_temp+2
  1719  0FF7  082F               	movf	??_Send_Temp+7,w
  1720  0FF8  00E6               	movwf	_temp+1
  1721  0FF9  082E               	movf	??_Send_Temp+6,w
  1722  0FFA  00E5               	movwf	_temp
  1723                           
  1724                           ;mainm2.c: 194:     centi = temp;
  1725  0FFB  0865               	movf	_temp,w
  1726  0FFC  00A8               	movwf	??_Send_Temp
  1727  0FFD  0828               	movf	??_Send_Temp,w
  1728  0FFE  00EA               	movwf	_centi
  1729  0FFF                     l85:
  1730  0FFF  0008               	return
  1731  1000                     __end_of_Send_Temp:
  1732                           
  1733                           	psect	text4
  1734  09A3                     __ptext4:	
  1735 ;; *************** function ___wmul *****************
  1736 ;; Defined at:
  1737 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  multiplier      2    3[COMMON] unsigned int 
  1740 ;;  multiplicand    2    5[COMMON] unsigned int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  product         2    7[COMMON] unsigned int 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    3[COMMON] unsigned int 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         4       0       0       0       0
  1753 ;;      Locals:         2       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         6       0       0       0       0
  1756 ;;Total ram usage:        6 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    2
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_Send_Temp
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function ___wmul
  1768  09A3                     ___wmul:
  1769  09A3                     l1311:	
  1770                           ;incstack = 0
  1771                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1772                           
  1773  09A3  01F8               	clrf	___wmul@product
  1774  09A4  01F9               	clrf	___wmul@product+1
  1775  09A5                     l1313:
  1776  09A5  1C74               	btfss	___wmul@multiplier,0
  1777  09A6  29A8               	goto	u881
  1778  09A7  29A9               	goto	u880
  1779  09A8                     u881:
  1780  09A8  29AF               	goto	l325
  1781  09A9                     u880:
  1782  09A9                     l1315:
  1783  09A9  0876               	movf	___wmul@multiplicand,w
  1784  09AA  07F8               	addwf	___wmul@product,f
  1785  09AB  1803               	skipnc
  1786  09AC  0AF9               	incf	___wmul@product+1,f
  1787  09AD  0877               	movf	___wmul@multiplicand+1,w
  1788  09AE  07F9               	addwf	___wmul@product+1,f
  1789  09AF                     l325:
  1790  09AF  3001               	movlw	1
  1791  09B0                     u895:
  1792  09B0  1003               	clrc
  1793  09B1  0DF6               	rlf	___wmul@multiplicand,f
  1794  09B2  0DF7               	rlf	___wmul@multiplicand+1,f
  1795  09B3  3EFF               	addlw	-1
  1796  09B4  1D03               	skipz
  1797  09B5  29B0               	goto	u895
  1798  09B6                     l1317:
  1799  09B6  3001               	movlw	1
  1800  09B7                     u905:
  1801  09B7  1003               	clrc
  1802  09B8  0CF5               	rrf	___wmul@multiplier+1,f
  1803  09B9  0CF4               	rrf	___wmul@multiplier,f
  1804  09BA  3EFF               	addlw	-1
  1805  09BB  1D03               	skipz
  1806  09BC  29B7               	goto	u905
  1807  09BD                     l1319:
  1808  09BD  0874               	movf	___wmul@multiplier,w
  1809  09BE  0475               	iorwf	___wmul@multiplier+1,w
  1810  09BF  1D03               	btfss	3,2
  1811  09C0  29C2               	goto	u911
  1812  09C1  29C3               	goto	u910
  1813  09C2                     u911:
  1814  09C2  29A5               	goto	l1313
  1815  09C3                     u910:
  1816  09C3                     l1321:
  1817  09C3  0879               	movf	___wmul@product+1,w
  1818  09C4  00F5               	movwf	?___wmul+1
  1819  09C5  0878               	movf	___wmul@product,w
  1820  09C6  00F4               	movwf	?___wmul
  1821  09C7                     l327:
  1822  09C7  0008               	return
  1823  09C8                     __end_of___wmul:
  1824                           
  1825                           	psect	text5
  1826  0984                     __ptext5:	
  1827 ;; *************** function _Send_String *****************
  1828 ;; Defined at:
  1829 ;;		line 23 in file "UART.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  X               1    wreg     PTR unsigned char 
  1832 ;;		 -> STR_2(2), STR_1(2), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  X               1    5[COMMON] PTR unsigned char 
  1835 ;;		 -> STR_2(2), STR_1(2), 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         0       0       0       0       0
  1846 ;;      Locals:         1       0       0       0       0
  1847 ;;      Temps:          1       0       0       0       0
  1848 ;;      Totals:         2       0       0       0       0
  1849 ;;Total ram usage:        2 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    3
  1852 ;; This function calls:
  1853 ;;		_Send_Data
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function _Send_String
  1861  0984                     _Send_String:
  1862                           
  1863                           ;incstack = 0
  1864                           ; Regs used in _Send_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1865                           ;Send_String@X stored from wreg
  1866  0984  00F6               	movwf	Send_String@X
  1867  0985                     l1439:
  1868                           
  1869                           ;UART.c: 24:     while (*X)
  1870  0985  2996               	goto	l1445
  1871  0986                     l1441:
  1872                           
  1873                           ;UART.c: 25:         Send_Data(*X++);
  1874  0986  0876               	movf	Send_String@X,w
  1875  0987  0084               	movwf	4
  1876  0988  120A  158A  2000  120A  158A  	fcall	stringdir
  1877  098D  120A  158A  2139  120A  158A  	fcall	_Send_Data
  1878  0992                     l1443:
  1879  0992  3001               	movlw	1
  1880  0993  00F5               	movwf	??_Send_String
  1881  0994  0875               	movf	??_Send_String,w
  1882  0995  07F6               	addwf	Send_String@X,f
  1883  0996                     l1445:
  1884                           
  1885                           ;UART.c: 24:     while (*X)
  1886  0996  0876               	movf	Send_String@X,w
  1887  0997  0084               	movwf	4
  1888  0998  120A  158A  2000  120A  158A  	fcall	stringdir
  1889  099D  3A00               	xorlw	0
  1890  099E  1D03               	skipz
  1891  099F  29A1               	goto	u1341
  1892  09A0  29A2               	goto	u1340
  1893  09A1                     u1341:
  1894  09A1  2986               	goto	l1441
  1895  09A2                     u1340:
  1896  09A2                     l235:
  1897  09A2  0008               	return
  1898  09A3                     __end_of_Send_String:
  1899                           
  1900                           	psect	text6
  1901  0939                     __ptext6:	
  1902 ;; *************** function _Send_Data *****************
  1903 ;; Defined at:
  1904 ;;		line 18 in file "UART.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  X               1    wreg     unsigned char 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  X               1    3[COMMON] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       0       0       0       0
  1919 ;;      Locals:         1       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0
  1921 ;;      Totals:         1       0       0       0       0
  1922 ;;Total ram usage:        1 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    2
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;;		_Send_String
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _Send_Data
  1935  0939                     _Send_Data:
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _Send_Data: [wreg]
  1939                           ;Send_Data@X stored from wreg
  1940  0939  00F4               	movwf	Send_Data@X
  1941  093A                     l1247:
  1942  093A                     l226:	
  1943                           ;UART.c: 19:     while (!TXIF);
  1944                           
  1945  093A  1283               	bcf	3,5	;RP0=0, select bank0
  1946  093B  1303               	bcf	3,6	;RP1=0, select bank0
  1947  093C  1E0C               	btfss	12,4	;volatile
  1948  093D  293F               	goto	u801
  1949  093E  2940               	goto	u800
  1950  093F                     u801:
  1951  093F  293A               	goto	l226
  1952  0940                     u800:
  1953  0940                     l1249:
  1954                           
  1955                           ;UART.c: 20:     TXREG = X;
  1956  0940  0874               	movf	Send_Data@X,w
  1957  0941  0099               	movwf	25	;volatile
  1958  0942                     l229:
  1959  0942  0008               	return
  1960  0943                     __end_of_Send_Data:
  1961                           
  1962                           	psect	text7
  1963  0053                     __ptext7:	
  1964 ;; *************** function _BMP280_readTemperature *****************
  1965 ;; Defined at:
  1966 ;;		line 242 in file "BMP280.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  temp            1    wreg     PTR long 
  1969 ;;		 -> temperature(4), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  temp            1   49[BANK0 ] PTR long 
  1972 ;;		 -> temperature(4), 
  1973 ;;  var2            4   41[BANK0 ] long 
  1974 ;;  var1            4   37[BANK0 ] long 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2   10[None  ] int 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       0       0       0       0
  1985 ;;      Locals:         0      17       0       0       0
  1986 ;;      Temps:          0      16       0       0       0
  1987 ;;      Totals:         0      33       0       0       0
  1988 ;;Total ram usage:       33 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    5
  1991 ;; This function calls:
  1992 ;;		_BMP280_Update
  1993 ;;		___aldiv
  1994 ;;		___lmul
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _BMP280_readTemperature
  2002  0053                     _BMP280_readTemperature:
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2006                           ;BMP280_readTemperature@temp stored from wreg
  2007  0053  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0054  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0055  00D1               	movwf	BMP280_readTemperature@temp
  2010  0056                     l1399:
  2011                           
  2012                           ;BMP280.c: 242: int BMP280_readTemperature(int32_t *temp);BMP280.c: 243: {;BMP280.c: 244
      +                          :   int32_t var1, var2;;BMP280.c: 246:   BMP280_Update();
  2013  0056  120A  158A  24D2  120A  118A  	fcall	_BMP280_Update
  2014                           
  2015                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  2016  005B  1683               	bsf	3,5	;RP0=1, select bank1
  2017  005C  1303               	bcf	3,6	;RP1=0, select bank1
  2018  005D  082C               	movf	_BMP280_calib^(0+128),w
  2019  005E  1283               	bcf	3,5	;RP0=0, select bank0
  2020  005F  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0060  00B5               	movwf	??_BMP280_readTemperature
  2022  0061  1683               	bsf	3,5	;RP0=1, select bank1
  2023  0062  1303               	bcf	3,6	;RP1=0, select bank1
  2024  0063  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2025  0064  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0065  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0066  00B6               	movwf	??_BMP280_readTemperature+1
  2028  0067  01B7               	clrf	??_BMP280_readTemperature+2
  2029  0068  01B8               	clrf	??_BMP280_readTemperature+3
  2030  0069  3001               	movlw	1
  2031  006A                     u1095:
  2032  006A  1003               	clrc
  2033  006B  0DB5               	rlf	??_BMP280_readTemperature,f
  2034  006C  0DB6               	rlf	??_BMP280_readTemperature+1,f
  2035  006D  0DB7               	rlf	??_BMP280_readTemperature+2,f
  2036  006E  0DB8               	rlf	??_BMP280_readTemperature+3,f
  2037  006F                     u1090:
  2038  006F  3EFF               	addlw	-1
  2039  0070  1D03               	skipz
  2040  0071  286A               	goto	u1095
  2041  0072  3000               	movlw	0
  2042  0073  00A3               	movwf	___aldiv@divisor+3
  2043  0074  3000               	movlw	0
  2044  0075  00A2               	movwf	___aldiv@divisor+2
  2045  0076  3000               	movlw	0
  2046  0077  00A1               	movwf	___aldiv@divisor+1
  2047  0078  3008               	movlw	8
  2048  0079  00A0               	movwf	___aldiv@divisor
  2049  007A  1683               	bsf	3,5	;RP0=1, select bank1
  2050  007B  1303               	bcf	3,6	;RP1=0, select bank1
  2051  007C  082B               	movf	(_adc_T+3)^(0+128),w
  2052  007D  1283               	bcf	3,5	;RP0=0, select bank0
  2053  007E  1303               	bcf	3,6	;RP1=0, select bank0
  2054  007F  00A7               	movwf	___aldiv@dividend+3
  2055  0080  1683               	bsf	3,5	;RP0=1, select bank1
  2056  0081  1303               	bcf	3,6	;RP1=0, select bank1
  2057  0082  082A               	movf	(_adc_T+2)^(0+128),w
  2058  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0085  00A6               	movwf	___aldiv@dividend+2
  2061  0086  1683               	bsf	3,5	;RP0=1, select bank1
  2062  0087  1303               	bcf	3,6	;RP1=0, select bank1
  2063  0088  0829               	movf	(_adc_T+1)^(0+128),w
  2064  0089  1283               	bcf	3,5	;RP0=0, select bank0
  2065  008A  1303               	bcf	3,6	;RP1=0, select bank0
  2066  008B  00A5               	movwf	___aldiv@dividend+1
  2067  008C  1683               	bsf	3,5	;RP0=1, select bank1
  2068  008D  1303               	bcf	3,6	;RP1=0, select bank1
  2069  008E  0828               	movf	_adc_T^(0+128),w
  2070  008F  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0090  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0091  00A4               	movwf	___aldiv@dividend
  2073  0092  120A  158A  2435  120A  118A  	fcall	___aldiv
  2074  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0099  0820               	movf	?___aldiv,w
  2077  009A  00B9               	movwf	??_BMP280_readTemperature+4
  2078  009B  0821               	movf	?___aldiv+1,w
  2079  009C  00BA               	movwf	??_BMP280_readTemperature+5
  2080  009D  0822               	movf	?___aldiv+2,w
  2081  009E  00BB               	movwf	??_BMP280_readTemperature+6
  2082  009F  0823               	movf	?___aldiv+3,w
  2083  00A0  00BC               	movwf	??_BMP280_readTemperature+7
  2084  00A1  0835               	movf	??_BMP280_readTemperature,w
  2085  00A2  02B9               	subwf	??_BMP280_readTemperature+4,f
  2086  00A3  0836               	movf	??_BMP280_readTemperature+1,w
  2087  00A4  1C03               	skipc
  2088  00A5  0F36               	incfsz	??_BMP280_readTemperature+1,w
  2089  00A6  28A8               	goto	u1101
  2090  00A7  28A9               	goto	u1102
  2091  00A8                     u1101:
  2092  00A8  02BA               	subwf	??_BMP280_readTemperature+5,f
  2093  00A9                     u1102:
  2094  00A9  0837               	movf	??_BMP280_readTemperature+2,w
  2095  00AA  1C03               	skipc
  2096  00AB  0F37               	incfsz	??_BMP280_readTemperature+2,w
  2097  00AC  28AE               	goto	u1103
  2098  00AD  28AF               	goto	u1104
  2099  00AE                     u1103:
  2100  00AE  02BB               	subwf	??_BMP280_readTemperature+6,f
  2101  00AF                     u1104:
  2102  00AF  0838               	movf	??_BMP280_readTemperature+3,w
  2103  00B0  1C03               	skipc
  2104  00B1  0F38               	incfsz	??_BMP280_readTemperature+3,w
  2105  00B2  28B4               	goto	u1105
  2106  00B3  28B5               	goto	u1106
  2107  00B4                     u1105:
  2108  00B4  02BC               	subwf	??_BMP280_readTemperature+7,f
  2109  00B5                     u1106:
  2110  00B5  083C               	movf	??_BMP280_readTemperature+7,w
  2111  00B6  00AB               	movwf	___lmul@multiplier+3
  2112  00B7  083B               	movf	??_BMP280_readTemperature+6,w
  2113  00B8  00AA               	movwf	___lmul@multiplier+2
  2114  00B9  083A               	movf	??_BMP280_readTemperature+5,w
  2115  00BA  00A9               	movwf	___lmul@multiplier+1
  2116  00BB  0839               	movf	??_BMP280_readTemperature+4,w
  2117  00BC  00A8               	movwf	___lmul@multiplier
  2118  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  2119  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  2120  00BF  082E               	movf	(_BMP280_calib^(0+128)+2),w
  2121  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2122  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  2123  00C2  00AC               	movwf	___lmul@multiplicand
  2124  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  2125  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  2126  00C5  082F               	movf	((_BMP280_calib+1)^(0+128)+2),w
  2127  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  2128  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  2129  00C8  00AD               	movwf	___lmul@multiplicand+1
  2130  00C9  3000               	movlw	0
  2131  00CA  1BAD               	btfsc	___lmul@multiplicand+1,7
  2132  00CB  30FF               	movlw	255
  2133  00CC  00AE               	movwf	___lmul@multiplicand+2
  2134  00CD  00AF               	movwf	___lmul@multiplicand+3
  2135  00CE  120A  158A  22A5  120A  118A  	fcall	___lmul
  2136  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  2137  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  2138  00D5  082B               	movf	?___lmul+3,w
  2139  00D6  00D5               	movwf	_BMP280_readTemperature$1202+3
  2140  00D7  082A               	movf	?___lmul+2,w
  2141  00D8  00D4               	movwf	_BMP280_readTemperature$1202+2
  2142  00D9  0829               	movf	?___lmul+1,w
  2143  00DA  00D3               	movwf	_BMP280_readTemperature$1202+1
  2144  00DB  0828               	movf	?___lmul,w
  2145  00DC  00D2               	movwf	_BMP280_readTemperature$1202
  2146                           
  2147                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  2148  00DD  3000               	movlw	0
  2149  00DE  00A3               	movwf	___aldiv@divisor+3
  2150  00DF  3000               	movlw	0
  2151  00E0  00A2               	movwf	___aldiv@divisor+2
  2152  00E1  3008               	movlw	8
  2153  00E2  00A1               	movwf	___aldiv@divisor+1
  2154  00E3  3000               	movlw	0
  2155  00E4  00A0               	movwf	___aldiv@divisor
  2156  00E5  0855               	movf	_BMP280_readTemperature$1202+3,w
  2157  00E6  00A7               	movwf	___aldiv@dividend+3
  2158  00E7  0854               	movf	_BMP280_readTemperature$1202+2,w
  2159  00E8  00A6               	movwf	___aldiv@dividend+2
  2160  00E9  0853               	movf	_BMP280_readTemperature$1202+1,w
  2161  00EA  00A5               	movwf	___aldiv@dividend+1
  2162  00EB  0852               	movf	_BMP280_readTemperature$1202,w
  2163  00EC  00A4               	movwf	___aldiv@dividend
  2164  00ED  120A  158A  2435  120A  118A  	fcall	___aldiv
  2165  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  2166  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  2167  00F4  0823               	movf	?___aldiv+3,w
  2168  00F5  00C8               	movwf	BMP280_readTemperature@var1+3
  2169  00F6  0822               	movf	?___aldiv+2,w
  2170  00F7  00C7               	movwf	BMP280_readTemperature@var1+2
  2171  00F8  0821               	movf	?___aldiv+1,w
  2172  00F9  00C6               	movwf	BMP280_readTemperature@var1+1
  2173  00FA  0820               	movf	?___aldiv,w
  2174  00FB  00C5               	movwf	BMP280_readTemperature@var1
  2175                           
  2176                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2177  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  2178  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  2179  00FE  082C               	movf	_BMP280_calib^(0+128),w
  2180  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0101  00B5               	movwf	??_BMP280_readTemperature
  2183  0102  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0103  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0104  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2186  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0107  00B6               	movwf	??_BMP280_readTemperature+1
  2189  0108  01B7               	clrf	??_BMP280_readTemperature+2
  2190  0109  01B8               	clrf	??_BMP280_readTemperature+3
  2191  010A  3000               	movlw	0
  2192  010B  00A3               	movwf	___aldiv@divisor+3
  2193  010C  3000               	movlw	0
  2194  010D  00A2               	movwf	___aldiv@divisor+2
  2195  010E  3000               	movlw	0
  2196  010F  00A1               	movwf	___aldiv@divisor+1
  2197  0110  3010               	movlw	16
  2198  0111  00A0               	movwf	___aldiv@divisor
  2199  0112  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0113  1303               	bcf	3,6	;RP1=0, select bank1
  2201  0114  082B               	movf	(_adc_T+3)^(0+128),w
  2202  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2204  0117  00A7               	movwf	___aldiv@dividend+3
  2205  0118  1683               	bsf	3,5	;RP0=1, select bank1
  2206  0119  1303               	bcf	3,6	;RP1=0, select bank1
  2207  011A  082A               	movf	(_adc_T+2)^(0+128),w
  2208  011B  1283               	bcf	3,5	;RP0=0, select bank0
  2209  011C  1303               	bcf	3,6	;RP1=0, select bank0
  2210  011D  00A6               	movwf	___aldiv@dividend+2
  2211  011E  1683               	bsf	3,5	;RP0=1, select bank1
  2212  011F  1303               	bcf	3,6	;RP1=0, select bank1
  2213  0120  0829               	movf	(_adc_T+1)^(0+128),w
  2214  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0123  00A5               	movwf	___aldiv@dividend+1
  2217  0124  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0125  1303               	bcf	3,6	;RP1=0, select bank1
  2219  0126  0828               	movf	_adc_T^(0+128),w
  2220  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0129  00A4               	movwf	___aldiv@dividend
  2223  012A  120A  158A  2435  120A  118A  	fcall	___aldiv
  2224  012F  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0130  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0131  0820               	movf	?___aldiv,w
  2227  0132  00B9               	movwf	??_BMP280_readTemperature+4
  2228  0133  0821               	movf	?___aldiv+1,w
  2229  0134  00BA               	movwf	??_BMP280_readTemperature+5
  2230  0135  0822               	movf	?___aldiv+2,w
  2231  0136  00BB               	movwf	??_BMP280_readTemperature+6
  2232  0137  0823               	movf	?___aldiv+3,w
  2233  0138  00BC               	movwf	??_BMP280_readTemperature+7
  2234  0139  0835               	movf	??_BMP280_readTemperature,w
  2235  013A  02B9               	subwf	??_BMP280_readTemperature+4,f
  2236  013B  0836               	movf	??_BMP280_readTemperature+1,w
  2237  013C  1C03               	skipc
  2238  013D  0F36               	incfsz	??_BMP280_readTemperature+1,w
  2239  013E  2940               	goto	u1111
  2240  013F  2941               	goto	u1112
  2241  0140                     u1111:
  2242  0140  02BA               	subwf	??_BMP280_readTemperature+5,f
  2243  0141                     u1112:
  2244  0141  0837               	movf	??_BMP280_readTemperature+2,w
  2245  0142  1C03               	skipc
  2246  0143  0F37               	incfsz	??_BMP280_readTemperature+2,w
  2247  0144  2946               	goto	u1113
  2248  0145  2947               	goto	u1114
  2249  0146                     u1113:
  2250  0146  02BB               	subwf	??_BMP280_readTemperature+6,f
  2251  0147                     u1114:
  2252  0147  0838               	movf	??_BMP280_readTemperature+3,w
  2253  0148  1C03               	skipc
  2254  0149  0F38               	incfsz	??_BMP280_readTemperature+3,w
  2255  014A  294C               	goto	u1115
  2256  014B  294D               	goto	u1116
  2257  014C                     u1115:
  2258  014C  02BC               	subwf	??_BMP280_readTemperature+7,f
  2259  014D                     u1116:
  2260  014D  083C               	movf	??_BMP280_readTemperature+7,w
  2261  014E  00AB               	movwf	___lmul@multiplier+3
  2262  014F  083B               	movf	??_BMP280_readTemperature+6,w
  2263  0150  00AA               	movwf	___lmul@multiplier+2
  2264  0151  083A               	movf	??_BMP280_readTemperature+5,w
  2265  0152  00A9               	movwf	___lmul@multiplier+1
  2266  0153  0839               	movf	??_BMP280_readTemperature+4,w
  2267  0154  00A8               	movwf	___lmul@multiplier
  2268  0155  1683               	bsf	3,5	;RP0=1, select bank1
  2269  0156  1303               	bcf	3,6	;RP1=0, select bank1
  2270  0157  082C               	movf	_BMP280_calib^(0+128),w
  2271  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2272  0159  1303               	bcf	3,6	;RP1=0, select bank0
  2273  015A  00BD               	movwf	??_BMP280_readTemperature+8
  2274  015B  1683               	bsf	3,5	;RP0=1, select bank1
  2275  015C  1303               	bcf	3,6	;RP1=0, select bank1
  2276  015D  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2277  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2278  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0160  00BE               	movwf	??_BMP280_readTemperature+9
  2280  0161  01BF               	clrf	??_BMP280_readTemperature+10
  2281  0162  01C0               	clrf	??_BMP280_readTemperature+11
  2282  0163  3000               	movlw	0
  2283  0164  00A3               	movwf	___aldiv@divisor+3
  2284  0165  3000               	movlw	0
  2285  0166  00A2               	movwf	___aldiv@divisor+2
  2286  0167  3000               	movlw	0
  2287  0168  00A1               	movwf	___aldiv@divisor+1
  2288  0169  3010               	movlw	16
  2289  016A  00A0               	movwf	___aldiv@divisor
  2290  016B  1683               	bsf	3,5	;RP0=1, select bank1
  2291  016C  1303               	bcf	3,6	;RP1=0, select bank1
  2292  016D  082B               	movf	(_adc_T+3)^(0+128),w
  2293  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2294  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0170  00A7               	movwf	___aldiv@dividend+3
  2296  0171  1683               	bsf	3,5	;RP0=1, select bank1
  2297  0172  1303               	bcf	3,6	;RP1=0, select bank1
  2298  0173  082A               	movf	(_adc_T+2)^(0+128),w
  2299  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0176  00A6               	movwf	___aldiv@dividend+2
  2302  0177  1683               	bsf	3,5	;RP0=1, select bank1
  2303  0178  1303               	bcf	3,6	;RP1=0, select bank1
  2304  0179  0829               	movf	(_adc_T+1)^(0+128),w
  2305  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2306  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2307  017C  00A5               	movwf	___aldiv@dividend+1
  2308  017D  1683               	bsf	3,5	;RP0=1, select bank1
  2309  017E  1303               	bcf	3,6	;RP1=0, select bank1
  2310  017F  0828               	movf	_adc_T^(0+128),w
  2311  0180  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0181  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0182  00A4               	movwf	___aldiv@dividend
  2314  0183  120A  158A  2435  120A  118A  	fcall	___aldiv
  2315  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2317  018A  0820               	movf	?___aldiv,w
  2318  018B  00C1               	movwf	??_BMP280_readTemperature+12
  2319  018C  0821               	movf	?___aldiv+1,w
  2320  018D  00C2               	movwf	??_BMP280_readTemperature+13
  2321  018E  0822               	movf	?___aldiv+2,w
  2322  018F  00C3               	movwf	??_BMP280_readTemperature+14
  2323  0190  0823               	movf	?___aldiv+3,w
  2324  0191  00C4               	movwf	??_BMP280_readTemperature+15
  2325  0192  083D               	movf	??_BMP280_readTemperature+8,w
  2326  0193  02C1               	subwf	??_BMP280_readTemperature+12,f
  2327  0194  083E               	movf	??_BMP280_readTemperature+9,w
  2328  0195  1C03               	skipc
  2329  0196  0F3E               	incfsz	??_BMP280_readTemperature+9,w
  2330  0197  2999               	goto	u1121
  2331  0198  299A               	goto	u1122
  2332  0199                     u1121:
  2333  0199  02C2               	subwf	??_BMP280_readTemperature+13,f
  2334  019A                     u1122:
  2335  019A  083F               	movf	??_BMP280_readTemperature+10,w
  2336  019B  1C03               	skipc
  2337  019C  0F3F               	incfsz	??_BMP280_readTemperature+10,w
  2338  019D  299F               	goto	u1123
  2339  019E  29A0               	goto	u1124
  2340  019F                     u1123:
  2341  019F  02C3               	subwf	??_BMP280_readTemperature+14,f
  2342  01A0                     u1124:
  2343  01A0  0840               	movf	??_BMP280_readTemperature+11,w
  2344  01A1  1C03               	skipc
  2345  01A2  0F40               	incfsz	??_BMP280_readTemperature+11,w
  2346  01A3  29A5               	goto	u1125
  2347  01A4  29A6               	goto	u1126
  2348  01A5                     u1125:
  2349  01A5  02C4               	subwf	??_BMP280_readTemperature+15,f
  2350  01A6                     u1126:
  2351  01A6  0844               	movf	??_BMP280_readTemperature+15,w
  2352  01A7  00AF               	movwf	___lmul@multiplicand+3
  2353  01A8  0843               	movf	??_BMP280_readTemperature+14,w
  2354  01A9  00AE               	movwf	___lmul@multiplicand+2
  2355  01AA  0842               	movf	??_BMP280_readTemperature+13,w
  2356  01AB  00AD               	movwf	___lmul@multiplicand+1
  2357  01AC  0841               	movf	??_BMP280_readTemperature+12,w
  2358  01AD  00AC               	movwf	___lmul@multiplicand
  2359  01AE  120A  158A  22A5  120A  118A  	fcall	___lmul
  2360  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2361  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2362  01B5  082B               	movf	?___lmul+3,w
  2363  01B6  00D5               	movwf	_BMP280_readTemperature$1202+3
  2364  01B7  082A               	movf	?___lmul+2,w
  2365  01B8  00D4               	movwf	_BMP280_readTemperature$1202+2
  2366  01B9  0829               	movf	?___lmul+1,w
  2367  01BA  00D3               	movwf	_BMP280_readTemperature$1202+1
  2368  01BB  0828               	movf	?___lmul,w
  2369  01BC  00D2               	movwf	_BMP280_readTemperature$1202
  2370                           
  2371                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2372  01BD  3000               	movlw	0
  2373  01BE  00A3               	movwf	___aldiv@divisor+3
  2374  01BF  3000               	movlw	0
  2375  01C0  00A2               	movwf	___aldiv@divisor+2
  2376  01C1  3010               	movlw	16
  2377  01C2  00A1               	movwf	___aldiv@divisor+1
  2378  01C3  3000               	movlw	0
  2379  01C4  00A0               	movwf	___aldiv@divisor
  2380  01C5  0855               	movf	_BMP280_readTemperature$1202+3,w
  2381  01C6  00A7               	movwf	___aldiv@dividend+3
  2382  01C7  0854               	movf	_BMP280_readTemperature$1202+2,w
  2383  01C8  00A6               	movwf	___aldiv@dividend+2
  2384  01C9  0853               	movf	_BMP280_readTemperature$1202+1,w
  2385  01CA  00A5               	movwf	___aldiv@dividend+1
  2386  01CB  0852               	movf	_BMP280_readTemperature$1202,w
  2387  01CC  00A4               	movwf	___aldiv@dividend
  2388  01CD  120A  158A  2435  120A  118A  	fcall	___aldiv
  2389  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2390  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2391  01D4  0823               	movf	?___aldiv+3,w
  2392  01D5  00AB               	movwf	___lmul@multiplier+3
  2393  01D6  0822               	movf	?___aldiv+2,w
  2394  01D7  00AA               	movwf	___lmul@multiplier+2
  2395  01D8  0821               	movf	?___aldiv+1,w
  2396  01D9  00A9               	movwf	___lmul@multiplier+1
  2397  01DA  0820               	movf	?___aldiv,w
  2398  01DB  00A8               	movwf	___lmul@multiplier
  2399  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2400  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  2401  01DE  0830               	movf	(_BMP280_calib^(0+128)+4),w
  2402  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2403  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2404  01E1  00AC               	movwf	___lmul@multiplicand
  2405  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2406  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2407  01E4  0831               	movf	((_BMP280_calib+1)^(0+128)+4),w
  2408  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2409  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2410  01E7  00AD               	movwf	___lmul@multiplicand+1
  2411  01E8  3000               	movlw	0
  2412  01E9  1BAD               	btfsc	___lmul@multiplicand+1,7
  2413  01EA  30FF               	movlw	255
  2414  01EB  00AE               	movwf	___lmul@multiplicand+2
  2415  01EC  00AF               	movwf	___lmul@multiplicand+3
  2416  01ED  120A  158A  22A5  120A  118A  	fcall	___lmul
  2417  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2418  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2419  01F4  082B               	movf	?___lmul+3,w
  2420  01F5  00D0               	movwf	_BMP280_readTemperature$1203+3
  2421  01F6  082A               	movf	?___lmul+2,w
  2422  01F7  00CF               	movwf	_BMP280_readTemperature$1203+2
  2423  01F8  0829               	movf	?___lmul+1,w
  2424  01F9  00CE               	movwf	_BMP280_readTemperature$1203+1
  2425  01FA  0828               	movf	?___lmul,w
  2426  01FB  00CD               	movwf	_BMP280_readTemperature$1203
  2427                           
  2428                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2429  01FC  3000               	movlw	0
  2430  01FD  00A3               	movwf	___aldiv@divisor+3
  2431  01FE  3000               	movlw	0
  2432  01FF  00A2               	movwf	___aldiv@divisor+2
  2433  0200  3040               	movlw	64
  2434  0201  00A1               	movwf	___aldiv@divisor+1
  2435  0202  3000               	movlw	0
  2436  0203  00A0               	movwf	___aldiv@divisor
  2437  0204  0850               	movf	_BMP280_readTemperature$1203+3,w
  2438  0205  00A7               	movwf	___aldiv@dividend+3
  2439  0206  084F               	movf	_BMP280_readTemperature$1203+2,w
  2440  0207  00A6               	movwf	___aldiv@dividend+2
  2441  0208  084E               	movf	_BMP280_readTemperature$1203+1,w
  2442  0209  00A5               	movwf	___aldiv@dividend+1
  2443  020A  084D               	movf	_BMP280_readTemperature$1203,w
  2444  020B  00A4               	movwf	___aldiv@dividend
  2445  020C  120A  158A  2435  120A  118A  	fcall	___aldiv
  2446  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0213  0823               	movf	?___aldiv+3,w
  2449  0214  00CC               	movwf	BMP280_readTemperature@var2+3
  2450  0215  0822               	movf	?___aldiv+2,w
  2451  0216  00CB               	movwf	BMP280_readTemperature@var2+2
  2452  0217  0821               	movf	?___aldiv+1,w
  2453  0218  00CA               	movwf	BMP280_readTemperature@var2+1
  2454  0219  0820               	movf	?___aldiv,w
  2455  021A  00C9               	movwf	BMP280_readTemperature@var2
  2456  021B                     l1401:
  2457                           
  2458                           ;BMP280.c: 256:   t_fine = var1 + var2;
  2459  021B  0845               	movf	BMP280_readTemperature@var1,w
  2460  021C  0749               	addwf	BMP280_readTemperature@var2,w
  2461  021D  00B5               	movwf	??_BMP280_readTemperature
  2462  021E  3000               	movlw	0
  2463  021F  1803               	skipnc
  2464  0220  3001               	movlw	1
  2465  0221  0746               	addwf	BMP280_readTemperature@var1+1,w
  2466  0222  01B7               	clrf	??_BMP280_readTemperature+2
  2467  0223  1803               	skipnc
  2468  0224  0AB7               	incf	??_BMP280_readTemperature+2,f
  2469  0225  074A               	addwf	BMP280_readTemperature@var2+1,w
  2470  0226  00B6               	movwf	??_BMP280_readTemperature+1
  2471  0227  1803               	skipnc
  2472  0228  0AB7               	incf	??_BMP280_readTemperature+2,f
  2473  0229  0847               	movf	BMP280_readTemperature@var1+2,w
  2474  022A  0737               	addwf	??_BMP280_readTemperature+2,w
  2475  022B  01B8               	clrf	??_BMP280_readTemperature+3
  2476  022C  1803               	skipnc
  2477  022D  0AB8               	incf	??_BMP280_readTemperature+3,f
  2478  022E  074B               	addwf	BMP280_readTemperature@var2+2,w
  2479  022F  00B7               	movwf	??_BMP280_readTemperature+2
  2480  0230  1803               	skipnc
  2481  0231  0AB8               	incf	??_BMP280_readTemperature+3,f
  2482  0232  0848               	movf	BMP280_readTemperature@var1+3,w
  2483  0233  0738               	addwf	??_BMP280_readTemperature+3,w
  2484  0234  074C               	addwf	BMP280_readTemperature@var2+3,w
  2485  0235  00B8               	movwf	??_BMP280_readTemperature+3
  2486  0236  0838               	movf	??_BMP280_readTemperature+3,w
  2487  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2488  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2489  0239  00A3               	movwf	(_t_fine+3)^(0+128)
  2490  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2491  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2492  023C  0837               	movf	??_BMP280_readTemperature+2,w
  2493  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2494  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2495  023F  00A2               	movwf	(_t_fine+2)^(0+128)
  2496  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0242  0836               	movf	??_BMP280_readTemperature+1,w
  2499  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2500  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2501  0245  00A1               	movwf	(_t_fine+1)^(0+128)
  2502  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0248  0835               	movf	??_BMP280_readTemperature,w
  2505  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2506  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2507  024B  00A0               	movwf	_t_fine^(0+128)
  2508  024C                     l1403:
  2509                           
  2510                           ;BMP280.c: 258:   *temp = (t_fine * 5 + 128) / 256;
  2511  024C  3000               	movlw	0
  2512  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2513  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2514  024F  00A3               	movwf	___aldiv@divisor+3
  2515  0250  3000               	movlw	0
  2516  0251  00A2               	movwf	___aldiv@divisor+2
  2517  0252  3001               	movlw	1
  2518  0253  00A1               	movwf	___aldiv@divisor+1
  2519  0254  3000               	movlw	0
  2520  0255  00A0               	movwf	___aldiv@divisor
  2521  0256  3080               	movlw	128
  2522  0257  00B5               	movwf	??_BMP280_readTemperature
  2523  0258  3000               	movlw	0
  2524  0259  00B6               	movwf	??_BMP280_readTemperature+1
  2525  025A  3000               	movlw	0
  2526  025B  00B7               	movwf	??_BMP280_readTemperature+2
  2527  025C  3000               	movlw	0
  2528  025D  00B8               	movwf	??_BMP280_readTemperature+3
  2529  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2530  025F  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0260  0823               	movf	(_t_fine+3)^(0+128),w
  2532  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0263  00AB               	movwf	___lmul@multiplier+3
  2535  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2536  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2537  0266  0822               	movf	(_t_fine+2)^(0+128),w
  2538  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0269  00AA               	movwf	___lmul@multiplier+2
  2541  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2542  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2543  026C  0821               	movf	(_t_fine+1)^(0+128),w
  2544  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2545  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2546  026F  00A9               	movwf	___lmul@multiplier+1
  2547  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2548  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2549  0272  0820               	movf	_t_fine^(0+128),w
  2550  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0275  00A8               	movwf	___lmul@multiplier
  2553  0276  3000               	movlw	0
  2554  0277  00AF               	movwf	___lmul@multiplicand+3
  2555  0278  3000               	movlw	0
  2556  0279  00AE               	movwf	___lmul@multiplicand+2
  2557  027A  3000               	movlw	0
  2558  027B  00AD               	movwf	___lmul@multiplicand+1
  2559  027C  3005               	movlw	5
  2560  027D  00AC               	movwf	___lmul@multiplicand
  2561  027E  120A  158A  22A5  120A  118A  	fcall	___lmul
  2562  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0285  0828               	movf	?___lmul,w
  2565  0286  07B5               	addwf	??_BMP280_readTemperature,f
  2566  0287  0829               	movf	?___lmul+1,w
  2567  0288  1803               	skipnc
  2568  0289  0F29               	incfsz	?___lmul+1,w
  2569  028A  2A8C               	goto	u1130
  2570  028B  2A8D               	goto	u1131
  2571  028C                     u1130:
  2572  028C  07B6               	addwf	??_BMP280_readTemperature+1,f
  2573  028D                     u1131:
  2574  028D  082A               	movf	?___lmul+2,w
  2575  028E  1803               	skipnc
  2576  028F  0F2A               	incfsz	?___lmul+2,w
  2577  0290  2A92               	goto	u1132
  2578  0291  2A93               	goto	u1133
  2579  0292                     u1132:
  2580  0292  07B7               	addwf	??_BMP280_readTemperature+2,f
  2581  0293                     u1133:
  2582  0293  082B               	movf	?___lmul+3,w
  2583  0294  1803               	skipnc
  2584  0295  0A2B               	incf	?___lmul+3,w
  2585  0296  07B8               	addwf	??_BMP280_readTemperature+3,f
  2586  0297  0838               	movf	??_BMP280_readTemperature+3,w
  2587  0298  00A7               	movwf	___aldiv@dividend+3
  2588  0299  0837               	movf	??_BMP280_readTemperature+2,w
  2589  029A  00A6               	movwf	___aldiv@dividend+2
  2590  029B  0836               	movf	??_BMP280_readTemperature+1,w
  2591  029C  00A5               	movwf	___aldiv@dividend+1
  2592  029D  0835               	movf	??_BMP280_readTemperature,w
  2593  029E  00A4               	movwf	___aldiv@dividend
  2594  029F  120A  158A  2435  120A  118A  	fcall	___aldiv
  2595  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2596  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2597  02A6  0851               	movf	BMP280_readTemperature@temp,w
  2598  02A7  0084               	movwf	4
  2599  02A8  0820               	movf	?___aldiv,w
  2600  02A9  1383               	bcf	3,7	;select IRP bank0
  2601  02AA  0080               	movwf	0
  2602  02AB  0A84               	incf	4,f
  2603  02AC  0821               	movf	?___aldiv+1,w
  2604  02AD  0080               	movwf	0
  2605  02AE  0A84               	incf	4,f
  2606  02AF  0822               	movf	?___aldiv+2,w
  2607  02B0  0080               	movwf	0
  2608  02B1  0A84               	incf	4,f
  2609  02B2  0823               	movf	?___aldiv+3,w
  2610  02B3  0080               	movwf	0
  2611  02B4                     l196:
  2612  02B4  0008               	return
  2613  02B5                     __end_of_BMP280_readTemperature:
  2614                           
  2615                           	psect	text8
  2616  0CD2                     __ptext8:	
  2617 ;; *************** function _BMP280_Update *****************
  2618 ;; Defined at:
  2619 ;;		line 211 in file "BMP280.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  ret             4    4[BANK0 ] struct .
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       4       0       0       0
  2635 ;;      Temps:          0       4       0       0       0
  2636 ;;      Totals:         0       8       0       0       0
  2637 ;;Total ram usage:        8 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    4
  2640 ;; This function calls:
  2641 ;;		_I2C_Master_Read
  2642 ;;		_I2C_Master_Start
  2643 ;;		_I2C_Master_Stop
  2644 ;;		_I2C_Master_Write
  2645 ;; This function is called by:
  2646 ;;		_BMP280_readTemperature
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _BMP280_Update
  2652  0CD2                     _BMP280_Update:
  2653  0CD2                     l1281:	
  2654                           ;incstack = 0
  2655                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  2656                           
  2657                           
  2658                           ;BMP280.c: 217:   } ret;;BMP280.c: 218:   ret.b[3] = 0x00;
  2659  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  2661  0CD4  01A7               	clrf	BMP280_Update@ret+3
  2662  0CD5                     l1283:
  2663                           
  2664                           ;BMP280.c: 220:   I2C_Master_Start();
  2665  0CD5  120A  158A  2113  120A  158A  	fcall	_I2C_Master_Start
  2666  0CDA                     l1285:
  2667                           
  2668                           ;BMP280.c: 221:   I2C_Master_Write( 0xEE);
  2669  0CDA  30EE               	movlw	238
  2670  0CDB  00F4               	movwf	I2C_Master_Write@d
  2671  0CDC  3000               	movlw	0
  2672  0CDD  00F5               	movwf	I2C_Master_Write@d+1
  2673  0CDE  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  2674  0CE3                     l1287:
  2675                           
  2676                           ;BMP280.c: 222:   I2C_Master_Write( 0xF7);
  2677  0CE3  30F7               	movlw	247
  2678  0CE4  00F4               	movwf	I2C_Master_Write@d
  2679  0CE5  3000               	movlw	0
  2680  0CE6  00F5               	movwf	I2C_Master_Write@d+1
  2681  0CE7  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  2682  0CEC                     l1289:
  2683                           
  2684                           ;BMP280.c: 223:   I2C_Master_Start();
  2685  0CEC  120A  158A  2113  120A  158A  	fcall	_I2C_Master_Start
  2686  0CF1                     l1291:
  2687                           
  2688                           ;BMP280.c: 224:   I2C_Master_Write( 0xEE | 1);
  2689  0CF1  30EF               	movlw	239
  2690  0CF2  00F4               	movwf	I2C_Master_Write@d
  2691  0CF3  3000               	movlw	0
  2692  0CF4  00F5               	movwf	I2C_Master_Write@d+1
  2693  0CF5  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  2694  0CFA                     l1293:
  2695                           
  2696                           ;BMP280.c: 225:   ret.b[2] = I2C_Master_Read( 1);
  2697  0CFA  3001               	movlw	1
  2698  0CFB  00F4               	movwf	I2C_Master_Read@a
  2699  0CFC  3000               	movlw	0
  2700  0CFD  00F5               	movwf	I2C_Master_Read@a+1
  2701  0CFE  120A  158A  21F5  120A  158A  	fcall	_I2C_Master_Read
  2702  0D03  0874               	movf	?_I2C_Master_Read,w
  2703  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0D06  00A0               	movwf	??_BMP280_Update
  2706  0D07  0820               	movf	??_BMP280_Update,w
  2707  0D08  00A6               	movwf	BMP280_Update@ret+2
  2708  0D09                     l1295:
  2709                           
  2710                           ;BMP280.c: 226:   ret.b[1] = I2C_Master_Read( 1);
  2711  0D09  3001               	movlw	1
  2712  0D0A  00F4               	movwf	I2C_Master_Read@a
  2713  0D0B  3000               	movlw	0
  2714  0D0C  00F5               	movwf	I2C_Master_Read@a+1
  2715  0D0D  120A  158A  21F5  120A  158A  	fcall	_I2C_Master_Read
  2716  0D12  0874               	movf	?_I2C_Master_Read,w
  2717  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0D15  00A0               	movwf	??_BMP280_Update
  2720  0D16  0820               	movf	??_BMP280_Update,w
  2721  0D17  00A5               	movwf	BMP280_Update@ret+1
  2722  0D18                     l1297:
  2723                           
  2724                           ;BMP280.c: 227:   ret.b[0] = I2C_Master_Read( 1);
  2725  0D18  3001               	movlw	1
  2726  0D19  00F4               	movwf	I2C_Master_Read@a
  2727  0D1A  3000               	movlw	0
  2728  0D1B  00F5               	movwf	I2C_Master_Read@a+1
  2729  0D1C  120A  158A  21F5  120A  158A  	fcall	_I2C_Master_Read
  2730  0D21  0874               	movf	?_I2C_Master_Read,w
  2731  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0D24  00A0               	movwf	??_BMP280_Update
  2734  0D25  0820               	movf	??_BMP280_Update,w
  2735  0D26  00A4               	movwf	BMP280_Update@ret
  2736  0D27                     l1299:
  2737                           
  2738                           ;BMP280.c: 229:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  2739  0D27  0824               	movf	BMP280_Update@ret,w
  2740  0D28  00A0               	movwf	??_BMP280_Update
  2741  0D29  0825               	movf	BMP280_Update@ret+1,w
  2742  0D2A  00A1               	movwf	??_BMP280_Update+1
  2743  0D2B  0826               	movf	BMP280_Update@ret+2,w
  2744  0D2C  00A2               	movwf	??_BMP280_Update+2
  2745  0D2D  0827               	movf	BMP280_Update@ret+3,w
  2746  0D2E  00A3               	movwf	??_BMP280_Update+3
  2747  0D2F  3004               	movlw	4
  2748  0D30                     u865:
  2749  0D30  1003               	clrc
  2750  0D31  0CA3               	rrf	??_BMP280_Update+3,f
  2751  0D32  0CA2               	rrf	??_BMP280_Update+2,f
  2752  0D33  0CA1               	rrf	??_BMP280_Update+1,f
  2753  0D34  0CA0               	rrf	??_BMP280_Update,f
  2754  0D35                     u860:
  2755  0D35  3EFF               	addlw	-1
  2756  0D36  1D03               	skipz
  2757  0D37  2D30               	goto	u865
  2758  0D38  30FF               	movlw	255
  2759  0D39  0520               	andwf	??_BMP280_Update,w
  2760  0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0D3C  00A4               	movwf	_adc_P^(0+128)
  2763  0D3D  30FF               	movlw	255
  2764  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0D40  0521               	andwf	??_BMP280_Update+1,w
  2767  0D41  1683               	bsf	3,5	;RP0=1, select bank1
  2768  0D42  1303               	bcf	3,6	;RP1=0, select bank1
  2769  0D43  00A5               	movwf	(_adc_P+1)^(0+128)
  2770  0D44  300F               	movlw	15
  2771  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0D47  0522               	andwf	??_BMP280_Update+2,w
  2774  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  2775  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  2776  0D4A  00A6               	movwf	(_adc_P+2)^(0+128)
  2777  0D4B  3000               	movlw	0
  2778  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0D4E  0523               	andwf	??_BMP280_Update+3,w
  2781  0D4F  1683               	bsf	3,5	;RP0=1, select bank1
  2782  0D50  1303               	bcf	3,6	;RP1=0, select bank1
  2783  0D51  00A7               	movwf	(_adc_P+3)^(0+128)
  2784  0D52                     l1301:
  2785                           
  2786                           ;BMP280.c: 231:   ret.b[2] = I2C_Master_Read(1);
  2787  0D52  3001               	movlw	1
  2788  0D53  00F4               	movwf	I2C_Master_Read@a
  2789  0D54  3000               	movlw	0
  2790  0D55  00F5               	movwf	I2C_Master_Read@a+1
  2791  0D56  120A  158A  21F5  120A  158A  	fcall	_I2C_Master_Read
  2792  0D5B  0874               	movf	?_I2C_Master_Read,w
  2793  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0D5E  00A0               	movwf	??_BMP280_Update
  2796  0D5F  0820               	movf	??_BMP280_Update,w
  2797  0D60  00A6               	movwf	BMP280_Update@ret+2
  2798  0D61                     l1303:
  2799                           
  2800                           ;BMP280.c: 232:   ret.b[1] = I2C_Master_Read(1);
  2801  0D61  3001               	movlw	1
  2802  0D62  00F4               	movwf	I2C_Master_Read@a
  2803  0D63  3000               	movlw	0
  2804  0D64  00F5               	movwf	I2C_Master_Read@a+1
  2805  0D65  120A  158A  21F5  120A  158A  	fcall	_I2C_Master_Read
  2806  0D6A  0874               	movf	?_I2C_Master_Read,w
  2807  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0D6D  00A0               	movwf	??_BMP280_Update
  2810  0D6E  0820               	movf	??_BMP280_Update,w
  2811  0D6F  00A5               	movwf	BMP280_Update@ret+1
  2812  0D70                     l1305:
  2813                           
  2814                           ;BMP280.c: 233:   ret.b[0] = I2C_Master_Read(0);
  2815  0D70  3000               	movlw	0
  2816  0D71  00F4               	movwf	I2C_Master_Read@a
  2817  0D72  00F5               	movwf	I2C_Master_Read@a+1
  2818  0D73  120A  158A  21F5  120A  158A  	fcall	_I2C_Master_Read
  2819  0D78  0874               	movf	?_I2C_Master_Read,w
  2820  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0D7B  00A0               	movwf	??_BMP280_Update
  2823  0D7C  0820               	movf	??_BMP280_Update,w
  2824  0D7D  00A4               	movwf	BMP280_Update@ret
  2825  0D7E                     l1307:
  2826                           
  2827                           ;BMP280.c: 234:   I2C_Master_Stop();
  2828  0D7E  120A  158A  211C  120A  158A  	fcall	_I2C_Master_Stop
  2829  0D83                     l1309:
  2830                           
  2831                           ;BMP280.c: 236:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  2832  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0D85  0824               	movf	BMP280_Update@ret,w
  2835  0D86  00A0               	movwf	??_BMP280_Update
  2836  0D87  0825               	movf	BMP280_Update@ret+1,w
  2837  0D88  00A1               	movwf	??_BMP280_Update+1
  2838  0D89  0826               	movf	BMP280_Update@ret+2,w
  2839  0D8A  00A2               	movwf	??_BMP280_Update+2
  2840  0D8B  0827               	movf	BMP280_Update@ret+3,w
  2841  0D8C  00A3               	movwf	??_BMP280_Update+3
  2842  0D8D  3004               	movlw	4
  2843  0D8E                     u875:
  2844  0D8E  1003               	clrc
  2845  0D8F  0CA3               	rrf	??_BMP280_Update+3,f
  2846  0D90  0CA2               	rrf	??_BMP280_Update+2,f
  2847  0D91  0CA1               	rrf	??_BMP280_Update+1,f
  2848  0D92  0CA0               	rrf	??_BMP280_Update,f
  2849  0D93                     u870:
  2850  0D93  3EFF               	addlw	-1
  2851  0D94  1D03               	skipz
  2852  0D95  2D8E               	goto	u875
  2853  0D96  30FF               	movlw	255
  2854  0D97  0520               	andwf	??_BMP280_Update,w
  2855  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  2856  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  2857  0D9A  00A8               	movwf	_adc_T^(0+128)
  2858  0D9B  30FF               	movlw	255
  2859  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0D9E  0521               	andwf	??_BMP280_Update+1,w
  2862  0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  2863  0DA0  1303               	bcf	3,6	;RP1=0, select bank1
  2864  0DA1  00A9               	movwf	(_adc_T+1)^(0+128)
  2865  0DA2  300F               	movlw	15
  2866  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0DA5  0522               	andwf	??_BMP280_Update+2,w
  2869  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  2870  0DA7  1303               	bcf	3,6	;RP1=0, select bank1
  2871  0DA8  00AA               	movwf	(_adc_T+2)^(0+128)
  2872  0DA9  3000               	movlw	0
  2873  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0DAC  0523               	andwf	??_BMP280_Update+3,w
  2876  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  2877  0DAE  1303               	bcf	3,6	;RP1=0, select bank1
  2878  0DAF  00AB               	movwf	(_adc_T+3)^(0+128)
  2879  0DB0                     l193:
  2880  0DB0  0008               	return
  2881  0DB1                     __end_of_BMP280_Update:
  2882                           
  2883                           	psect	text9
  2884  02B5                     __ptext9:	
  2885 ;; *************** function _BMP280_readPressure *****************
  2886 ;; Defined at:
  2887 ;;		line 266 in file "BMP280.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  pres            1    wreg     PTR unsigned long 
  2890 ;;		 -> pressure(4), 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  pres            1   49[BANK0 ] PTR unsigned long 
  2893 ;;		 -> pressure(4), 
  2894 ;;  var1            4   62[BANK0 ] long 
  2895 ;;  p               4   58[BANK0 ] unsigned long 
  2896 ;;  var2            4   54[BANK0 ] long 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2   12[None  ] int 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       0       0       0       0
  2907 ;;      Locals:         0      29       0       0       0
  2908 ;;      Temps:          0      16       0       0       0
  2909 ;;      Totals:         0      45       0       0       0
  2910 ;;Total ram usage:       45 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    3
  2913 ;; This function calls:
  2914 ;;		___aldiv
  2915 ;;		___lldiv
  2916 ;;		___lmul
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _BMP280_readPressure
  2924  02B5                     _BMP280_readPressure:
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2928                           ;BMP280_readPressure@pres stored from wreg
  2929  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2930  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2931  02B7  00D1               	movwf	BMP280_readPressure@pres
  2932  02B8                     l1407:
  2933                           
  2934                           ;BMP280.c: 266: int BMP280_readPressure(uint32_t *pres);BMP280.c: 267: {;BMP280.c: 268: 
      +                            int32_t var1, var2;;BMP280.c: 269:   uint32_t p;;BMP280.c: 272:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  2935  02B8  3000               	movlw	0
  2936  02B9  00B5               	movwf	??_BMP280_readPressure
  2937  02BA  3006               	movlw	6
  2938  02BB  00B6               	movwf	??_BMP280_readPressure+1
  2939  02BC  30FF               	movlw	255
  2940  02BD  00B7               	movwf	??_BMP280_readPressure+2
  2941  02BE  30FF               	movlw	255
  2942  02BF  00B8               	movwf	??_BMP280_readPressure+3
  2943  02C0  3000               	movlw	0
  2944  02C1  00A3               	movwf	___aldiv@divisor+3
  2945  02C2  3000               	movlw	0
  2946  02C3  00A2               	movwf	___aldiv@divisor+2
  2947  02C4  3000               	movlw	0
  2948  02C5  00A1               	movwf	___aldiv@divisor+1
  2949  02C6  3002               	movlw	2
  2950  02C7  00A0               	movwf	___aldiv@divisor
  2951  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  2952  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  2953  02CA  0823               	movf	(_t_fine+3)^(0+128),w
  2954  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2955  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2956  02CD  00A7               	movwf	___aldiv@dividend+3
  2957  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2958  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2959  02D0  0822               	movf	(_t_fine+2)^(0+128),w
  2960  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2961  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2962  02D3  00A6               	movwf	___aldiv@dividend+2
  2963  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  2964  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  2965  02D6  0821               	movf	(_t_fine+1)^(0+128),w
  2966  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2967  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2968  02D9  00A5               	movwf	___aldiv@dividend+1
  2969  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  2970  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  2971  02DC  0820               	movf	_t_fine^(0+128),w
  2972  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2973  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2974  02DF  00A4               	movwf	___aldiv@dividend
  2975  02E0  120A  158A  2435  120A  118A  	fcall	___aldiv
  2976  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2977  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2978  02E7  0820               	movf	?___aldiv,w
  2979  02E8  07B5               	addwf	??_BMP280_readPressure,f
  2980  02E9  0821               	movf	?___aldiv+1,w
  2981  02EA  1803               	skipnc
  2982  02EB  0F21               	incfsz	?___aldiv+1,w
  2983  02EC  2AEE               	goto	u1140
  2984  02ED  2AEF               	goto	u1141
  2985  02EE                     u1140:
  2986  02EE  07B6               	addwf	??_BMP280_readPressure+1,f
  2987  02EF                     u1141:
  2988  02EF  0822               	movf	?___aldiv+2,w
  2989  02F0  1803               	skipnc
  2990  02F1  0F22               	incfsz	?___aldiv+2,w
  2991  02F2  2AF4               	goto	u1142
  2992  02F3  2AF5               	goto	u1143
  2993  02F4                     u1142:
  2994  02F4  07B7               	addwf	??_BMP280_readPressure+2,f
  2995  02F5                     u1143:
  2996  02F5  0823               	movf	?___aldiv+3,w
  2997  02F6  1803               	skipnc
  2998  02F7  0A23               	incf	?___aldiv+3,w
  2999  02F8  07B8               	addwf	??_BMP280_readPressure+3,f
  3000  02F9  0838               	movf	??_BMP280_readPressure+3,w
  3001  02FA  00E1               	movwf	BMP280_readPressure@var1+3
  3002  02FB  0837               	movf	??_BMP280_readPressure+2,w
  3003  02FC  00E0               	movwf	BMP280_readPressure@var1+2
  3004  02FD  0836               	movf	??_BMP280_readPressure+1,w
  3005  02FE  00DF               	movwf	BMP280_readPressure@var1+1
  3006  02FF  0835               	movf	??_BMP280_readPressure,w
  3007  0300  00DE               	movwf	BMP280_readPressure@var1
  3008                           
  3009                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  3010  0301  3000               	movlw	0
  3011  0302  00A3               	movwf	___aldiv@divisor+3
  3012  0303  3000               	movlw	0
  3013  0304  00A2               	movwf	___aldiv@divisor+2
  3014  0305  3000               	movlw	0
  3015  0306  00A1               	movwf	___aldiv@divisor+1
  3016  0307  3004               	movlw	4
  3017  0308  00A0               	movwf	___aldiv@divisor
  3018  0309  0861               	movf	BMP280_readPressure@var1+3,w
  3019  030A  00A7               	movwf	___aldiv@dividend+3
  3020  030B  0860               	movf	BMP280_readPressure@var1+2,w
  3021  030C  00A6               	movwf	___aldiv@dividend+2
  3022  030D  085F               	movf	BMP280_readPressure@var1+1,w
  3023  030E  00A5               	movwf	___aldiv@dividend+1
  3024  030F  085E               	movf	BMP280_readPressure@var1,w
  3025  0310  00A4               	movwf	___aldiv@dividend
  3026  0311  120A  158A  2435  120A  118A  	fcall	___aldiv
  3027  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0318  0823               	movf	?___aldiv+3,w
  3030  0319  00AB               	movwf	___lmul@multiplier+3
  3031  031A  0822               	movf	?___aldiv+2,w
  3032  031B  00AA               	movwf	___lmul@multiplier+2
  3033  031C  0821               	movf	?___aldiv+1,w
  3034  031D  00A9               	movwf	___lmul@multiplier+1
  3035  031E  0820               	movf	?___aldiv,w
  3036  031F  00A8               	movwf	___lmul@multiplier
  3037  0320  3000               	movlw	0
  3038  0321  00A3               	movwf	___aldiv@divisor+3
  3039  0322  3000               	movlw	0
  3040  0323  00A2               	movwf	___aldiv@divisor+2
  3041  0324  3000               	movlw	0
  3042  0325  00A1               	movwf	___aldiv@divisor+1
  3043  0326  3004               	movlw	4
  3044  0327  00A0               	movwf	___aldiv@divisor
  3045  0328  0861               	movf	BMP280_readPressure@var1+3,w
  3046  0329  00A7               	movwf	___aldiv@dividend+3
  3047  032A  0860               	movf	BMP280_readPressure@var1+2,w
  3048  032B  00A6               	movwf	___aldiv@dividend+2
  3049  032C  085F               	movf	BMP280_readPressure@var1+1,w
  3050  032D  00A5               	movwf	___aldiv@dividend+1
  3051  032E  085E               	movf	BMP280_readPressure@var1,w
  3052  032F  00A4               	movwf	___aldiv@dividend
  3053  0330  120A  158A  2435  120A  118A  	fcall	___aldiv
  3054  0335  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0336  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0337  0823               	movf	?___aldiv+3,w
  3057  0338  00AF               	movwf	___lmul@multiplicand+3
  3058  0339  0822               	movf	?___aldiv+2,w
  3059  033A  00AE               	movwf	___lmul@multiplicand+2
  3060  033B  0821               	movf	?___aldiv+1,w
  3061  033C  00AD               	movwf	___lmul@multiplicand+1
  3062  033D  0820               	movf	?___aldiv,w
  3063  033E  00AC               	movwf	___lmul@multiplicand
  3064  033F  120A  158A  22A5  120A  118A  	fcall	___lmul
  3065  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3067  0346  082B               	movf	?___lmul+3,w
  3068  0347  00D5               	movwf	_BMP280_readPressure$1204+3
  3069  0348  082A               	movf	?___lmul+2,w
  3070  0349  00D4               	movwf	_BMP280_readPressure$1204+2
  3071  034A  0829               	movf	?___lmul+1,w
  3072  034B  00D3               	movwf	_BMP280_readPressure$1204+1
  3073  034C  0828               	movf	?___lmul,w
  3074  034D  00D2               	movwf	_BMP280_readPressure$1204
  3075                           
  3076                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  3077  034E  3000               	movlw	0
  3078  034F  00A3               	movwf	___aldiv@divisor+3
  3079  0350  3000               	movlw	0
  3080  0351  00A2               	movwf	___aldiv@divisor+2
  3081  0352  3008               	movlw	8
  3082  0353  00A1               	movwf	___aldiv@divisor+1
  3083  0354  3000               	movlw	0
  3084  0355  00A0               	movwf	___aldiv@divisor
  3085  0356  0855               	movf	_BMP280_readPressure$1204+3,w
  3086  0357  00A7               	movwf	___aldiv@dividend+3
  3087  0358  0854               	movf	_BMP280_readPressure$1204+2,w
  3088  0359  00A6               	movwf	___aldiv@dividend+2
  3089  035A  0853               	movf	_BMP280_readPressure$1204+1,w
  3090  035B  00A5               	movwf	___aldiv@dividend+1
  3091  035C  0852               	movf	_BMP280_readPressure$1204,w
  3092  035D  00A4               	movwf	___aldiv@dividend
  3093  035E  120A  158A  2435  120A  118A  	fcall	___aldiv
  3094  0363  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0364  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0365  0823               	movf	?___aldiv+3,w
  3097  0366  00AB               	movwf	___lmul@multiplier+3
  3098  0367  0822               	movf	?___aldiv+2,w
  3099  0368  00AA               	movwf	___lmul@multiplier+2
  3100  0369  0821               	movf	?___aldiv+1,w
  3101  036A  00A9               	movwf	___lmul@multiplier+1
  3102  036B  0820               	movf	?___aldiv,w
  3103  036C  00A8               	movwf	___lmul@multiplier
  3104  036D  1683               	bsf	3,5	;RP0=1, select bank1
  3105  036E  1303               	bcf	3,6	;RP1=0, select bank1
  3106  036F  083C               	movf	(_BMP280_calib^(0+128)+16),w
  3107  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0371  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0372  00AC               	movwf	___lmul@multiplicand
  3110  0373  1683               	bsf	3,5	;RP0=1, select bank1
  3111  0374  1303               	bcf	3,6	;RP1=0, select bank1
  3112  0375  083D               	movf	((_BMP280_calib+1)^(0+128)+16),w
  3113  0376  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0377  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0378  00AD               	movwf	___lmul@multiplicand+1
  3116  0379  3000               	movlw	0
  3117  037A  1BAD               	btfsc	___lmul@multiplicand+1,7
  3118  037B  30FF               	movlw	255
  3119  037C  00AE               	movwf	___lmul@multiplicand+2
  3120  037D  00AF               	movwf	___lmul@multiplicand+3
  3121  037E  120A  158A  22A5  120A  118A  	fcall	___lmul
  3122  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0385  082B               	movf	?___lmul+3,w
  3125  0386  00D9               	movwf	BMP280_readPressure@var2+3
  3126  0387  082A               	movf	?___lmul+2,w
  3127  0388  00D8               	movwf	BMP280_readPressure@var2+2
  3128  0389  0829               	movf	?___lmul+1,w
  3129  038A  00D7               	movwf	BMP280_readPressure@var2+1
  3130  038B  0828               	movf	?___lmul,w
  3131  038C  00D6               	movwf	BMP280_readPressure@var2
  3132                           
  3133                           ;BMP280.c: 275:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  3134  038D  0856               	movf	BMP280_readPressure@var2,w
  3135  038E  00B5               	movwf	??_BMP280_readPressure
  3136  038F  0857               	movf	BMP280_readPressure@var2+1,w
  3137  0390  00B6               	movwf	??_BMP280_readPressure+1
  3138  0391  0858               	movf	BMP280_readPressure@var2+2,w
  3139  0392  00B7               	movwf	??_BMP280_readPressure+2
  3140  0393  0859               	movf	BMP280_readPressure@var2+3,w
  3141  0394  00B8               	movwf	??_BMP280_readPressure+3
  3142  0395  1683               	bsf	3,5	;RP0=1, select bank1
  3143  0396  1303               	bcf	3,6	;RP1=0, select bank1
  3144  0397  083A               	movf	(_BMP280_calib^(0+128)+14),w
  3145  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3147  039A  00A8               	movwf	___lmul@multiplier
  3148  039B  1683               	bsf	3,5	;RP0=1, select bank1
  3149  039C  1303               	bcf	3,6	;RP1=0, select bank1
  3150  039D  083B               	movf	((_BMP280_calib+1)^(0+128)+14),w
  3151  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3152  039F  1303               	bcf	3,6	;RP1=0, select bank0
  3153  03A0  00A9               	movwf	___lmul@multiplier+1
  3154  03A1  3000               	movlw	0
  3155  03A2  1BA9               	btfsc	___lmul@multiplier+1,7
  3156  03A3  30FF               	movlw	255
  3157  03A4  00AA               	movwf	___lmul@multiplier+2
  3158  03A5  00AB               	movwf	___lmul@multiplier+3
  3159  03A6  0861               	movf	BMP280_readPressure@var1+3,w
  3160  03A7  00AF               	movwf	___lmul@multiplicand+3
  3161  03A8  0860               	movf	BMP280_readPressure@var1+2,w
  3162  03A9  00AE               	movwf	___lmul@multiplicand+2
  3163  03AA  085F               	movf	BMP280_readPressure@var1+1,w
  3164  03AB  00AD               	movwf	___lmul@multiplicand+1
  3165  03AC  085E               	movf	BMP280_readPressure@var1,w
  3166  03AD  00AC               	movwf	___lmul@multiplicand
  3167  03AE  120A  158A  22A5  120A  118A  	fcall	___lmul
  3168  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3169  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3170  03B5  0828               	movf	?___lmul,w
  3171  03B6  00B9               	movwf	??_BMP280_readPressure+4
  3172  03B7  0829               	movf	?___lmul+1,w
  3173  03B8  00BA               	movwf	??_BMP280_readPressure+5
  3174  03B9  082A               	movf	?___lmul+2,w
  3175  03BA  00BB               	movwf	??_BMP280_readPressure+6
  3176  03BB  082B               	movf	?___lmul+3,w
  3177  03BC  00BC               	movwf	??_BMP280_readPressure+7
  3178  03BD  3001               	movlw	1
  3179  03BE                     u1155:
  3180  03BE  1003               	clrc
  3181  03BF  0DB9               	rlf	??_BMP280_readPressure+4,f
  3182  03C0  0DBA               	rlf	??_BMP280_readPressure+5,f
  3183  03C1  0DBB               	rlf	??_BMP280_readPressure+6,f
  3184  03C2  0DBC               	rlf	??_BMP280_readPressure+7,f
  3185  03C3                     u1150:
  3186  03C3  3EFF               	addlw	-1
  3187  03C4  1D03               	skipz
  3188  03C5  2BBE               	goto	u1155
  3189  03C6  0839               	movf	??_BMP280_readPressure+4,w
  3190  03C7  07B5               	addwf	??_BMP280_readPressure,f
  3191  03C8  083A               	movf	??_BMP280_readPressure+5,w
  3192  03C9  1803               	skipnc
  3193  03CA  0F3A               	incfsz	??_BMP280_readPressure+5,w
  3194  03CB  2BCD               	goto	u1160
  3195  03CC  2BCE               	goto	u1161
  3196  03CD                     u1160:
  3197  03CD  07B6               	addwf	??_BMP280_readPressure+1,f
  3198  03CE                     u1161:
  3199  03CE  083B               	movf	??_BMP280_readPressure+6,w
  3200  03CF  1803               	skipnc
  3201  03D0  0F3B               	incfsz	??_BMP280_readPressure+6,w
  3202  03D1  2BD3               	goto	u1162
  3203  03D2  2BD4               	goto	u1163
  3204  03D3                     u1162:
  3205  03D3  07B7               	addwf	??_BMP280_readPressure+2,f
  3206  03D4                     u1163:
  3207  03D4  083C               	movf	??_BMP280_readPressure+7,w
  3208  03D5  1803               	skipnc
  3209  03D6  0A3C               	incf	??_BMP280_readPressure+7,w
  3210  03D7  07B8               	addwf	??_BMP280_readPressure+3,f
  3211  03D8  0838               	movf	??_BMP280_readPressure+3,w
  3212  03D9  00D9               	movwf	BMP280_readPressure@var2+3
  3213  03DA  0837               	movf	??_BMP280_readPressure+2,w
  3214  03DB  00D8               	movwf	BMP280_readPressure@var2+2
  3215  03DC  0836               	movf	??_BMP280_readPressure+1,w
  3216  03DD  00D7               	movwf	BMP280_readPressure@var2+1
  3217  03DE  0835               	movf	??_BMP280_readPressure,w
  3218  03DF  00D6               	movwf	BMP280_readPressure@var2
  3219                           
  3220                           ;BMP280.c: 276:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  3221  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  3222  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  3223  03E2  0838               	movf	(_BMP280_calib^(0+128)+12),w
  3224  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3225  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3226  03E5  00B5               	movwf	??_BMP280_readPressure
  3227  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  3228  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  3229  03E8  0839               	movf	((_BMP280_calib+1)^(0+128)+12),w
  3230  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3231  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3232  03EB  00B6               	movwf	??_BMP280_readPressure+1
  3233  03EC  01B7               	clrf	??_BMP280_readPressure+2
  3234  03ED  01B8               	clrf	??_BMP280_readPressure+3
  3235  03EE  3010               	movlw	16
  3236  03EF                     u1175:
  3237  03EF  1003               	clrc
  3238  03F0  0DB5               	rlf	??_BMP280_readPressure,f
  3239  03F1  0DB6               	rlf	??_BMP280_readPressure+1,f
  3240  03F2  0DB7               	rlf	??_BMP280_readPressure+2,f
  3241  03F3  0DB8               	rlf	??_BMP280_readPressure+3,f
  3242  03F4                     u1170:
  3243  03F4  3EFF               	addlw	-1
  3244  03F5  1D03               	skipz
  3245  03F6  2BEF               	goto	u1175
  3246  03F7  3000               	movlw	0
  3247  03F8  00A3               	movwf	___aldiv@divisor+3
  3248  03F9  3000               	movlw	0
  3249  03FA  00A2               	movwf	___aldiv@divisor+2
  3250  03FB  3000               	movlw	0
  3251  03FC  00A1               	movwf	___aldiv@divisor+1
  3252  03FD  3004               	movlw	4
  3253  03FE  00A0               	movwf	___aldiv@divisor
  3254  03FF  0859               	movf	BMP280_readPressure@var2+3,w
  3255  0400  00A7               	movwf	___aldiv@dividend+3
  3256  0401  0858               	movf	BMP280_readPressure@var2+2,w
  3257  0402  00A6               	movwf	___aldiv@dividend+2
  3258  0403  0857               	movf	BMP280_readPressure@var2+1,w
  3259  0404  00A5               	movwf	___aldiv@dividend+1
  3260  0405  0856               	movf	BMP280_readPressure@var2,w
  3261  0406  00A4               	movwf	___aldiv@dividend
  3262  0407  120A  158A  2435  120A  118A  	fcall	___aldiv
  3263  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3264  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3265  040E  0820               	movf	?___aldiv,w
  3266  040F  07B5               	addwf	??_BMP280_readPressure,f
  3267  0410  0821               	movf	?___aldiv+1,w
  3268  0411  1803               	skipnc
  3269  0412  0F21               	incfsz	?___aldiv+1,w
  3270  0413  2C15               	goto	u1180
  3271  0414  2C16               	goto	u1181
  3272  0415                     u1180:
  3273  0415  07B6               	addwf	??_BMP280_readPressure+1,f
  3274  0416                     u1181:
  3275  0416  0822               	movf	?___aldiv+2,w
  3276  0417  1803               	skipnc
  3277  0418  0F22               	incfsz	?___aldiv+2,w
  3278  0419  2C1B               	goto	u1182
  3279  041A  2C1C               	goto	u1183
  3280  041B                     u1182:
  3281  041B  07B7               	addwf	??_BMP280_readPressure+2,f
  3282  041C                     u1183:
  3283  041C  0823               	movf	?___aldiv+3,w
  3284  041D  1803               	skipnc
  3285  041E  0A23               	incf	?___aldiv+3,w
  3286  041F  07B8               	addwf	??_BMP280_readPressure+3,f
  3287  0420  0838               	movf	??_BMP280_readPressure+3,w
  3288  0421  00D9               	movwf	BMP280_readPressure@var2+3
  3289  0422  0837               	movf	??_BMP280_readPressure+2,w
  3290  0423  00D8               	movwf	BMP280_readPressure@var2+2
  3291  0424  0836               	movf	??_BMP280_readPressure+1,w
  3292  0425  00D7               	movwf	BMP280_readPressure@var2+1
  3293  0426  0835               	movf	??_BMP280_readPressure,w
  3294  0427  00D6               	movwf	BMP280_readPressure@var2
  3295                           
  3296                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3297  0428  3000               	movlw	0
  3298  0429  00A3               	movwf	___aldiv@divisor+3
  3299  042A  3000               	movlw	0
  3300  042B  00A2               	movwf	___aldiv@divisor+2
  3301  042C  3000               	movlw	0
  3302  042D  00A1               	movwf	___aldiv@divisor+1
  3303  042E  3004               	movlw	4
  3304  042F  00A0               	movwf	___aldiv@divisor
  3305  0430  0861               	movf	BMP280_readPressure@var1+3,w
  3306  0431  00A7               	movwf	___aldiv@dividend+3
  3307  0432  0860               	movf	BMP280_readPressure@var1+2,w
  3308  0433  00A6               	movwf	___aldiv@dividend+2
  3309  0434  085F               	movf	BMP280_readPressure@var1+1,w
  3310  0435  00A5               	movwf	___aldiv@dividend+1
  3311  0436  085E               	movf	BMP280_readPressure@var1,w
  3312  0437  00A4               	movwf	___aldiv@dividend
  3313  0438  120A  158A  2435  120A  118A  	fcall	___aldiv
  3314  043D  1283               	bcf	3,5	;RP0=0, select bank0
  3315  043E  1303               	bcf	3,6	;RP1=0, select bank0
  3316  043F  0823               	movf	?___aldiv+3,w
  3317  0440  00AB               	movwf	___lmul@multiplier+3
  3318  0441  0822               	movf	?___aldiv+2,w
  3319  0442  00AA               	movwf	___lmul@multiplier+2
  3320  0443  0821               	movf	?___aldiv+1,w
  3321  0444  00A9               	movwf	___lmul@multiplier+1
  3322  0445  0820               	movf	?___aldiv,w
  3323  0446  00A8               	movwf	___lmul@multiplier
  3324  0447  3000               	movlw	0
  3325  0448  00A3               	movwf	___aldiv@divisor+3
  3326  0449  3000               	movlw	0
  3327  044A  00A2               	movwf	___aldiv@divisor+2
  3328  044B  3000               	movlw	0
  3329  044C  00A1               	movwf	___aldiv@divisor+1
  3330  044D  3004               	movlw	4
  3331  044E  00A0               	movwf	___aldiv@divisor
  3332  044F  0861               	movf	BMP280_readPressure@var1+3,w
  3333  0450  00A7               	movwf	___aldiv@dividend+3
  3334  0451  0860               	movf	BMP280_readPressure@var1+2,w
  3335  0452  00A6               	movwf	___aldiv@dividend+2
  3336  0453  085F               	movf	BMP280_readPressure@var1+1,w
  3337  0454  00A5               	movwf	___aldiv@dividend+1
  3338  0455  085E               	movf	BMP280_readPressure@var1,w
  3339  0456  00A4               	movwf	___aldiv@dividend
  3340  0457  120A  158A  2435  120A  118A  	fcall	___aldiv
  3341  045C  1283               	bcf	3,5	;RP0=0, select bank0
  3342  045D  1303               	bcf	3,6	;RP1=0, select bank0
  3343  045E  0823               	movf	?___aldiv+3,w
  3344  045F  00AF               	movwf	___lmul@multiplicand+3
  3345  0460  0822               	movf	?___aldiv+2,w
  3346  0461  00AE               	movwf	___lmul@multiplicand+2
  3347  0462  0821               	movf	?___aldiv+1,w
  3348  0463  00AD               	movwf	___lmul@multiplicand+1
  3349  0464  0820               	movf	?___aldiv,w
  3350  0465  00AC               	movwf	___lmul@multiplicand
  3351  0466  120A  158A  22A5  120A  118A  	fcall	___lmul
  3352  046B  1283               	bcf	3,5	;RP0=0, select bank0
  3353  046C  1303               	bcf	3,6	;RP1=0, select bank0
  3354  046D  082B               	movf	?___lmul+3,w
  3355  046E  00D5               	movwf	_BMP280_readPressure$1204+3
  3356  046F  082A               	movf	?___lmul+2,w
  3357  0470  00D4               	movwf	_BMP280_readPressure$1204+2
  3358  0471  0829               	movf	?___lmul+1,w
  3359  0472  00D3               	movwf	_BMP280_readPressure$1204+1
  3360  0473  0828               	movf	?___lmul,w
  3361  0474  00D2               	movwf	_BMP280_readPressure$1204
  3362                           
  3363                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3364  0475  1683               	bsf	3,5	;RP0=1, select bank1
  3365  0476  1303               	bcf	3,6	;RP1=0, select bank1
  3366  0477  0836               	movf	(_BMP280_calib^(0+128)+10),w
  3367  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3369  047A  00A8               	movwf	___lmul@multiplier
  3370  047B  1683               	bsf	3,5	;RP0=1, select bank1
  3371  047C  1303               	bcf	3,6	;RP1=0, select bank1
  3372  047D  0837               	movf	((_BMP280_calib+1)^(0+128)+10),w
  3373  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3374  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0480  00A9               	movwf	___lmul@multiplier+1
  3376  0481  3000               	movlw	0
  3377  0482  1BA9               	btfsc	___lmul@multiplier+1,7
  3378  0483  30FF               	movlw	255
  3379  0484  00AA               	movwf	___lmul@multiplier+2
  3380  0485  00AB               	movwf	___lmul@multiplier+3
  3381  0486  3000               	movlw	0
  3382  0487  00A3               	movwf	___aldiv@divisor+3
  3383  0488  3000               	movlw	0
  3384  0489  00A2               	movwf	___aldiv@divisor+2
  3385  048A  3020               	movlw	32
  3386  048B  00A1               	movwf	___aldiv@divisor+1
  3387  048C  3000               	movlw	0
  3388  048D  00A0               	movwf	___aldiv@divisor
  3389  048E  0855               	movf	_BMP280_readPressure$1204+3,w
  3390  048F  00A7               	movwf	___aldiv@dividend+3
  3391  0490  0854               	movf	_BMP280_readPressure$1204+2,w
  3392  0491  00A6               	movwf	___aldiv@dividend+2
  3393  0492  0853               	movf	_BMP280_readPressure$1204+1,w
  3394  0493  00A5               	movwf	___aldiv@dividend+1
  3395  0494  0852               	movf	_BMP280_readPressure$1204,w
  3396  0495  00A4               	movwf	___aldiv@dividend
  3397  0496  120A  158A  2435  120A  118A  	fcall	___aldiv
  3398  049B  1283               	bcf	3,5	;RP0=0, select bank0
  3399  049C  1303               	bcf	3,6	;RP1=0, select bank0
  3400  049D  0823               	movf	?___aldiv+3,w
  3401  049E  00AF               	movwf	___lmul@multiplicand+3
  3402  049F  0822               	movf	?___aldiv+2,w
  3403  04A0  00AE               	movwf	___lmul@multiplicand+2
  3404  04A1  0821               	movf	?___aldiv+1,w
  3405  04A2  00AD               	movwf	___lmul@multiplicand+1
  3406  04A3  0820               	movf	?___aldiv,w
  3407  04A4  00AC               	movwf	___lmul@multiplicand
  3408  04A5  120A  158A  22A5  120A  118A  	fcall	___lmul
  3409  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3410  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  3411  04AC  082B               	movf	?___lmul+3,w
  3412  04AD  00C8               	movwf	_BMP280_readPressure$1205+3
  3413  04AE  082A               	movf	?___lmul+2,w
  3414  04AF  00C7               	movwf	_BMP280_readPressure$1205+2
  3415  04B0  0829               	movf	?___lmul+1,w
  3416  04B1  00C6               	movwf	_BMP280_readPressure$1205+1
  3417  04B2  0828               	movf	?___lmul,w
  3418  04B3  00C5               	movwf	_BMP280_readPressure$1205
  3419                           
  3420                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3421  04B4  3000               	movlw	0
  3422  04B5  00A3               	movwf	___aldiv@divisor+3
  3423  04B6  3000               	movlw	0
  3424  04B7  00A2               	movwf	___aldiv@divisor+2
  3425  04B8  3000               	movlw	0
  3426  04B9  00A1               	movwf	___aldiv@divisor+1
  3427  04BA  3002               	movlw	2
  3428  04BB  00A0               	movwf	___aldiv@divisor
  3429  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  3430  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  3431  04BE  0834               	movf	(_BMP280_calib^(0+128)+8),w
  3432  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  3433  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  3434  04C1  00A8               	movwf	___lmul@multiplier
  3435  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  3436  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  3437  04C4  0835               	movf	((_BMP280_calib+1)^(0+128)+8),w
  3438  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3439  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3440  04C7  00A9               	movwf	___lmul@multiplier+1
  3441  04C8  3000               	movlw	0
  3442  04C9  1BA9               	btfsc	___lmul@multiplier+1,7
  3443  04CA  30FF               	movlw	255
  3444  04CB  00AA               	movwf	___lmul@multiplier+2
  3445  04CC  00AB               	movwf	___lmul@multiplier+3
  3446  04CD  0861               	movf	BMP280_readPressure@var1+3,w
  3447  04CE  00AF               	movwf	___lmul@multiplicand+3
  3448  04CF  0860               	movf	BMP280_readPressure@var1+2,w
  3449  04D0  00AE               	movwf	___lmul@multiplicand+2
  3450  04D1  085F               	movf	BMP280_readPressure@var1+1,w
  3451  04D2  00AD               	movwf	___lmul@multiplicand+1
  3452  04D3  085E               	movf	BMP280_readPressure@var1,w
  3453  04D4  00AC               	movwf	___lmul@multiplicand
  3454  04D5  120A  158A  22A5  120A  118A  	fcall	___lmul
  3455  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3456  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3457  04DC  082B               	movf	?___lmul+3,w
  3458  04DD  00A7               	movwf	___aldiv@dividend+3
  3459  04DE  082A               	movf	?___lmul+2,w
  3460  04DF  00A6               	movwf	___aldiv@dividend+2
  3461  04E0  0829               	movf	?___lmul+1,w
  3462  04E1  00A5               	movwf	___aldiv@dividend+1
  3463  04E2  0828               	movf	?___lmul,w
  3464  04E3  00A4               	movwf	___aldiv@dividend
  3465  04E4  120A  158A  2435  120A  118A  	fcall	___aldiv
  3466  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  3467  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  3468  04EB  0820               	movf	?___aldiv,w
  3469  04EC  00B5               	movwf	??_BMP280_readPressure
  3470  04ED  0821               	movf	?___aldiv+1,w
  3471  04EE  00B6               	movwf	??_BMP280_readPressure+1
  3472  04EF  0822               	movf	?___aldiv+2,w
  3473  04F0  00B7               	movwf	??_BMP280_readPressure+2
  3474  04F1  0823               	movf	?___aldiv+3,w
  3475  04F2  00B8               	movwf	??_BMP280_readPressure+3
  3476  04F3  3000               	movlw	0
  3477  04F4  00A3               	movwf	___aldiv@divisor+3
  3478  04F5  3000               	movlw	0
  3479  04F6  00A2               	movwf	___aldiv@divisor+2
  3480  04F7  3000               	movlw	0
  3481  04F8  00A1               	movwf	___aldiv@divisor+1
  3482  04F9  3008               	movlw	8
  3483  04FA  00A0               	movwf	___aldiv@divisor
  3484  04FB  0848               	movf	_BMP280_readPressure$1205+3,w
  3485  04FC  00A7               	movwf	___aldiv@dividend+3
  3486  04FD  0847               	movf	_BMP280_readPressure$1205+2,w
  3487  04FE  00A6               	movwf	___aldiv@dividend+2
  3488  04FF  0846               	movf	_BMP280_readPressure$1205+1,w
  3489  0500  00A5               	movwf	___aldiv@dividend+1
  3490  0501  0845               	movf	_BMP280_readPressure$1205,w
  3491  0502  00A4               	movwf	___aldiv@dividend
  3492  0503  120A  158A  2435  120A  118A  	fcall	___aldiv
  3493  0508  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0509  1303               	bcf	3,6	;RP1=0, select bank0
  3495  050A  0820               	movf	?___aldiv,w
  3496  050B  07B5               	addwf	??_BMP280_readPressure,f
  3497  050C  0821               	movf	?___aldiv+1,w
  3498  050D  1803               	skipnc
  3499  050E  0F21               	incfsz	?___aldiv+1,w
  3500  050F  2D11               	goto	u1190
  3501  0510  2D12               	goto	u1191
  3502  0511                     u1190:
  3503  0511  07B6               	addwf	??_BMP280_readPressure+1,f
  3504  0512                     u1191:
  3505  0512  0822               	movf	?___aldiv+2,w
  3506  0513  1803               	skipnc
  3507  0514  0F22               	incfsz	?___aldiv+2,w
  3508  0515  2D17               	goto	u1192
  3509  0516  2D18               	goto	u1193
  3510  0517                     u1192:
  3511  0517  07B7               	addwf	??_BMP280_readPressure+2,f
  3512  0518                     u1193:
  3513  0518  0823               	movf	?___aldiv+3,w
  3514  0519  1803               	skipnc
  3515  051A  0A23               	incf	?___aldiv+3,w
  3516  051B  07B8               	addwf	??_BMP280_readPressure+3,f
  3517  051C  0838               	movf	??_BMP280_readPressure+3,w
  3518  051D  00CC               	movwf	_BMP280_readPressure$1206+3
  3519  051E  0837               	movf	??_BMP280_readPressure+2,w
  3520  051F  00CB               	movwf	_BMP280_readPressure$1206+2
  3521  0520  0836               	movf	??_BMP280_readPressure+1,w
  3522  0521  00CA               	movwf	_BMP280_readPressure$1206+1
  3523  0522  0835               	movf	??_BMP280_readPressure,w
  3524  0523  00C9               	movwf	_BMP280_readPressure$1206
  3525                           
  3526                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3527  0524  3000               	movlw	0
  3528  0525  00A3               	movwf	___aldiv@divisor+3
  3529  0526  3004               	movlw	4
  3530  0527  00A2               	movwf	___aldiv@divisor+2
  3531  0528  3000               	movlw	0
  3532  0529  00A1               	movwf	___aldiv@divisor+1
  3533  052A  3000               	movlw	0
  3534  052B  00A0               	movwf	___aldiv@divisor
  3535  052C  084C               	movf	_BMP280_readPressure$1206+3,w
  3536  052D  00A7               	movwf	___aldiv@dividend+3
  3537  052E  084B               	movf	_BMP280_readPressure$1206+2,w
  3538  052F  00A6               	movwf	___aldiv@dividend+2
  3539  0530  084A               	movf	_BMP280_readPressure$1206+1,w
  3540  0531  00A5               	movwf	___aldiv@dividend+1
  3541  0532  0849               	movf	_BMP280_readPressure$1206,w
  3542  0533  00A4               	movwf	___aldiv@dividend
  3543  0534  120A  158A  2435  120A  118A  	fcall	___aldiv
  3544  0539  1283               	bcf	3,5	;RP0=0, select bank0
  3545  053A  1303               	bcf	3,6	;RP1=0, select bank0
  3546  053B  0823               	movf	?___aldiv+3,w
  3547  053C  00E1               	movwf	BMP280_readPressure@var1+3
  3548  053D  0822               	movf	?___aldiv+2,w
  3549  053E  00E0               	movwf	BMP280_readPressure@var1+2
  3550  053F  0821               	movf	?___aldiv+1,w
  3551  0540  00DF               	movwf	BMP280_readPressure@var1+1
  3552  0541  0820               	movf	?___aldiv,w
  3553  0542  00DE               	movwf	BMP280_readPressure@var1
  3554                           
  3555                           ;BMP280.c: 281:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  3556  0543  3000               	movlw	0
  3557  0544  00A3               	movwf	___aldiv@divisor+3
  3558  0545  3000               	movlw	0
  3559  0546  00A2               	movwf	___aldiv@divisor+2
  3560  0547  3080               	movlw	128
  3561  0548  00A1               	movwf	___aldiv@divisor+1
  3562  0549  3000               	movlw	0
  3563  054A  00A0               	movwf	___aldiv@divisor
  3564  054B  3000               	movlw	0
  3565  054C  00B5               	movwf	??_BMP280_readPressure
  3566  054D  3080               	movlw	128
  3567  054E  00B6               	movwf	??_BMP280_readPressure+1
  3568  054F  3000               	movlw	0
  3569  0550  00B7               	movwf	??_BMP280_readPressure+2
  3570  0551  3000               	movlw	0
  3571  0552  00B8               	movwf	??_BMP280_readPressure+3
  3572  0553  085E               	movf	BMP280_readPressure@var1,w
  3573  0554  07B5               	addwf	??_BMP280_readPressure,f
  3574  0555  085F               	movf	BMP280_readPressure@var1+1,w
  3575  0556  1803               	skipnc
  3576  0557  0F5F               	incfsz	BMP280_readPressure@var1+1,w
  3577  0558  2D5A               	goto	u1200
  3578  0559  2D5B               	goto	u1201
  3579  055A                     u1200:
  3580  055A  07B6               	addwf	??_BMP280_readPressure+1,f
  3581  055B                     u1201:
  3582  055B  0860               	movf	BMP280_readPressure@var1+2,w
  3583  055C  1803               	skipnc
  3584  055D  0F60               	incfsz	BMP280_readPressure@var1+2,w
  3585  055E  2D60               	goto	u1202
  3586  055F  2D61               	goto	u1203
  3587  0560                     u1202:
  3588  0560  07B7               	addwf	??_BMP280_readPressure+2,f
  3589  0561                     u1203:
  3590  0561  0861               	movf	BMP280_readPressure@var1+3,w
  3591  0562  1803               	skipnc
  3592  0563  0A61               	incf	BMP280_readPressure@var1+3,w
  3593  0564  07B8               	addwf	??_BMP280_readPressure+3,f
  3594  0565  0838               	movf	??_BMP280_readPressure+3,w
  3595  0566  00AB               	movwf	___lmul@multiplier+3
  3596  0567  0837               	movf	??_BMP280_readPressure+2,w
  3597  0568  00AA               	movwf	___lmul@multiplier+2
  3598  0569  0836               	movf	??_BMP280_readPressure+1,w
  3599  056A  00A9               	movwf	___lmul@multiplier+1
  3600  056B  0835               	movf	??_BMP280_readPressure,w
  3601  056C  00A8               	movwf	___lmul@multiplier
  3602  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3603  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3604  056F  0832               	movf	(_BMP280_calib^(0+128)+6),w
  3605  0570  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0571  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0572  00AC               	movwf	___lmul@multiplicand
  3608  0573  1683               	bsf	3,5	;RP0=1, select bank1
  3609  0574  1303               	bcf	3,6	;RP1=0, select bank1
  3610  0575  0833               	movf	((_BMP280_calib+1)^(0+128)+6),w
  3611  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0578  00AD               	movwf	___lmul@multiplicand+1
  3614  0579  01AE               	clrf	___lmul@multiplicand+2
  3615  057A  01AF               	clrf	___lmul@multiplicand+3
  3616  057B  120A  158A  22A5  120A  118A  	fcall	___lmul
  3617  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3619  0582  082B               	movf	?___lmul+3,w
  3620  0583  00A7               	movwf	___aldiv@dividend+3
  3621  0584  082A               	movf	?___lmul+2,w
  3622  0585  00A6               	movwf	___aldiv@dividend+2
  3623  0586  0829               	movf	?___lmul+1,w
  3624  0587  00A5               	movwf	___aldiv@dividend+1
  3625  0588  0828               	movf	?___lmul,w
  3626  0589  00A4               	movwf	___aldiv@dividend
  3627  058A  120A  158A  2435  120A  118A  	fcall	___aldiv
  3628  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3629  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3630  0591  0823               	movf	?___aldiv+3,w
  3631  0592  00E1               	movwf	BMP280_readPressure@var1+3
  3632  0593  0822               	movf	?___aldiv+2,w
  3633  0594  00E0               	movwf	BMP280_readPressure@var1+2
  3634  0595  0821               	movf	?___aldiv+1,w
  3635  0596  00DF               	movwf	BMP280_readPressure@var1+1
  3636  0597  0820               	movf	?___aldiv,w
  3637  0598  00DE               	movwf	BMP280_readPressure@var1
  3638  0599                     l1409:
  3639                           
  3640                           ;BMP280.c: 283:   if (var1 == 0)
  3641  0599  0861               	movf	BMP280_readPressure@var1+3,w
  3642  059A  0460               	iorwf	BMP280_readPressure@var1+2,w
  3643  059B  045F               	iorwf	BMP280_readPressure@var1+1,w
  3644  059C  045E               	iorwf	BMP280_readPressure@var1,w
  3645  059D  1D03               	skipz
  3646  059E  2DA0               	goto	u1211
  3647  059F  2DA1               	goto	u1210
  3648  05A0                     u1211:
  3649  05A0  2DA2               	goto	l1413
  3650  05A1                     u1210:
  3651  05A1  2FEA               	goto	l200
  3652  05A2                     l1413:
  3653                           
  3654                           ;BMP280.c: 286:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  3655  05A2  3000               	movlw	0
  3656  05A3  00B5               	movwf	??_BMP280_readPressure
  3657  05A4  3000               	movlw	0
  3658  05A5  00B6               	movwf	??_BMP280_readPressure+1
  3659  05A6  3010               	movlw	16
  3660  05A7  00B7               	movwf	??_BMP280_readPressure+2
  3661  05A8  3000               	movlw	0
  3662  05A9  00B8               	movwf	??_BMP280_readPressure+3
  3663  05AA  3000               	movlw	0
  3664  05AB  00A3               	movwf	___aldiv@divisor+3
  3665  05AC  3000               	movlw	0
  3666  05AD  00A2               	movwf	___aldiv@divisor+2
  3667  05AE  3010               	movlw	16
  3668  05AF  00A1               	movwf	___aldiv@divisor+1
  3669  05B0  3000               	movlw	0
  3670  05B1  00A0               	movwf	___aldiv@divisor
  3671  05B2  0859               	movf	BMP280_readPressure@var2+3,w
  3672  05B3  00A7               	movwf	___aldiv@dividend+3
  3673  05B4  0858               	movf	BMP280_readPressure@var2+2,w
  3674  05B5  00A6               	movwf	___aldiv@dividend+2
  3675  05B6  0857               	movf	BMP280_readPressure@var2+1,w
  3676  05B7  00A5               	movwf	___aldiv@dividend+1
  3677  05B8  0856               	movf	BMP280_readPressure@var2,w
  3678  05B9  00A4               	movwf	___aldiv@dividend
  3679  05BA  120A  158A  2435  120A  118A  	fcall	___aldiv
  3680  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3681  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  3682  05C1  0924               	comf	_adc_P^(0+128),w
  3683  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3684  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3685  05C4  00B9               	movwf	??_BMP280_readPressure+4
  3686  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3687  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  3688  05C7  0925               	comf	(_adc_P+1)^(0+128),w
  3689  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  3690  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  3691  05CA  00BA               	movwf	??_BMP280_readPressure+5
  3692  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  3693  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  3694  05CD  0926               	comf	(_adc_P+2)^(0+128),w
  3695  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3696  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3697  05D0  00BB               	movwf	??_BMP280_readPressure+6
  3698  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  3699  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  3700  05D3  0927               	comf	(_adc_P+3)^(0+128),w
  3701  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3702  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3703  05D6  00BC               	movwf	??_BMP280_readPressure+7
  3704  05D7  0AB9               	incf	??_BMP280_readPressure+4,f
  3705  05D8  1903               	skipnz
  3706  05D9  0ABA               	incf	??_BMP280_readPressure+5,f
  3707  05DA  1903               	skipnz
  3708  05DB  0ABB               	incf	??_BMP280_readPressure+6,f
  3709  05DC  1903               	skipnz
  3710  05DD  0ABC               	incf	??_BMP280_readPressure+7,f
  3711  05DE  0820               	movf	?___aldiv,w
  3712  05DF  02B9               	subwf	??_BMP280_readPressure+4,f
  3713  05E0  0821               	movf	?___aldiv+1,w
  3714  05E1  1C03               	skipc
  3715  05E2  0F21               	incfsz	?___aldiv+1,w
  3716  05E3  2DE5               	goto	u1221
  3717  05E4  2DE6               	goto	u1222
  3718  05E5                     u1221:
  3719  05E5  02BA               	subwf	??_BMP280_readPressure+5,f
  3720  05E6                     u1222:
  3721  05E6  0822               	movf	?___aldiv+2,w
  3722  05E7  1C03               	skipc
  3723  05E8  0F22               	incfsz	?___aldiv+2,w
  3724  05E9  2DEB               	goto	u1223
  3725  05EA  2DEC               	goto	u1224
  3726  05EB                     u1223:
  3727  05EB  02BB               	subwf	??_BMP280_readPressure+6,f
  3728  05EC                     u1224:
  3729  05EC  0823               	movf	?___aldiv+3,w
  3730  05ED  1C03               	skipc
  3731  05EE  0F23               	incfsz	?___aldiv+3,w
  3732  05EF  2DF1               	goto	u1225
  3733  05F0  2DF2               	goto	u1226
  3734  05F1                     u1225:
  3735  05F1  02BC               	subwf	??_BMP280_readPressure+7,f
  3736  05F2                     u1226:
  3737  05F2  0839               	movf	??_BMP280_readPressure+4,w
  3738  05F3  07B5               	addwf	??_BMP280_readPressure,f
  3739  05F4  083A               	movf	??_BMP280_readPressure+5,w
  3740  05F5  1803               	skipnc
  3741  05F6  0F3A               	incfsz	??_BMP280_readPressure+5,w
  3742  05F7  2DF9               	goto	u1230
  3743  05F8  2DFA               	goto	u1231
  3744  05F9                     u1230:
  3745  05F9  07B6               	addwf	??_BMP280_readPressure+1,f
  3746  05FA                     u1231:
  3747  05FA  083B               	movf	??_BMP280_readPressure+6,w
  3748  05FB  1803               	skipnc
  3749  05FC  0F3B               	incfsz	??_BMP280_readPressure+6,w
  3750  05FD  2DFF               	goto	u1232
  3751  05FE  2E00               	goto	u1233
  3752  05FF                     u1232:
  3753  05FF  07B7               	addwf	??_BMP280_readPressure+2,f
  3754  0600                     u1233:
  3755  0600  083C               	movf	??_BMP280_readPressure+7,w
  3756  0601  1803               	skipnc
  3757  0602  0A3C               	incf	??_BMP280_readPressure+7,w
  3758  0603  07B8               	addwf	??_BMP280_readPressure+3,f
  3759  0604  0838               	movf	??_BMP280_readPressure+3,w
  3760  0605  00AB               	movwf	___lmul@multiplier+3
  3761  0606  0837               	movf	??_BMP280_readPressure+2,w
  3762  0607  00AA               	movwf	___lmul@multiplier+2
  3763  0608  0836               	movf	??_BMP280_readPressure+1,w
  3764  0609  00A9               	movwf	___lmul@multiplier+1
  3765  060A  0835               	movf	??_BMP280_readPressure,w
  3766  060B  00A8               	movwf	___lmul@multiplier
  3767  060C  3000               	movlw	0
  3768  060D  00AF               	movwf	___lmul@multiplicand+3
  3769  060E  3000               	movlw	0
  3770  060F  00AE               	movwf	___lmul@multiplicand+2
  3771  0610  300C               	movlw	12
  3772  0611  00AD               	movwf	___lmul@multiplicand+1
  3773  0612  3035               	movlw	53
  3774  0613  00AC               	movwf	___lmul@multiplicand
  3775  0614  120A  158A  22A5  120A  118A  	fcall	___lmul
  3776  0619  1283               	bcf	3,5	;RP0=0, select bank0
  3777  061A  1303               	bcf	3,6	;RP1=0, select bank0
  3778  061B  082B               	movf	?___lmul+3,w
  3779  061C  00DD               	movwf	BMP280_readPressure@p+3
  3780  061D  082A               	movf	?___lmul+2,w
  3781  061E  00DC               	movwf	BMP280_readPressure@p+2
  3782  061F  0829               	movf	?___lmul+1,w
  3783  0620  00DB               	movwf	BMP280_readPressure@p+1
  3784  0621  0828               	movf	?___lmul,w
  3785  0622  00DA               	movwf	BMP280_readPressure@p
  3786  0623                     l1415:
  3787                           
  3788                           ;BMP280.c: 288:   if (p < 0x80000000)
  3789  0623  3080               	movlw	128
  3790  0624  025D               	subwf	BMP280_readPressure@p+3,w
  3791  0625  1D03               	skipz
  3792  0626  2E33               	goto	u1243
  3793  0627  3000               	movlw	0
  3794  0628  025C               	subwf	BMP280_readPressure@p+2,w
  3795  0629  1D03               	skipz
  3796  062A  2E33               	goto	u1243
  3797  062B  3000               	movlw	0
  3798  062C  025B               	subwf	BMP280_readPressure@p+1,w
  3799  062D  1D03               	skipz
  3800  062E  2E33               	goto	u1243
  3801  062F  3000               	movlw	0
  3802  0630  025A               	subwf	BMP280_readPressure@p,w
  3803  0631  1D03               	skipz
  3804  0632  2E33               	goto	u1243
  3805  0633                     u1243:
  3806  0633  1803               	btfsc	3,0
  3807  0634  2E36               	goto	u1241
  3808  0635  2E37               	goto	u1240
  3809  0636                     u1241:
  3810  0636  2E5A               	goto	l1419
  3811  0637                     u1240:
  3812  0637                     l1417:
  3813                           
  3814                           ;BMP280.c: 289:     p = (p * 2) / ((uint32_t)var1);
  3815  0637  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0638  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0639  0861               	movf	BMP280_readPressure@var1+3,w
  3818  063A  00A3               	movwf	___lldiv@divisor+3
  3819  063B  0860               	movf	BMP280_readPressure@var1+2,w
  3820  063C  00A2               	movwf	___lldiv@divisor+2
  3821  063D  085F               	movf	BMP280_readPressure@var1+1,w
  3822  063E  00A1               	movwf	___lldiv@divisor+1
  3823  063F  085E               	movf	BMP280_readPressure@var1,w
  3824  0640  00A0               	movwf	___lldiv@divisor
  3825  0641  1003               	clrc
  3826  0642  0D5A               	rlf	BMP280_readPressure@p,w
  3827  0643  00A4               	movwf	___lldiv@dividend
  3828  0644  0D5B               	rlf	BMP280_readPressure@p+1,w
  3829  0645  00A5               	movwf	___lldiv@dividend+1
  3830  0646  0D5C               	rlf	BMP280_readPressure@p+2,w
  3831  0647  00A6               	movwf	___lldiv@dividend+2
  3832  0648  0D5D               	rlf	BMP280_readPressure@p+3,w
  3833  0649  00A7               	movwf	___lldiv@dividend+3
  3834  064A  120A  158A  2343  120A  118A  	fcall	___lldiv
  3835  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3837  0651  0823               	movf	?___lldiv+3,w
  3838  0652  00DD               	movwf	BMP280_readPressure@p+3
  3839  0653  0822               	movf	?___lldiv+2,w
  3840  0654  00DC               	movwf	BMP280_readPressure@p+2
  3841  0655  0821               	movf	?___lldiv+1,w
  3842  0656  00DB               	movwf	BMP280_readPressure@p+1
  3843  0657  0820               	movf	?___lldiv,w
  3844  0658  00DA               	movwf	BMP280_readPressure@p
  3845  0659  2E7C               	goto	l202
  3846  065A                     l1419:
  3847                           
  3848                           ;BMP280.c: 292:     p = (p / (uint32_t)var1) * 2;
  3849  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3850  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3851  065C  0861               	movf	BMP280_readPressure@var1+3,w
  3852  065D  00A3               	movwf	___lldiv@divisor+3
  3853  065E  0860               	movf	BMP280_readPressure@var1+2,w
  3854  065F  00A2               	movwf	___lldiv@divisor+2
  3855  0660  085F               	movf	BMP280_readPressure@var1+1,w
  3856  0661  00A1               	movwf	___lldiv@divisor+1
  3857  0662  085E               	movf	BMP280_readPressure@var1,w
  3858  0663  00A0               	movwf	___lldiv@divisor
  3859  0664  085D               	movf	BMP280_readPressure@p+3,w
  3860  0665  00A7               	movwf	___lldiv@dividend+3
  3861  0666  085C               	movf	BMP280_readPressure@p+2,w
  3862  0667  00A6               	movwf	___lldiv@dividend+2
  3863  0668  085B               	movf	BMP280_readPressure@p+1,w
  3864  0669  00A5               	movwf	___lldiv@dividend+1
  3865  066A  085A               	movf	BMP280_readPressure@p,w
  3866  066B  00A4               	movwf	___lldiv@dividend
  3867  066C  120A  158A  2343  120A  118A  	fcall	___lldiv
  3868  0671  1003               	clrc
  3869  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3871  0674  0D20               	rlf	?___lldiv,w
  3872  0675  00DA               	movwf	BMP280_readPressure@p
  3873  0676  0D21               	rlf	?___lldiv+1,w
  3874  0677  00DB               	movwf	BMP280_readPressure@p+1
  3875  0678  0D22               	rlf	?___lldiv+2,w
  3876  0679  00DC               	movwf	BMP280_readPressure@p+2
  3877  067A  0D23               	rlf	?___lldiv+3,w
  3878  067B  00DD               	movwf	BMP280_readPressure@p+3
  3879  067C                     l202:
  3880                           
  3881                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3882  067C  085A               	movf	BMP280_readPressure@p,w
  3883  067D  00B5               	movwf	??_BMP280_readPressure
  3884  067E  085B               	movf	BMP280_readPressure@p+1,w
  3885  067F  00B6               	movwf	??_BMP280_readPressure+1
  3886  0680  085C               	movf	BMP280_readPressure@p+2,w
  3887  0681  00B7               	movwf	??_BMP280_readPressure+2
  3888  0682  085D               	movf	BMP280_readPressure@p+3,w
  3889  0683  00B8               	movwf	??_BMP280_readPressure+3
  3890  0684  3003               	movlw	3
  3891  0685                     u1255:
  3892  0685  1003               	clrc
  3893  0686  0CB8               	rrf	??_BMP280_readPressure+3,f
  3894  0687  0CB7               	rrf	??_BMP280_readPressure+2,f
  3895  0688  0CB6               	rrf	??_BMP280_readPressure+1,f
  3896  0689  0CB5               	rrf	??_BMP280_readPressure,f
  3897  068A                     u1250:
  3898  068A  3EFF               	addlw	-1
  3899  068B  1D03               	skipz
  3900  068C  2E85               	goto	u1255
  3901  068D  0838               	movf	??_BMP280_readPressure+3,w
  3902  068E  00AF               	movwf	___lmul@multiplicand+3
  3903  068F  0837               	movf	??_BMP280_readPressure+2,w
  3904  0690  00AE               	movwf	___lmul@multiplicand+2
  3905  0691  0836               	movf	??_BMP280_readPressure+1,w
  3906  0692  00AD               	movwf	___lmul@multiplicand+1
  3907  0693  0835               	movf	??_BMP280_readPressure,w
  3908  0694  00AC               	movwf	___lmul@multiplicand
  3909  0695  085A               	movf	BMP280_readPressure@p,w
  3910  0696  00B9               	movwf	??_BMP280_readPressure+4
  3911  0697  085B               	movf	BMP280_readPressure@p+1,w
  3912  0698  00BA               	movwf	??_BMP280_readPressure+5
  3913  0699  085C               	movf	BMP280_readPressure@p+2,w
  3914  069A  00BB               	movwf	??_BMP280_readPressure+6
  3915  069B  085D               	movf	BMP280_readPressure@p+3,w
  3916  069C  00BC               	movwf	??_BMP280_readPressure+7
  3917  069D  3003               	movlw	3
  3918  069E                     u1265:
  3919  069E  1003               	clrc
  3920  069F  0CBC               	rrf	??_BMP280_readPressure+7,f
  3921  06A0  0CBB               	rrf	??_BMP280_readPressure+6,f
  3922  06A1  0CBA               	rrf	??_BMP280_readPressure+5,f
  3923  06A2  0CB9               	rrf	??_BMP280_readPressure+4,f
  3924  06A3                     u1260:
  3925  06A3  3EFF               	addlw	-1
  3926  06A4  1D03               	skipz
  3927  06A5  2E9E               	goto	u1265
  3928  06A6  083C               	movf	??_BMP280_readPressure+7,w
  3929  06A7  00AB               	movwf	___lmul@multiplier+3
  3930  06A8  083B               	movf	??_BMP280_readPressure+6,w
  3931  06A9  00AA               	movwf	___lmul@multiplier+2
  3932  06AA  083A               	movf	??_BMP280_readPressure+5,w
  3933  06AB  00A9               	movwf	___lmul@multiplier+1
  3934  06AC  0839               	movf	??_BMP280_readPressure+4,w
  3935  06AD  00A8               	movwf	___lmul@multiplier
  3936  06AE  120A  158A  22A5  120A  118A  	fcall	___lmul
  3937  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3938  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3939  06B5  0828               	movf	?___lmul,w
  3940  06B6  00BD               	movwf	??_BMP280_readPressure+8
  3941  06B7  0829               	movf	?___lmul+1,w
  3942  06B8  00BE               	movwf	??_BMP280_readPressure+9
  3943  06B9  082A               	movf	?___lmul+2,w
  3944  06BA  00BF               	movwf	??_BMP280_readPressure+10
  3945  06BB  082B               	movf	?___lmul+3,w
  3946  06BC  00C0               	movwf	??_BMP280_readPressure+11
  3947  06BD  300D               	movlw	13
  3948  06BE                     u1275:
  3949  06BE  1003               	clrc
  3950  06BF  0CC0               	rrf	??_BMP280_readPressure+11,f
  3951  06C0  0CBF               	rrf	??_BMP280_readPressure+10,f
  3952  06C1  0CBE               	rrf	??_BMP280_readPressure+9,f
  3953  06C2  0CBD               	rrf	??_BMP280_readPressure+8,f
  3954  06C3                     u1270:
  3955  06C3  3EFF               	addlw	-1
  3956  06C4  1D03               	skipz
  3957  06C5  2EBE               	goto	u1275
  3958  06C6  0840               	movf	??_BMP280_readPressure+11,w
  3959  06C7  00D0               	movwf	_BMP280_readPressure$1207+3
  3960  06C8  083F               	movf	??_BMP280_readPressure+10,w
  3961  06C9  00CF               	movwf	_BMP280_readPressure$1207+2
  3962  06CA  083E               	movf	??_BMP280_readPressure+9,w
  3963  06CB  00CE               	movwf	_BMP280_readPressure$1207+1
  3964  06CC  083D               	movf	??_BMP280_readPressure+8,w
  3965  06CD  00CD               	movwf	_BMP280_readPressure$1207
  3966                           
  3967                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3968  06CE  3000               	movlw	0
  3969  06CF  00A3               	movwf	___aldiv@divisor+3
  3970  06D0  3000               	movlw	0
  3971  06D1  00A2               	movwf	___aldiv@divisor+2
  3972  06D2  3010               	movlw	16
  3973  06D3  00A1               	movwf	___aldiv@divisor+1
  3974  06D4  3000               	movlw	0
  3975  06D5  00A0               	movwf	___aldiv@divisor
  3976  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3977  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3978  06D8  0842               	movf	(_BMP280_calib^(0+128)+22),w
  3979  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3980  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  3981  06DB  00A8               	movwf	___lmul@multiplier
  3982  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3983  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  3984  06DE  0843               	movf	((_BMP280_calib+1)^(0+128)+22),w
  3985  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3986  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3987  06E1  00A9               	movwf	___lmul@multiplier+1
  3988  06E2  3000               	movlw	0
  3989  06E3  1BA9               	btfsc	___lmul@multiplier+1,7
  3990  06E4  30FF               	movlw	255
  3991  06E5  00AA               	movwf	___lmul@multiplier+2
  3992  06E6  00AB               	movwf	___lmul@multiplier+3
  3993  06E7  0850               	movf	_BMP280_readPressure$1207+3,w
  3994  06E8  00AF               	movwf	___lmul@multiplicand+3
  3995  06E9  084F               	movf	_BMP280_readPressure$1207+2,w
  3996  06EA  00AE               	movwf	___lmul@multiplicand+2
  3997  06EB  084E               	movf	_BMP280_readPressure$1207+1,w
  3998  06EC  00AD               	movwf	___lmul@multiplicand+1
  3999  06ED  084D               	movf	_BMP280_readPressure$1207,w
  4000  06EE  00AC               	movwf	___lmul@multiplicand
  4001  06EF  120A  158A  22A5  120A  118A  	fcall	___lmul
  4002  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  4003  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  4004  06F6  082B               	movf	?___lmul+3,w
  4005  06F7  00A7               	movwf	___aldiv@dividend+3
  4006  06F8  082A               	movf	?___lmul+2,w
  4007  06F9  00A6               	movwf	___aldiv@dividend+2
  4008  06FA  0829               	movf	?___lmul+1,w
  4009  06FB  00A5               	movwf	___aldiv@dividend+1
  4010  06FC  0828               	movf	?___lmul,w
  4011  06FD  00A4               	movwf	___aldiv@dividend
  4012  06FE  120A  158A  2435  120A  118A  	fcall	___aldiv
  4013  0703  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0704  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0705  0823               	movf	?___aldiv+3,w
  4016  0706  00E1               	movwf	BMP280_readPressure@var1+3
  4017  0707  0822               	movf	?___aldiv+2,w
  4018  0708  00E0               	movwf	BMP280_readPressure@var1+2
  4019  0709  0821               	movf	?___aldiv+1,w
  4020  070A  00DF               	movwf	BMP280_readPressure@var1+1
  4021  070B  0820               	movf	?___aldiv,w
  4022  070C  00DE               	movwf	BMP280_readPressure@var1
  4023                           
  4024                           ;BMP280.c: 295:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  4025  070D  3000               	movlw	0
  4026  070E  00A3               	movwf	___aldiv@divisor+3
  4027  070F  3000               	movlw	0
  4028  0710  00A2               	movwf	___aldiv@divisor+2
  4029  0711  3020               	movlw	32
  4030  0712  00A1               	movwf	___aldiv@divisor+1
  4031  0713  3000               	movlw	0
  4032  0714  00A0               	movwf	___aldiv@divisor
  4033  0715  085A               	movf	BMP280_readPressure@p,w
  4034  0716  00B5               	movwf	??_BMP280_readPressure
  4035  0717  085B               	movf	BMP280_readPressure@p+1,w
  4036  0718  00B6               	movwf	??_BMP280_readPressure+1
  4037  0719  085C               	movf	BMP280_readPressure@p+2,w
  4038  071A  00B7               	movwf	??_BMP280_readPressure+2
  4039  071B  085D               	movf	BMP280_readPressure@p+3,w
  4040  071C  00B8               	movwf	??_BMP280_readPressure+3
  4041  071D  3002               	movlw	2
  4042  071E                     u1285:
  4043  071E  1003               	clrc
  4044  071F  0CB8               	rrf	??_BMP280_readPressure+3,f
  4045  0720  0CB7               	rrf	??_BMP280_readPressure+2,f
  4046  0721  0CB6               	rrf	??_BMP280_readPressure+1,f
  4047  0722  0CB5               	rrf	??_BMP280_readPressure,f
  4048  0723                     u1280:
  4049  0723  3EFF               	addlw	-1
  4050  0724  1D03               	skipz
  4051  0725  2F1E               	goto	u1285
  4052  0726  0838               	movf	??_BMP280_readPressure+3,w
  4053  0727  00AB               	movwf	___lmul@multiplier+3
  4054  0728  0837               	movf	??_BMP280_readPressure+2,w
  4055  0729  00AA               	movwf	___lmul@multiplier+2
  4056  072A  0836               	movf	??_BMP280_readPressure+1,w
  4057  072B  00A9               	movwf	___lmul@multiplier+1
  4058  072C  0835               	movf	??_BMP280_readPressure,w
  4059  072D  00A8               	movwf	___lmul@multiplier
  4060  072E  1683               	bsf	3,5	;RP0=1, select bank1
  4061  072F  1303               	bcf	3,6	;RP1=0, select bank1
  4062  0730  0840               	movf	(_BMP280_calib^(0+128)+20),w
  4063  0731  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0732  1303               	bcf	3,6	;RP1=0, select bank0
  4065  0733  00AC               	movwf	___lmul@multiplicand
  4066  0734  1683               	bsf	3,5	;RP0=1, select bank1
  4067  0735  1303               	bcf	3,6	;RP1=0, select bank1
  4068  0736  0841               	movf	((_BMP280_calib+1)^(0+128)+20),w
  4069  0737  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0738  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0739  00AD               	movwf	___lmul@multiplicand+1
  4072  073A  3000               	movlw	0
  4073  073B  1BAD               	btfsc	___lmul@multiplicand+1,7
  4074  073C  30FF               	movlw	255
  4075  073D  00AE               	movwf	___lmul@multiplicand+2
  4076  073E  00AF               	movwf	___lmul@multiplicand+3
  4077  073F  120A  158A  22A5  120A  118A  	fcall	___lmul
  4078  0744  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0745  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0746  082B               	movf	?___lmul+3,w
  4081  0747  00A7               	movwf	___aldiv@dividend+3
  4082  0748  082A               	movf	?___lmul+2,w
  4083  0749  00A6               	movwf	___aldiv@dividend+2
  4084  074A  0829               	movf	?___lmul+1,w
  4085  074B  00A5               	movwf	___aldiv@dividend+1
  4086  074C  0828               	movf	?___lmul,w
  4087  074D  00A4               	movwf	___aldiv@dividend
  4088  074E  120A  158A  2435  120A  118A  	fcall	___aldiv
  4089  0753  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0754  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0755  0823               	movf	?___aldiv+3,w
  4092  0756  00D9               	movwf	BMP280_readPressure@var2+3
  4093  0757  0822               	movf	?___aldiv+2,w
  4094  0758  00D8               	movwf	BMP280_readPressure@var2+2
  4095  0759  0821               	movf	?___aldiv+1,w
  4096  075A  00D7               	movwf	BMP280_readPressure@var2+1
  4097  075B  0820               	movf	?___aldiv,w
  4098  075C  00D6               	movwf	BMP280_readPressure@var2
  4099                           
  4100                           ;BMP280.c: 297:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  4101  075D  3000               	movlw	0
  4102  075E  00A3               	movwf	___aldiv@divisor+3
  4103  075F  3000               	movlw	0
  4104  0760  00A2               	movwf	___aldiv@divisor+2
  4105  0761  3000               	movlw	0
  4106  0762  00A1               	movwf	___aldiv@divisor+1
  4107  0763  3010               	movlw	16
  4108  0764  00A0               	movwf	___aldiv@divisor
  4109  0765  0856               	movf	BMP280_readPressure@var2,w
  4110  0766  00B5               	movwf	??_BMP280_readPressure
  4111  0767  0857               	movf	BMP280_readPressure@var2+1,w
  4112  0768  00B6               	movwf	??_BMP280_readPressure+1
  4113  0769  0858               	movf	BMP280_readPressure@var2+2,w
  4114  076A  00B7               	movwf	??_BMP280_readPressure+2
  4115  076B  0859               	movf	BMP280_readPressure@var2+3,w
  4116  076C  00B8               	movwf	??_BMP280_readPressure+3
  4117  076D  085E               	movf	BMP280_readPressure@var1,w
  4118  076E  00B9               	movwf	??_BMP280_readPressure+4
  4119  076F  085F               	movf	BMP280_readPressure@var1+1,w
  4120  0770  00BA               	movwf	??_BMP280_readPressure+5
  4121  0771  0860               	movf	BMP280_readPressure@var1+2,w
  4122  0772  00BB               	movwf	??_BMP280_readPressure+6
  4123  0773  0861               	movf	BMP280_readPressure@var1+3,w
  4124  0774  00BC               	movwf	??_BMP280_readPressure+7
  4125  0775  1683               	bsf	3,5	;RP0=1, select bank1
  4126  0776  1303               	bcf	3,6	;RP1=0, select bank1
  4127  0777  083E               	movf	(_BMP280_calib^(0+128)+18),w
  4128  0778  1283               	bcf	3,5	;RP0=0, select bank0
  4129  0779  1303               	bcf	3,6	;RP1=0, select bank0
  4130  077A  00BD               	movwf	??_BMP280_readPressure+8
  4131  077B  1683               	bsf	3,5	;RP0=1, select bank1
  4132  077C  1303               	bcf	3,6	;RP1=0, select bank1
  4133  077D  083F               	movf	((_BMP280_calib+1)^(0+128)+18),w
  4134  077E  1283               	bcf	3,5	;RP0=0, select bank0
  4135  077F  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0780  00BE               	movwf	??_BMP280_readPressure+9
  4137  0781  3000               	movlw	0
  4138  0782  1BBE               	btfsc	??_BMP280_readPressure+9,7
  4139  0783  30FF               	movlw	255
  4140  0784  00BF               	movwf	??_BMP280_readPressure+10
  4141  0785  00C0               	movwf	??_BMP280_readPressure+11
  4142  0786  083D               	movf	??_BMP280_readPressure+8,w
  4143  0787  07B9               	addwf	??_BMP280_readPressure+4,f
  4144  0788  083E               	movf	??_BMP280_readPressure+9,w
  4145  0789  1803               	skipnc
  4146  078A  0F3E               	incfsz	??_BMP280_readPressure+9,w
  4147  078B  2F8D               	goto	u1290
  4148  078C  2F8E               	goto	u1291
  4149  078D                     u1290:
  4150  078D  07BA               	addwf	??_BMP280_readPressure+5,f
  4151  078E                     u1291:
  4152  078E  083F               	movf	??_BMP280_readPressure+10,w
  4153  078F  1803               	skipnc
  4154  0790  0F3F               	incfsz	??_BMP280_readPressure+10,w
  4155  0791  2F93               	goto	u1292
  4156  0792  2F94               	goto	u1293
  4157  0793                     u1292:
  4158  0793  07BB               	addwf	??_BMP280_readPressure+6,f
  4159  0794                     u1293:
  4160  0794  0840               	movf	??_BMP280_readPressure+11,w
  4161  0795  1803               	skipnc
  4162  0796  0A40               	incf	??_BMP280_readPressure+11,w
  4163  0797  07BC               	addwf	??_BMP280_readPressure+7,f
  4164  0798  0839               	movf	??_BMP280_readPressure+4,w
  4165  0799  07B5               	addwf	??_BMP280_readPressure,f
  4166  079A  083A               	movf	??_BMP280_readPressure+5,w
  4167  079B  1803               	skipnc
  4168  079C  0F3A               	incfsz	??_BMP280_readPressure+5,w
  4169  079D  2F9F               	goto	u1300
  4170  079E  2FA0               	goto	u1301
  4171  079F                     u1300:
  4172  079F  07B6               	addwf	??_BMP280_readPressure+1,f
  4173  07A0                     u1301:
  4174  07A0  083B               	movf	??_BMP280_readPressure+6,w
  4175  07A1  1803               	skipnc
  4176  07A2  0F3B               	incfsz	??_BMP280_readPressure+6,w
  4177  07A3  2FA5               	goto	u1302
  4178  07A4  2FA6               	goto	u1303
  4179  07A5                     u1302:
  4180  07A5  07B7               	addwf	??_BMP280_readPressure+2,f
  4181  07A6                     u1303:
  4182  07A6  083C               	movf	??_BMP280_readPressure+7,w
  4183  07A7  1803               	skipnc
  4184  07A8  0A3C               	incf	??_BMP280_readPressure+7,w
  4185  07A9  07B8               	addwf	??_BMP280_readPressure+3,f
  4186  07AA  0838               	movf	??_BMP280_readPressure+3,w
  4187  07AB  00A7               	movwf	___aldiv@dividend+3
  4188  07AC  0837               	movf	??_BMP280_readPressure+2,w
  4189  07AD  00A6               	movwf	___aldiv@dividend+2
  4190  07AE  0836               	movf	??_BMP280_readPressure+1,w
  4191  07AF  00A5               	movwf	___aldiv@dividend+1
  4192  07B0  0835               	movf	??_BMP280_readPressure,w
  4193  07B1  00A4               	movwf	___aldiv@dividend
  4194  07B2  120A  158A  2435  120A  118A  	fcall	___aldiv
  4195  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  4196  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  4197  07B9  0820               	movf	?___aldiv,w
  4198  07BA  075A               	addwf	BMP280_readPressure@p,w
  4199  07BB  00C1               	movwf	??_BMP280_readPressure+12
  4200  07BC  3000               	movlw	0
  4201  07BD  1803               	skipnc
  4202  07BE  3001               	movlw	1
  4203  07BF  0721               	addwf	?___aldiv+1,w
  4204  07C0  01C3               	clrf	??_BMP280_readPressure+14
  4205  07C1  1803               	skipnc
  4206  07C2  0AC3               	incf	??_BMP280_readPressure+14,f
  4207  07C3  075B               	addwf	BMP280_readPressure@p+1,w
  4208  07C4  00C2               	movwf	??_BMP280_readPressure+13
  4209  07C5  1803               	skipnc
  4210  07C6  0AC3               	incf	??_BMP280_readPressure+14,f
  4211  07C7  0822               	movf	?___aldiv+2,w
  4212  07C8  0743               	addwf	??_BMP280_readPressure+14,w
  4213  07C9  01C4               	clrf	??_BMP280_readPressure+15
  4214  07CA  1803               	skipnc
  4215  07CB  0AC4               	incf	??_BMP280_readPressure+15,f
  4216  07CC  075C               	addwf	BMP280_readPressure@p+2,w
  4217  07CD  00C3               	movwf	??_BMP280_readPressure+14
  4218  07CE  1803               	skipnc
  4219  07CF  0AC4               	incf	??_BMP280_readPressure+15,f
  4220  07D0  0823               	movf	?___aldiv+3,w
  4221  07D1  0744               	addwf	??_BMP280_readPressure+15,w
  4222  07D2  075D               	addwf	BMP280_readPressure@p+3,w
  4223  07D3  00C4               	movwf	??_BMP280_readPressure+15
  4224  07D4  0844               	movf	??_BMP280_readPressure+15,w
  4225  07D5  00DD               	movwf	BMP280_readPressure@p+3
  4226  07D6  0843               	movf	??_BMP280_readPressure+14,w
  4227  07D7  00DC               	movwf	BMP280_readPressure@p+2
  4228  07D8  0842               	movf	??_BMP280_readPressure+13,w
  4229  07D9  00DB               	movwf	BMP280_readPressure@p+1
  4230  07DA  0841               	movf	??_BMP280_readPressure+12,w
  4231  07DB  00DA               	movwf	BMP280_readPressure@p
  4232  07DC                     l1421:
  4233                           
  4234                           ;BMP280.c: 299:   *pres = p;
  4235  07DC  0851               	movf	BMP280_readPressure@pres,w
  4236  07DD  0084               	movwf	4
  4237  07DE  085A               	movf	BMP280_readPressure@p,w
  4238  07DF  1383               	bcf	3,7	;select IRP bank0
  4239  07E0  0080               	movwf	0
  4240  07E1  0A84               	incf	4,f
  4241  07E2  085B               	movf	BMP280_readPressure@p+1,w
  4242  07E3  0080               	movwf	0
  4243  07E4  0A84               	incf	4,f
  4244  07E5  085C               	movf	BMP280_readPressure@p+2,w
  4245  07E6  0080               	movwf	0
  4246  07E7  0A84               	incf	4,f
  4247  07E8  085D               	movf	BMP280_readPressure@p+3,w
  4248  07E9  0080               	movwf	0
  4249  07EA                     l200:
  4250  07EA  0008               	return
  4251  07EB                     __end_of_BMP280_readPressure:
  4252                           
  4253                           	psect	text10
  4254  0AA5                     __ptext10:	
  4255 ;; *************** function ___lmul *****************
  4256 ;; Defined at:
  4257 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  multiplier      4    8[BANK0 ] unsigned long 
  4260 ;;  multiplicand    4   12[BANK0 ] unsigned long 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  product         4   17[BANK0 ] unsigned long 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  4    8[BANK0 ] unsigned long 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4272 ;;      Params:         0       8       0       0       0
  4273 ;;      Locals:         0       4       0       0       0
  4274 ;;      Temps:          0       1       0       0       0
  4275 ;;      Totals:         0      13       0       0       0
  4276 ;;Total ram usage:       13 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    2
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_BMP280_readTemperature
  4283 ;;		_BMP280_readPressure
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function ___lmul
  4289  0AA5                     ___lmul:
  4290  0AA5                     l1325:	
  4291                           ;incstack = 0
  4292                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4293                           
  4294  0AA5  3000               	movlw	0
  4295  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  4297  0AA8  00B4               	movwf	___lmul@product+3
  4298  0AA9  3000               	movlw	0
  4299  0AAA  00B3               	movwf	___lmul@product+2
  4300  0AAB  3000               	movlw	0
  4301  0AAC  00B2               	movwf	___lmul@product+1
  4302  0AAD  3000               	movlw	0
  4303  0AAE  00B1               	movwf	___lmul@product
  4304  0AAF                     l1327:
  4305  0AAF  1C28               	btfss	___lmul@multiplier,0
  4306  0AB0  2AB2               	goto	u921
  4307  0AB1  2AB3               	goto	u920
  4308  0AB2                     u921:
  4309  0AB2  2ACA               	goto	l1331
  4310  0AB3                     u920:
  4311  0AB3                     l1329:
  4312  0AB3  082C               	movf	___lmul@multiplicand,w
  4313  0AB4  07B1               	addwf	___lmul@product,f
  4314  0AB5  082D               	movf	___lmul@multiplicand+1,w
  4315  0AB6  1103               	clrz
  4316  0AB7  1803               	skipnc
  4317  0AB8  3E01               	addlw	1
  4318  0AB9  1903               	skipnz
  4319  0ABA  2ABC               	goto	u931
  4320  0ABB  07B2               	addwf	___lmul@product+1,f
  4321  0ABC                     u931:
  4322  0ABC  082E               	movf	___lmul@multiplicand+2,w
  4323  0ABD  1103               	clrz
  4324  0ABE  1803               	skipnc
  4325  0ABF  3E01               	addlw	1
  4326  0AC0  1903               	skipnz
  4327  0AC1  2AC3               	goto	u932
  4328  0AC2  07B3               	addwf	___lmul@product+2,f
  4329  0AC3                     u932:
  4330  0AC3  082F               	movf	___lmul@multiplicand+3,w
  4331  0AC4  1103               	clrz
  4332  0AC5  1803               	skipnc
  4333  0AC6  3E01               	addlw	1
  4334  0AC7  1903               	skipnz
  4335  0AC8  2ACA               	goto	u933
  4336  0AC9  07B4               	addwf	___lmul@product+3,f
  4337  0ACA                     u933:
  4338  0ACA                     l1331:
  4339  0ACA  3001               	movlw	1
  4340  0ACB  00B0               	movwf	??___lmul
  4341  0ACC                     u945:
  4342  0ACC  1003               	clrc
  4343  0ACD  0DAC               	rlf	___lmul@multiplicand,f
  4344  0ACE  0DAD               	rlf	___lmul@multiplicand+1,f
  4345  0ACF  0DAE               	rlf	___lmul@multiplicand+2,f
  4346  0AD0  0DAF               	rlf	___lmul@multiplicand+3,f
  4347  0AD1  0BB0               	decfsz	??___lmul,f
  4348  0AD2  2ACC               	goto	u945
  4349  0AD3                     l1333:
  4350  0AD3  3001               	movlw	1
  4351  0AD4                     u955:
  4352  0AD4  1003               	clrc
  4353  0AD5  0CAB               	rrf	___lmul@multiplier+3,f
  4354  0AD6  0CAA               	rrf	___lmul@multiplier+2,f
  4355  0AD7  0CA9               	rrf	___lmul@multiplier+1,f
  4356  0AD8  0CA8               	rrf	___lmul@multiplier,f
  4357  0AD9  3EFF               	addlw	-1
  4358  0ADA  1D03               	skipz
  4359  0ADB  2AD4               	goto	u955
  4360  0ADC  082B               	movf	___lmul@multiplier+3,w
  4361  0ADD  042A               	iorwf	___lmul@multiplier+2,w
  4362  0ADE  0429               	iorwf	___lmul@multiplier+1,w
  4363  0ADF  0428               	iorwf	___lmul@multiplier,w
  4364  0AE0  1D03               	skipz
  4365  0AE1  2AE3               	goto	u961
  4366  0AE2  2AE4               	goto	u960
  4367  0AE3                     u961:
  4368  0AE3  2AAF               	goto	l1327
  4369  0AE4                     u960:
  4370  0AE4                     l1335:
  4371  0AE4  0834               	movf	___lmul@product+3,w
  4372  0AE5  00AB               	movwf	?___lmul+3
  4373  0AE6  0833               	movf	___lmul@product+2,w
  4374  0AE7  00AA               	movwf	?___lmul+2
  4375  0AE8  0832               	movf	___lmul@product+1,w
  4376  0AE9  00A9               	movwf	?___lmul+1
  4377  0AEA  0831               	movf	___lmul@product,w
  4378  0AEB  00A8               	movwf	?___lmul
  4379  0AEC                     l339:
  4380  0AEC  0008               	return
  4381  0AED                     __end_of___lmul:
  4382                           
  4383                           	psect	text11
  4384  0B43                     __ptext11:	
  4385 ;; *************** function ___lldiv *****************
  4386 ;; Defined at:
  4387 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  divisor         4    0[BANK0 ] unsigned long 
  4390 ;;  dividend        4    4[BANK0 ] unsigned long 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  quotient        4    4[COMMON] unsigned long 
  4393 ;;  counter         1    8[COMMON] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  4    0[BANK0 ] unsigned long 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         0       8       0       0       0
  4404 ;;      Locals:         5       0       0       0       0
  4405 ;;      Temps:          1       0       0       0       0
  4406 ;;      Totals:         6       8       0       0       0
  4407 ;;Total ram usage:       14 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    2
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_Send_Temp
  4414 ;;		_I2C_Master_Init
  4415 ;;		_BMP280_readPressure
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function ___lldiv
  4421  0B43                     ___lldiv:
  4422  0B43                     l1223:	
  4423                           ;incstack = 0
  4424                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4425                           
  4426  0B43  3000               	movlw	0
  4427  0B44  00F8               	movwf	___lldiv@quotient+3
  4428  0B45  3000               	movlw	0
  4429  0B46  00F7               	movwf	___lldiv@quotient+2
  4430  0B47  3000               	movlw	0
  4431  0B48  00F6               	movwf	___lldiv@quotient+1
  4432  0B49  3000               	movlw	0
  4433  0B4A  00F5               	movwf	___lldiv@quotient
  4434  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  4435  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  4436  0B4D  0823               	movf	___lldiv@divisor+3,w
  4437  0B4E  0422               	iorwf	___lldiv@divisor+2,w
  4438  0B4F  0421               	iorwf	___lldiv@divisor+1,w
  4439  0B50  0420               	iorwf	___lldiv@divisor,w
  4440  0B51  1903               	skipnz
  4441  0B52  2B54               	goto	u731
  4442  0B53  2B55               	goto	u730
  4443  0B54                     u731:
  4444  0B54  2BA2               	goto	l1243
  4445  0B55                     u730:
  4446  0B55                     l1225:
  4447  0B55  01F9               	clrf	___lldiv@counter
  4448  0B56  0AF9               	incf	___lldiv@counter,f
  4449  0B57  2B65               	goto	l1229
  4450  0B58                     l1227:
  4451  0B58  3001               	movlw	1
  4452  0B59  00F4               	movwf	??___lldiv
  4453  0B5A                     u745:
  4454  0B5A  1003               	clrc
  4455  0B5B  0DA0               	rlf	___lldiv@divisor,f
  4456  0B5C  0DA1               	rlf	___lldiv@divisor+1,f
  4457  0B5D  0DA2               	rlf	___lldiv@divisor+2,f
  4458  0B5E  0DA3               	rlf	___lldiv@divisor+3,f
  4459  0B5F  0BF4               	decfsz	??___lldiv,f
  4460  0B60  2B5A               	goto	u745
  4461  0B61  3001               	movlw	1
  4462  0B62  00F4               	movwf	??___lldiv
  4463  0B63  0874               	movf	??___lldiv,w
  4464  0B64  07F9               	addwf	___lldiv@counter,f
  4465  0B65                     l1229:
  4466  0B65  1FA3               	btfss	___lldiv@divisor+3,7
  4467  0B66  2B68               	goto	u751
  4468  0B67  2B69               	goto	u750
  4469  0B68                     u751:
  4470  0B68  2B58               	goto	l1227
  4471  0B69                     u750:
  4472  0B69                     l1231:
  4473  0B69  3001               	movlw	1
  4474  0B6A  00F4               	movwf	??___lldiv
  4475  0B6B                     u765:
  4476  0B6B  1003               	clrc
  4477  0B6C  0DF5               	rlf	___lldiv@quotient,f
  4478  0B6D  0DF6               	rlf	___lldiv@quotient+1,f
  4479  0B6E  0DF7               	rlf	___lldiv@quotient+2,f
  4480  0B6F  0DF8               	rlf	___lldiv@quotient+3,f
  4481  0B70  0BF4               	decfsz	??___lldiv,f
  4482  0B71  2B6B               	goto	u765
  4483  0B72                     l1233:
  4484  0B72  0823               	movf	___lldiv@divisor+3,w
  4485  0B73  0227               	subwf	___lldiv@dividend+3,w
  4486  0B74  1D03               	skipz
  4487  0B75  2B80               	goto	u775
  4488  0B76  0822               	movf	___lldiv@divisor+2,w
  4489  0B77  0226               	subwf	___lldiv@dividend+2,w
  4490  0B78  1D03               	skipz
  4491  0B79  2B80               	goto	u775
  4492  0B7A  0821               	movf	___lldiv@divisor+1,w
  4493  0B7B  0225               	subwf	___lldiv@dividend+1,w
  4494  0B7C  1D03               	skipz
  4495  0B7D  2B80               	goto	u775
  4496  0B7E  0820               	movf	___lldiv@divisor,w
  4497  0B7F  0224               	subwf	___lldiv@dividend,w
  4498  0B80                     u775:
  4499  0B80  1C03               	skipc
  4500  0B81  2B83               	goto	u771
  4501  0B82  2B84               	goto	u770
  4502  0B83                     u771:
  4503  0B83  2B93               	goto	l1239
  4504  0B84                     u770:
  4505  0B84                     l1235:
  4506  0B84  0820               	movf	___lldiv@divisor,w
  4507  0B85  02A4               	subwf	___lldiv@dividend,f
  4508  0B86  0821               	movf	___lldiv@divisor+1,w
  4509  0B87  1C03               	skipc
  4510  0B88  0F21               	incfsz	___lldiv@divisor+1,w
  4511  0B89  02A5               	subwf	___lldiv@dividend+1,f
  4512  0B8A  0822               	movf	___lldiv@divisor+2,w
  4513  0B8B  1C03               	skipc
  4514  0B8C  0F22               	incfsz	___lldiv@divisor+2,w
  4515  0B8D  02A6               	subwf	___lldiv@dividend+2,f
  4516  0B8E  0823               	movf	___lldiv@divisor+3,w
  4517  0B8F  1C03               	skipc
  4518  0B90  0F23               	incfsz	___lldiv@divisor+3,w
  4519  0B91  02A7               	subwf	___lldiv@dividend+3,f
  4520  0B92                     l1237:
  4521  0B92  1475               	bsf	___lldiv@quotient,0
  4522  0B93                     l1239:
  4523  0B93  3001               	movlw	1
  4524  0B94                     u785:
  4525  0B94  1003               	clrc
  4526  0B95  0CA3               	rrf	___lldiv@divisor+3,f
  4527  0B96  0CA2               	rrf	___lldiv@divisor+2,f
  4528  0B97  0CA1               	rrf	___lldiv@divisor+1,f
  4529  0B98  0CA0               	rrf	___lldiv@divisor,f
  4530  0B99  3EFF               	addlw	-1
  4531  0B9A  1D03               	skipz
  4532  0B9B  2B94               	goto	u785
  4533  0B9C                     l1241:
  4534  0B9C  3001               	movlw	1
  4535  0B9D  02F9               	subwf	___lldiv@counter,f
  4536  0B9E  1D03               	btfss	3,2
  4537  0B9F  2BA1               	goto	u791
  4538  0BA0  2BA2               	goto	u790
  4539  0BA1                     u791:
  4540  0BA1  2B69               	goto	l1231
  4541  0BA2                     u790:
  4542  0BA2                     l1243:
  4543  0BA2  0878               	movf	___lldiv@quotient+3,w
  4544  0BA3  00A3               	movwf	?___lldiv+3
  4545  0BA4  0877               	movf	___lldiv@quotient+2,w
  4546  0BA5  00A2               	movwf	?___lldiv+2
  4547  0BA6  0876               	movf	___lldiv@quotient+1,w
  4548  0BA7  00A1               	movwf	?___lldiv+1
  4549  0BA8  0875               	movf	___lldiv@quotient,w
  4550  0BA9  00A0               	movwf	?___lldiv
  4551  0BAA                     l361:
  4552  0BAA  0008               	return
  4553  0BAB                     __end_of___lldiv:
  4554                           
  4555                           	psect	text12
  4556  0C35                     __ptext12:	
  4557 ;; *************** function ___aldiv *****************
  4558 ;; Defined at:
  4559 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  divisor         4    0[BANK0 ] long 
  4562 ;;  dividend        4    4[BANK0 ] long 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  quotient        4    6[COMMON] long 
  4565 ;;  sign            1    5[COMMON] unsigned char 
  4566 ;;  counter         1    4[COMMON] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  4    0[BANK0 ] long 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4576 ;;      Params:         0       8       0       0       0
  4577 ;;      Locals:         6       0       0       0       0
  4578 ;;      Temps:          1       0       0       0       0
  4579 ;;      Totals:         7       8       0       0       0
  4580 ;;Total ram usage:       15 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    2
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_BMP280_readTemperature
  4587 ;;		_BMP280_readPressure
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           
  4592                           ;psect for function ___aldiv
  4593  0C35                     ___aldiv:
  4594  0C35                     l1339:	
  4595                           ;incstack = 0
  4596                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4597                           
  4598  0C35  01F6               	clrf	___aldiv@sign
  4599  0C36                     l1341:
  4600  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0C38  1FA3               	btfss	___aldiv@divisor+3,7
  4603  0C39  2C3B               	goto	u971
  4604  0C3A  2C3C               	goto	u970
  4605  0C3B                     u971:
  4606  0C3B  2C49               	goto	l390
  4607  0C3C                     u970:
  4608  0C3C                     l1343:
  4609  0C3C  09A0               	comf	___aldiv@divisor,f
  4610  0C3D  09A1               	comf	___aldiv@divisor+1,f
  4611  0C3E  09A2               	comf	___aldiv@divisor+2,f
  4612  0C3F  09A3               	comf	___aldiv@divisor+3,f
  4613  0C40  0AA0               	incf	___aldiv@divisor,f
  4614  0C41  1903               	skipnz
  4615  0C42  0AA1               	incf	___aldiv@divisor+1,f
  4616  0C43  1903               	skipnz
  4617  0C44  0AA2               	incf	___aldiv@divisor+2,f
  4618  0C45  1903               	skipnz
  4619  0C46  0AA3               	incf	___aldiv@divisor+3,f
  4620  0C47  01F6               	clrf	___aldiv@sign
  4621  0C48  0AF6               	incf	___aldiv@sign,f
  4622  0C49                     l390:
  4623  0C49  1FA7               	btfss	___aldiv@dividend+3,7
  4624  0C4A  2C4C               	goto	u981
  4625  0C4B  2C4D               	goto	u980
  4626  0C4C                     u981:
  4627  0C4C  2C5C               	goto	l1349
  4628  0C4D                     u980:
  4629  0C4D                     l1345:
  4630  0C4D  09A4               	comf	___aldiv@dividend,f
  4631  0C4E  09A5               	comf	___aldiv@dividend+1,f
  4632  0C4F  09A6               	comf	___aldiv@dividend+2,f
  4633  0C50  09A7               	comf	___aldiv@dividend+3,f
  4634  0C51  0AA4               	incf	___aldiv@dividend,f
  4635  0C52  1903               	skipnz
  4636  0C53  0AA5               	incf	___aldiv@dividend+1,f
  4637  0C54  1903               	skipnz
  4638  0C55  0AA6               	incf	___aldiv@dividend+2,f
  4639  0C56  1903               	skipnz
  4640  0C57  0AA7               	incf	___aldiv@dividend+3,f
  4641  0C58                     l1347:
  4642  0C58  3001               	movlw	1
  4643  0C59  00F4               	movwf	??___aldiv
  4644  0C5A  0874               	movf	??___aldiv,w
  4645  0C5B  06F6               	xorwf	___aldiv@sign,f
  4646  0C5C                     l1349:
  4647  0C5C  3000               	movlw	0
  4648  0C5D  00FA               	movwf	___aldiv@quotient+3
  4649  0C5E  3000               	movlw	0
  4650  0C5F  00F9               	movwf	___aldiv@quotient+2
  4651  0C60  3000               	movlw	0
  4652  0C61  00F8               	movwf	___aldiv@quotient+1
  4653  0C62  3000               	movlw	0
  4654  0C63  00F7               	movwf	___aldiv@quotient
  4655  0C64                     l1351:
  4656  0C64  0823               	movf	___aldiv@divisor+3,w
  4657  0C65  0422               	iorwf	___aldiv@divisor+2,w
  4658  0C66  0421               	iorwf	___aldiv@divisor+1,w
  4659  0C67  0420               	iorwf	___aldiv@divisor,w
  4660  0C68  1903               	skipnz
  4661  0C69  2C6B               	goto	u991
  4662  0C6A  2C6C               	goto	u990
  4663  0C6B                     u991:
  4664  0C6B  2CB9               	goto	l1371
  4665  0C6C                     u990:
  4666  0C6C                     l1353:
  4667  0C6C  01F5               	clrf	___aldiv@counter
  4668  0C6D  0AF5               	incf	___aldiv@counter,f
  4669  0C6E  2C7C               	goto	l1357
  4670  0C6F                     l1355:
  4671  0C6F  3001               	movlw	1
  4672  0C70  00F4               	movwf	??___aldiv
  4673  0C71                     u1005:
  4674  0C71  1003               	clrc
  4675  0C72  0DA0               	rlf	___aldiv@divisor,f
  4676  0C73  0DA1               	rlf	___aldiv@divisor+1,f
  4677  0C74  0DA2               	rlf	___aldiv@divisor+2,f
  4678  0C75  0DA3               	rlf	___aldiv@divisor+3,f
  4679  0C76  0BF4               	decfsz	??___aldiv,f
  4680  0C77  2C71               	goto	u1005
  4681  0C78  3001               	movlw	1
  4682  0C79  00F4               	movwf	??___aldiv
  4683  0C7A  0874               	movf	??___aldiv,w
  4684  0C7B  07F5               	addwf	___aldiv@counter,f
  4685  0C7C                     l1357:
  4686  0C7C  1FA3               	btfss	___aldiv@divisor+3,7
  4687  0C7D  2C7F               	goto	u1011
  4688  0C7E  2C80               	goto	u1010
  4689  0C7F                     u1011:
  4690  0C7F  2C6F               	goto	l1355
  4691  0C80                     u1010:
  4692  0C80                     l1359:
  4693  0C80  3001               	movlw	1
  4694  0C81  00F4               	movwf	??___aldiv
  4695  0C82                     u1025:
  4696  0C82  1003               	clrc
  4697  0C83  0DF7               	rlf	___aldiv@quotient,f
  4698  0C84  0DF8               	rlf	___aldiv@quotient+1,f
  4699  0C85  0DF9               	rlf	___aldiv@quotient+2,f
  4700  0C86  0DFA               	rlf	___aldiv@quotient+3,f
  4701  0C87  0BF4               	decfsz	??___aldiv,f
  4702  0C88  2C82               	goto	u1025
  4703  0C89                     l1361:
  4704  0C89  0823               	movf	___aldiv@divisor+3,w
  4705  0C8A  0227               	subwf	___aldiv@dividend+3,w
  4706  0C8B  1D03               	skipz
  4707  0C8C  2C97               	goto	u1035
  4708  0C8D  0822               	movf	___aldiv@divisor+2,w
  4709  0C8E  0226               	subwf	___aldiv@dividend+2,w
  4710  0C8F  1D03               	skipz
  4711  0C90  2C97               	goto	u1035
  4712  0C91  0821               	movf	___aldiv@divisor+1,w
  4713  0C92  0225               	subwf	___aldiv@dividend+1,w
  4714  0C93  1D03               	skipz
  4715  0C94  2C97               	goto	u1035
  4716  0C95  0820               	movf	___aldiv@divisor,w
  4717  0C96  0224               	subwf	___aldiv@dividend,w
  4718  0C97                     u1035:
  4719  0C97  1C03               	skipc
  4720  0C98  2C9A               	goto	u1031
  4721  0C99  2C9B               	goto	u1030
  4722  0C9A                     u1031:
  4723  0C9A  2CAA               	goto	l1367
  4724  0C9B                     u1030:
  4725  0C9B                     l1363:
  4726  0C9B  0820               	movf	___aldiv@divisor,w
  4727  0C9C  02A4               	subwf	___aldiv@dividend,f
  4728  0C9D  0821               	movf	___aldiv@divisor+1,w
  4729  0C9E  1C03               	skipc
  4730  0C9F  0F21               	incfsz	___aldiv@divisor+1,w
  4731  0CA0  02A5               	subwf	___aldiv@dividend+1,f
  4732  0CA1  0822               	movf	___aldiv@divisor+2,w
  4733  0CA2  1C03               	skipc
  4734  0CA3  0F22               	incfsz	___aldiv@divisor+2,w
  4735  0CA4  02A6               	subwf	___aldiv@dividend+2,f
  4736  0CA5  0823               	movf	___aldiv@divisor+3,w
  4737  0CA6  1C03               	skipc
  4738  0CA7  0F23               	incfsz	___aldiv@divisor+3,w
  4739  0CA8  02A7               	subwf	___aldiv@dividend+3,f
  4740  0CA9                     l1365:
  4741  0CA9  1477               	bsf	___aldiv@quotient,0
  4742  0CAA                     l1367:
  4743  0CAA  3001               	movlw	1
  4744  0CAB                     u1045:
  4745  0CAB  1003               	clrc
  4746  0CAC  0CA3               	rrf	___aldiv@divisor+3,f
  4747  0CAD  0CA2               	rrf	___aldiv@divisor+2,f
  4748  0CAE  0CA1               	rrf	___aldiv@divisor+1,f
  4749  0CAF  0CA0               	rrf	___aldiv@divisor,f
  4750  0CB0  3EFF               	addlw	-1
  4751  0CB1  1D03               	skipz
  4752  0CB2  2CAB               	goto	u1045
  4753  0CB3                     l1369:
  4754  0CB3  3001               	movlw	1
  4755  0CB4  02F5               	subwf	___aldiv@counter,f
  4756  0CB5  1D03               	btfss	3,2
  4757  0CB6  2CB8               	goto	u1051
  4758  0CB7  2CB9               	goto	u1050
  4759  0CB8                     u1051:
  4760  0CB8  2C80               	goto	l1359
  4761  0CB9                     u1050:
  4762  0CB9                     l1371:
  4763  0CB9  0876               	movf	___aldiv@sign,w
  4764  0CBA  1903               	btfsc	3,2
  4765  0CBB  2CBD               	goto	u1061
  4766  0CBC  2CBE               	goto	u1060
  4767  0CBD                     u1061:
  4768  0CBD  2CC9               	goto	l1375
  4769  0CBE                     u1060:
  4770  0CBE                     l1373:
  4771  0CBE  09F7               	comf	___aldiv@quotient,f
  4772  0CBF  09F8               	comf	___aldiv@quotient+1,f
  4773  0CC0  09F9               	comf	___aldiv@quotient+2,f
  4774  0CC1  09FA               	comf	___aldiv@quotient+3,f
  4775  0CC2  0AF7               	incf	___aldiv@quotient,f
  4776  0CC3  1903               	skipnz
  4777  0CC4  0AF8               	incf	___aldiv@quotient+1,f
  4778  0CC5  1903               	skipnz
  4779  0CC6  0AF9               	incf	___aldiv@quotient+2,f
  4780  0CC7  1903               	skipnz
  4781  0CC8  0AFA               	incf	___aldiv@quotient+3,f
  4782  0CC9                     l1375:
  4783  0CC9  087A               	movf	___aldiv@quotient+3,w
  4784  0CCA  00A3               	movwf	?___aldiv+3
  4785  0CCB  0879               	movf	___aldiv@quotient+2,w
  4786  0CCC  00A2               	movwf	?___aldiv+2
  4787  0CCD  0878               	movf	___aldiv@quotient+1,w
  4788  0CCE  00A1               	movwf	?___aldiv+1
  4789  0CCF  0877               	movf	___aldiv@quotient,w
  4790  0CD0  00A0               	movwf	?___aldiv
  4791  0CD1                     l400:
  4792  0CD1  0008               	return
  4793  0CD2                     __end_of___aldiv:
  4794                           
  4795                           	psect	text13
  4796  0DB1                     __ptext13:	
  4797 ;; *************** function _BMP280_begin *****************
  4798 ;; Defined at:
  4799 ;;		line 156 in file "BMP280.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  mode            1    wreg     enum E1307
  4802 ;;  T_sampling      1   10[BANK0 ] enum E1312
  4803 ;;  P_sampling      1   11[BANK0 ] enum E1312
  4804 ;;  filter          1   12[BANK0 ] enum E1320
  4805 ;;  standby         1   13[BANK0 ] enum E1327
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  mode            1    9[COMMON] enum E1307
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  2   10[BANK0 ] int 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0, pclath, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4817 ;;      Params:         0       4       0       0       0
  4818 ;;      Locals:         1       0       0       0       0
  4819 ;;      Temps:          0       4       0       0       0
  4820 ;;      Totals:         1       8       0       0       0
  4821 ;;Total ram usage:        9 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    6
  4824 ;; This function calls:
  4825 ;;		_BMP280_Configure
  4826 ;;		_BMP280_Read16
  4827 ;;		_BMP280_Read8
  4828 ;;		_BMP280_Write
  4829 ;; This function is called by:
  4830 ;;		_main
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function _BMP280_begin
  4836  0DB1                     _BMP280_begin:
  4837                           
  4838                           ;incstack = 0
  4839                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  4840                           ;BMP280_begin@mode stored from wreg
  4841  0DB1  00FA               	movwf	BMP280_begin@mode
  4842  0DB2                     l1383:
  4843                           
  4844                           ;BMP280.c: 156: int BMP280_begin(BMP280_mode mode,;BMP280.c: 157:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 158:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 159:                   BMP280_filter filter ,;BMP280.c: 160:                   
      +                          standby_time standby );BMP280.c: 161: {;BMP280.c: 162:   if(BMP280_Read8(0xD0) != 0x58)
  4845  0DB2  30D0               	movlw	208
  4846  0DB3  120A  118A  200F  120A  158A  	fcall	_BMP280_Read8
  4847  0DB8  3A58               	xorlw	88
  4848  0DB9  1903               	skipnz
  4849  0DBA  2DBC               	goto	u1071
  4850  0DBB  2DBD               	goto	u1070
  4851  0DBC                     u1071:
  4852  0DBC  2DBE               	goto	l1387
  4853  0DBD                     u1070:
  4854  0DBD  2ED4               	goto	l180
  4855  0DBE                     l1387:
  4856                           
  4857                           ;BMP280.c: 166:   BMP280_Write(0xE0, 0xB6);
  4858  0DBE  30B6               	movlw	182
  4859  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  4860  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  4861  0DC1  00AE               	movwf	??_BMP280_begin
  4862  0DC2  082E               	movf	??_BMP280_begin,w
  4863  0DC3  00F6               	movwf	BMP280_Write@_data
  4864  0DC4  30E0               	movlw	224
  4865  0DC5  120A  158A  21C8  120A  158A  	fcall	_BMP280_Write
  4866  0DCA                     l1389:
  4867                           
  4868                           ;BMP280.c: 167:   _delay((unsigned long)((100)*(8000000/4000.0)));
  4869  0DCA  3002               	movlw	2
  4870  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4871  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4872  0DCD  00B0               	movwf	??_BMP280_begin+2
  4873  0DCE  3004               	movlw	4
  4874  0DCF  00AF               	movwf	??_BMP280_begin+1
  4875  0DD0  30B9               	movlw	185
  4876  0DD1  00AE               	movwf	??_BMP280_begin
  4877  0DD2                     u1407:
  4878  0DD2  0BAE               	decfsz	??_BMP280_begin,f
  4879  0DD3  2DD2               	goto	u1407
  4880  0DD4  0BAF               	decfsz	??_BMP280_begin+1,f
  4881  0DD5  2DD2               	goto	u1407
  4882  0DD6  0BB0               	decfsz	??_BMP280_begin+2,f
  4883  0DD7  2DD2               	goto	u1407
  4884  0DD8  2DD9               	nop2
  4885  0DD9                     l1393:	
  4886                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  4887                           
  4888                           
  4889                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  4890  0DD9  30F3               	movlw	243
  4891  0DDA  120A  118A  200F  120A  158A  	fcall	_BMP280_Read8
  4892  0DDF  3901               	andlw	1
  4893  0DE0  1D03               	btfss	3,2
  4894  0DE1  2DE3               	goto	u1081
  4895  0DE2  2DE4               	goto	u1080
  4896  0DE3                     u1081:
  4897  0DE3  2DCA               	goto	l1389
  4898  0DE4                     u1080:
  4899  0DE4                     l1395:
  4900                           
  4901                           ;BMP280.c: 173:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  4902  0DE4  3088               	movlw	136
  4903  0DE5  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  4904  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  4905  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  4906  0DEC  0821               	movf	?_BMP280_Read16+1,w
  4907  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  4908  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  4909  0DEF  00AD               	movwf	(_BMP280_calib+1)^(0+128)
  4910  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  4911  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  4912  0DF2  0820               	movf	?_BMP280_Read16,w
  4913  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  4914  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  4915  0DF5  00AC               	movwf	_BMP280_calib^(0+128)
  4916                           
  4917                           ;BMP280.c: 174:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  4918  0DF6  308A               	movlw	138
  4919  0DF7  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  4920  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  4921  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  4922  0DFE  0821               	movf	?_BMP280_Read16+1,w
  4923  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  4924  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  4925  0E01  00AF               	movwf	((_BMP280_calib+1)^(0+128)+2)
  4926  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  4927  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  4928  0E04  0820               	movf	?_BMP280_Read16,w
  4929  0E05  1683               	bsf	3,5	;RP0=1, select bank1
  4930  0E06  1303               	bcf	3,6	;RP1=0, select bank1
  4931  0E07  00AE               	movwf	(_BMP280_calib^(0+128)+2)
  4932                           
  4933                           ;BMP280.c: 175:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  4934  0E08  308C               	movlw	140
  4935  0E09  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  4936  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  4938  0E10  0821               	movf	?_BMP280_Read16+1,w
  4939  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  4940  0E12  1303               	bcf	3,6	;RP1=0, select bank1
  4941  0E13  00B1               	movwf	((_BMP280_calib+1)^(0+128)+4)
  4942  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0E16  0820               	movf	?_BMP280_Read16,w
  4945  0E17  1683               	bsf	3,5	;RP0=1, select bank1
  4946  0E18  1303               	bcf	3,6	;RP1=0, select bank1
  4947  0E19  00B0               	movwf	(_BMP280_calib^(0+128)+4)
  4948                           
  4949                           ;BMP280.c: 177:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  4950  0E1A  308E               	movlw	142
  4951  0E1B  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  4952  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  4953  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  4954  0E22  0821               	movf	?_BMP280_Read16+1,w
  4955  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  4956  0E24  1303               	bcf	3,6	;RP1=0, select bank1
  4957  0E25  00B3               	movwf	((_BMP280_calib+1)^(0+128)+6)
  4958  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  4959  0E27  1303               	bcf	3,6	;RP1=0, select bank0
  4960  0E28  0820               	movf	?_BMP280_Read16,w
  4961  0E29  1683               	bsf	3,5	;RP0=1, select bank1
  4962  0E2A  1303               	bcf	3,6	;RP1=0, select bank1
  4963  0E2B  00B2               	movwf	(_BMP280_calib^(0+128)+6)
  4964                           
  4965                           ;BMP280.c: 178:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  4966  0E2C  3090               	movlw	144
  4967  0E2D  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  4968  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0E34  0821               	movf	?_BMP280_Read16+1,w
  4971  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  4972  0E36  1303               	bcf	3,6	;RP1=0, select bank1
  4973  0E37  00B5               	movwf	((_BMP280_calib+1)^(0+128)+8)
  4974  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4975  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4976  0E3A  0820               	movf	?_BMP280_Read16,w
  4977  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  4978  0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  4979  0E3D  00B4               	movwf	(_BMP280_calib^(0+128)+8)
  4980                           
  4981                           ;BMP280.c: 179:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  4982  0E3E  3092               	movlw	146
  4983  0E3F  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  4984  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0E46  0821               	movf	?_BMP280_Read16+1,w
  4987  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  4988  0E48  1303               	bcf	3,6	;RP1=0, select bank1
  4989  0E49  00B7               	movwf	((_BMP280_calib+1)^(0+128)+10)
  4990  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4991  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4992  0E4C  0820               	movf	?_BMP280_Read16,w
  4993  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  4994  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  4995  0E4F  00B6               	movwf	(_BMP280_calib^(0+128)+10)
  4996                           
  4997                           ;BMP280.c: 180:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  4998  0E50  3094               	movlw	148
  4999  0E51  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  5000  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  5001  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  5002  0E58  0821               	movf	?_BMP280_Read16+1,w
  5003  0E59  1683               	bsf	3,5	;RP0=1, select bank1
  5004  0E5A  1303               	bcf	3,6	;RP1=0, select bank1
  5005  0E5B  00B9               	movwf	((_BMP280_calib+1)^(0+128)+12)
  5006  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  5007  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  5008  0E5E  0820               	movf	?_BMP280_Read16,w
  5009  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  5010  0E60  1303               	bcf	3,6	;RP1=0, select bank1
  5011  0E61  00B8               	movwf	(_BMP280_calib^(0+128)+12)
  5012                           
  5013                           ;BMP280.c: 181:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  5014  0E62  3096               	movlw	150
  5015  0E63  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  5016  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0E6A  0821               	movf	?_BMP280_Read16+1,w
  5019  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  5020  0E6C  1303               	bcf	3,6	;RP1=0, select bank1
  5021  0E6D  00BB               	movwf	((_BMP280_calib+1)^(0+128)+14)
  5022  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  5023  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  5024  0E70  0820               	movf	?_BMP280_Read16,w
  5025  0E71  1683               	bsf	3,5	;RP0=1, select bank1
  5026  0E72  1303               	bcf	3,6	;RP1=0, select bank1
  5027  0E73  00BA               	movwf	(_BMP280_calib^(0+128)+14)
  5028                           
  5029                           ;BMP280.c: 182:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  5030  0E74  3098               	movlw	152
  5031  0E75  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  5032  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5033  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5034  0E7C  0821               	movf	?_BMP280_Read16+1,w
  5035  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0E7E  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0E7F  00BD               	movwf	((_BMP280_calib+1)^(0+128)+16)
  5038  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0E82  0820               	movf	?_BMP280_Read16,w
  5041  0E83  1683               	bsf	3,5	;RP0=1, select bank1
  5042  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  5043  0E85  00BC               	movwf	(_BMP280_calib^(0+128)+16)
  5044                           
  5045                           ;BMP280.c: 183:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  5046  0E86  309A               	movlw	154
  5047  0E87  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  5048  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  5049  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  5050  0E8E  0821               	movf	?_BMP280_Read16+1,w
  5051  0E8F  1683               	bsf	3,5	;RP0=1, select bank1
  5052  0E90  1303               	bcf	3,6	;RP1=0, select bank1
  5053  0E91  00BF               	movwf	((_BMP280_calib+1)^(0+128)+18)
  5054  0E92  1283               	bcf	3,5	;RP0=0, select bank0
  5055  0E93  1303               	bcf	3,6	;RP1=0, select bank0
  5056  0E94  0820               	movf	?_BMP280_Read16,w
  5057  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  5058  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  5059  0E97  00BE               	movwf	(_BMP280_calib^(0+128)+18)
  5060                           
  5061                           ;BMP280.c: 184:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  5062  0E98  309C               	movlw	156
  5063  0E99  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  5064  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0EA0  0821               	movf	?_BMP280_Read16+1,w
  5067  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  5068  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  5069  0EA3  00C1               	movwf	((_BMP280_calib+1)^(0+128)+20)
  5070  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  5072  0EA6  0820               	movf	?_BMP280_Read16,w
  5073  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  5074  0EA8  1303               	bcf	3,6	;RP1=0, select bank1
  5075  0EA9  00C0               	movwf	(_BMP280_calib^(0+128)+20)
  5076                           
  5077                           ;BMP280.c: 185:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  5078  0EAA  309E               	movlw	158
  5079  0EAB  120A  158A  22ED  120A  158A  	fcall	_BMP280_Read16
  5080  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  5081  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  5082  0EB2  0821               	movf	?_BMP280_Read16+1,w
  5083  0EB3  1683               	bsf	3,5	;RP0=1, select bank1
  5084  0EB4  1303               	bcf	3,6	;RP1=0, select bank1
  5085  0EB5  00C3               	movwf	((_BMP280_calib+1)^(0+128)+22)
  5086  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  5087  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  5088  0EB8  0820               	movf	?_BMP280_Read16,w
  5089  0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  5090  0EBA  1303               	bcf	3,6	;RP1=0, select bank1
  5091  0EBB  00C2               	movwf	(_BMP280_calib^(0+128)+22)
  5092                           
  5093                           ;BMP280.c: 187:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  5094  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  5095  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  5096  0EBE  082A               	movf	BMP280_begin@T_sampling,w
  5097  0EBF  00AE               	movwf	??_BMP280_begin
  5098  0EC0  082E               	movf	??_BMP280_begin,w
  5099  0EC1  00A0               	movwf	BMP280_Configure@T_sampling
  5100  0EC2  082B               	movf	BMP280_begin@P_sampling,w
  5101  0EC3  00AF               	movwf	??_BMP280_begin+1
  5102  0EC4  082F               	movf	??_BMP280_begin+1,w
  5103  0EC5  00A1               	movwf	BMP280_Configure@P_sampling
  5104  0EC6  082C               	movf	BMP280_begin@filter,w
  5105  0EC7  00B0               	movwf	??_BMP280_begin+2
  5106  0EC8  0830               	movf	??_BMP280_begin+2,w
  5107  0EC9  00A2               	movwf	BMP280_Configure@filter
  5108  0ECA  082D               	movf	BMP280_begin@standby,w
  5109  0ECB  00B1               	movwf	??_BMP280_begin+3
  5110  0ECC  0831               	movf	??_BMP280_begin+3,w
  5111  0ECD  00A3               	movwf	BMP280_Configure@standby
  5112  0ECE  087A               	movf	BMP280_begin@mode,w
  5113  0ECF  120A  158A  225D  120A  158A  	fcall	_BMP280_Configure
  5114  0ED4                     l180:
  5115  0ED4  0008               	return
  5116  0ED5                     __end_of_BMP280_begin:
  5117                           
  5118                           	psect	text14
  5119  000F                     __ptext14:	
  5120 ;; *************** function _BMP280_Read8 *****************
  5121 ;; Defined at:
  5122 ;;		line 106 in file "BMP280.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  reg_addr        1    wreg     unsigned char 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  reg_addr        1    2[BANK0 ] unsigned char 
  5127 ;;  ret             1    3[BANK0 ] unsigned char 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      unsigned char 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0, pclath, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5137 ;;      Params:         0       0       0       0       0
  5138 ;;      Locals:         0       2       0       0       0
  5139 ;;      Temps:          0       2       0       0       0
  5140 ;;      Totals:         0       4       0       0       0
  5141 ;;Total ram usage:        4 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    4
  5144 ;; This function calls:
  5145 ;;		_I2C_Master_Read
  5146 ;;		_I2C_Master_Start
  5147 ;;		_I2C_Master_Stop
  5148 ;;		_I2C_Master_Write
  5149 ;; This function is called by:
  5150 ;;		_BMP280_begin
  5151 ;;		_BMP280_ForcedMeasurement
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function _BMP280_Read8
  5157  000F                     _BMP280_Read8:
  5158                           
  5159                           ;incstack = 0
  5160                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  5161                           ;BMP280_Read8@reg_addr stored from wreg
  5162  000F  1283               	bcf	3,5	;RP0=0, select bank0
  5163  0010  1303               	bcf	3,6	;RP1=0, select bank0
  5164  0011  00A2               	movwf	BMP280_Read8@reg_addr
  5165  0012                     l1263:
  5166                           
  5167                           ;BMP280.c: 106: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 107: {;BMP280.c: 108:  
      +                           uint8_t ret;;BMP280.c: 110:   I2C_Master_Start();
  5168  0012  120A  158A  2113  120A  118A  	fcall	_I2C_Master_Start
  5169                           
  5170                           ;BMP280.c: 111:   I2C_Master_Write( 0xEE);
  5171  0017  30EE               	movlw	238
  5172  0018  00F4               	movwf	I2C_Master_Write@d
  5173  0019  3000               	movlw	0
  5174  001A  00F5               	movwf	I2C_Master_Write@d+1
  5175  001B  120A  158A  212F  120A  118A  	fcall	_I2C_Master_Write
  5176                           
  5177                           ;BMP280.c: 112:   I2C_Master_Write(reg_addr);
  5178  0020  1283               	bcf	3,5	;RP0=0, select bank0
  5179  0021  1303               	bcf	3,6	;RP1=0, select bank0
  5180  0022  0822               	movf	BMP280_Read8@reg_addr,w
  5181  0023  00A0               	movwf	??_BMP280_Read8
  5182  0024  01A1               	clrf	??_BMP280_Read8+1
  5183  0025  0820               	movf	??_BMP280_Read8,w
  5184  0026  00F4               	movwf	I2C_Master_Write@d
  5185  0027  0821               	movf	??_BMP280_Read8+1,w
  5186  0028  00F5               	movwf	I2C_Master_Write@d+1
  5187  0029  120A  158A  212F  120A  118A  	fcall	_I2C_Master_Write
  5188                           
  5189                           ;BMP280.c: 113:   I2C_Master_Start();
  5190  002E  120A  158A  2113  120A  118A  	fcall	_I2C_Master_Start
  5191                           
  5192                           ;BMP280.c: 114:   I2C_Master_Write( 0xEE | 1);
  5193  0033  30EF               	movlw	239
  5194  0034  00F4               	movwf	I2C_Master_Write@d
  5195  0035  3000               	movlw	0
  5196  0036  00F5               	movwf	I2C_Master_Write@d+1
  5197  0037  120A  158A  212F  120A  118A  	fcall	_I2C_Master_Write
  5198                           
  5199                           ;BMP280.c: 115:   ret = I2C_Master_Read(0);
  5200  003C  3000               	movlw	0
  5201  003D  00F4               	movwf	I2C_Master_Read@a
  5202  003E  00F5               	movwf	I2C_Master_Read@a+1
  5203  003F  120A  158A  21F5  120A  118A  	fcall	_I2C_Master_Read
  5204  0044  0874               	movf	?_I2C_Master_Read,w
  5205  0045  1283               	bcf	3,5	;RP0=0, select bank0
  5206  0046  1303               	bcf	3,6	;RP1=0, select bank0
  5207  0047  00A0               	movwf	??_BMP280_Read8
  5208  0048  0820               	movf	??_BMP280_Read8,w
  5209  0049  00A3               	movwf	BMP280_Read8@ret
  5210                           
  5211                           ;BMP280.c: 116:   I2C_Master_Stop();
  5212  004A  120A  158A  211C  120A  118A  	fcall	_I2C_Master_Stop
  5213  004F                     l1265:
  5214                           
  5215                           ;BMP280.c: 118:   return ret;
  5216  004F  1283               	bcf	3,5	;RP0=0, select bank0
  5217  0050  1303               	bcf	3,6	;RP1=0, select bank0
  5218  0051  0823               	movf	BMP280_Read8@ret,w
  5219  0052                     l170:
  5220  0052  0008               	return
  5221  0053                     __end_of_BMP280_Read8:
  5222                           
  5223                           	psect	text15
  5224  0AED                     __ptext15:	
  5225 ;; *************** function _BMP280_Read16 *****************
  5226 ;; Defined at:
  5227 ;;		line 122 in file "BMP280.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  reg_addr        1    wreg     unsigned char 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  reg_addr        1    4[BANK0 ] unsigned char 
  5232 ;;  ret             2    5[BANK0 ] struct .
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  2    0[BANK0 ] unsigned int 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0, pclath, cstack
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5242 ;;      Params:         0       2       0       0       0
  5243 ;;      Locals:         0       3       0       0       0
  5244 ;;      Temps:          0       2       0       0       0
  5245 ;;      Totals:         0       7       0       0       0
  5246 ;;Total ram usage:        7 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    4
  5249 ;; This function calls:
  5250 ;;		_I2C_Master_Read
  5251 ;;		_I2C_Master_Start
  5252 ;;		_I2C_Master_Stop
  5253 ;;		_I2C_Master_Write
  5254 ;; This function is called by:
  5255 ;;		_BMP280_begin
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           
  5260                           ;psect for function _BMP280_Read16
  5261  0AED                     _BMP280_Read16:
  5262                           
  5263                           ;incstack = 0
  5264                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  5265                           ;BMP280_Read16@reg_addr stored from wreg
  5266  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  5267  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  5268  0AEF  00A4               	movwf	BMP280_Read16@reg_addr
  5269  0AF0                     l1269:
  5270                           
  5271                           ;BMP280.c: 122: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 123: {;BMP280.c: 128:
      +                             } ret;;BMP280.c: 130:   I2C_Master_Start();
  5272  0AF0  120A  158A  2113  120A  158A  	fcall	_I2C_Master_Start
  5273                           
  5274                           ;BMP280.c: 131:   I2C_Master_Write( 0xEE);
  5275  0AF5  30EE               	movlw	238
  5276  0AF6  00F4               	movwf	I2C_Master_Write@d
  5277  0AF7  3000               	movlw	0
  5278  0AF8  00F5               	movwf	I2C_Master_Write@d+1
  5279  0AF9  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  5280                           
  5281                           ;BMP280.c: 132:   I2C_Master_Write(reg_addr);
  5282  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  5283  0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  5284  0B00  0824               	movf	BMP280_Read16@reg_addr,w
  5285  0B01  00A2               	movwf	??_BMP280_Read16
  5286  0B02  01A3               	clrf	??_BMP280_Read16+1
  5287  0B03  0822               	movf	??_BMP280_Read16,w
  5288  0B04  00F4               	movwf	I2C_Master_Write@d
  5289  0B05  0823               	movf	??_BMP280_Read16+1,w
  5290  0B06  00F5               	movwf	I2C_Master_Write@d+1
  5291  0B07  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  5292                           
  5293                           ;BMP280.c: 133:   I2C_Master_Start();
  5294  0B0C  120A  158A  2113  120A  158A  	fcall	_I2C_Master_Start
  5295                           
  5296                           ;BMP280.c: 134:   I2C_Master_Write(0xEE | 1);
  5297  0B11  30EF               	movlw	239
  5298  0B12  00F4               	movwf	I2C_Master_Write@d
  5299  0B13  3000               	movlw	0
  5300  0B14  00F5               	movwf	I2C_Master_Write@d+1
  5301  0B15  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  5302                           
  5303                           ;BMP280.c: 135:   ret.b[0] = I2C_Master_Read( 1);
  5304  0B1A  3001               	movlw	1
  5305  0B1B  00F4               	movwf	I2C_Master_Read@a
  5306  0B1C  3000               	movlw	0
  5307  0B1D  00F5               	movwf	I2C_Master_Read@a+1
  5308  0B1E  120A  158A  21F5  120A  158A  	fcall	_I2C_Master_Read
  5309  0B23  0874               	movf	?_I2C_Master_Read,w
  5310  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  5311  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  5312  0B26  00A2               	movwf	??_BMP280_Read16
  5313  0B27  0822               	movf	??_BMP280_Read16,w
  5314  0B28  00A5               	movwf	BMP280_Read16@ret
  5315                           
  5316                           ;BMP280.c: 136:   ret.b[1] = I2C_Master_Read( 0);
  5317  0B29  3000               	movlw	0
  5318  0B2A  00F4               	movwf	I2C_Master_Read@a
  5319  0B2B  00F5               	movwf	I2C_Master_Read@a+1
  5320  0B2C  120A  158A  21F5  120A  158A  	fcall	_I2C_Master_Read
  5321  0B31  0874               	movf	?_I2C_Master_Read,w
  5322  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  5323  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  5324  0B34  00A2               	movwf	??_BMP280_Read16
  5325  0B35  0822               	movf	??_BMP280_Read16,w
  5326  0B36  00A6               	movwf	BMP280_Read16@ret+1
  5327                           
  5328                           ;BMP280.c: 137:   I2C_Master_Stop();
  5329  0B37  120A  158A  211C  120A  158A  	fcall	_I2C_Master_Stop
  5330  0B3C                     l1271:
  5331                           
  5332                           ;BMP280.c: 139:   return(ret.w);
  5333  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  5334  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  5335  0B3E  0826               	movf	BMP280_Read16@ret+1,w
  5336  0B3F  00A1               	movwf	?_BMP280_Read16+1
  5337  0B40  0825               	movf	BMP280_Read16@ret,w
  5338  0B41  00A0               	movwf	?_BMP280_Read16
  5339  0B42                     l173:
  5340  0B42  0008               	return
  5341  0B43                     __end_of_BMP280_Read16:
  5342                           
  5343                           	psect	text16
  5344  09F5                     __ptext16:	
  5345 ;; *************** function _I2C_Master_Read *****************
  5346 ;; Defined at:
  5347 ;;		line 75 in file "I2C.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  a               2    3[COMMON] unsigned short 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  temp1           2    7[COMMON] unsigned short 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  2    3[COMMON] unsigned short 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0, pclath, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5361 ;;      Params:         2       0       0       0       0
  5362 ;;      Locals:         2       0       0       0       0
  5363 ;;      Temps:          2       0       0       0       0
  5364 ;;      Totals:         6       0       0       0       0
  5365 ;;Total ram usage:        6 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    3
  5368 ;; This function calls:
  5369 ;;		_I2C_Master_Wait
  5370 ;; This function is called by:
  5371 ;;		_BMP280_Read8
  5372 ;;		_BMP280_Read16
  5373 ;;		_BMP280_Update
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _I2C_Master_Read
  5379  09F5                     _I2C_Master_Read:
  5380  09F5                     l1205:	
  5381                           ;incstack = 0
  5382                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5383                           
  5384                           
  5385                           ;I2C.c: 76:     unsigned short temp1;;I2C.c: 77:     I2C_Master_Wait();
  5386  09F5  120A  158A  2143  120A  158A  	fcall	_I2C_Master_Wait
  5387  09FA                     l1207:
  5388                           
  5389                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5390  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  5391  09FB  1303               	bcf	3,6	;RP1=0, select bank1
  5392  09FC  1591               	bsf	17,3	;volatile
  5393                           
  5394                           ;I2C.c: 79:     I2C_Master_Wait();
  5395  09FD  120A  158A  2143  120A  158A  	fcall	_I2C_Master_Wait
  5396  0A02                     l1209:
  5397                           
  5398                           ;I2C.c: 80:     temp1 = SSPBUF;
  5399  0A02  1283               	bcf	3,5	;RP0=0, select bank0
  5400  0A03  1303               	bcf	3,6	;RP1=0, select bank0
  5401  0A04  0813               	movf	19,w	;volatile
  5402  0A05  00F6               	movwf	??_I2C_Master_Read
  5403  0A06  01F7               	clrf	??_I2C_Master_Read+1
  5404  0A07  0876               	movf	??_I2C_Master_Read,w
  5405  0A08  00F8               	movwf	I2C_Master_Read@temp1
  5406  0A09  0877               	movf	??_I2C_Master_Read+1,w
  5407  0A0A  00F9               	movwf	I2C_Master_Read@temp1+1
  5408  0A0B                     l1211:
  5409                           
  5410                           ;I2C.c: 81:     I2C_Master_Wait();
  5411  0A0B  120A  158A  2143  120A  158A  	fcall	_I2C_Master_Wait
  5412  0A10                     l1213:
  5413                           
  5414                           ;I2C.c: 82:     if (a == 1) {
  5415  0A10  0374               	decf	I2C_Master_Read@a,w
  5416  0A11  0475               	iorwf	I2C_Master_Read@a+1,w
  5417  0A12  1D03               	btfss	3,2
  5418  0A13  2A15               	goto	u721
  5419  0A14  2A16               	goto	u720
  5420  0A15                     u721:
  5421  0A15  2A1A               	goto	l141
  5422  0A16                     u720:
  5423  0A16                     l1215:
  5424                           
  5425                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5426  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  5427  0A17  1303               	bcf	3,6	;RP1=0, select bank1
  5428  0A18  1291               	bcf	17,5	;volatile
  5429                           
  5430                           ;I2C.c: 84:     } else {
  5431  0A19  2A1D               	goto	l142
  5432  0A1A                     l141:
  5433                           
  5434                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5435  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  5436  0A1B  1303               	bcf	3,6	;RP1=0, select bank1
  5437  0A1C  1691               	bsf	17,5	;volatile
  5438  0A1D                     l142:	
  5439                           ;I2C.c: 86:     }
  5440                           
  5441                           
  5442                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5443  0A1D  1611               	bsf	17,4	;volatile
  5444  0A1E                     l1217:
  5445                           
  5446                           ;I2C.c: 88:     return temp1;
  5447  0A1E  0879               	movf	I2C_Master_Read@temp1+1,w
  5448  0A1F  00F5               	movwf	?_I2C_Master_Read+1
  5449  0A20  0878               	movf	I2C_Master_Read@temp1,w
  5450  0A21  00F4               	movwf	?_I2C_Master_Read
  5451  0A22                     l143:
  5452  0A22  0008               	return
  5453  0A23                     __end_of_I2C_Master_Read:
  5454                           
  5455                           	psect	text17
  5456  0A5D                     __ptext17:	
  5457 ;; *************** function _BMP280_Configure *****************
  5458 ;; Defined at:
  5459 ;;		line 143 in file "BMP280.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  mode            1    wreg     enum E1307
  5462 ;;  T_sampling      1    0[BANK0 ] enum E1312
  5463 ;;  P_sampling      1    1[BANK0 ] enum E1312
  5464 ;;  filter          1    2[BANK0 ] enum E1320
  5465 ;;  standby         1    3[BANK0 ] enum E1327
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  mode            1    7[BANK0 ] enum E1307
  5468 ;;  _config         1    9[BANK0 ] unsigned char 
  5469 ;;  _ctrl_meas      1    8[BANK0 ] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0, pclath, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5479 ;;      Params:         0       4       0       0       0
  5480 ;;      Locals:         0       3       0       0       0
  5481 ;;      Temps:          0       3       0       0       0
  5482 ;;      Totals:         0      10       0       0       0
  5483 ;;Total ram usage:       10 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    5
  5486 ;; This function calls:
  5487 ;;		_BMP280_Write
  5488 ;; This function is called by:
  5489 ;;		_BMP280_begin
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function _BMP280_Configure
  5495  0A5D                     _BMP280_Configure:
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  5499                           ;BMP280_Configure@mode stored from wreg
  5500  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  5501  0A5E  1303               	bcf	3,6	;RP1=0, select bank0
  5502  0A5F  00A7               	movwf	BMP280_Configure@mode
  5503  0A60                     l1275:
  5504                           
  5505                           ;BMP280.c: 143: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 144:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 145: {;BMP280.c: 146:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 148:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  5506  0A60  0822               	movf	BMP280_Configure@filter,w
  5507  0A61  00A4               	movwf	??_BMP280_Configure
  5508  0A62  3002               	movlw	2
  5509  0A63                     u825:
  5510  0A63  1003               	clrc
  5511  0A64  0DA4               	rlf	??_BMP280_Configure,f
  5512  0A65  3EFF               	addlw	-1
  5513  0A66  1D03               	skipz
  5514  0A67  2A63               	goto	u825
  5515  0A68  0823               	movf	BMP280_Configure@standby,w
  5516  0A69  00A5               	movwf	??_BMP280_Configure+1
  5517  0A6A  3004               	movlw	4
  5518  0A6B                     u835:
  5519  0A6B  1003               	clrc
  5520  0A6C  0DA5               	rlf	??_BMP280_Configure+1,f
  5521  0A6D  3EFF               	addlw	-1
  5522  0A6E  1D03               	skipz
  5523  0A6F  2A6B               	goto	u835
  5524  0A70  1003               	clrc
  5525  0A71  0D25               	rlf	??_BMP280_Configure+1,w
  5526  0A72  0424               	iorwf	??_BMP280_Configure,w
  5527  0A73  39FC               	andlw	252
  5528  0A74  00A6               	movwf	??_BMP280_Configure+2
  5529  0A75  0826               	movf	??_BMP280_Configure+2,w
  5530  0A76  00A9               	movwf	BMP280_Configure@_config
  5531                           
  5532                           ;BMP280.c: 149:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  5533  0A77  0821               	movf	BMP280_Configure@P_sampling,w
  5534  0A78  00A4               	movwf	??_BMP280_Configure
  5535  0A79  3002               	movlw	2
  5536  0A7A                     u845:
  5537  0A7A  1003               	clrc
  5538  0A7B  0DA4               	rlf	??_BMP280_Configure,f
  5539  0A7C  3EFF               	addlw	-1
  5540  0A7D  1D03               	skipz
  5541  0A7E  2A7A               	goto	u845
  5542  0A7F  0820               	movf	BMP280_Configure@T_sampling,w
  5543  0A80  00A5               	movwf	??_BMP280_Configure+1
  5544  0A81  3004               	movlw	4
  5545  0A82                     u855:
  5546  0A82  1003               	clrc
  5547  0A83  0DA5               	rlf	??_BMP280_Configure+1,f
  5548  0A84  3EFF               	addlw	-1
  5549  0A85  1D03               	skipz
  5550  0A86  2A82               	goto	u855
  5551  0A87  1003               	clrc
  5552  0A88  0D25               	rlf	??_BMP280_Configure+1,w
  5553  0A89  0424               	iorwf	??_BMP280_Configure,w
  5554  0A8A  0427               	iorwf	BMP280_Configure@mode,w
  5555  0A8B  00A6               	movwf	??_BMP280_Configure+2
  5556  0A8C  0826               	movf	??_BMP280_Configure+2,w
  5557  0A8D  00A8               	movwf	BMP280_Configure@_ctrl_meas
  5558  0A8E                     l1277:
  5559                           
  5560                           ;BMP280.c: 151:   BMP280_Write(0xF5, _config);
  5561  0A8E  0829               	movf	BMP280_Configure@_config,w
  5562  0A8F  00A4               	movwf	??_BMP280_Configure
  5563  0A90  0824               	movf	??_BMP280_Configure,w
  5564  0A91  00F6               	movwf	BMP280_Write@_data
  5565  0A92  30F5               	movlw	245
  5566  0A93  120A  158A  21C8  120A  158A  	fcall	_BMP280_Write
  5567  0A98                     l1279:
  5568                           
  5569                           ;BMP280.c: 152:   BMP280_Write(0xF4, _ctrl_meas);
  5570  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  5572  0A9A  0828               	movf	BMP280_Configure@_ctrl_meas,w
  5573  0A9B  00A4               	movwf	??_BMP280_Configure
  5574  0A9C  0824               	movf	??_BMP280_Configure,w
  5575  0A9D  00F6               	movwf	BMP280_Write@_data
  5576  0A9E  30F4               	movlw	244
  5577  0A9F  120A  158A  21C8  120A  158A  	fcall	_BMP280_Write
  5578  0AA4                     l176:
  5579  0AA4  0008               	return
  5580  0AA5                     __end_of_BMP280_Configure:
  5581                           
  5582                           	psect	text18
  5583  09C8                     __ptext18:	
  5584 ;; *************** function _BMP280_Write *****************
  5585 ;; Defined at:
  5586 ;;		line 96 in file "BMP280.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;  reg_addr        1    wreg     unsigned char 
  5589 ;;  _data           1    5[COMMON] unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  reg_addr        1    8[COMMON] unsigned char 
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      void 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0, pclath, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5601 ;;      Params:         1       0       0       0       0
  5602 ;;      Locals:         1       0       0       0       0
  5603 ;;      Temps:          2       0       0       0       0
  5604 ;;      Totals:         4       0       0       0       0
  5605 ;;Total ram usage:        4 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:    4
  5608 ;; This function calls:
  5609 ;;		_I2C_Master_Start
  5610 ;;		_I2C_Master_Stop
  5611 ;;		_I2C_Master_Write
  5612 ;; This function is called by:
  5613 ;;		_BMP280_Configure
  5614 ;;		_BMP280_begin
  5615 ;;		_BMP280_ForcedMeasurement
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           
  5620                           ;psect for function _BMP280_Write
  5621  09C8                     _BMP280_Write:
  5622                           
  5623                           ;incstack = 0
  5624                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  5625                           ;BMP280_Write@reg_addr stored from wreg
  5626  09C8  00F9               	movwf	BMP280_Write@reg_addr
  5627  09C9                     l1221:
  5628                           
  5629                           ;BMP280.c: 96: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 97: {;BMP280
      +                          .c: 98:   I2C_Master_Start();
  5630  09C9  120A  158A  2113  120A  158A  	fcall	_I2C_Master_Start
  5631                           
  5632                           ;BMP280.c: 99:   I2C_Master_Write(0xEE);
  5633  09CE  30EE               	movlw	238
  5634  09CF  00F4               	movwf	I2C_Master_Write@d
  5635  09D0  3000               	movlw	0
  5636  09D1  00F5               	movwf	I2C_Master_Write@d+1
  5637  09D2  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  5638                           
  5639                           ;BMP280.c: 100:   I2C_Master_Write (reg_addr);
  5640  09D7  0879               	movf	BMP280_Write@reg_addr,w
  5641  09D8  00F7               	movwf	??_BMP280_Write
  5642  09D9  01F8               	clrf	??_BMP280_Write+1
  5643  09DA  0877               	movf	??_BMP280_Write,w
  5644  09DB  00F4               	movwf	I2C_Master_Write@d
  5645  09DC  0878               	movf	??_BMP280_Write+1,w
  5646  09DD  00F5               	movwf	I2C_Master_Write@d+1
  5647  09DE  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  5648                           
  5649                           ;BMP280.c: 101:   I2C_Master_Write( _data);
  5650  09E3  0876               	movf	BMP280_Write@_data,w
  5651  09E4  00F7               	movwf	??_BMP280_Write
  5652  09E5  01F8               	clrf	??_BMP280_Write+1
  5653  09E6  0877               	movf	??_BMP280_Write,w
  5654  09E7  00F4               	movwf	I2C_Master_Write@d
  5655  09E8  0878               	movf	??_BMP280_Write+1,w
  5656  09E9  00F5               	movwf	I2C_Master_Write@d+1
  5657  09EA  120A  158A  212F  120A  158A  	fcall	_I2C_Master_Write
  5658                           
  5659                           ;BMP280.c: 102:   I2C_Master_Stop();
  5660  09EF  120A  158A  211C  120A  158A  	fcall	_I2C_Master_Stop
  5661  09F4                     l167:
  5662  09F4  0008               	return
  5663  09F5                     __end_of_BMP280_Write:
  5664                           
  5665                           	psect	text19
  5666  092F                     __ptext19:	
  5667 ;; *************** function _I2C_Master_Write *****************
  5668 ;; Defined at:
  5669 ;;		line 66 in file "I2C.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  d               2    3[COMMON] unsigned int 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0, pclath, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5683 ;;      Params:         2       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0
  5686 ;;      Totals:         2       0       0       0       0
  5687 ;;Total ram usage:        2 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    3
  5690 ;; This function calls:
  5691 ;;		_I2C_Master_Wait
  5692 ;; This function is called by:
  5693 ;;		_BMP280_Write
  5694 ;;		_BMP280_Read8
  5695 ;;		_BMP280_Read16
  5696 ;;		_BMP280_Update
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           
  5701                           ;psect for function _I2C_Master_Write
  5702  092F                     _I2C_Master_Write:
  5703  092F                     l1201:	
  5704                           ;incstack = 0
  5705                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5706                           
  5707                           
  5708                           ;I2C.c: 67:     I2C_Master_Wait();
  5709  092F  120A  158A  2143  120A  158A  	fcall	_I2C_Master_Wait
  5710  0934                     l1203:
  5711                           
  5712                           ;I2C.c: 68:     SSPBUF = d;
  5713  0934  0874               	movf	I2C_Master_Write@d,w
  5714  0935  1283               	bcf	3,5	;RP0=0, select bank0
  5715  0936  1303               	bcf	3,6	;RP1=0, select bank0
  5716  0937  0093               	movwf	19	;volatile
  5717  0938                     l138:
  5718  0938  0008               	return
  5719  0939                     __end_of_I2C_Master_Write:
  5720                           
  5721                           	psect	text20
  5722  091C                     __ptext20:	
  5723 ;; *************** function _I2C_Master_Stop *****************
  5724 ;; Defined at:
  5725 ;;		line 56 in file "I2C.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;		None
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0, pclath, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5739 ;;      Params:         0       0       0       0       0
  5740 ;;      Locals:         0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0
  5742 ;;      Totals:         0       0       0       0       0
  5743 ;;Total ram usage:        0 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    3
  5746 ;; This function calls:
  5747 ;;		_I2C_Master_Wait
  5748 ;; This function is called by:
  5749 ;;		_BMP280_Write
  5750 ;;		_BMP280_Read8
  5751 ;;		_BMP280_Read16
  5752 ;;		_BMP280_Update
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _I2C_Master_Stop
  5758  091C                     _I2C_Master_Stop:
  5759  091C                     l1197:	
  5760                           ;incstack = 0
  5761                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5762                           
  5763                           
  5764                           ;I2C.c: 57:     I2C_Master_Wait();
  5765  091C  120A  158A  2143  120A  158A  	fcall	_I2C_Master_Wait
  5766  0921                     l1199:
  5767                           
  5768                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5769  0921  1683               	bsf	3,5	;RP0=1, select bank1
  5770  0922  1303               	bcf	3,6	;RP1=0, select bank1
  5771  0923  1511               	bsf	17,2	;volatile
  5772  0924                     l135:
  5773  0924  0008               	return
  5774  0925                     __end_of_I2C_Master_Stop:
  5775                           
  5776                           	psect	text21
  5777  0913                     __ptext21:	
  5778 ;; *************** function _I2C_Master_Start *****************
  5779 ;; Defined at:
  5780 ;;		line 40 in file "I2C.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;		None
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;		None
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      void 
  5787 ;; Registers used:
  5788 ;;		wreg, status,2, status,0, pclath, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5794 ;;      Params:         0       0       0       0       0
  5795 ;;      Locals:         0       0       0       0       0
  5796 ;;      Temps:          0       0       0       0       0
  5797 ;;      Totals:         0       0       0       0       0
  5798 ;;Total ram usage:        0 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    3
  5801 ;; This function calls:
  5802 ;;		_I2C_Master_Wait
  5803 ;; This function is called by:
  5804 ;;		_BMP280_Write
  5805 ;;		_BMP280_Read8
  5806 ;;		_BMP280_Read16
  5807 ;;		_BMP280_Update
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           
  5812                           ;psect for function _I2C_Master_Start
  5813  0913                     _I2C_Master_Start:
  5814  0913                     l1193:	
  5815                           ;incstack = 0
  5816                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5817                           
  5818                           
  5819                           ;I2C.c: 41:     I2C_Master_Wait();
  5820  0913  120A  158A  2143  120A  158A  	fcall	_I2C_Master_Wait
  5821  0918                     l1195:
  5822                           
  5823                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  5824  0918  1683               	bsf	3,5	;RP0=1, select bank1
  5825  0919  1303               	bcf	3,6	;RP1=0, select bank1
  5826  091A  1411               	bsf	17,0	;volatile
  5827  091B                     l129:
  5828  091B  0008               	return
  5829  091C                     __end_of_I2C_Master_Start:
  5830                           
  5831                           	psect	text22
  5832  0943                     __ptext22:	
  5833 ;; *************** function _I2C_Master_Wait *****************
  5834 ;; Defined at:
  5835 ;;		line 33 in file "I2C.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5849 ;;      Params:         0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0
  5852 ;;      Totals:         0       0       0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    2
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_I2C_Master_Start
  5860 ;;		_I2C_Master_Stop
  5861 ;;		_I2C_Master_Write
  5862 ;;		_I2C_Master_Read
  5863 ;;		_I2C_Master_RepeatedStart
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           
  5868                           ;psect for function _I2C_Master_Wait
  5869  0943                     _I2C_Master_Wait:
  5870  0943                     l1189:	
  5871                           ;incstack = 0
  5872                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5873                           
  5874  0943                     l123:	
  5875                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5876                           
  5877  0943  1683               	bsf	3,5	;RP0=1, select bank1
  5878  0944  1303               	bcf	3,6	;RP1=0, select bank1
  5879  0945  1914               	btfsc	20,2	;volatile
  5880  0946  2948               	goto	u701
  5881  0947  2949               	goto	u700
  5882  0948                     u701:
  5883  0948  2943               	goto	l123
  5884  0949                     u700:
  5885  0949                     l1191:
  5886  0949  0811               	movf	17,w	;volatile
  5887  094A  391F               	andlw	31
  5888  094B  1D03               	btfss	3,2
  5889  094C  294E               	goto	u711
  5890  094D  294F               	goto	u710
  5891  094E                     u711:
  5892  094E  2943               	goto	l123
  5893  094F                     u710:
  5894  094F                     l126:
  5895  094F  0008               	return
  5896  0950                     __end_of_I2C_Master_Wait:
  5897                           
  5898                           	psect	text23
  5899  0950                     __ptext23:	
  5900 ;; *************** function _isr *****************
  5901 ;; Defined at:
  5902 ;;		line 201 in file "mainm2.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5916 ;;      Params:         0       0       0       0       0
  5917 ;;      Locals:         0       0       0       0       0
  5918 ;;      Temps:          3       0       0       0       0
  5919 ;;      Totals:         3       0       0       0       0
  5920 ;;Total ram usage:        3 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    1
  5923 ;; This function calls:
  5924 ;;		_Receive_Data
  5925 ;; This function is called by:
  5926 ;;		Interrupt level 1
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           
  5931                           ;psect for function _isr
  5932  0950                     _isr:
  5933  0950                     i1l1481:
  5934                           
  5935                           ;mainm2.c: 202:     if (PIR1bits.RCIF == 1) {
  5936  0950  1283               	bcf	3,5	;RP0=0, select bank0
  5937  0951  1303               	bcf	3,6	;RP1=0, select bank0
  5938  0952  1E8C               	btfss	12,5	;volatile
  5939  0953  2955               	goto	u136_21
  5940  0954  2956               	goto	u136_20
  5941  0955                     u136_21:
  5942  0955  2961               	goto	i1l91
  5943  0956                     u136_20:
  5944  0956                     i1l1483:
  5945                           
  5946                           ;mainm2.c: 203:         RX = Receive_Data();
  5947  0956  120A  158A  2125  120A  158A  	fcall	_Receive_Data
  5948  095B  00F1               	movwf	??_isr
  5949  095C  0871               	movf	??_isr,w
  5950  095D  1283               	bcf	3,5	;RP0=0, select bank0
  5951  095E  1303               	bcf	3,6	;RP1=0, select bank0
  5952  095F  00E9               	movwf	_RX
  5953  0960                     i1l1485:
  5954                           
  5955                           ;mainm2.c: 204:         PIR1bits.RCIF = 0;
  5956  0960  128C               	bcf	12,5	;volatile
  5957  0961                     i1l91:
  5958  0961  0873               	movf	??_isr+2,w
  5959  0962  008A               	movwf	10
  5960  0963  0E72               	swapf	??_isr+1,w
  5961  0964  0083               	movwf	3
  5962  0965  0EFE               	swapf	btemp,f
  5963  0966  0E7E               	swapf	btemp,w
  5964  0967  0009               	retfie
  5965  0968                     __end_of_isr:
  5966                           
  5967                           	psect	intentry
  5968  0004                     __pintentry:	
  5969                           ;incstack = 0
  5970                           ; Regs used in _isr: [wreg+pclath+cstack]
  5971                           
  5972  0004                     interrupt_function:
  5973  007E                     saved_w	set	btemp
  5974  0004  00FE               	movwf	btemp
  5975  0005  0E03               	swapf	3,w
  5976  0006  00F2               	movwf	??_isr+1
  5977  0007  080A               	movf	10,w
  5978  0008  00F3               	movwf	??_isr+2
  5979  0009  120A  158A  2950   	ljmp	_isr
  5980                           
  5981                           	psect	text24
  5982  0925                     __ptext24:	
  5983 ;; *************** function _Receive_Data *****************
  5984 ;; Defined at:
  5985 ;;		line 28 in file "UART.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      unsigned char 
  5992 ;; Registers used:
  5993 ;;		wreg
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5999 ;;      Params:         0       0       0       0       0
  6000 ;;      Locals:         0       0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0
  6002 ;;      Totals:         0       0       0       0       0
  6003 ;;Total ram usage:        0 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; This function calls:
  6006 ;;		Nothing
  6007 ;; This function is called by:
  6008 ;;		_isr
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           
  6013                           ;psect for function _Receive_Data
  6014  0925                     _Receive_Data:
  6015  0925                     i1l1447:	
  6016                           ;incstack = 0
  6017                           ; Regs used in _Receive_Data: [wreg]
  6018                           
  6019                           
  6020                           ;UART.c: 29:     if (RCSTAbits.OERR) {
  6021  0925  1283               	bcf	3,5	;RP0=0, select bank0
  6022  0926  1303               	bcf	3,6	;RP1=0, select bank0
  6023  0927  1C98               	btfss	24,1	;volatile
  6024  0928  292A               	goto	u135_21
  6025  0929  292B               	goto	u135_20
  6026  092A                     u135_21:
  6027  092A  292D               	goto	i1l1451
  6028  092B                     u135_20:
  6029  092B                     i1l1449:
  6030                           
  6031                           ;UART.c: 30:         RCSTAbits.CREN = 0;
  6032  092B  1218               	bcf	24,4	;volatile
  6033                           
  6034                           ;UART.c: 31:         RCSTAbits.CREN = 1;
  6035  092C  1618               	bsf	24,4	;volatile
  6036  092D                     i1l1451:
  6037                           
  6038                           ;UART.c: 34:     return RCREG;
  6039  092D  081A               	movf	26,w	;volatile
  6040  092E                     i1l239:
  6041  092E  0008               	return
  6042  092F                     __end_of_Receive_Data:
  6043  007E                     btemp	set	126	;btemp
  6044  007E                     wtemp0	set	126
  6045                           
  6046                           	psect	config
  6047                           
  6048                           ;Config register CONFIG1 @ 0x2007
  6049                           ;	Oscillator Selection bits
  6050                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6051                           ;	Watchdog Timer Enable bit
  6052                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6053                           ;	Power-up Timer Enable bit
  6054                           ;	PWRTE = OFF, PWRT disabled
  6055                           ;	RE3/MCLR pin function select bit
  6056                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6057                           ;	Code Protection bit
  6058                           ;	CP = OFF, Program memory code protection is disabled
  6059                           ;	Data Code Protection bit
  6060                           ;	CPD = OFF, Data memory code protection is disabled
  6061                           ;	Brown Out Reset Selection bits
  6062                           ;	BOREN = ON, BOR enabled
  6063                           ;	Internal External Switchover bit
  6064                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6065                           ;	Fail-Safe Clock Monitor Enabled bit
  6066                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6067                           ;	Low Voltage Programming Enable bit
  6068                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6069                           ;	In-Circuit Debugger Mode bit
  6070                           ;	DEBUG = 0x1, unprogrammed default
  6071  2007                     	org	8199
  6072  2007  23F4               	dw	9204
  6073                           
  6074                           ;Config register CONFIG2 @ 0x2008
  6075                           ;	Brown-out Reset Selection bit
  6076                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6077                           ;	Flash Program Memory Self Write Enable bits
  6078                           ;	WRT = OFF, Write protection off
  6079  2008                     	org	8200
  6080  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     10      10
    BANK0            80     69      78
    BANK1            80      0      44
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Send_String@X	PTR unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK1[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK1[4]), 


Critical Paths under _main in COMMON

    _main->_BMP280_begin
    _I2C_Master_Init->___lldiv
    _Send_Temp->___lldiv
    _Send_Temp->___wmul
    _Send_String->_Send_Data
    _BMP280_readTemperature->___aldiv
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___aldiv
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Write
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Send_Temp->___lldiv
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   25924
                                             66 BANK0      3     3      0
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                          _Send_Data
                        _Send_String
                          _Send_Temp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1172
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4    1172
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _Send_Temp                                           10    10      0    1622
                                              8 BANK0     10    10      0
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          2     2      0     133
                                              4 COMMON     2     2      0
                          _Send_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Data                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             21 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7930
                                             21 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              8 BANK0     13     5      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8    1074
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                              9 COMMON     1     1      0
                                             10 BANK0      8     4      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              0 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              0 BANK0      7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              0 BANK0     10     6      4
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              5 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                       _Receive_Data
 ---------------------------------------------------------------------------------
 (7) _Receive_Data                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _Send_Data
   _Send_String
     _Send_Data
   _Send_Temp
     ___lldiv
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)
   _Receive_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      A       A       1       76.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      84       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2C       7       55.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      84      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 12 19:09:19 2021

               _BMP280_Configure 0A5D                                pc 0002                               l71 0C0F  
                             l73 0C11                               l82 0983                               l74 0C13  
                             l75 0C15                               l76 0C17                               l85 0FFF  
                             _RX 0069                               fsr 0004              ___wmul@multiplicand 0076  
                            l200 07EA                              l120 0A5C                              l202 067C  
                            l123 0943                              l141 0A1A                              l126 094F  
                            l142 0A1D                              l135 0924                              l143 0A22  
                            l400 0CD1                              l129 091B                              l138 0938  
                            l170 0052                              l226 093A                              l235 09A2  
                            l180 0ED4                              l173 0B42                              l229 0942  
                            l325 09AF                              l167 09F4                              l327 09C7  
                            l176 0AA4                              l361 0BAA                              l193 0DB0  
                            l339 0AEC                              l196 02B4                              l390 0C49  
                            _GIE 005F          BMP280_Configure@_config 0029                              u700 0949  
                            u701 0948                              u710 094F                              u711 094E  
                            u720 0A16                              u800 0940                              u721 0A15  
                            u801 093F                              u730 0B55                              u810 0A3A  
                            u731 0B54                              u750 0B69                              u910 09C3  
                            u751 0B68                              u911 09C2                              u815 0A35  
                            u920 0AB3                              u825 0A63                              u745 0B5A  
                            u921 0AB2                              u905 09B7                              u770 0B84  
                            u835 0A6B                              u771 0B83                              u931 0ABC  
                            u932 0AC3                              u860 0D35                              u845 0A7A  
                            u765 0B6B                              u933 0ACA                              u790 0BA2  
                            u870 0D93                              u855 0A82                              u791 0BA1  
                            u775 0B80                              u960 0AE4                              u880 09A9  
                            u785 0B94                              u961 0AE3                              u945 0ACC  
                            u865 0D30                              u881 09A8                              u970 0C3C  
                            u971 0C3B                              u955 0AD4                              u875 0D8E  
                            u980 0C4D                              u981 0C4C                              u990 0C6C  
                            u991 0C6B                              u895 09B0                              _dec 006D  
                            _isr 0950                              fsr0 0004                              _uni 006C  
                            indf 0000     __size_of_BMP280_readPressure 0536           BMP280_begin@P_sampling 002B  
                           l1201 092F                             l1203 0934                             l1211 0A0B  
                           l1221 09C9                             l1213 0A10                             l1205 09F5  
                           l1301 0D52                             l1215 0A16                             l1207 09FA  
                           l1231 0B69                             l1223 0B43                             l1303 0D61  
                           l1311 09A3                             l1217 0A1E                             l1209 0A02  
                           l1241 0B9C                             l1233 0B72                             l1225 0B55  
                           l1305 0D70                             l1401 021B                             l1321 09C3  
                           l1313 09A5                             l1235 0B84                             l1227 0B58  
                           l1243 0BA2                             l1331 0ACA                             l1307 0D7E  
                           l1403 024C                             l1315 09A9                             l1251 0A23  
                           l1341 0C36                             l1237 0B92                             l1229 0B65  
                           l1333 0AD3                             l1325 0AA5                             l1421 07DC  
                           l1413 05A2                             l1309 0D83                             l1317 09B6  
                           l1261 0A5B                             l1253 0A27                             l1191 0949  
                           l1271 0B3C                             l1263 0012                             l1351 0C64  
                           l1343 0C3C                             l1239 0B93                             l1335 0AE4  
                           l1327 0AAF                             l1415 0623                             l1407 02B8  
                           l1247 093A                             l1319 09BD                             l1431 0F47  
                           l1255 0A2A                             l1193 0913                             l1265 004F  
                           l1361 0C89                             l1353 0C6C                             l1345 0C4D  
                           l1329 0AB3                             l1417 0637                             l1409 0599  
                           l1281 0CD2                             l1249 0940                             l1441 0986  
                           l1433 0F62                             l1425 0ED5                             l1257 0A59  
                           l1195 0918                             l1275 0A60                             l1363 0C9B  
                           l1355 0C6F                             l1371 0CB9                             l1347 0C58  
                           l1339 0C35                             l1419 065A                             l1291 0CF1  
                           l1283 0CD5                             l1443 0992                             l1435 0FA1  
                           l1427 0EED                             l1259 0A5A                             l1523 0C24  
                           l1189 0943                             l1197 091C                             l1277 0A8E  
                           l1269 0AF0                             l1373 0CBE                             l1365 0CA9  
                           l1357 0C7C                             l1349 0C5C                             l1293 0CFA  
                           l1285 0CDA                             l1445 0996                             l1437 0FBC  
                           l1429 0F08                             l1381 0976                             l1461 0BD1  
                           l1199 0921                             l1279 0A98                             l1383 0DB2  
                           l1375 0CC9                             l1367 0CAA                             l1359 0C80  
                           l1295 0D09                             l1287 0CE3                             l1439 0985  
                           l1471 0BF8                             l1463 0BD7                             l1455 0BAB  
                           l1393 0DD9                             l1369 0CB3                             l1297 0D18  
                           l1289 0CEC                             l1465 0BE2                             l1457 0BBE  
                           l1395 0DE4                             l1387 0DBE                             l1299 0D27  
                           l1379 0968                             l1475 0C1A                             l1467 0BE8  
                           l1459 0BCD                             l1389 0DCA                             l1469 0BF0  
                           l1399 0056                             ?_isr 0071                             STR_1 0808  
                           STR_2 0806                             u1010 0C80                             u1011 0C7F  
                           u1005 0C71                             u1101 00A8                             u1030 0C9B  
                           u1102 00A9                             u1031 0C9A                             u1111 0140  
                           u1103 00AE                             u1200 055A                             u1112 0141  
                           u1104 00AF                             u1025 0C82                             u1201 055B  
                           u1121 0199                             u1113 0146                             u1105 00B4  
                           u1050 0CB9                             u1210 05A1                             u1202 0560  
                           u1130 028C                             u1122 019A                             u1114 0147  
                           u1106 00B5                             u1051 0CB8                             u1035 0C97  
                           u1211 05A0                             u1203 0561                             u1131 028D  
                           u1123 019F                             u1115 014C                             u1060 0CBE  
                           u1300 079F                             u1140 02EE                             u1132 0292  
                           u1124 01A0                             u1116 014D                             u1061 0CBD  
                           u1045 0CAB                             u1301 07A0                             u1221 05E5  
                           u1141 02EF                             u1133 0293                             u1125 01A5  
                           u1070 0DBD                             u1302 07A5                             u1230 05F9  
                           u1222 05E6                             u1150 03C3                             u1142 02F4  
                           u1126 01A6                             u1071 0DBC                             u1303 07A6  
                           u1231 05FA                             u1223 05EB                             u1143 02F5  
                           u1311 0F32                             u1080 0DE4                             u1240 0637  
                           u1232 05FF                             u1224 05EC                             u1160 03CD  
                           u1312 0F33                             u1081 0DE3                             u1241 0636  
                           u1233 0600                             u1225 05F1                             u1161 03CE  
                           u1321 0F8C                             u1313 0F38                             u1250 068A  
                           u1226 05F2                             u1170 03F4                             u1162 03D3  
                           u1090 006F                             u1322 0F8D                             u1314 0F39  
                           u1243 0633                             u1163 03D4                             u1155 03BE  
                           u1331 0FE6                             u1323 0F92                             u1315 0F3E  
                           u1260 06A3                             u1180 0415                             u1340 09A2  
                           u1332 0FE7                             u1324 0F93                             u1316 0F3F  
                           u1181 0416                             u1341 09A1                             u1333 0FEC  
                           u1325 0F98                             u1270 06C3                             u1190 0511  
                           u1182 041B                             u1334 0FED                             u1326 0F99  
                           u1407 0DD2                             u1255 0685                             u1191 0512  
                           u1183 041C                             u1175 03EF                             u1095 006A  
                           u1335 0FF2                             u1280 0723                             u1192 0517  
                           u1336 0FF3                             u1265 069E                             u1193 0518  
                           u1290 078D                             u1291 078E                             u1275 06BE  
                           u1292 0793                             u1293 0794                             u1285 071E  
                           u1397 0BC6                             _PEIE 005E                             i1l91 0961  
                           _TXIF 0064          BMP280_Configure@standby 0023                             _deci 006B  
                           _main 0BAB                             _temp 0065                             btemp 007E  
                           start 000C  __size_of_BMP280_readTemperature 0262           BMP280_begin@T_sampling 002A  
          __size_of_BMP280_Read8 0044                            ??_isr 0071                 ?_I2C_Master_Init 0028  
               ?_I2C_Master_Read 0074                 ?_I2C_Master_Wait 0071            __size_of_BMP280_Write 002D  
               ?_I2C_Master_Stop 0071            __size_of_BMP280_begin 0124                  __end_of___aldiv 0CD2  
                          ?_main 0071                            _ANSEL 0188                  __end_of___lldiv 0BAB  
                          i1l239 092E                            _RCREG 001A                  BMP280_Read8@ret 0023  
    _BMP280_readTemperature$1202 0052      _BMP280_readTemperature$1203 004D                            _SPBRG 0099  
                          _PORTA 0005                            _PORTB 0006                            _PORTD 0008  
                          _TRISA 0085                            _TRISB 0086                            _TRISD 0088  
                          _SSPIE 0463                            _SSPIF 0063                            _TXREG 0019  
            ___lmul@multiplicand 002C                            _adc_P 00A4                            _adc_T 00A8  
                          _centi 006A                            _setup 0968                            pclath 000A  
                          status 0003                            wtemp0 007E                     _BMP280_Read8 000F  
                     Send_Data@X 0074                     _BMP280_Write 09C8                     _BMP280_calib 00AC  
                   _BMP280_begin 0DB1                  __initialization 07EB                     __end_of_main 0C35  
         __size_of_BMP280_Read16 0056                           ??_main 0062                    ??_Send_String 0075  
         __size_of_BMP280_Update 00DF           _BMP280_readTemperature 0053                ?_I2C_Master_Start 0071  
                  ?_Receive_Data 0071                ?_I2C_Master_Write 0074                 BMP280_Read16@ret 0025  
             ??_I2C_Master_Start 0074               ??_I2C_Master_Write 0076                           ?_setup 0071  
                         _ANSELH 0189                           i1l1451 092D                           i1l1447 0925  
                         i1l1449 092B                           i1l1481 0950                           i1l1483 0956  
                         i1l1485 0960                           u135_20 092B                           u135_21 092A  
                         u136_20 0956                           u136_21 0955                           _SPBRGH 009A  
                         _SSPADD 0093                           _TRISC3 043B                           _TRISC4 043C  
                         _SSPCON 0014                           _SSPBUF 0013                           ___lmul 0AA5  
             __size_of_Send_Data 000A                        ??___aldiv 0074                           ___wmul 09A3  
             __size_of_Send_Temp 012B                        ??___lldiv 0074                           _t_fine 00A0  
     BMP280_Configure@P_sampling 0021                   ??_Receive_Data 0071                           saved_w 007E  
       __end_of_BMP280_Configure 0AA5              __end_of_Send_String 09A3                    _BMP280_Read16 0AED  
        __end_of__initialization 07FC       BMP280_Configure@T_sampling 0020                    _BMP280_Update 0CD2  
                 __pcstackCOMMON 0071              _BMP280_readPressure 02B5                    __end_of_setup 0984  
               BMP280_Update@ret 0024             ?_BMP280_readPressure 0071                __end_of_Send_Data 0943  
              __end_of_Send_Temp 1000                          ??_setup 007A                       __pbssBANK0 0065  
                     __pbssBANK1 00A0                   ?_BMP280_Read16 0020                   ?_BMP280_Update 0071  
        BMP280_readPressure@var1 005E          BMP280_readPressure@var2 0056          BMP280_readPressure@pres 0051  
                     __pmaintext 0BAB                          ?___lmul 0028                          ?___wmul 0074  
                     __pintentry 0004                   ___lmul@product 0031                      _Send_String 0984  
               BMP280_begin@mode 007A            ??_BMP280_readPressure 0035                          _SSPCON2 0091  
                        _SSPSTAT 0094                       __stringtab 0800       BMP280_Configure@_ctrl_meas 0028  
           __end_of_Receive_Data 092F             BMP280_Write@reg_addr 0079                          ___aldiv 0C35  
                __size_of___lmul 0048                          ___lldiv 0B43                  __size_of___wmul 0025  
        ?_BMP280_readTemperature 0071                          __ptext1 0968                          __ptext2 0A23  
                        __ptext3 0ED5                          __ptext4 09A3                          __ptext5 0984  
                        __ptext6 0939                          __ptext7 0053                          __ptext8 0CD2  
                        __ptext9 02B5                     __size_of_isr 0018                 ___aldiv@dividend 0024  
       __size_of_I2C_Master_Init 003A         __size_of_I2C_Master_Read 002E         __size_of_I2C_Master_Wait 000D  
       __size_of_I2C_Master_Stop 0009                  ??_BMP280_Read16 0022                          clrloop0 090C  
           end_of_initialization 07FC                  ??_BMP280_Update 0020            BMP280_Read16@reg_addr 0024  
             BMP280_begin@filter 002C        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0020                  ___lldiv@counter 0079                        _RCSTAbits 0018  
               ___aldiv@quotient 0077                 I2C_Master_Init@c 0028                 I2C_Master_Read@a 0074  
 __end_of_BMP280_readTemperature 02B5                        _PORTBbits 0006                        _TRISCbits 0087  
              ?_BMP280_Configure 0020               ??_BMP280_Configure 0024           BMP280_Configure@filter 0022  
                      _TXSTAbits 0098                   __end_of___lmul 0AED             I2C_Master_Read@temp1 0078  
                 __end_of___wmul 09C8                      _BAUDCTLbits 0187                     Send_String@X 0076  
            start_initialization 07EB                      __end_of_isr 0968            __size_of_Receive_Data 000A  
              ??_I2C_Master_Init 002C                ??_I2C_Master_Read 0076                ??_I2C_Master_Wait 0074  
              ??_I2C_Master_Stop 0074                        _Send_Data 0939                        _Send_Temp 0ED5  
                       ??___lmul 0030                         ??___wmul 0078                     ?_Send_String 0071  
           BMP280_Configure@mode 0027                        ___latbits 0002                     _Receive_Data 0925  
                  __pcstackBANK0 0020                       ?_Send_Data 0071                       ?_Send_Temp 0071  
                  ?_BMP280_Read8 0071                 _I2C_Master_Start 0913                 _I2C_Master_Write 092F  
                  ?_BMP280_Write 0076                    ?_BMP280_begin 002A             BMP280_readPressure@p 005A  
              BMP280_Write@_data 0076                         ?___aldiv 0020                         ?___lldiv 0020  
                      __pstrings 0800      __end_of_BMP280_readPressure 07EB                   __size_of_setup 001C  
                ___aldiv@divisor 0020                interrupt_function 0004                  ___aldiv@counter 0075  
                 ___wmul@product 0078                   ??_BMP280_Read8 0020                        clear_ram0 090B  
                 ??_BMP280_Write 0077                         _PIE1bits 008C                   ??_BMP280_begin 002E  
                       _PIR1bits 000C         _BMP280_readPressure$1204 0052         _BMP280_readPressure$1205 0045  
       _BMP280_readPressure$1206 0049         _BMP280_readPressure$1207 004D                      __stringbase 0805  
              ___wmul@multiplier 0074                ___lmul@multiplier 0028            __end_of_BMP280_Read16 0B43  
                    ??_Send_Data 0074                      ??_Send_Temp 0028            __end_of_BMP280_Update 0DB1  
      __size_of_BMP280_Configure 0048                 __size_of___aldiv 009D                 __size_of___lldiv 0068  
             __end_of__stringtab 0806                  _I2C_Master_Init 0A23                  _I2C_Master_Read 09F5  
                _I2C_Master_Wait 0943                  _I2C_Master_Stop 091C             __size_of_Send_String 001F  
                       __ptext10 0AA5                         __ptext11 0B43                         __ptext20 091C  
                       __ptext12 0C35                         __ptext21 0913                         __ptext13 0DB1  
                       __ptext22 0943                         __ptext14 000F                         __ptext23 0950  
                       __ptext15 0AED                         __ptext24 0925                         __ptext16 09F5  
                       __ptext17 0A5D                         __ptext18 09C8                         __ptext19 092F  
     BMP280_readTemperature@var1 0045       BMP280_readTemperature@var2 0049       BMP280_readTemperature@temp 0051  
                  __size_of_main 008A                         _pressure 00C4             __end_of_BMP280_Read8 0053  
       __end_of_I2C_Master_Start 091C         __end_of_I2C_Master_Write 0939             __end_of_BMP280_Write 09F5  
           __end_of_BMP280_begin 0ED5                         intlevel1 0000             BMP280_Read8@reg_addr 0022  
               ___lldiv@dividend 0024              BMP280_begin@standby 002D         ??_BMP280_readTemperature 0035  
                      stringcode 0800          __end_of_I2C_Master_Init 0A5D          __end_of_I2C_Master_Read 0A23  
        __end_of_I2C_Master_Wait 0950          __end_of_I2C_Master_Stop 0925                      _temperature 00C8  
               ___lldiv@quotient 0075                I2C_Master_Write@d 0074                         stringdir 0800  
                       stringtab 0800                     ___aldiv@sign 0076                      _SSPCON2bits 0091  
