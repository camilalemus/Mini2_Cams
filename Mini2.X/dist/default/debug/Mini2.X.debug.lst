

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 22:36:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0013                     _SSPBUF	set	19
   379  0014                     _SSPCON	set	20
   380  0008                     _PORTD	set	8
   381  0006                     _PORTB	set	6
   382  0005                     _PORTA	set	5
   383  0063                     _SSPIF	set	99
   384  005E                     _PEIE	set	94
   385  005F                     _GIE	set	95
   386  0091                     _SSPCON2bits	set	145
   387  0087                     _TRISCbits	set	135
   388  0094                     _SSPSTAT	set	148
   389  0093                     _SSPADD	set	147
   390  0091                     _SSPCON2	set	145
   391  0085                     _TRISA	set	133
   392  0088                     _TRISD	set	136
   393  0086                     _TRISB	set	134
   394  0463                     _SSPIE	set	1123
   395  043C                     _TRISC4	set	1084
   396  043B                     _TRISC3	set	1083
   397  0189                     _ANSELH	set	393
   398  0188                     _ANSEL	set	392
   399                           
   400                           	psect	cinit
   401  07EB                     start_initialization:	
   402                           ; #config settings
   403                           
   404  07EB                     __initialization:
   405                           
   406                           ; Clear objects allocated to BANK0
   407  07EB  1383               	bcf	3,7	;select IRP bank0
   408  07EC  3062               	movlw	low __pbssBANK0
   409  07ED  0084               	movwf	4
   410  07EE  306E               	movlw	low (__pbssBANK0+12)
   411  07EF  120A  158A  23D0  120A  118A  	fcall	clear_ram0
   412                           
   413                           ; Clear objects allocated to BANK1
   414  07F4  30A0               	movlw	low __pbssBANK1
   415  07F5  0084               	movwf	4
   416  07F6  30C0               	movlw	low (__pbssBANK1+32)
   417  07F7  120A  158A  23D0  120A  118A  	fcall	clear_ram0
   418  07FC                     end_of_initialization:	
   419                           ;End of C runtime variable initialization code
   420                           
   421  07FC                     __end_of__initialization:
   422  07FC  0183               	clrf	3
   423  07FD  120A  158A  2C6F   	ljmp	_main	;jump to C main() function
   424                           
   425                           	psect	bssBANK0
   426  0062                     __pbssBANK0:
   427  0062                     _t_fine:
   428  0062                     	ds	4
   429  0066                     _adc_T:
   430  0066                     	ds	4
   431  006A                     _temperature:
   432  006A                     	ds	4
   433                           
   434                           	psect	bssBANK1
   435  00A0                     __pbssBANK1:
   436  00A0                     _adc_P:
   437  00A0                     	ds	4
   438  00A4                     _BMP280_calib:
   439  00A4                     	ds	24
   440  00BC                     _pressure:
   441  00BC                     	ds	4
   442                           
   443                           	psect	clrtext
   444  0BD0                     clear_ram0:	
   445                           ;	Called with FSR containing the base address, and
   446                           ;	W with the last address+1
   447                           
   448  0BD0  0064               	clrwdt	;clear the watchdog before getting into this loop
   449  0BD1                     clrloop0:
   450  0BD1  0180               	clrf	0	;clear RAM location pointed to by FSR
   451  0BD2  0A84               	incf	4,f	;increment pointer
   452  0BD3  0604               	xorwf	4,w	;XOR with final address
   453  0BD4  1903               	btfsc	3,2	;have we reached the end yet?
   454  0BD5  3400               	retlw	0	;all done for this memory range, return
   455  0BD6  0604               	xorwf	4,w	;XOR again to restore value
   456  0BD7  2BD1               	goto	clrloop0	;do the next byte
   457                           
   458                           	psect	cstackCOMMON
   459  0071                     __pcstackCOMMON:
   460  0071                     ?_setup:
   461  0071                     ?_main:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0071                     ?_I2C_Master_Wait:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0071                     ??_I2C_Master_Wait:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0071                     ?_I2C_Master_Start:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0071                     ??_I2C_Master_Start:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0071                     ?_I2C_Master_Stop:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0071                     ??_I2C_Master_Stop:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0071                     ?_I2C_Master_Write:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0071                     ?_BMP280_Read8:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0071                     ?_BMP280_Update:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0071                     ?_BMP280_readTemperature:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0071                     ?_BMP280_readPressure:	
   495                           ; 2 bytes @ 0x0
   496                           
   497  0071                     ?_I2C_Master_Read:	
   498                           ; 2 bytes @ 0x0
   499                           
   500  0071                     ?___lldiv:	
   501                           ; 2 bytes @ 0x0
   502                           
   503  0071                     ?___aldiv:	
   504                           ; 4 bytes @ 0x0
   505                           
   506  0071                     I2C_Master_Write@d:	
   507                           ; 4 bytes @ 0x0
   508                           
   509  0071                     I2C_Master_Read@a:	
   510                           ; 2 bytes @ 0x0
   511                           
   512  0071                     ___lldiv@divisor:	
   513                           ; 2 bytes @ 0x0
   514                           
   515  0071                     ___aldiv@divisor:	
   516                           ; 4 bytes @ 0x0
   517                           
   518                           
   519                           ; 4 bytes @ 0x0
   520  0071                     	ds	2
   521  0073                     ??_I2C_Master_Write:
   522  0073                     ??_I2C_Master_Read:	
   523                           ; 1 bytes @ 0x2
   524                           
   525  0073                     ?_BMP280_Write:	
   526                           ; 1 bytes @ 0x2
   527                           
   528  0073                     BMP280_Write@_data:	
   529                           ; 1 bytes @ 0x2
   530                           
   531                           
   532                           ; 1 bytes @ 0x2
   533  0073                     	ds	1
   534  0074                     ??_BMP280_Write:
   535                           
   536                           ; 1 bytes @ 0x3
   537  0074                     	ds	1
   538  0075                     I2C_Master_Read@temp:
   539  0075                     ___lldiv@dividend:	
   540                           ; 2 bytes @ 0x4
   541                           
   542  0075                     ___aldiv@dividend:	
   543                           ; 4 bytes @ 0x4
   544                           
   545                           
   546                           ; 4 bytes @ 0x4
   547  0075                     	ds	1
   548  0076                     BMP280_Write@reg_addr:
   549                           
   550                           ; 1 bytes @ 0x5
   551  0076                     	ds	1
   552  0077                     ??_BMP280_Read8:
   553  0077                     ?_BMP280_Configure:	
   554                           ; 1 bytes @ 0x6
   555                           
   556  0077                     ??_BMP280_Update:	
   557                           ; 1 bytes @ 0x6
   558                           
   559  0077                     ?_BMP280_Read16:	
   560                           ; 1 bytes @ 0x6
   561                           
   562  0077                     BMP280_Configure@T_sampling:	
   563                           ; 2 bytes @ 0x6
   564                           
   565                           
   566                           ; 1 bytes @ 0x6
   567  0077                     	ds	1
   568  0078                     BMP280_Configure@P_sampling:
   569                           
   570                           ; 1 bytes @ 0x7
   571  0078                     	ds	1
   572  0079                     ??_BMP280_Read16:
   573  0079                     ??___lldiv:	
   574                           ; 1 bytes @ 0x8
   575                           
   576  0079                     ??___aldiv:	
   577                           ; 1 bytes @ 0x8
   578                           
   579  0079                     BMP280_Read8@reg_addr:	
   580                           ; 1 bytes @ 0x8
   581                           
   582  0079                     BMP280_Configure@filter:	
   583                           ; 1 bytes @ 0x8
   584                           
   585                           
   586                           ; 1 bytes @ 0x8
   587  0079                     	ds	1
   588  007A                     ??_I2C_Master_Init:
   589  007A                     ??___lmul:	
   590                           ; 1 bytes @ 0x9
   591                           
   592  007A                     BMP280_Read8@ret:	
   593                           ; 1 bytes @ 0x9
   594                           
   595  007A                     BMP280_Configure@standby:	
   596                           ; 1 bytes @ 0x9
   597                           
   598                           
   599                           ; 1 bytes @ 0x9
   600  007A                     	ds	1
   601  007B                     ??_BMP280_Configure:
   602  007B                     BMP280_Read16@reg_addr:	
   603                           ; 1 bytes @ 0xA
   604                           
   605                           
   606                           ; 1 bytes @ 0xA
   607  007B                     	ds	1
   608  007C                     BMP280_Read16@ret:
   609                           
   610                           ; 2 bytes @ 0xB
   611  007C                     	ds	2
   612  007E                     ??_setup:
   613                           
   614                           	psect	cstackBANK0
   615  0020                     __pcstackBANK0:	
   616                           ; 1 bytes @ 0xD
   617                           
   618  0020                     BMP280_Configure@mode:
   619  0020                     ___aldiv@counter:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0020                     BMP280_Update@ret:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0020                     ___lldiv@quotient:	
   626                           ; 4 bytes @ 0x0
   627                           
   628                           
   629                           ; 4 bytes @ 0x0
   630  0020                     	ds	1
   631  0021                     BMP280_Configure@_ctrl_meas:
   632  0021                     ___aldiv@sign:	
   633                           ; 1 bytes @ 0x1
   634                           
   635                           
   636                           ; 1 bytes @ 0x1
   637  0021                     	ds	1
   638  0022                     BMP280_Configure@_config:
   639  0022                     ___aldiv@quotient:	
   640                           ; 1 bytes @ 0x2
   641                           
   642                           
   643                           ; 4 bytes @ 0x2
   644  0022                     	ds	1
   645  0023                     ?_BMP280_begin:
   646  0023                     BMP280_begin@T_sampling:	
   647                           ; 2 bytes @ 0x3
   648                           
   649                           
   650                           ; 1 bytes @ 0x3
   651  0023                     	ds	1
   652  0024                     BMP280_begin@P_sampling:
   653  0024                     ___lldiv@counter:	
   654                           ; 1 bytes @ 0x4
   655                           
   656                           
   657                           ; 1 bytes @ 0x4
   658  0024                     	ds	1
   659  0025                     ?_I2C_Master_Init:
   660  0025                     BMP280_begin@filter:	
   661                           ; 1 bytes @ 0x5
   662                           
   663  0025                     I2C_Master_Init@c:	
   664                           ; 1 bytes @ 0x5
   665                           
   666                           
   667                           ; 4 bytes @ 0x5
   668  0025                     	ds	1
   669  0026                     ?___lmul:
   670  0026                     BMP280_begin@standby:	
   671                           ; 4 bytes @ 0x6
   672                           
   673  0026                     ___lmul@multiplier:	
   674                           ; 1 bytes @ 0x6
   675                           
   676                           
   677                           ; 4 bytes @ 0x6
   678  0026                     	ds	1
   679  0027                     ??_BMP280_begin:
   680                           
   681                           ; 1 bytes @ 0x7
   682  0027                     	ds	3
   683  002A                     ___lmul@multiplicand:
   684                           
   685                           ; 4 bytes @ 0xA
   686  002A                     	ds	1
   687  002B                     BMP280_begin@mode:
   688                           
   689                           ; 1 bytes @ 0xB
   690  002B                     	ds	3
   691  002E                     ___lmul@product:
   692                           
   693                           ; 4 bytes @ 0xE
   694  002E                     	ds	4
   695  0032                     ??_BMP280_readTemperature:
   696  0032                     ??_BMP280_readPressure:	
   697                           ; 1 bytes @ 0x12
   698                           
   699                           
   700                           ; 1 bytes @ 0x12
   701  0032                     	ds	16
   702  0042                     BMP280_readTemperature@var1:
   703  0042                     _BMP280_readPressure$943:	
   704                           ; 4 bytes @ 0x22
   705                           
   706                           
   707                           ; 4 bytes @ 0x22
   708  0042                     	ds	4
   709  0046                     BMP280_readTemperature@var2:
   710  0046                     _BMP280_readPressure$944:	
   711                           ; 4 bytes @ 0x26
   712                           
   713                           
   714                           ; 4 bytes @ 0x26
   715  0046                     	ds	4
   716  004A                     _BMP280_readTemperature$941:
   717  004A                     _BMP280_readPressure$945:	
   718                           ; 4 bytes @ 0x2A
   719                           
   720                           
   721                           ; 4 bytes @ 0x2A
   722  004A                     	ds	4
   723  004E                     BMP280_readTemperature@temp:
   724  004E                     BMP280_readPressure@pres:	
   725                           ; 1 bytes @ 0x2E
   726                           
   727                           
   728                           ; 1 bytes @ 0x2E
   729  004E                     	ds	1
   730  004F                     _BMP280_readTemperature$940:
   731  004F                     _BMP280_readPressure$942:	
   732                           ; 4 bytes @ 0x2F
   733                           
   734                           
   735                           ; 4 bytes @ 0x2F
   736  004F                     	ds	4
   737  0053                     BMP280_readPressure@var2:
   738                           
   739                           ; 4 bytes @ 0x33
   740  0053                     	ds	4
   741  0057                     BMP280_readPressure@p:
   742                           
   743                           ; 4 bytes @ 0x37
   744  0057                     	ds	4
   745  005B                     BMP280_readPressure@var1:
   746                           
   747                           ; 4 bytes @ 0x3B
   748  005B                     	ds	4
   749  005F                     ??_main:
   750                           
   751                           ; 1 bytes @ 0x3F
   752  005F                     	ds	3
   753                           
   754                           	psect	maintext
   755  0C6F                     __pmaintext:	
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 57 in file "mainm2.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : B00/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          0       3       0       0       0
   778 ;;      Totals:         0       3       0       0       0
   779 ;;Total ram usage:        3 bytes
   780 ;; Hardware stack levels required when called:    5
   781 ;; This function calls:
   782 ;;		_BMP280_begin
   783 ;;		_BMP280_readPressure
   784 ;;		_BMP280_readTemperature
   785 ;;		_setup
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _main
   793  0C6F                     _main:
   794  0C6F                     l1224:	
   795                           ;incstack = 0
   796                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   797                           
   798                           
   799                           ;mainm2.c: 58:     setup();
   800  0C6F  120A  158A  23F4  120A  158A  	fcall	_setup
   801                           
   802                           ;mainm2.c: 59:     BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, STAND
      +                          BY_0_5);
   803  0C74  1283               	bcf	3,5	;RP0=0, select bank0
   804  0C75  1303               	bcf	3,6	;RP1=0, select bank0
   805  0C76  01A3               	clrf	BMP280_begin@T_sampling
   806  0C77  0AA3               	incf	BMP280_begin@T_sampling,f
   807  0C78  01A4               	clrf	BMP280_begin@P_sampling
   808  0C79  0AA4               	incf	BMP280_begin@P_sampling,f
   809  0C7A  01A5               	clrf	BMP280_begin@filter
   810  0C7B  01A6               	clrf	BMP280_begin@standby
   811  0C7C  3003               	movlw	3
   812  0C7D  120A  158A  2722  120A  158A  	fcall	_BMP280_begin
   813  0C82                     l1226:
   814                           
   815                           ;mainm2.c: 61:         _delay((unsigned long)((200)*(8000000/4000.0)));
   816  0C82  3003               	movlw	3
   817  0C83  1283               	bcf	3,5	;RP0=0, select bank0
   818  0C84  1303               	bcf	3,6	;RP1=0, select bank0
   819  0C85  00E1               	movwf	??_main+2
   820  0C86  3008               	movlw	8
   821  0C87  00E0               	movwf	??_main+1
   822  0C88  3076               	movlw	118
   823  0C89  00DF               	movwf	??_main
   824  0C8A                     u1177:
   825  0C8A  0BDF               	decfsz	??_main,f
   826  0C8B  2C8A               	goto	u1177
   827  0C8C  0BE0               	decfsz	??_main+1,f
   828  0C8D  2C8A               	goto	u1177
   829  0C8E  0BE1               	decfsz	??_main+2,f
   830  0C8F  2C8A               	goto	u1177
   831  0C90  0000               	nop
   832  0C91                     l1228:
   833                           
   834                           ;mainm2.c: 62:         PORTA = 0b11111111;
   835  0C91  30FF               	movlw	255
   836  0C92  1283               	bcf	3,5	;RP0=0, select bank0
   837  0C93  1303               	bcf	3,6	;RP1=0, select bank0
   838  0C94  0085               	movwf	5	;volatile
   839  0C95                     l1230:
   840                           
   841                           ;mainm2.c: 63:         BMP280_readTemperature(&temperature);
   842  0C95  306A               	movlw	(low (_temperature| 0))& (0+255)
   843  0C96  120A  118A  20B3  120A  158A  	fcall	_BMP280_readTemperature
   844  0C9B                     l1232:
   845                           
   846                           ;mainm2.c: 64:         BMP280_readPressure(&pressure);
   847  0C9B  30BC               	movlw	(low (_pressure| 0))& (0+255)
   848  0C9C  120A  118A  22C5  120A  158A  	fcall	_BMP280_readPressure
   849  0CA1  2C82               	goto	l1226
   850  0CA2  120A  118A  2801   	ljmp	start
   851  0CA5                     __end_of_main:
   852                           
   853                           	psect	text1
   854  0BF4                     __ptext1:	
   855 ;; *************** function _setup *****************
   856 ;; Defined at:
   857 ;;		line 73 in file "mainm2.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    2
   878 ;; This function calls:
   879 ;;		_I2C_Master_Init
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _setup
   887  0BF4                     _setup:
   888  0BF4                     l1178:	
   889                           ;incstack = 0
   890                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   891                           
   892                           
   893                           ;mainm2.c: 74:     ANSEL = 0;
   894  0BF4  1683               	bsf	3,5	;RP0=1, select bank3
   895  0BF5  1703               	bsf	3,6	;RP1=1, select bank3
   896  0BF6  0188               	clrf	8	;volatile
   897                           
   898                           ;mainm2.c: 75:     ANSELH = 0;
   899  0BF7  0189               	clrf	9	;volatile
   900                           
   901                           ;mainm2.c: 76:     TRISB = 0;
   902  0BF8  1683               	bsf	3,5	;RP0=1, select bank1
   903  0BF9  1303               	bcf	3,6	;RP1=0, select bank1
   904  0BFA  0186               	clrf	6	;volatile
   905                           
   906                           ;mainm2.c: 77:     TRISD = 0;
   907  0BFB  0188               	clrf	8	;volatile
   908                           
   909                           ;mainm2.c: 78:     PORTB = 0;
   910  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
   911  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
   912  0BFE  0186               	clrf	6	;volatile
   913                           
   914                           ;mainm2.c: 79:     PORTD = 0;
   915  0BFF  0188               	clrf	8	;volatile
   916                           
   917                           ;mainm2.c: 80:     PORTA = 0;
   918  0C00  0185               	clrf	5	;volatile
   919                           
   920                           ;mainm2.c: 81:     TRISA = 0;
   921  0C01  1683               	bsf	3,5	;RP0=1, select bank1
   922  0C02  1303               	bcf	3,6	;RP1=0, select bank1
   923  0C03  0185               	clrf	5	;volatile
   924  0C04                     l1180:
   925                           
   926                           ;mainm2.c: 82:     I2C_Master_Init(100000);
   927  0C04  3000               	movlw	0
   928  0C05  1283               	bcf	3,5	;RP0=0, select bank0
   929  0C06  1303               	bcf	3,6	;RP1=0, select bank0
   930  0C07  00A8               	movwf	I2C_Master_Init@c+3
   931  0C08  3001               	movlw	1
   932  0C09  00A7               	movwf	I2C_Master_Init@c+2
   933  0C0A  3086               	movlw	134
   934  0C0B  00A6               	movwf	I2C_Master_Init@c+1
   935  0C0C  30A0               	movlw	160
   936  0C0D  00A5               	movwf	I2C_Master_Init@c
   937  0C0E  120A  158A  24A5  120A  158A  	fcall	_I2C_Master_Init
   938  0C13                     l45:
   939  0C13  0008               	return
   940  0C14                     __end_of_setup:
   941                           
   942                           	psect	text2
   943  0CA5                     __ptext2:	
   944 ;; *************** function _I2C_Master_Init *****************
   945 ;; Defined at:
   946 ;;		line 16 in file "I2C.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  c               4    5[BANK0 ] const unsigned long 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       4       0       0       0
   961 ;;      Locals:         0       0       0       0       0
   962 ;;      Temps:          4       0       0       0       0
   963 ;;      Totals:         4       4       0       0       0
   964 ;;Total ram usage:        8 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    1
   967 ;; This function calls:
   968 ;;		___lldiv
   969 ;; This function is called by:
   970 ;;		_setup
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _I2C_Master_Init
   976  0CA5                     _I2C_Master_Init:
   977  0CA5                     l1064:	
   978                           ;incstack = 0
   979                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   980                           
   981                           
   982                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   983  0CA5  3028               	movlw	40
   984  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
   985  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
   986  0CA8  0094               	movwf	20	;volatile
   987  0CA9                     l1066:
   988                           
   989                           ;I2C.c: 19:     SSPCON2 = 0;
   990  0CA9  1683               	bsf	3,5	;RP0=1, select bank1
   991  0CAA  1303               	bcf	3,6	;RP1=0, select bank1
   992  0CAB  0191               	clrf	17	;volatile
   993  0CAC                     l1068:
   994                           
   995                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
   996  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
   997  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
   998  0CAE  0825               	movf	I2C_Master_Init@c,w
   999  0CAF  00FA               	movwf	??_I2C_Master_Init
  1000  0CB0  0826               	movf	I2C_Master_Init@c+1,w
  1001  0CB1  00FB               	movwf	??_I2C_Master_Init+1
  1002  0CB2  0827               	movf	I2C_Master_Init@c+2,w
  1003  0CB3  00FC               	movwf	??_I2C_Master_Init+2
  1004  0CB4  0828               	movf	I2C_Master_Init@c+3,w
  1005  0CB5  00FD               	movwf	??_I2C_Master_Init+3
  1006  0CB6  3002               	movlw	2
  1007  0CB7                     u695:
  1008  0CB7  1003               	clrc
  1009  0CB8  0DFA               	rlf	??_I2C_Master_Init,f
  1010  0CB9  0DFB               	rlf	??_I2C_Master_Init+1,f
  1011  0CBA  0DFC               	rlf	??_I2C_Master_Init+2,f
  1012  0CBB  0DFD               	rlf	??_I2C_Master_Init+3,f
  1013  0CBC                     u690:
  1014  0CBC  3EFF               	addlw	-1
  1015  0CBD  1D03               	skipz
  1016  0CBE  2CB7               	goto	u695
  1017  0CBF  087D               	movf	??_I2C_Master_Init+3,w
  1018  0CC0  00F4               	movwf	___lldiv@divisor+3
  1019  0CC1  087C               	movf	??_I2C_Master_Init+2,w
  1020  0CC2  00F3               	movwf	___lldiv@divisor+2
  1021  0CC3  087B               	movf	??_I2C_Master_Init+1,w
  1022  0CC4  00F2               	movwf	___lldiv@divisor+1
  1023  0CC5  087A               	movf	??_I2C_Master_Init,w
  1024  0CC6  00F1               	movwf	___lldiv@divisor
  1025  0CC7  3000               	movlw	0
  1026  0CC8  00F8               	movwf	___lldiv@dividend+3
  1027  0CC9  307A               	movlw	122
  1028  0CCA  00F7               	movwf	___lldiv@dividend+2
  1029  0CCB  3012               	movlw	18
  1030  0CCC  00F6               	movwf	___lldiv@dividend+1
  1031  0CCD  3000               	movlw	0
  1032  0CCE  00F5               	movwf	___lldiv@dividend
  1033  0CCF  120A  158A  25F5  120A  158A  	fcall	___lldiv
  1034  0CD4  0871               	movf	?___lldiv,w
  1035  0CD5  3EFF               	addlw	255
  1036  0CD6  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0CD7  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0CD8  0093               	movwf	19	;volatile
  1039  0CD9                     l1070:
  1040                           
  1041                           ;I2C.c: 21:     SSPSTAT = 0;
  1042  0CD9  0194               	clrf	20	;volatile
  1043  0CDA                     l1072:
  1044                           
  1045                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1046  0CDA  1587               	bsf	7,3	;volatile
  1047  0CDB                     l1074:
  1048                           
  1049                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1050  0CDB  1607               	bsf	7,4	;volatile
  1051  0CDC                     l74:
  1052  0CDC  0008               	return
  1053  0CDD                     __end_of_I2C_Master_Init:
  1054                           
  1055                           	psect	text3
  1056  00B3                     __ptext3:	
  1057 ;; *************** function _BMP280_readTemperature *****************
  1058 ;; Defined at:
  1059 ;;		line 242 in file "BMP280.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  temp            1    wreg     PTR long 
  1062 ;;		 -> temperature(4), 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  temp            1   46[BANK0 ] PTR long 
  1065 ;;		 -> temperature(4), 
  1066 ;;  var2            4   38[BANK0 ] long 
  1067 ;;  var1            4   34[BANK0 ] long 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  2   10[None  ] int 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         0      17       0       0       0
  1079 ;;      Temps:          0      16       0       0       0
  1080 ;;      Totals:         0      33       0       0       0
  1081 ;;Total ram usage:       33 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    3
  1084 ;; This function calls:
  1085 ;;		_BMP280_Update
  1086 ;;		___aldiv
  1087 ;;		___lmul
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _BMP280_readTemperature
  1095  00B3                     _BMP280_readTemperature:
  1096                           
  1097                           ;incstack = 0
  1098                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1099                           ;BMP280_readTemperature@temp stored from wreg
  1100  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1101  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1102  00B5  00CE               	movwf	BMP280_readTemperature@temp
  1103  00B6                     l1198:
  1104                           
  1105                           ;BMP280.c: 242: int BMP280_readTemperature(int32_t *temp);BMP280.c: 243: {;BMP280.c: 244
      +                          :   int32_t var1, var2;;BMP280.c: 246:   BMP280_Update();
  1106  00B6  120A  158A  265D  120A  118A  	fcall	_BMP280_Update
  1107                           
  1108                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1109  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1110  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1111  00BD  0824               	movf	_BMP280_calib^(0+128),w
  1112  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1113  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1114  00C0  00B2               	movwf	??_BMP280_readTemperature
  1115  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1116  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1117  00C3  0825               	movf	(_BMP280_calib+1)^(0+128),w
  1118  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1119  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1120  00C6  00B3               	movwf	??_BMP280_readTemperature+1
  1121  00C7  01B4               	clrf	??_BMP280_readTemperature+2
  1122  00C8  01B5               	clrf	??_BMP280_readTemperature+3
  1123  00C9  3001               	movlw	1
  1124  00CA                     u935:
  1125  00CA  1003               	clrc
  1126  00CB  0DB2               	rlf	??_BMP280_readTemperature,f
  1127  00CC  0DB3               	rlf	??_BMP280_readTemperature+1,f
  1128  00CD  0DB4               	rlf	??_BMP280_readTemperature+2,f
  1129  00CE  0DB5               	rlf	??_BMP280_readTemperature+3,f
  1130  00CF                     u930:
  1131  00CF  3EFF               	addlw	-1
  1132  00D0  1D03               	skipz
  1133  00D1  28CA               	goto	u935
  1134  00D2  3000               	movlw	0
  1135  00D3  00F4               	movwf	___aldiv@divisor+3
  1136  00D4  3000               	movlw	0
  1137  00D5  00F3               	movwf	___aldiv@divisor+2
  1138  00D6  3000               	movlw	0
  1139  00D7  00F2               	movwf	___aldiv@divisor+1
  1140  00D8  3008               	movlw	8
  1141  00D9  00F1               	movwf	___aldiv@divisor
  1142  00DA  0869               	movf	_adc_T+3,w
  1143  00DB  00F8               	movwf	___aldiv@dividend+3
  1144  00DC  0868               	movf	_adc_T+2,w
  1145  00DD  00F7               	movwf	___aldiv@dividend+2
  1146  00DE  0867               	movf	_adc_T+1,w
  1147  00DF  00F6               	movwf	___aldiv@dividend+1
  1148  00E0  0866               	movf	_adc_T,w
  1149  00E1  00F5               	movwf	___aldiv@dividend
  1150  00E2  120A  118A  2016  120A  118A  	fcall	___aldiv
  1151  00E7  0871               	movf	?___aldiv,w
  1152  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1153  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1154  00EA  00B6               	movwf	??_BMP280_readTemperature+4
  1155  00EB  0872               	movf	?___aldiv+1,w
  1156  00EC  00B7               	movwf	??_BMP280_readTemperature+5
  1157  00ED  0873               	movf	?___aldiv+2,w
  1158  00EE  00B8               	movwf	??_BMP280_readTemperature+6
  1159  00EF  0874               	movf	?___aldiv+3,w
  1160  00F0  00B9               	movwf	??_BMP280_readTemperature+7
  1161  00F1  0832               	movf	??_BMP280_readTemperature,w
  1162  00F2  02B6               	subwf	??_BMP280_readTemperature+4,f
  1163  00F3  0833               	movf	??_BMP280_readTemperature+1,w
  1164  00F4  1C03               	skipc
  1165  00F5  0F33               	incfsz	??_BMP280_readTemperature+1,w
  1166  00F6  28F8               	goto	u941
  1167  00F7  28F9               	goto	u942
  1168  00F8                     u941:
  1169  00F8  02B7               	subwf	??_BMP280_readTemperature+5,f
  1170  00F9                     u942:
  1171  00F9  0834               	movf	??_BMP280_readTemperature+2,w
  1172  00FA  1C03               	skipc
  1173  00FB  0F34               	incfsz	??_BMP280_readTemperature+2,w
  1174  00FC  28FE               	goto	u943
  1175  00FD  28FF               	goto	u944
  1176  00FE                     u943:
  1177  00FE  02B8               	subwf	??_BMP280_readTemperature+6,f
  1178  00FF                     u944:
  1179  00FF  0835               	movf	??_BMP280_readTemperature+3,w
  1180  0100  1C03               	skipc
  1181  0101  0F35               	incfsz	??_BMP280_readTemperature+3,w
  1182  0102  2904               	goto	u945
  1183  0103  2905               	goto	u946
  1184  0104                     u945:
  1185  0104  02B9               	subwf	??_BMP280_readTemperature+7,f
  1186  0105                     u946:
  1187  0105  0839               	movf	??_BMP280_readTemperature+7,w
  1188  0106  00A9               	movwf	___lmul@multiplier+3
  1189  0107  0838               	movf	??_BMP280_readTemperature+6,w
  1190  0108  00A8               	movwf	___lmul@multiplier+2
  1191  0109  0837               	movf	??_BMP280_readTemperature+5,w
  1192  010A  00A7               	movwf	___lmul@multiplier+1
  1193  010B  0836               	movf	??_BMP280_readTemperature+4,w
  1194  010C  00A6               	movwf	___lmul@multiplier
  1195  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1196  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1197  010F  0826               	movf	(_BMP280_calib^(0+128)+2),w
  1198  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0112  00AA               	movwf	___lmul@multiplicand
  1201  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1203  0115  0827               	movf	((_BMP280_calib+1)^(0+128)+2),w
  1204  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0118  00AB               	movwf	___lmul@multiplicand+1
  1207  0119  3000               	movlw	0
  1208  011A  1BAB               	btfsc	___lmul@multiplicand+1,7
  1209  011B  30FF               	movlw	255
  1210  011C  00AC               	movwf	___lmul@multiplicand+2
  1211  011D  00AD               	movwf	___lmul@multiplicand+3
  1212  011E  120A  158A  2561  120A  118A  	fcall	___lmul
  1213  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0125  0829               	movf	?___lmul+3,w
  1216  0126  00D2               	movwf	_BMP280_readTemperature$940+3
  1217  0127  0828               	movf	?___lmul+2,w
  1218  0128  00D1               	movwf	_BMP280_readTemperature$940+2
  1219  0129  0827               	movf	?___lmul+1,w
  1220  012A  00D0               	movwf	_BMP280_readTemperature$940+1
  1221  012B  0826               	movf	?___lmul,w
  1222  012C  00CF               	movwf	_BMP280_readTemperature$940
  1223                           
  1224                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1225  012D  3000               	movlw	0
  1226  012E  00F4               	movwf	___aldiv@divisor+3
  1227  012F  3000               	movlw	0
  1228  0130  00F3               	movwf	___aldiv@divisor+2
  1229  0131  3008               	movlw	8
  1230  0132  00F2               	movwf	___aldiv@divisor+1
  1231  0133  3000               	movlw	0
  1232  0134  00F1               	movwf	___aldiv@divisor
  1233  0135  0852               	movf	_BMP280_readTemperature$940+3,w
  1234  0136  00F8               	movwf	___aldiv@dividend+3
  1235  0137  0851               	movf	_BMP280_readTemperature$940+2,w
  1236  0138  00F7               	movwf	___aldiv@dividend+2
  1237  0139  0850               	movf	_BMP280_readTemperature$940+1,w
  1238  013A  00F6               	movwf	___aldiv@dividend+1
  1239  013B  084F               	movf	_BMP280_readTemperature$940,w
  1240  013C  00F5               	movwf	___aldiv@dividend
  1241  013D  120A  118A  2016  120A  118A  	fcall	___aldiv
  1242  0142  0874               	movf	?___aldiv+3,w
  1243  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0145  00C5               	movwf	BMP280_readTemperature@var1+3
  1246  0146  0873               	movf	?___aldiv+2,w
  1247  0147  00C4               	movwf	BMP280_readTemperature@var1+2
  1248  0148  0872               	movf	?___aldiv+1,w
  1249  0149  00C3               	movwf	BMP280_readTemperature@var1+1
  1250  014A  0871               	movf	?___aldiv,w
  1251  014B  00C2               	movwf	BMP280_readTemperature@var1
  1252                           
  1253                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1254  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1255  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1256  014E  0824               	movf	_BMP280_calib^(0+128),w
  1257  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0151  00B2               	movwf	??_BMP280_readTemperature
  1260  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1261  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1262  0154  0825               	movf	(_BMP280_calib+1)^(0+128),w
  1263  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0157  00B3               	movwf	??_BMP280_readTemperature+1
  1266  0158  01B4               	clrf	??_BMP280_readTemperature+2
  1267  0159  01B5               	clrf	??_BMP280_readTemperature+3
  1268  015A  3000               	movlw	0
  1269  015B  00F4               	movwf	___aldiv@divisor+3
  1270  015C  3000               	movlw	0
  1271  015D  00F3               	movwf	___aldiv@divisor+2
  1272  015E  3000               	movlw	0
  1273  015F  00F2               	movwf	___aldiv@divisor+1
  1274  0160  3010               	movlw	16
  1275  0161  00F1               	movwf	___aldiv@divisor
  1276  0162  0869               	movf	_adc_T+3,w
  1277  0163  00F8               	movwf	___aldiv@dividend+3
  1278  0164  0868               	movf	_adc_T+2,w
  1279  0165  00F7               	movwf	___aldiv@dividend+2
  1280  0166  0867               	movf	_adc_T+1,w
  1281  0167  00F6               	movwf	___aldiv@dividend+1
  1282  0168  0866               	movf	_adc_T,w
  1283  0169  00F5               	movwf	___aldiv@dividend
  1284  016A  120A  118A  2016  120A  118A  	fcall	___aldiv
  1285  016F  0871               	movf	?___aldiv,w
  1286  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0172  00B6               	movwf	??_BMP280_readTemperature+4
  1289  0173  0872               	movf	?___aldiv+1,w
  1290  0174  00B7               	movwf	??_BMP280_readTemperature+5
  1291  0175  0873               	movf	?___aldiv+2,w
  1292  0176  00B8               	movwf	??_BMP280_readTemperature+6
  1293  0177  0874               	movf	?___aldiv+3,w
  1294  0178  00B9               	movwf	??_BMP280_readTemperature+7
  1295  0179  0832               	movf	??_BMP280_readTemperature,w
  1296  017A  02B6               	subwf	??_BMP280_readTemperature+4,f
  1297  017B  0833               	movf	??_BMP280_readTemperature+1,w
  1298  017C  1C03               	skipc
  1299  017D  0F33               	incfsz	??_BMP280_readTemperature+1,w
  1300  017E  2980               	goto	u951
  1301  017F  2981               	goto	u952
  1302  0180                     u951:
  1303  0180  02B7               	subwf	??_BMP280_readTemperature+5,f
  1304  0181                     u952:
  1305  0181  0834               	movf	??_BMP280_readTemperature+2,w
  1306  0182  1C03               	skipc
  1307  0183  0F34               	incfsz	??_BMP280_readTemperature+2,w
  1308  0184  2986               	goto	u953
  1309  0185  2987               	goto	u954
  1310  0186                     u953:
  1311  0186  02B8               	subwf	??_BMP280_readTemperature+6,f
  1312  0187                     u954:
  1313  0187  0835               	movf	??_BMP280_readTemperature+3,w
  1314  0188  1C03               	skipc
  1315  0189  0F35               	incfsz	??_BMP280_readTemperature+3,w
  1316  018A  298C               	goto	u955
  1317  018B  298D               	goto	u956
  1318  018C                     u955:
  1319  018C  02B9               	subwf	??_BMP280_readTemperature+7,f
  1320  018D                     u956:
  1321  018D  0839               	movf	??_BMP280_readTemperature+7,w
  1322  018E  00A9               	movwf	___lmul@multiplier+3
  1323  018F  0838               	movf	??_BMP280_readTemperature+6,w
  1324  0190  00A8               	movwf	___lmul@multiplier+2
  1325  0191  0837               	movf	??_BMP280_readTemperature+5,w
  1326  0192  00A7               	movwf	___lmul@multiplier+1
  1327  0193  0836               	movf	??_BMP280_readTemperature+4,w
  1328  0194  00A6               	movwf	___lmul@multiplier
  1329  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1330  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1331  0197  0824               	movf	_BMP280_calib^(0+128),w
  1332  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1334  019A  00BA               	movwf	??_BMP280_readTemperature+8
  1335  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1336  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1337  019D  0825               	movf	(_BMP280_calib+1)^(0+128),w
  1338  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1339  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1340  01A0  00BB               	movwf	??_BMP280_readTemperature+9
  1341  01A1  01BC               	clrf	??_BMP280_readTemperature+10
  1342  01A2  01BD               	clrf	??_BMP280_readTemperature+11
  1343  01A3  3000               	movlw	0
  1344  01A4  00F4               	movwf	___aldiv@divisor+3
  1345  01A5  3000               	movlw	0
  1346  01A6  00F3               	movwf	___aldiv@divisor+2
  1347  01A7  3000               	movlw	0
  1348  01A8  00F2               	movwf	___aldiv@divisor+1
  1349  01A9  3010               	movlw	16
  1350  01AA  00F1               	movwf	___aldiv@divisor
  1351  01AB  0869               	movf	_adc_T+3,w
  1352  01AC  00F8               	movwf	___aldiv@dividend+3
  1353  01AD  0868               	movf	_adc_T+2,w
  1354  01AE  00F7               	movwf	___aldiv@dividend+2
  1355  01AF  0867               	movf	_adc_T+1,w
  1356  01B0  00F6               	movwf	___aldiv@dividend+1
  1357  01B1  0866               	movf	_adc_T,w
  1358  01B2  00F5               	movwf	___aldiv@dividend
  1359  01B3  120A  118A  2016  120A  118A  	fcall	___aldiv
  1360  01B8  0871               	movf	?___aldiv,w
  1361  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1362  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1363  01BB  00BE               	movwf	??_BMP280_readTemperature+12
  1364  01BC  0872               	movf	?___aldiv+1,w
  1365  01BD  00BF               	movwf	??_BMP280_readTemperature+13
  1366  01BE  0873               	movf	?___aldiv+2,w
  1367  01BF  00C0               	movwf	??_BMP280_readTemperature+14
  1368  01C0  0874               	movf	?___aldiv+3,w
  1369  01C1  00C1               	movwf	??_BMP280_readTemperature+15
  1370  01C2  083A               	movf	??_BMP280_readTemperature+8,w
  1371  01C3  02BE               	subwf	??_BMP280_readTemperature+12,f
  1372  01C4  083B               	movf	??_BMP280_readTemperature+9,w
  1373  01C5  1C03               	skipc
  1374  01C6  0F3B               	incfsz	??_BMP280_readTemperature+9,w
  1375  01C7  29C9               	goto	u961
  1376  01C8  29CA               	goto	u962
  1377  01C9                     u961:
  1378  01C9  02BF               	subwf	??_BMP280_readTemperature+13,f
  1379  01CA                     u962:
  1380  01CA  083C               	movf	??_BMP280_readTemperature+10,w
  1381  01CB  1C03               	skipc
  1382  01CC  0F3C               	incfsz	??_BMP280_readTemperature+10,w
  1383  01CD  29CF               	goto	u963
  1384  01CE  29D0               	goto	u964
  1385  01CF                     u963:
  1386  01CF  02C0               	subwf	??_BMP280_readTemperature+14,f
  1387  01D0                     u964:
  1388  01D0  083D               	movf	??_BMP280_readTemperature+11,w
  1389  01D1  1C03               	skipc
  1390  01D2  0F3D               	incfsz	??_BMP280_readTemperature+11,w
  1391  01D3  29D5               	goto	u965
  1392  01D4  29D6               	goto	u966
  1393  01D5                     u965:
  1394  01D5  02C1               	subwf	??_BMP280_readTemperature+15,f
  1395  01D6                     u966:
  1396  01D6  0841               	movf	??_BMP280_readTemperature+15,w
  1397  01D7  00AD               	movwf	___lmul@multiplicand+3
  1398  01D8  0840               	movf	??_BMP280_readTemperature+14,w
  1399  01D9  00AC               	movwf	___lmul@multiplicand+2
  1400  01DA  083F               	movf	??_BMP280_readTemperature+13,w
  1401  01DB  00AB               	movwf	___lmul@multiplicand+1
  1402  01DC  083E               	movf	??_BMP280_readTemperature+12,w
  1403  01DD  00AA               	movwf	___lmul@multiplicand
  1404  01DE  120A  158A  2561  120A  118A  	fcall	___lmul
  1405  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1406  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1407  01E5  0829               	movf	?___lmul+3,w
  1408  01E6  00D2               	movwf	_BMP280_readTemperature$940+3
  1409  01E7  0828               	movf	?___lmul+2,w
  1410  01E8  00D1               	movwf	_BMP280_readTemperature$940+2
  1411  01E9  0827               	movf	?___lmul+1,w
  1412  01EA  00D0               	movwf	_BMP280_readTemperature$940+1
  1413  01EB  0826               	movf	?___lmul,w
  1414  01EC  00CF               	movwf	_BMP280_readTemperature$940
  1415                           
  1416                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1417  01ED  3000               	movlw	0
  1418  01EE  00F4               	movwf	___aldiv@divisor+3
  1419  01EF  3000               	movlw	0
  1420  01F0  00F3               	movwf	___aldiv@divisor+2
  1421  01F1  3010               	movlw	16
  1422  01F2  00F2               	movwf	___aldiv@divisor+1
  1423  01F3  3000               	movlw	0
  1424  01F4  00F1               	movwf	___aldiv@divisor
  1425  01F5  0852               	movf	_BMP280_readTemperature$940+3,w
  1426  01F6  00F8               	movwf	___aldiv@dividend+3
  1427  01F7  0851               	movf	_BMP280_readTemperature$940+2,w
  1428  01F8  00F7               	movwf	___aldiv@dividend+2
  1429  01F9  0850               	movf	_BMP280_readTemperature$940+1,w
  1430  01FA  00F6               	movwf	___aldiv@dividend+1
  1431  01FB  084F               	movf	_BMP280_readTemperature$940,w
  1432  01FC  00F5               	movwf	___aldiv@dividend
  1433  01FD  120A  118A  2016  120A  118A  	fcall	___aldiv
  1434  0202  0874               	movf	?___aldiv+3,w
  1435  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0205  00A9               	movwf	___lmul@multiplier+3
  1438  0206  0873               	movf	?___aldiv+2,w
  1439  0207  00A8               	movwf	___lmul@multiplier+2
  1440  0208  0872               	movf	?___aldiv+1,w
  1441  0209  00A7               	movwf	___lmul@multiplier+1
  1442  020A  0871               	movf	?___aldiv,w
  1443  020B  00A6               	movwf	___lmul@multiplier
  1444  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1445  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1446  020E  0828               	movf	(_BMP280_calib^(0+128)+4),w
  1447  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0211  00AA               	movwf	___lmul@multiplicand
  1450  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1451  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0214  0829               	movf	((_BMP280_calib+1)^(0+128)+4),w
  1453  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0217  00AB               	movwf	___lmul@multiplicand+1
  1456  0218  3000               	movlw	0
  1457  0219  1BAB               	btfsc	___lmul@multiplicand+1,7
  1458  021A  30FF               	movlw	255
  1459  021B  00AC               	movwf	___lmul@multiplicand+2
  1460  021C  00AD               	movwf	___lmul@multiplicand+3
  1461  021D  120A  158A  2561  120A  118A  	fcall	___lmul
  1462  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0224  0829               	movf	?___lmul+3,w
  1465  0225  00CD               	movwf	_BMP280_readTemperature$941+3
  1466  0226  0828               	movf	?___lmul+2,w
  1467  0227  00CC               	movwf	_BMP280_readTemperature$941+2
  1468  0228  0827               	movf	?___lmul+1,w
  1469  0229  00CB               	movwf	_BMP280_readTemperature$941+1
  1470  022A  0826               	movf	?___lmul,w
  1471  022B  00CA               	movwf	_BMP280_readTemperature$941
  1472                           
  1473                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1474  022C  3000               	movlw	0
  1475  022D  00F4               	movwf	___aldiv@divisor+3
  1476  022E  3000               	movlw	0
  1477  022F  00F3               	movwf	___aldiv@divisor+2
  1478  0230  3040               	movlw	64
  1479  0231  00F2               	movwf	___aldiv@divisor+1
  1480  0232  3000               	movlw	0
  1481  0233  00F1               	movwf	___aldiv@divisor
  1482  0234  084D               	movf	_BMP280_readTemperature$941+3,w
  1483  0235  00F8               	movwf	___aldiv@dividend+3
  1484  0236  084C               	movf	_BMP280_readTemperature$941+2,w
  1485  0237  00F7               	movwf	___aldiv@dividend+2
  1486  0238  084B               	movf	_BMP280_readTemperature$941+1,w
  1487  0239  00F6               	movwf	___aldiv@dividend+1
  1488  023A  084A               	movf	_BMP280_readTemperature$941,w
  1489  023B  00F5               	movwf	___aldiv@dividend
  1490  023C  120A  118A  2016  120A  118A  	fcall	___aldiv
  1491  0241  0874               	movf	?___aldiv+3,w
  1492  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1493  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0244  00C9               	movwf	BMP280_readTemperature@var2+3
  1495  0245  0873               	movf	?___aldiv+2,w
  1496  0246  00C8               	movwf	BMP280_readTemperature@var2+2
  1497  0247  0872               	movf	?___aldiv+1,w
  1498  0248  00C7               	movwf	BMP280_readTemperature@var2+1
  1499  0249  0871               	movf	?___aldiv,w
  1500  024A  00C6               	movwf	BMP280_readTemperature@var2
  1501  024B                     l1200:
  1502                           
  1503                           ;BMP280.c: 256:   t_fine = var1 + var2;
  1504  024B  0842               	movf	BMP280_readTemperature@var1,w
  1505  024C  0746               	addwf	BMP280_readTemperature@var2,w
  1506  024D  00B2               	movwf	??_BMP280_readTemperature
  1507  024E  3000               	movlw	0
  1508  024F  1803               	skipnc
  1509  0250  3001               	movlw	1
  1510  0251  0743               	addwf	BMP280_readTemperature@var1+1,w
  1511  0252  01B4               	clrf	??_BMP280_readTemperature+2
  1512  0253  1803               	skipnc
  1513  0254  0AB4               	incf	??_BMP280_readTemperature+2,f
  1514  0255  0747               	addwf	BMP280_readTemperature@var2+1,w
  1515  0256  00B3               	movwf	??_BMP280_readTemperature+1
  1516  0257  1803               	skipnc
  1517  0258  0AB4               	incf	??_BMP280_readTemperature+2,f
  1518  0259  0844               	movf	BMP280_readTemperature@var1+2,w
  1519  025A  0734               	addwf	??_BMP280_readTemperature+2,w
  1520  025B  01B5               	clrf	??_BMP280_readTemperature+3
  1521  025C  1803               	skipnc
  1522  025D  0AB5               	incf	??_BMP280_readTemperature+3,f
  1523  025E  0748               	addwf	BMP280_readTemperature@var2+2,w
  1524  025F  00B4               	movwf	??_BMP280_readTemperature+2
  1525  0260  1803               	skipnc
  1526  0261  0AB5               	incf	??_BMP280_readTemperature+3,f
  1527  0262  0845               	movf	BMP280_readTemperature@var1+3,w
  1528  0263  0735               	addwf	??_BMP280_readTemperature+3,w
  1529  0264  0749               	addwf	BMP280_readTemperature@var2+3,w
  1530  0265  00B5               	movwf	??_BMP280_readTemperature+3
  1531  0266  0835               	movf	??_BMP280_readTemperature+3,w
  1532  0267  00E5               	movwf	_t_fine+3
  1533  0268  0834               	movf	??_BMP280_readTemperature+2,w
  1534  0269  00E4               	movwf	_t_fine+2
  1535  026A  0833               	movf	??_BMP280_readTemperature+1,w
  1536  026B  00E3               	movwf	_t_fine+1
  1537  026C  0832               	movf	??_BMP280_readTemperature,w
  1538  026D  00E2               	movwf	_t_fine
  1539  026E                     l1202:
  1540                           
  1541                           ;BMP280.c: 258:   *temp = (t_fine * 5 + 128) / 256;
  1542  026E  3000               	movlw	0
  1543  026F  00F4               	movwf	___aldiv@divisor+3
  1544  0270  3000               	movlw	0
  1545  0271  00F3               	movwf	___aldiv@divisor+2
  1546  0272  3001               	movlw	1
  1547  0273  00F2               	movwf	___aldiv@divisor+1
  1548  0274  3000               	movlw	0
  1549  0275  00F1               	movwf	___aldiv@divisor
  1550  0276  3080               	movlw	128
  1551  0277  00B2               	movwf	??_BMP280_readTemperature
  1552  0278  3000               	movlw	0
  1553  0279  00B3               	movwf	??_BMP280_readTemperature+1
  1554  027A  3000               	movlw	0
  1555  027B  00B4               	movwf	??_BMP280_readTemperature+2
  1556  027C  3000               	movlw	0
  1557  027D  00B5               	movwf	??_BMP280_readTemperature+3
  1558  027E  0865               	movf	_t_fine+3,w
  1559  027F  00A9               	movwf	___lmul@multiplier+3
  1560  0280  0864               	movf	_t_fine+2,w
  1561  0281  00A8               	movwf	___lmul@multiplier+2
  1562  0282  0863               	movf	_t_fine+1,w
  1563  0283  00A7               	movwf	___lmul@multiplier+1
  1564  0284  0862               	movf	_t_fine,w
  1565  0285  00A6               	movwf	___lmul@multiplier
  1566  0286  3000               	movlw	0
  1567  0287  00AD               	movwf	___lmul@multiplicand+3
  1568  0288  3000               	movlw	0
  1569  0289  00AC               	movwf	___lmul@multiplicand+2
  1570  028A  3000               	movlw	0
  1571  028B  00AB               	movwf	___lmul@multiplicand+1
  1572  028C  3005               	movlw	5
  1573  028D  00AA               	movwf	___lmul@multiplicand
  1574  028E  120A  158A  2561  120A  118A  	fcall	___lmul
  1575  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0295  0826               	movf	?___lmul,w
  1578  0296  07B2               	addwf	??_BMP280_readTemperature,f
  1579  0297  0827               	movf	?___lmul+1,w
  1580  0298  1803               	skipnc
  1581  0299  0F27               	incfsz	?___lmul+1,w
  1582  029A  2A9C               	goto	u970
  1583  029B  2A9D               	goto	u971
  1584  029C                     u970:
  1585  029C  07B3               	addwf	??_BMP280_readTemperature+1,f
  1586  029D                     u971:
  1587  029D  0828               	movf	?___lmul+2,w
  1588  029E  1803               	skipnc
  1589  029F  0F28               	incfsz	?___lmul+2,w
  1590  02A0  2AA2               	goto	u972
  1591  02A1  2AA3               	goto	u973
  1592  02A2                     u972:
  1593  02A2  07B4               	addwf	??_BMP280_readTemperature+2,f
  1594  02A3                     u973:
  1595  02A3  0829               	movf	?___lmul+3,w
  1596  02A4  1803               	skipnc
  1597  02A5  0A29               	incf	?___lmul+3,w
  1598  02A6  07B5               	addwf	??_BMP280_readTemperature+3,f
  1599  02A7  0835               	movf	??_BMP280_readTemperature+3,w
  1600  02A8  00F8               	movwf	___aldiv@dividend+3
  1601  02A9  0834               	movf	??_BMP280_readTemperature+2,w
  1602  02AA  00F7               	movwf	___aldiv@dividend+2
  1603  02AB  0833               	movf	??_BMP280_readTemperature+1,w
  1604  02AC  00F6               	movwf	___aldiv@dividend+1
  1605  02AD  0832               	movf	??_BMP280_readTemperature,w
  1606  02AE  00F5               	movwf	___aldiv@dividend
  1607  02AF  120A  118A  2016  120A  118A  	fcall	___aldiv
  1608  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1609  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1610  02B6  084E               	movf	BMP280_readTemperature@temp,w
  1611  02B7  0084               	movwf	4
  1612  02B8  0871               	movf	?___aldiv,w
  1613  02B9  1383               	bcf	3,7	;select IRP bank0
  1614  02BA  0080               	movwf	0
  1615  02BB  0A84               	incf	4,f
  1616  02BC  0872               	movf	?___aldiv+1,w
  1617  02BD  0080               	movwf	0
  1618  02BE  0A84               	incf	4,f
  1619  02BF  0873               	movf	?___aldiv+2,w
  1620  02C0  0080               	movwf	0
  1621  02C1  0A84               	incf	4,f
  1622  02C2  0874               	movf	?___aldiv+3,w
  1623  02C3  0080               	movwf	0
  1624  02C4                     l150:
  1625  02C4  0008               	return
  1626  02C5                     __end_of_BMP280_readTemperature:
  1627                           
  1628                           	psect	text4
  1629  0E5D                     __ptext4:	
  1630 ;; *************** function _BMP280_Update *****************
  1631 ;; Defined at:
  1632 ;;		line 211 in file "BMP280.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  ret             4    0[BANK0 ] struct .
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         0       4       0       0       0
  1648 ;;      Temps:          4       0       0       0       0
  1649 ;;      Totals:         4       4       0       0       0
  1650 ;;Total ram usage:        8 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    2
  1653 ;; This function calls:
  1654 ;;		_I2C_Master_Read
  1655 ;;		_I2C_Master_Start
  1656 ;;		_I2C_Master_Stop
  1657 ;;		_I2C_Master_Write
  1658 ;; This function is called by:
  1659 ;;		_BMP280_readTemperature
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _BMP280_Update
  1665  0E5D                     _BMP280_Update:
  1666  0E5D                     l1094:	
  1667                           ;incstack = 0
  1668                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  1669                           
  1670                           
  1671                           ;BMP280.c: 217:   } ret;;BMP280.c: 218:   ret.b[3] = 0x00;
  1672  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0E5F  01A3               	clrf	BMP280_Update@ret+3
  1675  0E60                     l1096:
  1676                           
  1677                           ;BMP280.c: 220:   I2C_Master_Start();
  1678  0E60  120A  158A  23D8  120A  158A  	fcall	_I2C_Master_Start
  1679  0E65                     l1098:
  1680                           
  1681                           ;BMP280.c: 221:   I2C_Master_Write( 0xEE);
  1682  0E65  30EE               	movlw	238
  1683  0E66  00F1               	movwf	I2C_Master_Write@d
  1684  0E67  3000               	movlw	0
  1685  0E68  00F2               	movwf	I2C_Master_Write@d+1
  1686  0E69  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  1687  0E6E                     l1100:
  1688                           
  1689                           ;BMP280.c: 222:   I2C_Master_Write( 0xF7);
  1690  0E6E  30F7               	movlw	247
  1691  0E6F  00F1               	movwf	I2C_Master_Write@d
  1692  0E70  3000               	movlw	0
  1693  0E71  00F2               	movwf	I2C_Master_Write@d+1
  1694  0E72  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  1695  0E77                     l1102:
  1696                           
  1697                           ;BMP280.c: 223:   I2C_Master_Start();
  1698  0E77  120A  158A  23D8  120A  158A  	fcall	_I2C_Master_Start
  1699  0E7C                     l1104:
  1700                           
  1701                           ;BMP280.c: 224:   I2C_Master_Write( 0xEE | 1);
  1702  0E7C  30EF               	movlw	239
  1703  0E7D  00F1               	movwf	I2C_Master_Write@d
  1704  0E7E  3000               	movlw	0
  1705  0E7F  00F2               	movwf	I2C_Master_Write@d+1
  1706  0E80  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  1707  0E85                     l1106:
  1708                           
  1709                           ;BMP280.c: 225:   ret.b[2] = I2C_Master_Read( 1);
  1710  0E85  3001               	movlw	1
  1711  0E86  00F1               	movwf	I2C_Master_Read@a
  1712  0E87  3000               	movlw	0
  1713  0E88  00F2               	movwf	I2C_Master_Read@a+1
  1714  0E89  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  1715  0E8E  0871               	movf	?_I2C_Master_Read,w
  1716  0E8F  00F7               	movwf	??_BMP280_Update
  1717  0E90  0877               	movf	??_BMP280_Update,w
  1718  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0E93  00A2               	movwf	BMP280_Update@ret+2
  1721  0E94                     l1108:
  1722                           
  1723                           ;BMP280.c: 226:   ret.b[1] = I2C_Master_Read( 1);
  1724  0E94  3001               	movlw	1
  1725  0E95  00F1               	movwf	I2C_Master_Read@a
  1726  0E96  3000               	movlw	0
  1727  0E97  00F2               	movwf	I2C_Master_Read@a+1
  1728  0E98  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  1729  0E9D  0871               	movf	?_I2C_Master_Read,w
  1730  0E9E  00F7               	movwf	??_BMP280_Update
  1731  0E9F  0877               	movf	??_BMP280_Update,w
  1732  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0EA2  00A1               	movwf	BMP280_Update@ret+1
  1735  0EA3                     l1110:
  1736                           
  1737                           ;BMP280.c: 227:   ret.b[0] = I2C_Master_Read( 1);
  1738  0EA3  3001               	movlw	1
  1739  0EA4  00F1               	movwf	I2C_Master_Read@a
  1740  0EA5  3000               	movlw	0
  1741  0EA6  00F2               	movwf	I2C_Master_Read@a+1
  1742  0EA7  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  1743  0EAC  0871               	movf	?_I2C_Master_Read,w
  1744  0EAD  00F7               	movwf	??_BMP280_Update
  1745  0EAE  0877               	movf	??_BMP280_Update,w
  1746  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0EB1  00A0               	movwf	BMP280_Update@ret
  1749  0EB2                     l1112:
  1750                           
  1751                           ;BMP280.c: 229:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  1752  0EB2  0820               	movf	BMP280_Update@ret,w
  1753  0EB3  00F7               	movwf	??_BMP280_Update
  1754  0EB4  0821               	movf	BMP280_Update@ret+1,w
  1755  0EB5  00F8               	movwf	??_BMP280_Update+1
  1756  0EB6  0822               	movf	BMP280_Update@ret+2,w
  1757  0EB7  00F9               	movwf	??_BMP280_Update+2
  1758  0EB8  0823               	movf	BMP280_Update@ret+3,w
  1759  0EB9  00FA               	movwf	??_BMP280_Update+3
  1760  0EBA  3004               	movlw	4
  1761  0EBB                     u745:
  1762  0EBB  1003               	clrc
  1763  0EBC  0CFA               	rrf	??_BMP280_Update+3,f
  1764  0EBD  0CF9               	rrf	??_BMP280_Update+2,f
  1765  0EBE  0CF8               	rrf	??_BMP280_Update+1,f
  1766  0EBF  0CF7               	rrf	??_BMP280_Update,f
  1767  0EC0                     u740:
  1768  0EC0  3EFF               	addlw	-1
  1769  0EC1  1D03               	skipz
  1770  0EC2  2EBB               	goto	u745
  1771  0EC3  30FF               	movlw	255
  1772  0EC4  0577               	andwf	??_BMP280_Update,w
  1773  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  1774  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  1775  0EC7  00A0               	movwf	_adc_P^(0+128)
  1776  0EC8  30FF               	movlw	255
  1777  0EC9  0578               	andwf	??_BMP280_Update+1,w
  1778  0ECA  00A1               	movwf	(_adc_P+1)^(0+128)
  1779  0ECB  300F               	movlw	15
  1780  0ECC  0579               	andwf	??_BMP280_Update+2,w
  1781  0ECD  00A2               	movwf	(_adc_P+2)^(0+128)
  1782  0ECE  3000               	movlw	0
  1783  0ECF  057A               	andwf	??_BMP280_Update+3,w
  1784  0ED0  00A3               	movwf	(_adc_P+3)^(0+128)
  1785  0ED1                     l1114:
  1786                           
  1787                           ;BMP280.c: 231:   ret.b[2] = I2C_Master_Read(1);
  1788  0ED1  3001               	movlw	1
  1789  0ED2  00F1               	movwf	I2C_Master_Read@a
  1790  0ED3  3000               	movlw	0
  1791  0ED4  00F2               	movwf	I2C_Master_Read@a+1
  1792  0ED5  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  1793  0EDA  0871               	movf	?_I2C_Master_Read,w
  1794  0EDB  00F7               	movwf	??_BMP280_Update
  1795  0EDC  0877               	movf	??_BMP280_Update,w
  1796  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0EDF  00A2               	movwf	BMP280_Update@ret+2
  1799  0EE0                     l1116:
  1800                           
  1801                           ;BMP280.c: 232:   ret.b[1] = I2C_Master_Read(1);
  1802  0EE0  3001               	movlw	1
  1803  0EE1  00F1               	movwf	I2C_Master_Read@a
  1804  0EE2  3000               	movlw	0
  1805  0EE3  00F2               	movwf	I2C_Master_Read@a+1
  1806  0EE4  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  1807  0EE9  0871               	movf	?_I2C_Master_Read,w
  1808  0EEA  00F7               	movwf	??_BMP280_Update
  1809  0EEB  0877               	movf	??_BMP280_Update,w
  1810  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0EEE  00A1               	movwf	BMP280_Update@ret+1
  1813  0EEF                     l1118:
  1814                           
  1815                           ;BMP280.c: 233:   ret.b[0] = I2C_Master_Read(0);
  1816  0EEF  3000               	movlw	0
  1817  0EF0  00F1               	movwf	I2C_Master_Read@a
  1818  0EF1  00F2               	movwf	I2C_Master_Read@a+1
  1819  0EF2  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  1820  0EF7  0871               	movf	?_I2C_Master_Read,w
  1821  0EF8  00F7               	movwf	??_BMP280_Update
  1822  0EF9  0877               	movf	??_BMP280_Update,w
  1823  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0EFC  00A0               	movwf	BMP280_Update@ret
  1826  0EFD                     l1120:
  1827                           
  1828                           ;BMP280.c: 234:   I2C_Master_Stop();
  1829  0EFD  120A  158A  23E1  120A  158A  	fcall	_I2C_Master_Stop
  1830  0F02                     l1122:
  1831                           
  1832                           ;BMP280.c: 236:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  1833  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0F04  0820               	movf	BMP280_Update@ret,w
  1836  0F05  00F7               	movwf	??_BMP280_Update
  1837  0F06  0821               	movf	BMP280_Update@ret+1,w
  1838  0F07  00F8               	movwf	??_BMP280_Update+1
  1839  0F08  0822               	movf	BMP280_Update@ret+2,w
  1840  0F09  00F9               	movwf	??_BMP280_Update+2
  1841  0F0A  0823               	movf	BMP280_Update@ret+3,w
  1842  0F0B  00FA               	movwf	??_BMP280_Update+3
  1843  0F0C  3004               	movlw	4
  1844  0F0D                     u755:
  1845  0F0D  1003               	clrc
  1846  0F0E  0CFA               	rrf	??_BMP280_Update+3,f
  1847  0F0F  0CF9               	rrf	??_BMP280_Update+2,f
  1848  0F10  0CF8               	rrf	??_BMP280_Update+1,f
  1849  0F11  0CF7               	rrf	??_BMP280_Update,f
  1850  0F12                     u750:
  1851  0F12  3EFF               	addlw	-1
  1852  0F13  1D03               	skipz
  1853  0F14  2F0D               	goto	u755
  1854  0F15  30FF               	movlw	255
  1855  0F16  0577               	andwf	??_BMP280_Update,w
  1856  0F17  00E6               	movwf	_adc_T
  1857  0F18  30FF               	movlw	255
  1858  0F19  0578               	andwf	??_BMP280_Update+1,w
  1859  0F1A  00E7               	movwf	_adc_T+1
  1860  0F1B  300F               	movlw	15
  1861  0F1C  0579               	andwf	??_BMP280_Update+2,w
  1862  0F1D  00E8               	movwf	_adc_T+2
  1863  0F1E  3000               	movlw	0
  1864  0F1F  057A               	andwf	??_BMP280_Update+3,w
  1865  0F20  00E9               	movwf	_adc_T+3
  1866  0F21                     l147:
  1867  0F21  0008               	return
  1868  0F22                     __end_of_BMP280_Update:
  1869                           
  1870                           	psect	text5
  1871  02C5                     __ptext5:	
  1872 ;; *************** function _BMP280_readPressure *****************
  1873 ;; Defined at:
  1874 ;;		line 266 in file "BMP280.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  pres            1    wreg     PTR unsigned long 
  1877 ;;		 -> pressure(4), 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  pres            1   46[BANK0 ] PTR unsigned long 
  1880 ;;		 -> pressure(4), 
  1881 ;;  var1            4   59[BANK0 ] long 
  1882 ;;  p               4   55[BANK0 ] unsigned long 
  1883 ;;  var2            4   51[BANK0 ] long 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  2   12[None  ] int 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0      29       0       0       0
  1895 ;;      Temps:          0      16       0       0       0
  1896 ;;      Totals:         0      45       0       0       0
  1897 ;;Total ram usage:       45 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    1
  1900 ;; This function calls:
  1901 ;;		___aldiv
  1902 ;;		___lldiv
  1903 ;;		___lmul
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _BMP280_readPressure
  1911  02C5                     _BMP280_readPressure:
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1915                           ;BMP280_readPressure@pres stored from wreg
  1916  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1917  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1918  02C7  00CE               	movwf	BMP280_readPressure@pres
  1919  02C8                     l1206:
  1920                           
  1921                           ;BMP280.c: 266: int BMP280_readPressure(uint32_t *pres);BMP280.c: 267: {;BMP280.c: 268: 
      +                            int32_t var1, var2;;BMP280.c: 269:   uint32_t p;;BMP280.c: 272:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  1922  02C8  3000               	movlw	0
  1923  02C9  00B2               	movwf	??_BMP280_readPressure
  1924  02CA  3006               	movlw	6
  1925  02CB  00B3               	movwf	??_BMP280_readPressure+1
  1926  02CC  30FF               	movlw	255
  1927  02CD  00B4               	movwf	??_BMP280_readPressure+2
  1928  02CE  30FF               	movlw	255
  1929  02CF  00B5               	movwf	??_BMP280_readPressure+3
  1930  02D0  3000               	movlw	0
  1931  02D1  00F4               	movwf	___aldiv@divisor+3
  1932  02D2  3000               	movlw	0
  1933  02D3  00F3               	movwf	___aldiv@divisor+2
  1934  02D4  3000               	movlw	0
  1935  02D5  00F2               	movwf	___aldiv@divisor+1
  1936  02D6  3002               	movlw	2
  1937  02D7  00F1               	movwf	___aldiv@divisor
  1938  02D8  0865               	movf	_t_fine+3,w
  1939  02D9  00F8               	movwf	___aldiv@dividend+3
  1940  02DA  0864               	movf	_t_fine+2,w
  1941  02DB  00F7               	movwf	___aldiv@dividend+2
  1942  02DC  0863               	movf	_t_fine+1,w
  1943  02DD  00F6               	movwf	___aldiv@dividend+1
  1944  02DE  0862               	movf	_t_fine,w
  1945  02DF  00F5               	movwf	___aldiv@dividend
  1946  02E0  120A  118A  2016  120A  118A  	fcall	___aldiv
  1947  02E5  0871               	movf	?___aldiv,w
  1948  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1949  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1950  02E8  07B2               	addwf	??_BMP280_readPressure,f
  1951  02E9  0872               	movf	?___aldiv+1,w
  1952  02EA  1803               	skipnc
  1953  02EB  0F72               	incfsz	?___aldiv+1,w
  1954  02EC  2AEE               	goto	u980
  1955  02ED  2AEF               	goto	u981
  1956  02EE                     u980:
  1957  02EE  07B3               	addwf	??_BMP280_readPressure+1,f
  1958  02EF                     u981:
  1959  02EF  0873               	movf	?___aldiv+2,w
  1960  02F0  1803               	skipnc
  1961  02F1  0F73               	incfsz	?___aldiv+2,w
  1962  02F2  2AF4               	goto	u982
  1963  02F3  2AF5               	goto	u983
  1964  02F4                     u982:
  1965  02F4  07B4               	addwf	??_BMP280_readPressure+2,f
  1966  02F5                     u983:
  1967  02F5  0874               	movf	?___aldiv+3,w
  1968  02F6  1803               	skipnc
  1969  02F7  0A74               	incf	?___aldiv+3,w
  1970  02F8  07B5               	addwf	??_BMP280_readPressure+3,f
  1971  02F9  0835               	movf	??_BMP280_readPressure+3,w
  1972  02FA  00DE               	movwf	BMP280_readPressure@var1+3
  1973  02FB  0834               	movf	??_BMP280_readPressure+2,w
  1974  02FC  00DD               	movwf	BMP280_readPressure@var1+2
  1975  02FD  0833               	movf	??_BMP280_readPressure+1,w
  1976  02FE  00DC               	movwf	BMP280_readPressure@var1+1
  1977  02FF  0832               	movf	??_BMP280_readPressure,w
  1978  0300  00DB               	movwf	BMP280_readPressure@var1
  1979                           
  1980                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1981  0301  3000               	movlw	0
  1982  0302  00F4               	movwf	___aldiv@divisor+3
  1983  0303  3000               	movlw	0
  1984  0304  00F3               	movwf	___aldiv@divisor+2
  1985  0305  3000               	movlw	0
  1986  0306  00F2               	movwf	___aldiv@divisor+1
  1987  0307  3004               	movlw	4
  1988  0308  00F1               	movwf	___aldiv@divisor
  1989  0309  085E               	movf	BMP280_readPressure@var1+3,w
  1990  030A  00F8               	movwf	___aldiv@dividend+3
  1991  030B  085D               	movf	BMP280_readPressure@var1+2,w
  1992  030C  00F7               	movwf	___aldiv@dividend+2
  1993  030D  085C               	movf	BMP280_readPressure@var1+1,w
  1994  030E  00F6               	movwf	___aldiv@dividend+1
  1995  030F  085B               	movf	BMP280_readPressure@var1,w
  1996  0310  00F5               	movwf	___aldiv@dividend
  1997  0311  120A  118A  2016  120A  118A  	fcall	___aldiv
  1998  0316  0874               	movf	?___aldiv+3,w
  1999  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0319  00A9               	movwf	___lmul@multiplier+3
  2002  031A  0873               	movf	?___aldiv+2,w
  2003  031B  00A8               	movwf	___lmul@multiplier+2
  2004  031C  0872               	movf	?___aldiv+1,w
  2005  031D  00A7               	movwf	___lmul@multiplier+1
  2006  031E  0871               	movf	?___aldiv,w
  2007  031F  00A6               	movwf	___lmul@multiplier
  2008  0320  3000               	movlw	0
  2009  0321  00F4               	movwf	___aldiv@divisor+3
  2010  0322  3000               	movlw	0
  2011  0323  00F3               	movwf	___aldiv@divisor+2
  2012  0324  3000               	movlw	0
  2013  0325  00F2               	movwf	___aldiv@divisor+1
  2014  0326  3004               	movlw	4
  2015  0327  00F1               	movwf	___aldiv@divisor
  2016  0328  085E               	movf	BMP280_readPressure@var1+3,w
  2017  0329  00F8               	movwf	___aldiv@dividend+3
  2018  032A  085D               	movf	BMP280_readPressure@var1+2,w
  2019  032B  00F7               	movwf	___aldiv@dividend+2
  2020  032C  085C               	movf	BMP280_readPressure@var1+1,w
  2021  032D  00F6               	movwf	___aldiv@dividend+1
  2022  032E  085B               	movf	BMP280_readPressure@var1,w
  2023  032F  00F5               	movwf	___aldiv@dividend
  2024  0330  120A  118A  2016  120A  118A  	fcall	___aldiv
  2025  0335  0874               	movf	?___aldiv+3,w
  2026  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0338  00AD               	movwf	___lmul@multiplicand+3
  2029  0339  0873               	movf	?___aldiv+2,w
  2030  033A  00AC               	movwf	___lmul@multiplicand+2
  2031  033B  0872               	movf	?___aldiv+1,w
  2032  033C  00AB               	movwf	___lmul@multiplicand+1
  2033  033D  0871               	movf	?___aldiv,w
  2034  033E  00AA               	movwf	___lmul@multiplicand
  2035  033F  120A  158A  2561  120A  118A  	fcall	___lmul
  2036  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0346  0829               	movf	?___lmul+3,w
  2039  0347  00D2               	movwf	_BMP280_readPressure$942+3
  2040  0348  0828               	movf	?___lmul+2,w
  2041  0349  00D1               	movwf	_BMP280_readPressure$942+2
  2042  034A  0827               	movf	?___lmul+1,w
  2043  034B  00D0               	movwf	_BMP280_readPressure$942+1
  2044  034C  0826               	movf	?___lmul,w
  2045  034D  00CF               	movwf	_BMP280_readPressure$942
  2046                           
  2047                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2048  034E  3000               	movlw	0
  2049  034F  00F4               	movwf	___aldiv@divisor+3
  2050  0350  3000               	movlw	0
  2051  0351  00F3               	movwf	___aldiv@divisor+2
  2052  0352  3008               	movlw	8
  2053  0353  00F2               	movwf	___aldiv@divisor+1
  2054  0354  3000               	movlw	0
  2055  0355  00F1               	movwf	___aldiv@divisor
  2056  0356  0852               	movf	_BMP280_readPressure$942+3,w
  2057  0357  00F8               	movwf	___aldiv@dividend+3
  2058  0358  0851               	movf	_BMP280_readPressure$942+2,w
  2059  0359  00F7               	movwf	___aldiv@dividend+2
  2060  035A  0850               	movf	_BMP280_readPressure$942+1,w
  2061  035B  00F6               	movwf	___aldiv@dividend+1
  2062  035C  084F               	movf	_BMP280_readPressure$942,w
  2063  035D  00F5               	movwf	___aldiv@dividend
  2064  035E  120A  118A  2016  120A  118A  	fcall	___aldiv
  2065  0363  0874               	movf	?___aldiv+3,w
  2066  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0366  00A9               	movwf	___lmul@multiplier+3
  2069  0367  0873               	movf	?___aldiv+2,w
  2070  0368  00A8               	movwf	___lmul@multiplier+2
  2071  0369  0872               	movf	?___aldiv+1,w
  2072  036A  00A7               	movwf	___lmul@multiplier+1
  2073  036B  0871               	movf	?___aldiv,w
  2074  036C  00A6               	movwf	___lmul@multiplier
  2075  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2076  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2077  036F  0834               	movf	(_BMP280_calib^(0+128)+16),w
  2078  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0372  00AA               	movwf	___lmul@multiplicand
  2081  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2082  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2083  0375  0835               	movf	((_BMP280_calib+1)^(0+128)+16),w
  2084  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0378  00AB               	movwf	___lmul@multiplicand+1
  2087  0379  3000               	movlw	0
  2088  037A  1BAB               	btfsc	___lmul@multiplicand+1,7
  2089  037B  30FF               	movlw	255
  2090  037C  00AC               	movwf	___lmul@multiplicand+2
  2091  037D  00AD               	movwf	___lmul@multiplicand+3
  2092  037E  120A  158A  2561  120A  118A  	fcall	___lmul
  2093  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0385  0829               	movf	?___lmul+3,w
  2096  0386  00D6               	movwf	BMP280_readPressure@var2+3
  2097  0387  0828               	movf	?___lmul+2,w
  2098  0388  00D5               	movwf	BMP280_readPressure@var2+2
  2099  0389  0827               	movf	?___lmul+1,w
  2100  038A  00D4               	movwf	BMP280_readPressure@var2+1
  2101  038B  0826               	movf	?___lmul,w
  2102  038C  00D3               	movwf	BMP280_readPressure@var2
  2103                           
  2104                           ;BMP280.c: 275:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  2105  038D  0853               	movf	BMP280_readPressure@var2,w
  2106  038E  00B2               	movwf	??_BMP280_readPressure
  2107  038F  0854               	movf	BMP280_readPressure@var2+1,w
  2108  0390  00B3               	movwf	??_BMP280_readPressure+1
  2109  0391  0855               	movf	BMP280_readPressure@var2+2,w
  2110  0392  00B4               	movwf	??_BMP280_readPressure+2
  2111  0393  0856               	movf	BMP280_readPressure@var2+3,w
  2112  0394  00B5               	movwf	??_BMP280_readPressure+3
  2113  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0397  0832               	movf	(_BMP280_calib^(0+128)+14),w
  2116  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2118  039A  00A6               	movwf	___lmul@multiplier
  2119  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2120  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2121  039D  0833               	movf	((_BMP280_calib+1)^(0+128)+14),w
  2122  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2123  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2124  03A0  00A7               	movwf	___lmul@multiplier+1
  2125  03A1  3000               	movlw	0
  2126  03A2  1BA7               	btfsc	___lmul@multiplier+1,7
  2127  03A3  30FF               	movlw	255
  2128  03A4  00A8               	movwf	___lmul@multiplier+2
  2129  03A5  00A9               	movwf	___lmul@multiplier+3
  2130  03A6  085E               	movf	BMP280_readPressure@var1+3,w
  2131  03A7  00AD               	movwf	___lmul@multiplicand+3
  2132  03A8  085D               	movf	BMP280_readPressure@var1+2,w
  2133  03A9  00AC               	movwf	___lmul@multiplicand+2
  2134  03AA  085C               	movf	BMP280_readPressure@var1+1,w
  2135  03AB  00AB               	movwf	___lmul@multiplicand+1
  2136  03AC  085B               	movf	BMP280_readPressure@var1,w
  2137  03AD  00AA               	movwf	___lmul@multiplicand
  2138  03AE  120A  158A  2561  120A  118A  	fcall	___lmul
  2139  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2140  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2141  03B5  0826               	movf	?___lmul,w
  2142  03B6  00B6               	movwf	??_BMP280_readPressure+4
  2143  03B7  0827               	movf	?___lmul+1,w
  2144  03B8  00B7               	movwf	??_BMP280_readPressure+5
  2145  03B9  0828               	movf	?___lmul+2,w
  2146  03BA  00B8               	movwf	??_BMP280_readPressure+6
  2147  03BB  0829               	movf	?___lmul+3,w
  2148  03BC  00B9               	movwf	??_BMP280_readPressure+7
  2149  03BD  3001               	movlw	1
  2150  03BE                     u995:
  2151  03BE  1003               	clrc
  2152  03BF  0DB6               	rlf	??_BMP280_readPressure+4,f
  2153  03C0  0DB7               	rlf	??_BMP280_readPressure+5,f
  2154  03C1  0DB8               	rlf	??_BMP280_readPressure+6,f
  2155  03C2  0DB9               	rlf	??_BMP280_readPressure+7,f
  2156  03C3                     u990:
  2157  03C3  3EFF               	addlw	-1
  2158  03C4  1D03               	skipz
  2159  03C5  2BBE               	goto	u995
  2160  03C6  0836               	movf	??_BMP280_readPressure+4,w
  2161  03C7  07B2               	addwf	??_BMP280_readPressure,f
  2162  03C8  0837               	movf	??_BMP280_readPressure+5,w
  2163  03C9  1803               	skipnc
  2164  03CA  0F37               	incfsz	??_BMP280_readPressure+5,w
  2165  03CB  2BCD               	goto	u1000
  2166  03CC  2BCE               	goto	u1001
  2167  03CD                     u1000:
  2168  03CD  07B3               	addwf	??_BMP280_readPressure+1,f
  2169  03CE                     u1001:
  2170  03CE  0838               	movf	??_BMP280_readPressure+6,w
  2171  03CF  1803               	skipnc
  2172  03D0  0F38               	incfsz	??_BMP280_readPressure+6,w
  2173  03D1  2BD3               	goto	u1002
  2174  03D2  2BD4               	goto	u1003
  2175  03D3                     u1002:
  2176  03D3  07B4               	addwf	??_BMP280_readPressure+2,f
  2177  03D4                     u1003:
  2178  03D4  0839               	movf	??_BMP280_readPressure+7,w
  2179  03D5  1803               	skipnc
  2180  03D6  0A39               	incf	??_BMP280_readPressure+7,w
  2181  03D7  07B5               	addwf	??_BMP280_readPressure+3,f
  2182  03D8  0835               	movf	??_BMP280_readPressure+3,w
  2183  03D9  00D6               	movwf	BMP280_readPressure@var2+3
  2184  03DA  0834               	movf	??_BMP280_readPressure+2,w
  2185  03DB  00D5               	movwf	BMP280_readPressure@var2+2
  2186  03DC  0833               	movf	??_BMP280_readPressure+1,w
  2187  03DD  00D4               	movwf	BMP280_readPressure@var2+1
  2188  03DE  0832               	movf	??_BMP280_readPressure,w
  2189  03DF  00D3               	movwf	BMP280_readPressure@var2
  2190                           
  2191                           ;BMP280.c: 276:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  2192  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2193  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2194  03E2  0830               	movf	(_BMP280_calib^(0+128)+12),w
  2195  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2196  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2197  03E5  00B2               	movwf	??_BMP280_readPressure
  2198  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2199  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2200  03E8  0831               	movf	((_BMP280_calib+1)^(0+128)+12),w
  2201  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2202  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2203  03EB  00B3               	movwf	??_BMP280_readPressure+1
  2204  03EC  01B4               	clrf	??_BMP280_readPressure+2
  2205  03ED  01B5               	clrf	??_BMP280_readPressure+3
  2206  03EE  3010               	movlw	16
  2207  03EF                     u1015:
  2208  03EF  1003               	clrc
  2209  03F0  0DB2               	rlf	??_BMP280_readPressure,f
  2210  03F1  0DB3               	rlf	??_BMP280_readPressure+1,f
  2211  03F2  0DB4               	rlf	??_BMP280_readPressure+2,f
  2212  03F3  0DB5               	rlf	??_BMP280_readPressure+3,f
  2213  03F4                     u1010:
  2214  03F4  3EFF               	addlw	-1
  2215  03F5  1D03               	skipz
  2216  03F6  2BEF               	goto	u1015
  2217  03F7  3000               	movlw	0
  2218  03F8  00F4               	movwf	___aldiv@divisor+3
  2219  03F9  3000               	movlw	0
  2220  03FA  00F3               	movwf	___aldiv@divisor+2
  2221  03FB  3000               	movlw	0
  2222  03FC  00F2               	movwf	___aldiv@divisor+1
  2223  03FD  3004               	movlw	4
  2224  03FE  00F1               	movwf	___aldiv@divisor
  2225  03FF  0856               	movf	BMP280_readPressure@var2+3,w
  2226  0400  00F8               	movwf	___aldiv@dividend+3
  2227  0401  0855               	movf	BMP280_readPressure@var2+2,w
  2228  0402  00F7               	movwf	___aldiv@dividend+2
  2229  0403  0854               	movf	BMP280_readPressure@var2+1,w
  2230  0404  00F6               	movwf	___aldiv@dividend+1
  2231  0405  0853               	movf	BMP280_readPressure@var2,w
  2232  0406  00F5               	movwf	___aldiv@dividend
  2233  0407  120A  118A  2016  120A  118A  	fcall	___aldiv
  2234  040C  0871               	movf	?___aldiv,w
  2235  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2236  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2237  040F  07B2               	addwf	??_BMP280_readPressure,f
  2238  0410  0872               	movf	?___aldiv+1,w
  2239  0411  1803               	skipnc
  2240  0412  0F72               	incfsz	?___aldiv+1,w
  2241  0413  2C15               	goto	u1020
  2242  0414  2C16               	goto	u1021
  2243  0415                     u1020:
  2244  0415  07B3               	addwf	??_BMP280_readPressure+1,f
  2245  0416                     u1021:
  2246  0416  0873               	movf	?___aldiv+2,w
  2247  0417  1803               	skipnc
  2248  0418  0F73               	incfsz	?___aldiv+2,w
  2249  0419  2C1B               	goto	u1022
  2250  041A  2C1C               	goto	u1023
  2251  041B                     u1022:
  2252  041B  07B4               	addwf	??_BMP280_readPressure+2,f
  2253  041C                     u1023:
  2254  041C  0874               	movf	?___aldiv+3,w
  2255  041D  1803               	skipnc
  2256  041E  0A74               	incf	?___aldiv+3,w
  2257  041F  07B5               	addwf	??_BMP280_readPressure+3,f
  2258  0420  0835               	movf	??_BMP280_readPressure+3,w
  2259  0421  00D6               	movwf	BMP280_readPressure@var2+3
  2260  0422  0834               	movf	??_BMP280_readPressure+2,w
  2261  0423  00D5               	movwf	BMP280_readPressure@var2+2
  2262  0424  0833               	movf	??_BMP280_readPressure+1,w
  2263  0425  00D4               	movwf	BMP280_readPressure@var2+1
  2264  0426  0832               	movf	??_BMP280_readPressure,w
  2265  0427  00D3               	movwf	BMP280_readPressure@var2
  2266                           
  2267                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2268  0428  3000               	movlw	0
  2269  0429  00F4               	movwf	___aldiv@divisor+3
  2270  042A  3000               	movlw	0
  2271  042B  00F3               	movwf	___aldiv@divisor+2
  2272  042C  3000               	movlw	0
  2273  042D  00F2               	movwf	___aldiv@divisor+1
  2274  042E  3004               	movlw	4
  2275  042F  00F1               	movwf	___aldiv@divisor
  2276  0430  085E               	movf	BMP280_readPressure@var1+3,w
  2277  0431  00F8               	movwf	___aldiv@dividend+3
  2278  0432  085D               	movf	BMP280_readPressure@var1+2,w
  2279  0433  00F7               	movwf	___aldiv@dividend+2
  2280  0434  085C               	movf	BMP280_readPressure@var1+1,w
  2281  0435  00F6               	movwf	___aldiv@dividend+1
  2282  0436  085B               	movf	BMP280_readPressure@var1,w
  2283  0437  00F5               	movwf	___aldiv@dividend
  2284  0438  120A  118A  2016  120A  118A  	fcall	___aldiv
  2285  043D  0874               	movf	?___aldiv+3,w
  2286  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2287  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0440  00A9               	movwf	___lmul@multiplier+3
  2289  0441  0873               	movf	?___aldiv+2,w
  2290  0442  00A8               	movwf	___lmul@multiplier+2
  2291  0443  0872               	movf	?___aldiv+1,w
  2292  0444  00A7               	movwf	___lmul@multiplier+1
  2293  0445  0871               	movf	?___aldiv,w
  2294  0446  00A6               	movwf	___lmul@multiplier
  2295  0447  3000               	movlw	0
  2296  0448  00F4               	movwf	___aldiv@divisor+3
  2297  0449  3000               	movlw	0
  2298  044A  00F3               	movwf	___aldiv@divisor+2
  2299  044B  3000               	movlw	0
  2300  044C  00F2               	movwf	___aldiv@divisor+1
  2301  044D  3004               	movlw	4
  2302  044E  00F1               	movwf	___aldiv@divisor
  2303  044F  085E               	movf	BMP280_readPressure@var1+3,w
  2304  0450  00F8               	movwf	___aldiv@dividend+3
  2305  0451  085D               	movf	BMP280_readPressure@var1+2,w
  2306  0452  00F7               	movwf	___aldiv@dividend+2
  2307  0453  085C               	movf	BMP280_readPressure@var1+1,w
  2308  0454  00F6               	movwf	___aldiv@dividend+1
  2309  0455  085B               	movf	BMP280_readPressure@var1,w
  2310  0456  00F5               	movwf	___aldiv@dividend
  2311  0457  120A  118A  2016  120A  118A  	fcall	___aldiv
  2312  045C  0874               	movf	?___aldiv+3,w
  2313  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2314  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2315  045F  00AD               	movwf	___lmul@multiplicand+3
  2316  0460  0873               	movf	?___aldiv+2,w
  2317  0461  00AC               	movwf	___lmul@multiplicand+2
  2318  0462  0872               	movf	?___aldiv+1,w
  2319  0463  00AB               	movwf	___lmul@multiplicand+1
  2320  0464  0871               	movf	?___aldiv,w
  2321  0465  00AA               	movwf	___lmul@multiplicand
  2322  0466  120A  158A  2561  120A  118A  	fcall	___lmul
  2323  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2324  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2325  046D  0829               	movf	?___lmul+3,w
  2326  046E  00D2               	movwf	_BMP280_readPressure$942+3
  2327  046F  0828               	movf	?___lmul+2,w
  2328  0470  00D1               	movwf	_BMP280_readPressure$942+2
  2329  0471  0827               	movf	?___lmul+1,w
  2330  0472  00D0               	movwf	_BMP280_readPressure$942+1
  2331  0473  0826               	movf	?___lmul,w
  2332  0474  00CF               	movwf	_BMP280_readPressure$942
  2333                           
  2334                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2335  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0477  082E               	movf	(_BMP280_calib^(0+128)+10),w
  2338  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2340  047A  00A6               	movwf	___lmul@multiplier
  2341  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2342  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2343  047D  082F               	movf	((_BMP280_calib+1)^(0+128)+10),w
  2344  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2345  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2346  0480  00A7               	movwf	___lmul@multiplier+1
  2347  0481  3000               	movlw	0
  2348  0482  1BA7               	btfsc	___lmul@multiplier+1,7
  2349  0483  30FF               	movlw	255
  2350  0484  00A8               	movwf	___lmul@multiplier+2
  2351  0485  00A9               	movwf	___lmul@multiplier+3
  2352  0486  3000               	movlw	0
  2353  0487  00F4               	movwf	___aldiv@divisor+3
  2354  0488  3000               	movlw	0
  2355  0489  00F3               	movwf	___aldiv@divisor+2
  2356  048A  3020               	movlw	32
  2357  048B  00F2               	movwf	___aldiv@divisor+1
  2358  048C  3000               	movlw	0
  2359  048D  00F1               	movwf	___aldiv@divisor
  2360  048E  0852               	movf	_BMP280_readPressure$942+3,w
  2361  048F  00F8               	movwf	___aldiv@dividend+3
  2362  0490  0851               	movf	_BMP280_readPressure$942+2,w
  2363  0491  00F7               	movwf	___aldiv@dividend+2
  2364  0492  0850               	movf	_BMP280_readPressure$942+1,w
  2365  0493  00F6               	movwf	___aldiv@dividend+1
  2366  0494  084F               	movf	_BMP280_readPressure$942,w
  2367  0495  00F5               	movwf	___aldiv@dividend
  2368  0496  120A  118A  2016  120A  118A  	fcall	___aldiv
  2369  049B  0874               	movf	?___aldiv+3,w
  2370  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2371  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2372  049E  00AD               	movwf	___lmul@multiplicand+3
  2373  049F  0873               	movf	?___aldiv+2,w
  2374  04A0  00AC               	movwf	___lmul@multiplicand+2
  2375  04A1  0872               	movf	?___aldiv+1,w
  2376  04A2  00AB               	movwf	___lmul@multiplicand+1
  2377  04A3  0871               	movf	?___aldiv,w
  2378  04A4  00AA               	movwf	___lmul@multiplicand
  2379  04A5  120A  158A  2561  120A  118A  	fcall	___lmul
  2380  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2381  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2382  04AC  0829               	movf	?___lmul+3,w
  2383  04AD  00C5               	movwf	_BMP280_readPressure$943+3
  2384  04AE  0828               	movf	?___lmul+2,w
  2385  04AF  00C4               	movwf	_BMP280_readPressure$943+2
  2386  04B0  0827               	movf	?___lmul+1,w
  2387  04B1  00C3               	movwf	_BMP280_readPressure$943+1
  2388  04B2  0826               	movf	?___lmul,w
  2389  04B3  00C2               	movwf	_BMP280_readPressure$943
  2390                           
  2391                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2392  04B4  3000               	movlw	0
  2393  04B5  00F4               	movwf	___aldiv@divisor+3
  2394  04B6  3000               	movlw	0
  2395  04B7  00F3               	movwf	___aldiv@divisor+2
  2396  04B8  3000               	movlw	0
  2397  04B9  00F2               	movwf	___aldiv@divisor+1
  2398  04BA  3002               	movlw	2
  2399  04BB  00F1               	movwf	___aldiv@divisor
  2400  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2401  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2402  04BE  082C               	movf	(_BMP280_calib^(0+128)+8),w
  2403  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2404  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2405  04C1  00A6               	movwf	___lmul@multiplier
  2406  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2407  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2408  04C4  082D               	movf	((_BMP280_calib+1)^(0+128)+8),w
  2409  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2410  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2411  04C7  00A7               	movwf	___lmul@multiplier+1
  2412  04C8  3000               	movlw	0
  2413  04C9  1BA7               	btfsc	___lmul@multiplier+1,7
  2414  04CA  30FF               	movlw	255
  2415  04CB  00A8               	movwf	___lmul@multiplier+2
  2416  04CC  00A9               	movwf	___lmul@multiplier+3
  2417  04CD  085E               	movf	BMP280_readPressure@var1+3,w
  2418  04CE  00AD               	movwf	___lmul@multiplicand+3
  2419  04CF  085D               	movf	BMP280_readPressure@var1+2,w
  2420  04D0  00AC               	movwf	___lmul@multiplicand+2
  2421  04D1  085C               	movf	BMP280_readPressure@var1+1,w
  2422  04D2  00AB               	movwf	___lmul@multiplicand+1
  2423  04D3  085B               	movf	BMP280_readPressure@var1,w
  2424  04D4  00AA               	movwf	___lmul@multiplicand
  2425  04D5  120A  158A  2561  120A  118A  	fcall	___lmul
  2426  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2427  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2428  04DC  0829               	movf	?___lmul+3,w
  2429  04DD  00F8               	movwf	___aldiv@dividend+3
  2430  04DE  0828               	movf	?___lmul+2,w
  2431  04DF  00F7               	movwf	___aldiv@dividend+2
  2432  04E0  0827               	movf	?___lmul+1,w
  2433  04E1  00F6               	movwf	___aldiv@dividend+1
  2434  04E2  0826               	movf	?___lmul,w
  2435  04E3  00F5               	movwf	___aldiv@dividend
  2436  04E4  120A  118A  2016  120A  118A  	fcall	___aldiv
  2437  04E9  0871               	movf	?___aldiv,w
  2438  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2439  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2440  04EC  00B2               	movwf	??_BMP280_readPressure
  2441  04ED  0872               	movf	?___aldiv+1,w
  2442  04EE  00B3               	movwf	??_BMP280_readPressure+1
  2443  04EF  0873               	movf	?___aldiv+2,w
  2444  04F0  00B4               	movwf	??_BMP280_readPressure+2
  2445  04F1  0874               	movf	?___aldiv+3,w
  2446  04F2  00B5               	movwf	??_BMP280_readPressure+3
  2447  04F3  3000               	movlw	0
  2448  04F4  00F4               	movwf	___aldiv@divisor+3
  2449  04F5  3000               	movlw	0
  2450  04F6  00F3               	movwf	___aldiv@divisor+2
  2451  04F7  3000               	movlw	0
  2452  04F8  00F2               	movwf	___aldiv@divisor+1
  2453  04F9  3008               	movlw	8
  2454  04FA  00F1               	movwf	___aldiv@divisor
  2455  04FB  0845               	movf	_BMP280_readPressure$943+3,w
  2456  04FC  00F8               	movwf	___aldiv@dividend+3
  2457  04FD  0844               	movf	_BMP280_readPressure$943+2,w
  2458  04FE  00F7               	movwf	___aldiv@dividend+2
  2459  04FF  0843               	movf	_BMP280_readPressure$943+1,w
  2460  0500  00F6               	movwf	___aldiv@dividend+1
  2461  0501  0842               	movf	_BMP280_readPressure$943,w
  2462  0502  00F5               	movwf	___aldiv@dividend
  2463  0503  120A  118A  2016  120A  118A  	fcall	___aldiv
  2464  0508  0871               	movf	?___aldiv,w
  2465  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2466  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2467  050B  07B2               	addwf	??_BMP280_readPressure,f
  2468  050C  0872               	movf	?___aldiv+1,w
  2469  050D  1803               	skipnc
  2470  050E  0F72               	incfsz	?___aldiv+1,w
  2471  050F  2D11               	goto	u1030
  2472  0510  2D12               	goto	u1031
  2473  0511                     u1030:
  2474  0511  07B3               	addwf	??_BMP280_readPressure+1,f
  2475  0512                     u1031:
  2476  0512  0873               	movf	?___aldiv+2,w
  2477  0513  1803               	skipnc
  2478  0514  0F73               	incfsz	?___aldiv+2,w
  2479  0515  2D17               	goto	u1032
  2480  0516  2D18               	goto	u1033
  2481  0517                     u1032:
  2482  0517  07B4               	addwf	??_BMP280_readPressure+2,f
  2483  0518                     u1033:
  2484  0518  0874               	movf	?___aldiv+3,w
  2485  0519  1803               	skipnc
  2486  051A  0A74               	incf	?___aldiv+3,w
  2487  051B  07B5               	addwf	??_BMP280_readPressure+3,f
  2488  051C  0835               	movf	??_BMP280_readPressure+3,w
  2489  051D  00C9               	movwf	_BMP280_readPressure$944+3
  2490  051E  0834               	movf	??_BMP280_readPressure+2,w
  2491  051F  00C8               	movwf	_BMP280_readPressure$944+2
  2492  0520  0833               	movf	??_BMP280_readPressure+1,w
  2493  0521  00C7               	movwf	_BMP280_readPressure$944+1
  2494  0522  0832               	movf	??_BMP280_readPressure,w
  2495  0523  00C6               	movwf	_BMP280_readPressure$944
  2496                           
  2497                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2498  0524  3000               	movlw	0
  2499  0525  00F4               	movwf	___aldiv@divisor+3
  2500  0526  3004               	movlw	4
  2501  0527  00F3               	movwf	___aldiv@divisor+2
  2502  0528  3000               	movlw	0
  2503  0529  00F2               	movwf	___aldiv@divisor+1
  2504  052A  3000               	movlw	0
  2505  052B  00F1               	movwf	___aldiv@divisor
  2506  052C  0849               	movf	_BMP280_readPressure$944+3,w
  2507  052D  00F8               	movwf	___aldiv@dividend+3
  2508  052E  0848               	movf	_BMP280_readPressure$944+2,w
  2509  052F  00F7               	movwf	___aldiv@dividend+2
  2510  0530  0847               	movf	_BMP280_readPressure$944+1,w
  2511  0531  00F6               	movwf	___aldiv@dividend+1
  2512  0532  0846               	movf	_BMP280_readPressure$944,w
  2513  0533  00F5               	movwf	___aldiv@dividend
  2514  0534  120A  118A  2016  120A  118A  	fcall	___aldiv
  2515  0539  0874               	movf	?___aldiv+3,w
  2516  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2517  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2518  053C  00DE               	movwf	BMP280_readPressure@var1+3
  2519  053D  0873               	movf	?___aldiv+2,w
  2520  053E  00DD               	movwf	BMP280_readPressure@var1+2
  2521  053F  0872               	movf	?___aldiv+1,w
  2522  0540  00DC               	movwf	BMP280_readPressure@var1+1
  2523  0541  0871               	movf	?___aldiv,w
  2524  0542  00DB               	movwf	BMP280_readPressure@var1
  2525                           
  2526                           ;BMP280.c: 281:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  2527  0543  3000               	movlw	0
  2528  0544  00F4               	movwf	___aldiv@divisor+3
  2529  0545  3000               	movlw	0
  2530  0546  00F3               	movwf	___aldiv@divisor+2
  2531  0547  3080               	movlw	128
  2532  0548  00F2               	movwf	___aldiv@divisor+1
  2533  0549  3000               	movlw	0
  2534  054A  00F1               	movwf	___aldiv@divisor
  2535  054B  3000               	movlw	0
  2536  054C  00B2               	movwf	??_BMP280_readPressure
  2537  054D  3080               	movlw	128
  2538  054E  00B3               	movwf	??_BMP280_readPressure+1
  2539  054F  3000               	movlw	0
  2540  0550  00B4               	movwf	??_BMP280_readPressure+2
  2541  0551  3000               	movlw	0
  2542  0552  00B5               	movwf	??_BMP280_readPressure+3
  2543  0553  085B               	movf	BMP280_readPressure@var1,w
  2544  0554  07B2               	addwf	??_BMP280_readPressure,f
  2545  0555  085C               	movf	BMP280_readPressure@var1+1,w
  2546  0556  1803               	skipnc
  2547  0557  0F5C               	incfsz	BMP280_readPressure@var1+1,w
  2548  0558  2D5A               	goto	u1040
  2549  0559  2D5B               	goto	u1041
  2550  055A                     u1040:
  2551  055A  07B3               	addwf	??_BMP280_readPressure+1,f
  2552  055B                     u1041:
  2553  055B  085D               	movf	BMP280_readPressure@var1+2,w
  2554  055C  1803               	skipnc
  2555  055D  0F5D               	incfsz	BMP280_readPressure@var1+2,w
  2556  055E  2D60               	goto	u1042
  2557  055F  2D61               	goto	u1043
  2558  0560                     u1042:
  2559  0560  07B4               	addwf	??_BMP280_readPressure+2,f
  2560  0561                     u1043:
  2561  0561  085E               	movf	BMP280_readPressure@var1+3,w
  2562  0562  1803               	skipnc
  2563  0563  0A5E               	incf	BMP280_readPressure@var1+3,w
  2564  0564  07B5               	addwf	??_BMP280_readPressure+3,f
  2565  0565  0835               	movf	??_BMP280_readPressure+3,w
  2566  0566  00A9               	movwf	___lmul@multiplier+3
  2567  0567  0834               	movf	??_BMP280_readPressure+2,w
  2568  0568  00A8               	movwf	___lmul@multiplier+2
  2569  0569  0833               	movf	??_BMP280_readPressure+1,w
  2570  056A  00A7               	movwf	___lmul@multiplier+1
  2571  056B  0832               	movf	??_BMP280_readPressure,w
  2572  056C  00A6               	movwf	___lmul@multiplier
  2573  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2574  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2575  056F  082A               	movf	(_BMP280_calib^(0+128)+6),w
  2576  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0572  00AA               	movwf	___lmul@multiplicand
  2579  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2580  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2581  0575  082B               	movf	((_BMP280_calib+1)^(0+128)+6),w
  2582  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0578  00AB               	movwf	___lmul@multiplicand+1
  2585  0579  01AC               	clrf	___lmul@multiplicand+2
  2586  057A  01AD               	clrf	___lmul@multiplicand+3
  2587  057B  120A  158A  2561  120A  118A  	fcall	___lmul
  2588  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0582  0829               	movf	?___lmul+3,w
  2591  0583  00F8               	movwf	___aldiv@dividend+3
  2592  0584  0828               	movf	?___lmul+2,w
  2593  0585  00F7               	movwf	___aldiv@dividend+2
  2594  0586  0827               	movf	?___lmul+1,w
  2595  0587  00F6               	movwf	___aldiv@dividend+1
  2596  0588  0826               	movf	?___lmul,w
  2597  0589  00F5               	movwf	___aldiv@dividend
  2598  058A  120A  118A  2016  120A  118A  	fcall	___aldiv
  2599  058F  0874               	movf	?___aldiv+3,w
  2600  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2602  0592  00DE               	movwf	BMP280_readPressure@var1+3
  2603  0593  0873               	movf	?___aldiv+2,w
  2604  0594  00DD               	movwf	BMP280_readPressure@var1+2
  2605  0595  0872               	movf	?___aldiv+1,w
  2606  0596  00DC               	movwf	BMP280_readPressure@var1+1
  2607  0597  0871               	movf	?___aldiv,w
  2608  0598  00DB               	movwf	BMP280_readPressure@var1
  2609  0599                     l1208:
  2610                           
  2611                           ;BMP280.c: 283:   if (var1 == 0)
  2612  0599  085E               	movf	BMP280_readPressure@var1+3,w
  2613  059A  045D               	iorwf	BMP280_readPressure@var1+2,w
  2614  059B  045C               	iorwf	BMP280_readPressure@var1+1,w
  2615  059C  045B               	iorwf	BMP280_readPressure@var1,w
  2616  059D  1D03               	skipz
  2617  059E  2DA0               	goto	u1051
  2618  059F  2DA1               	goto	u1050
  2619  05A0                     u1051:
  2620  05A0  2DA2               	goto	l1212
  2621  05A1                     u1050:
  2622  05A1  2FEA               	goto	l154
  2623  05A2                     l1212:
  2624                           
  2625                           ;BMP280.c: 286:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  2626  05A2  3000               	movlw	0
  2627  05A3  00B2               	movwf	??_BMP280_readPressure
  2628  05A4  3000               	movlw	0
  2629  05A5  00B3               	movwf	??_BMP280_readPressure+1
  2630  05A6  3010               	movlw	16
  2631  05A7  00B4               	movwf	??_BMP280_readPressure+2
  2632  05A8  3000               	movlw	0
  2633  05A9  00B5               	movwf	??_BMP280_readPressure+3
  2634  05AA  3000               	movlw	0
  2635  05AB  00F4               	movwf	___aldiv@divisor+3
  2636  05AC  3000               	movlw	0
  2637  05AD  00F3               	movwf	___aldiv@divisor+2
  2638  05AE  3010               	movlw	16
  2639  05AF  00F2               	movwf	___aldiv@divisor+1
  2640  05B0  3000               	movlw	0
  2641  05B1  00F1               	movwf	___aldiv@divisor
  2642  05B2  0856               	movf	BMP280_readPressure@var2+3,w
  2643  05B3  00F8               	movwf	___aldiv@dividend+3
  2644  05B4  0855               	movf	BMP280_readPressure@var2+2,w
  2645  05B5  00F7               	movwf	___aldiv@dividend+2
  2646  05B6  0854               	movf	BMP280_readPressure@var2+1,w
  2647  05B7  00F6               	movwf	___aldiv@dividend+1
  2648  05B8  0853               	movf	BMP280_readPressure@var2,w
  2649  05B9  00F5               	movwf	___aldiv@dividend
  2650  05BA  120A  118A  2016  120A  118A  	fcall	___aldiv
  2651  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2652  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2653  05C1  0920               	comf	_adc_P^(0+128),w
  2654  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2655  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2656  05C4  00B6               	movwf	??_BMP280_readPressure+4
  2657  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2658  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2659  05C7  0921               	comf	(_adc_P+1)^(0+128),w
  2660  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2661  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2662  05CA  00B7               	movwf	??_BMP280_readPressure+5
  2663  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  2664  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  2665  05CD  0922               	comf	(_adc_P+2)^(0+128),w
  2666  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2667  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2668  05D0  00B8               	movwf	??_BMP280_readPressure+6
  2669  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  2670  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  2671  05D3  0923               	comf	(_adc_P+3)^(0+128),w
  2672  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2673  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2674  05D6  00B9               	movwf	??_BMP280_readPressure+7
  2675  05D7  0AB6               	incf	??_BMP280_readPressure+4,f
  2676  05D8  1903               	skipnz
  2677  05D9  0AB7               	incf	??_BMP280_readPressure+5,f
  2678  05DA  1903               	skipnz
  2679  05DB  0AB8               	incf	??_BMP280_readPressure+6,f
  2680  05DC  1903               	skipnz
  2681  05DD  0AB9               	incf	??_BMP280_readPressure+7,f
  2682  05DE  0871               	movf	?___aldiv,w
  2683  05DF  02B6               	subwf	??_BMP280_readPressure+4,f
  2684  05E0  0872               	movf	?___aldiv+1,w
  2685  05E1  1C03               	skipc
  2686  05E2  0F72               	incfsz	?___aldiv+1,w
  2687  05E3  2DE5               	goto	u1061
  2688  05E4  2DE6               	goto	u1062
  2689  05E5                     u1061:
  2690  05E5  02B7               	subwf	??_BMP280_readPressure+5,f
  2691  05E6                     u1062:
  2692  05E6  0873               	movf	?___aldiv+2,w
  2693  05E7  1C03               	skipc
  2694  05E8  0F73               	incfsz	?___aldiv+2,w
  2695  05E9  2DEB               	goto	u1063
  2696  05EA  2DEC               	goto	u1064
  2697  05EB                     u1063:
  2698  05EB  02B8               	subwf	??_BMP280_readPressure+6,f
  2699  05EC                     u1064:
  2700  05EC  0874               	movf	?___aldiv+3,w
  2701  05ED  1C03               	skipc
  2702  05EE  0F74               	incfsz	?___aldiv+3,w
  2703  05EF  2DF1               	goto	u1065
  2704  05F0  2DF2               	goto	u1066
  2705  05F1                     u1065:
  2706  05F1  02B9               	subwf	??_BMP280_readPressure+7,f
  2707  05F2                     u1066:
  2708  05F2  0836               	movf	??_BMP280_readPressure+4,w
  2709  05F3  07B2               	addwf	??_BMP280_readPressure,f
  2710  05F4  0837               	movf	??_BMP280_readPressure+5,w
  2711  05F5  1803               	skipnc
  2712  05F6  0F37               	incfsz	??_BMP280_readPressure+5,w
  2713  05F7  2DF9               	goto	u1070
  2714  05F8  2DFA               	goto	u1071
  2715  05F9                     u1070:
  2716  05F9  07B3               	addwf	??_BMP280_readPressure+1,f
  2717  05FA                     u1071:
  2718  05FA  0838               	movf	??_BMP280_readPressure+6,w
  2719  05FB  1803               	skipnc
  2720  05FC  0F38               	incfsz	??_BMP280_readPressure+6,w
  2721  05FD  2DFF               	goto	u1072
  2722  05FE  2E00               	goto	u1073
  2723  05FF                     u1072:
  2724  05FF  07B4               	addwf	??_BMP280_readPressure+2,f
  2725  0600                     u1073:
  2726  0600  0839               	movf	??_BMP280_readPressure+7,w
  2727  0601  1803               	skipnc
  2728  0602  0A39               	incf	??_BMP280_readPressure+7,w
  2729  0603  07B5               	addwf	??_BMP280_readPressure+3,f
  2730  0604  0835               	movf	??_BMP280_readPressure+3,w
  2731  0605  00A9               	movwf	___lmul@multiplier+3
  2732  0606  0834               	movf	??_BMP280_readPressure+2,w
  2733  0607  00A8               	movwf	___lmul@multiplier+2
  2734  0608  0833               	movf	??_BMP280_readPressure+1,w
  2735  0609  00A7               	movwf	___lmul@multiplier+1
  2736  060A  0832               	movf	??_BMP280_readPressure,w
  2737  060B  00A6               	movwf	___lmul@multiplier
  2738  060C  3000               	movlw	0
  2739  060D  00AD               	movwf	___lmul@multiplicand+3
  2740  060E  3000               	movlw	0
  2741  060F  00AC               	movwf	___lmul@multiplicand+2
  2742  0610  300C               	movlw	12
  2743  0611  00AB               	movwf	___lmul@multiplicand+1
  2744  0612  3035               	movlw	53
  2745  0613  00AA               	movwf	___lmul@multiplicand
  2746  0614  120A  158A  2561  120A  118A  	fcall	___lmul
  2747  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2748  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2749  061B  0829               	movf	?___lmul+3,w
  2750  061C  00DA               	movwf	BMP280_readPressure@p+3
  2751  061D  0828               	movf	?___lmul+2,w
  2752  061E  00D9               	movwf	BMP280_readPressure@p+2
  2753  061F  0827               	movf	?___lmul+1,w
  2754  0620  00D8               	movwf	BMP280_readPressure@p+1
  2755  0621  0826               	movf	?___lmul,w
  2756  0622  00D7               	movwf	BMP280_readPressure@p
  2757  0623                     l1214:
  2758                           
  2759                           ;BMP280.c: 288:   if (p < 0x80000000)
  2760  0623  3080               	movlw	128
  2761  0624  025A               	subwf	BMP280_readPressure@p+3,w
  2762  0625  1D03               	skipz
  2763  0626  2E33               	goto	u1083
  2764  0627  3000               	movlw	0
  2765  0628  0259               	subwf	BMP280_readPressure@p+2,w
  2766  0629  1D03               	skipz
  2767  062A  2E33               	goto	u1083
  2768  062B  3000               	movlw	0
  2769  062C  0258               	subwf	BMP280_readPressure@p+1,w
  2770  062D  1D03               	skipz
  2771  062E  2E33               	goto	u1083
  2772  062F  3000               	movlw	0
  2773  0630  0257               	subwf	BMP280_readPressure@p,w
  2774  0631  1D03               	skipz
  2775  0632  2E33               	goto	u1083
  2776  0633                     u1083:
  2777  0633  1803               	btfsc	3,0
  2778  0634  2E36               	goto	u1081
  2779  0635  2E37               	goto	u1080
  2780  0636                     u1081:
  2781  0636  2E5A               	goto	l1218
  2782  0637                     u1080:
  2783  0637                     l1216:
  2784                           
  2785                           ;BMP280.c: 289:     p = (p * 2) / ((uint32_t)var1);
  2786  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0639  085E               	movf	BMP280_readPressure@var1+3,w
  2789  063A  00F4               	movwf	___lldiv@divisor+3
  2790  063B  085D               	movf	BMP280_readPressure@var1+2,w
  2791  063C  00F3               	movwf	___lldiv@divisor+2
  2792  063D  085C               	movf	BMP280_readPressure@var1+1,w
  2793  063E  00F2               	movwf	___lldiv@divisor+1
  2794  063F  085B               	movf	BMP280_readPressure@var1,w
  2795  0640  00F1               	movwf	___lldiv@divisor
  2796  0641  1003               	clrc
  2797  0642  0D57               	rlf	BMP280_readPressure@p,w
  2798  0643  00F5               	movwf	___lldiv@dividend
  2799  0644  0D58               	rlf	BMP280_readPressure@p+1,w
  2800  0645  00F6               	movwf	___lldiv@dividend+1
  2801  0646  0D59               	rlf	BMP280_readPressure@p+2,w
  2802  0647  00F7               	movwf	___lldiv@dividend+2
  2803  0648  0D5A               	rlf	BMP280_readPressure@p+3,w
  2804  0649  00F8               	movwf	___lldiv@dividend+3
  2805  064A  120A  158A  25F5  120A  118A  	fcall	___lldiv
  2806  064F  0874               	movf	?___lldiv+3,w
  2807  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0652  00DA               	movwf	BMP280_readPressure@p+3
  2810  0653  0873               	movf	?___lldiv+2,w
  2811  0654  00D9               	movwf	BMP280_readPressure@p+2
  2812  0655  0872               	movf	?___lldiv+1,w
  2813  0656  00D8               	movwf	BMP280_readPressure@p+1
  2814  0657  0871               	movf	?___lldiv,w
  2815  0658  00D7               	movwf	BMP280_readPressure@p
  2816  0659  2E7C               	goto	l156
  2817  065A                     l1218:
  2818                           
  2819                           ;BMP280.c: 292:     p = (p / (uint32_t)var1) * 2;
  2820  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2821  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2822  065C  085E               	movf	BMP280_readPressure@var1+3,w
  2823  065D  00F4               	movwf	___lldiv@divisor+3
  2824  065E  085D               	movf	BMP280_readPressure@var1+2,w
  2825  065F  00F3               	movwf	___lldiv@divisor+2
  2826  0660  085C               	movf	BMP280_readPressure@var1+1,w
  2827  0661  00F2               	movwf	___lldiv@divisor+1
  2828  0662  085B               	movf	BMP280_readPressure@var1,w
  2829  0663  00F1               	movwf	___lldiv@divisor
  2830  0664  085A               	movf	BMP280_readPressure@p+3,w
  2831  0665  00F8               	movwf	___lldiv@dividend+3
  2832  0666  0859               	movf	BMP280_readPressure@p+2,w
  2833  0667  00F7               	movwf	___lldiv@dividend+2
  2834  0668  0858               	movf	BMP280_readPressure@p+1,w
  2835  0669  00F6               	movwf	___lldiv@dividend+1
  2836  066A  0857               	movf	BMP280_readPressure@p,w
  2837  066B  00F5               	movwf	___lldiv@dividend
  2838  066C  120A  158A  25F5  120A  118A  	fcall	___lldiv
  2839  0671  1003               	clrc
  2840  0672  0D71               	rlf	?___lldiv,w
  2841  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0675  00D7               	movwf	BMP280_readPressure@p
  2844  0676  0D72               	rlf	?___lldiv+1,w
  2845  0677  00D8               	movwf	BMP280_readPressure@p+1
  2846  0678  0D73               	rlf	?___lldiv+2,w
  2847  0679  00D9               	movwf	BMP280_readPressure@p+2
  2848  067A  0D74               	rlf	?___lldiv+3,w
  2849  067B  00DA               	movwf	BMP280_readPressure@p+3
  2850  067C                     l156:
  2851                           
  2852                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2853  067C  0857               	movf	BMP280_readPressure@p,w
  2854  067D  00B2               	movwf	??_BMP280_readPressure
  2855  067E  0858               	movf	BMP280_readPressure@p+1,w
  2856  067F  00B3               	movwf	??_BMP280_readPressure+1
  2857  0680  0859               	movf	BMP280_readPressure@p+2,w
  2858  0681  00B4               	movwf	??_BMP280_readPressure+2
  2859  0682  085A               	movf	BMP280_readPressure@p+3,w
  2860  0683  00B5               	movwf	??_BMP280_readPressure+3
  2861  0684  3003               	movlw	3
  2862  0685                     u1095:
  2863  0685  1003               	clrc
  2864  0686  0CB5               	rrf	??_BMP280_readPressure+3,f
  2865  0687  0CB4               	rrf	??_BMP280_readPressure+2,f
  2866  0688  0CB3               	rrf	??_BMP280_readPressure+1,f
  2867  0689  0CB2               	rrf	??_BMP280_readPressure,f
  2868  068A                     u1090:
  2869  068A  3EFF               	addlw	-1
  2870  068B  1D03               	skipz
  2871  068C  2E85               	goto	u1095
  2872  068D  0835               	movf	??_BMP280_readPressure+3,w
  2873  068E  00AD               	movwf	___lmul@multiplicand+3
  2874  068F  0834               	movf	??_BMP280_readPressure+2,w
  2875  0690  00AC               	movwf	___lmul@multiplicand+2
  2876  0691  0833               	movf	??_BMP280_readPressure+1,w
  2877  0692  00AB               	movwf	___lmul@multiplicand+1
  2878  0693  0832               	movf	??_BMP280_readPressure,w
  2879  0694  00AA               	movwf	___lmul@multiplicand
  2880  0695  0857               	movf	BMP280_readPressure@p,w
  2881  0696  00B6               	movwf	??_BMP280_readPressure+4
  2882  0697  0858               	movf	BMP280_readPressure@p+1,w
  2883  0698  00B7               	movwf	??_BMP280_readPressure+5
  2884  0699  0859               	movf	BMP280_readPressure@p+2,w
  2885  069A  00B8               	movwf	??_BMP280_readPressure+6
  2886  069B  085A               	movf	BMP280_readPressure@p+3,w
  2887  069C  00B9               	movwf	??_BMP280_readPressure+7
  2888  069D  3003               	movlw	3
  2889  069E                     u1105:
  2890  069E  1003               	clrc
  2891  069F  0CB9               	rrf	??_BMP280_readPressure+7,f
  2892  06A0  0CB8               	rrf	??_BMP280_readPressure+6,f
  2893  06A1  0CB7               	rrf	??_BMP280_readPressure+5,f
  2894  06A2  0CB6               	rrf	??_BMP280_readPressure+4,f
  2895  06A3                     u1100:
  2896  06A3  3EFF               	addlw	-1
  2897  06A4  1D03               	skipz
  2898  06A5  2E9E               	goto	u1105
  2899  06A6  0839               	movf	??_BMP280_readPressure+7,w
  2900  06A7  00A9               	movwf	___lmul@multiplier+3
  2901  06A8  0838               	movf	??_BMP280_readPressure+6,w
  2902  06A9  00A8               	movwf	___lmul@multiplier+2
  2903  06AA  0837               	movf	??_BMP280_readPressure+5,w
  2904  06AB  00A7               	movwf	___lmul@multiplier+1
  2905  06AC  0836               	movf	??_BMP280_readPressure+4,w
  2906  06AD  00A6               	movwf	___lmul@multiplier
  2907  06AE  120A  158A  2561  120A  118A  	fcall	___lmul
  2908  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2909  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2910  06B5  0826               	movf	?___lmul,w
  2911  06B6  00BA               	movwf	??_BMP280_readPressure+8
  2912  06B7  0827               	movf	?___lmul+1,w
  2913  06B8  00BB               	movwf	??_BMP280_readPressure+9
  2914  06B9  0828               	movf	?___lmul+2,w
  2915  06BA  00BC               	movwf	??_BMP280_readPressure+10
  2916  06BB  0829               	movf	?___lmul+3,w
  2917  06BC  00BD               	movwf	??_BMP280_readPressure+11
  2918  06BD  300D               	movlw	13
  2919  06BE                     u1115:
  2920  06BE  1003               	clrc
  2921  06BF  0CBD               	rrf	??_BMP280_readPressure+11,f
  2922  06C0  0CBC               	rrf	??_BMP280_readPressure+10,f
  2923  06C1  0CBB               	rrf	??_BMP280_readPressure+9,f
  2924  06C2  0CBA               	rrf	??_BMP280_readPressure+8,f
  2925  06C3                     u1110:
  2926  06C3  3EFF               	addlw	-1
  2927  06C4  1D03               	skipz
  2928  06C5  2EBE               	goto	u1115
  2929  06C6  083D               	movf	??_BMP280_readPressure+11,w
  2930  06C7  00CD               	movwf	_BMP280_readPressure$945+3
  2931  06C8  083C               	movf	??_BMP280_readPressure+10,w
  2932  06C9  00CC               	movwf	_BMP280_readPressure$945+2
  2933  06CA  083B               	movf	??_BMP280_readPressure+9,w
  2934  06CB  00CB               	movwf	_BMP280_readPressure$945+1
  2935  06CC  083A               	movf	??_BMP280_readPressure+8,w
  2936  06CD  00CA               	movwf	_BMP280_readPressure$945
  2937                           
  2938                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2939  06CE  3000               	movlw	0
  2940  06CF  00F4               	movwf	___aldiv@divisor+3
  2941  06D0  3000               	movlw	0
  2942  06D1  00F3               	movwf	___aldiv@divisor+2
  2943  06D2  3010               	movlw	16
  2944  06D3  00F2               	movwf	___aldiv@divisor+1
  2945  06D4  3000               	movlw	0
  2946  06D5  00F1               	movwf	___aldiv@divisor
  2947  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  2948  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  2949  06D8  083A               	movf	(_BMP280_calib^(0+128)+22),w
  2950  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2951  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2952  06DB  00A6               	movwf	___lmul@multiplier
  2953  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  2954  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  2955  06DE  083B               	movf	((_BMP280_calib+1)^(0+128)+22),w
  2956  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2957  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2958  06E1  00A7               	movwf	___lmul@multiplier+1
  2959  06E2  3000               	movlw	0
  2960  06E3  1BA7               	btfsc	___lmul@multiplier+1,7
  2961  06E4  30FF               	movlw	255
  2962  06E5  00A8               	movwf	___lmul@multiplier+2
  2963  06E6  00A9               	movwf	___lmul@multiplier+3
  2964  06E7  084D               	movf	_BMP280_readPressure$945+3,w
  2965  06E8  00AD               	movwf	___lmul@multiplicand+3
  2966  06E9  084C               	movf	_BMP280_readPressure$945+2,w
  2967  06EA  00AC               	movwf	___lmul@multiplicand+2
  2968  06EB  084B               	movf	_BMP280_readPressure$945+1,w
  2969  06EC  00AB               	movwf	___lmul@multiplicand+1
  2970  06ED  084A               	movf	_BMP280_readPressure$945,w
  2971  06EE  00AA               	movwf	___lmul@multiplicand
  2972  06EF  120A  158A  2561  120A  118A  	fcall	___lmul
  2973  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2974  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2975  06F6  0829               	movf	?___lmul+3,w
  2976  06F7  00F8               	movwf	___aldiv@dividend+3
  2977  06F8  0828               	movf	?___lmul+2,w
  2978  06F9  00F7               	movwf	___aldiv@dividend+2
  2979  06FA  0827               	movf	?___lmul+1,w
  2980  06FB  00F6               	movwf	___aldiv@dividend+1
  2981  06FC  0826               	movf	?___lmul,w
  2982  06FD  00F5               	movwf	___aldiv@dividend
  2983  06FE  120A  118A  2016  120A  118A  	fcall	___aldiv
  2984  0703  0874               	movf	?___aldiv+3,w
  2985  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0706  00DE               	movwf	BMP280_readPressure@var1+3
  2988  0707  0873               	movf	?___aldiv+2,w
  2989  0708  00DD               	movwf	BMP280_readPressure@var1+2
  2990  0709  0872               	movf	?___aldiv+1,w
  2991  070A  00DC               	movwf	BMP280_readPressure@var1+1
  2992  070B  0871               	movf	?___aldiv,w
  2993  070C  00DB               	movwf	BMP280_readPressure@var1
  2994                           
  2995                           ;BMP280.c: 295:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  2996  070D  3000               	movlw	0
  2997  070E  00F4               	movwf	___aldiv@divisor+3
  2998  070F  3000               	movlw	0
  2999  0710  00F3               	movwf	___aldiv@divisor+2
  3000  0711  3020               	movlw	32
  3001  0712  00F2               	movwf	___aldiv@divisor+1
  3002  0713  3000               	movlw	0
  3003  0714  00F1               	movwf	___aldiv@divisor
  3004  0715  0857               	movf	BMP280_readPressure@p,w
  3005  0716  00B2               	movwf	??_BMP280_readPressure
  3006  0717  0858               	movf	BMP280_readPressure@p+1,w
  3007  0718  00B3               	movwf	??_BMP280_readPressure+1
  3008  0719  0859               	movf	BMP280_readPressure@p+2,w
  3009  071A  00B4               	movwf	??_BMP280_readPressure+2
  3010  071B  085A               	movf	BMP280_readPressure@p+3,w
  3011  071C  00B5               	movwf	??_BMP280_readPressure+3
  3012  071D  3002               	movlw	2
  3013  071E                     u1125:
  3014  071E  1003               	clrc
  3015  071F  0CB5               	rrf	??_BMP280_readPressure+3,f
  3016  0720  0CB4               	rrf	??_BMP280_readPressure+2,f
  3017  0721  0CB3               	rrf	??_BMP280_readPressure+1,f
  3018  0722  0CB2               	rrf	??_BMP280_readPressure,f
  3019  0723                     u1120:
  3020  0723  3EFF               	addlw	-1
  3021  0724  1D03               	skipz
  3022  0725  2F1E               	goto	u1125
  3023  0726  0835               	movf	??_BMP280_readPressure+3,w
  3024  0727  00A9               	movwf	___lmul@multiplier+3
  3025  0728  0834               	movf	??_BMP280_readPressure+2,w
  3026  0729  00A8               	movwf	___lmul@multiplier+2
  3027  072A  0833               	movf	??_BMP280_readPressure+1,w
  3028  072B  00A7               	movwf	___lmul@multiplier+1
  3029  072C  0832               	movf	??_BMP280_readPressure,w
  3030  072D  00A6               	movwf	___lmul@multiplier
  3031  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3032  072F  1303               	bcf	3,6	;RP1=0, select bank1
  3033  0730  0838               	movf	(_BMP280_calib^(0+128)+20),w
  3034  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0732  1303               	bcf	3,6	;RP1=0, select bank0
  3036  0733  00AA               	movwf	___lmul@multiplicand
  3037  0734  1683               	bsf	3,5	;RP0=1, select bank1
  3038  0735  1303               	bcf	3,6	;RP1=0, select bank1
  3039  0736  0839               	movf	((_BMP280_calib+1)^(0+128)+20),w
  3040  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0738  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0739  00AB               	movwf	___lmul@multiplicand+1
  3043  073A  3000               	movlw	0
  3044  073B  1BAB               	btfsc	___lmul@multiplicand+1,7
  3045  073C  30FF               	movlw	255
  3046  073D  00AC               	movwf	___lmul@multiplicand+2
  3047  073E  00AD               	movwf	___lmul@multiplicand+3
  3048  073F  120A  158A  2561  120A  118A  	fcall	___lmul
  3049  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0745  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0746  0829               	movf	?___lmul+3,w
  3052  0747  00F8               	movwf	___aldiv@dividend+3
  3053  0748  0828               	movf	?___lmul+2,w
  3054  0749  00F7               	movwf	___aldiv@dividend+2
  3055  074A  0827               	movf	?___lmul+1,w
  3056  074B  00F6               	movwf	___aldiv@dividend+1
  3057  074C  0826               	movf	?___lmul,w
  3058  074D  00F5               	movwf	___aldiv@dividend
  3059  074E  120A  118A  2016  120A  118A  	fcall	___aldiv
  3060  0753  0874               	movf	?___aldiv+3,w
  3061  0754  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0755  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0756  00D6               	movwf	BMP280_readPressure@var2+3
  3064  0757  0873               	movf	?___aldiv+2,w
  3065  0758  00D5               	movwf	BMP280_readPressure@var2+2
  3066  0759  0872               	movf	?___aldiv+1,w
  3067  075A  00D4               	movwf	BMP280_readPressure@var2+1
  3068  075B  0871               	movf	?___aldiv,w
  3069  075C  00D3               	movwf	BMP280_readPressure@var2
  3070                           
  3071                           ;BMP280.c: 297:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  3072  075D  3000               	movlw	0
  3073  075E  00F4               	movwf	___aldiv@divisor+3
  3074  075F  3000               	movlw	0
  3075  0760  00F3               	movwf	___aldiv@divisor+2
  3076  0761  3000               	movlw	0
  3077  0762  00F2               	movwf	___aldiv@divisor+1
  3078  0763  3010               	movlw	16
  3079  0764  00F1               	movwf	___aldiv@divisor
  3080  0765  0853               	movf	BMP280_readPressure@var2,w
  3081  0766  00B2               	movwf	??_BMP280_readPressure
  3082  0767  0854               	movf	BMP280_readPressure@var2+1,w
  3083  0768  00B3               	movwf	??_BMP280_readPressure+1
  3084  0769  0855               	movf	BMP280_readPressure@var2+2,w
  3085  076A  00B4               	movwf	??_BMP280_readPressure+2
  3086  076B  0856               	movf	BMP280_readPressure@var2+3,w
  3087  076C  00B5               	movwf	??_BMP280_readPressure+3
  3088  076D  085B               	movf	BMP280_readPressure@var1,w
  3089  076E  00B6               	movwf	??_BMP280_readPressure+4
  3090  076F  085C               	movf	BMP280_readPressure@var1+1,w
  3091  0770  00B7               	movwf	??_BMP280_readPressure+5
  3092  0771  085D               	movf	BMP280_readPressure@var1+2,w
  3093  0772  00B8               	movwf	??_BMP280_readPressure+6
  3094  0773  085E               	movf	BMP280_readPressure@var1+3,w
  3095  0774  00B9               	movwf	??_BMP280_readPressure+7
  3096  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3097  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3098  0777  0836               	movf	(_BMP280_calib^(0+128)+18),w
  3099  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3101  077A  00BA               	movwf	??_BMP280_readPressure+8
  3102  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3103  077C  1303               	bcf	3,6	;RP1=0, select bank1
  3104  077D  0837               	movf	((_BMP280_calib+1)^(0+128)+18),w
  3105  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3106  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0780  00BB               	movwf	??_BMP280_readPressure+9
  3108  0781  3000               	movlw	0
  3109  0782  1BBB               	btfsc	??_BMP280_readPressure+9,7
  3110  0783  30FF               	movlw	255
  3111  0784  00BC               	movwf	??_BMP280_readPressure+10
  3112  0785  00BD               	movwf	??_BMP280_readPressure+11
  3113  0786  083A               	movf	??_BMP280_readPressure+8,w
  3114  0787  07B6               	addwf	??_BMP280_readPressure+4,f
  3115  0788  083B               	movf	??_BMP280_readPressure+9,w
  3116  0789  1803               	skipnc
  3117  078A  0F3B               	incfsz	??_BMP280_readPressure+9,w
  3118  078B  2F8D               	goto	u1130
  3119  078C  2F8E               	goto	u1131
  3120  078D                     u1130:
  3121  078D  07B7               	addwf	??_BMP280_readPressure+5,f
  3122  078E                     u1131:
  3123  078E  083C               	movf	??_BMP280_readPressure+10,w
  3124  078F  1803               	skipnc
  3125  0790  0F3C               	incfsz	??_BMP280_readPressure+10,w
  3126  0791  2F93               	goto	u1132
  3127  0792  2F94               	goto	u1133
  3128  0793                     u1132:
  3129  0793  07B8               	addwf	??_BMP280_readPressure+6,f
  3130  0794                     u1133:
  3131  0794  083D               	movf	??_BMP280_readPressure+11,w
  3132  0795  1803               	skipnc
  3133  0796  0A3D               	incf	??_BMP280_readPressure+11,w
  3134  0797  07B9               	addwf	??_BMP280_readPressure+7,f
  3135  0798  0836               	movf	??_BMP280_readPressure+4,w
  3136  0799  07B2               	addwf	??_BMP280_readPressure,f
  3137  079A  0837               	movf	??_BMP280_readPressure+5,w
  3138  079B  1803               	skipnc
  3139  079C  0F37               	incfsz	??_BMP280_readPressure+5,w
  3140  079D  2F9F               	goto	u1140
  3141  079E  2FA0               	goto	u1141
  3142  079F                     u1140:
  3143  079F  07B3               	addwf	??_BMP280_readPressure+1,f
  3144  07A0                     u1141:
  3145  07A0  0838               	movf	??_BMP280_readPressure+6,w
  3146  07A1  1803               	skipnc
  3147  07A2  0F38               	incfsz	??_BMP280_readPressure+6,w
  3148  07A3  2FA5               	goto	u1142
  3149  07A4  2FA6               	goto	u1143
  3150  07A5                     u1142:
  3151  07A5  07B4               	addwf	??_BMP280_readPressure+2,f
  3152  07A6                     u1143:
  3153  07A6  0839               	movf	??_BMP280_readPressure+7,w
  3154  07A7  1803               	skipnc
  3155  07A8  0A39               	incf	??_BMP280_readPressure+7,w
  3156  07A9  07B5               	addwf	??_BMP280_readPressure+3,f
  3157  07AA  0835               	movf	??_BMP280_readPressure+3,w
  3158  07AB  00F8               	movwf	___aldiv@dividend+3
  3159  07AC  0834               	movf	??_BMP280_readPressure+2,w
  3160  07AD  00F7               	movwf	___aldiv@dividend+2
  3161  07AE  0833               	movf	??_BMP280_readPressure+1,w
  3162  07AF  00F6               	movwf	___aldiv@dividend+1
  3163  07B0  0832               	movf	??_BMP280_readPressure,w
  3164  07B1  00F5               	movwf	___aldiv@dividend
  3165  07B2  120A  118A  2016  120A  118A  	fcall	___aldiv
  3166  07B7  0871               	movf	?___aldiv,w
  3167  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3168  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3169  07BA  0757               	addwf	BMP280_readPressure@p,w
  3170  07BB  00BE               	movwf	??_BMP280_readPressure+12
  3171  07BC  3000               	movlw	0
  3172  07BD  1803               	skipnc
  3173  07BE  3001               	movlw	1
  3174  07BF  0772               	addwf	?___aldiv+1,w
  3175  07C0  01C0               	clrf	??_BMP280_readPressure+14
  3176  07C1  1803               	skipnc
  3177  07C2  0AC0               	incf	??_BMP280_readPressure+14,f
  3178  07C3  0758               	addwf	BMP280_readPressure@p+1,w
  3179  07C4  00BF               	movwf	??_BMP280_readPressure+13
  3180  07C5  1803               	skipnc
  3181  07C6  0AC0               	incf	??_BMP280_readPressure+14,f
  3182  07C7  0873               	movf	?___aldiv+2,w
  3183  07C8  0740               	addwf	??_BMP280_readPressure+14,w
  3184  07C9  01C1               	clrf	??_BMP280_readPressure+15
  3185  07CA  1803               	skipnc
  3186  07CB  0AC1               	incf	??_BMP280_readPressure+15,f
  3187  07CC  0759               	addwf	BMP280_readPressure@p+2,w
  3188  07CD  00C0               	movwf	??_BMP280_readPressure+14
  3189  07CE  1803               	skipnc
  3190  07CF  0AC1               	incf	??_BMP280_readPressure+15,f
  3191  07D0  0874               	movf	?___aldiv+3,w
  3192  07D1  0741               	addwf	??_BMP280_readPressure+15,w
  3193  07D2  075A               	addwf	BMP280_readPressure@p+3,w
  3194  07D3  00C1               	movwf	??_BMP280_readPressure+15
  3195  07D4  0841               	movf	??_BMP280_readPressure+15,w
  3196  07D5  00DA               	movwf	BMP280_readPressure@p+3
  3197  07D6  0840               	movf	??_BMP280_readPressure+14,w
  3198  07D7  00D9               	movwf	BMP280_readPressure@p+2
  3199  07D8  083F               	movf	??_BMP280_readPressure+13,w
  3200  07D9  00D8               	movwf	BMP280_readPressure@p+1
  3201  07DA  083E               	movf	??_BMP280_readPressure+12,w
  3202  07DB  00D7               	movwf	BMP280_readPressure@p
  3203  07DC                     l1220:
  3204                           
  3205                           ;BMP280.c: 299:   *pres = p;
  3206  07DC  084E               	movf	BMP280_readPressure@pres,w
  3207  07DD  0084               	movwf	4
  3208  07DE  0857               	movf	BMP280_readPressure@p,w
  3209  07DF  1383               	bcf	3,7	;select IRP bank0
  3210  07E0  0080               	movwf	0
  3211  07E1  0A84               	incf	4,f
  3212  07E2  0858               	movf	BMP280_readPressure@p+1,w
  3213  07E3  0080               	movwf	0
  3214  07E4  0A84               	incf	4,f
  3215  07E5  0859               	movf	BMP280_readPressure@p+2,w
  3216  07E6  0080               	movwf	0
  3217  07E7  0A84               	incf	4,f
  3218  07E8  085A               	movf	BMP280_readPressure@p+3,w
  3219  07E9  0080               	movwf	0
  3220  07EA                     l154:
  3221  07EA  0008               	return
  3222  07EB                     __end_of_BMP280_readPressure:
  3223                           
  3224                           	psect	text6
  3225  0D61                     __ptext6:	
  3226 ;; *************** function ___lmul *****************
  3227 ;; Defined at:
  3228 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  multiplier      4    6[BANK0 ] unsigned long 
  3231 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  product         4   14[BANK0 ] unsigned long 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  4    6[BANK0 ] unsigned long 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       8       0       0       0
  3244 ;;      Locals:         0       4       0       0       0
  3245 ;;      Temps:          1       0       0       0       0
  3246 ;;      Totals:         1      12       0       0       0
  3247 ;;Total ram usage:       13 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_BMP280_readTemperature
  3253 ;;		_BMP280_readPressure
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function ___lmul
  3259  0D61                     ___lmul:
  3260  0D61                     l1124:	
  3261                           ;incstack = 0
  3262                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3263                           
  3264  0D61  3000               	movlw	0
  3265  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0D64  00B1               	movwf	___lmul@product+3
  3268  0D65  3000               	movlw	0
  3269  0D66  00B0               	movwf	___lmul@product+2
  3270  0D67  3000               	movlw	0
  3271  0D68  00AF               	movwf	___lmul@product+1
  3272  0D69  3000               	movlw	0
  3273  0D6A  00AE               	movwf	___lmul@product
  3274  0D6B                     l1126:
  3275  0D6B  1C26               	btfss	___lmul@multiplier,0
  3276  0D6C  2D6E               	goto	u761
  3277  0D6D  2D6F               	goto	u760
  3278  0D6E                     u761:
  3279  0D6E  2D86               	goto	l1130
  3280  0D6F                     u760:
  3281  0D6F                     l1128:
  3282  0D6F  082A               	movf	___lmul@multiplicand,w
  3283  0D70  07AE               	addwf	___lmul@product,f
  3284  0D71  082B               	movf	___lmul@multiplicand+1,w
  3285  0D72  1103               	clrz
  3286  0D73  1803               	skipnc
  3287  0D74  3E01               	addlw	1
  3288  0D75  1903               	skipnz
  3289  0D76  2D78               	goto	u771
  3290  0D77  07AF               	addwf	___lmul@product+1,f
  3291  0D78                     u771:
  3292  0D78  082C               	movf	___lmul@multiplicand+2,w
  3293  0D79  1103               	clrz
  3294  0D7A  1803               	skipnc
  3295  0D7B  3E01               	addlw	1
  3296  0D7C  1903               	skipnz
  3297  0D7D  2D7F               	goto	u772
  3298  0D7E  07B0               	addwf	___lmul@product+2,f
  3299  0D7F                     u772:
  3300  0D7F  082D               	movf	___lmul@multiplicand+3,w
  3301  0D80  1103               	clrz
  3302  0D81  1803               	skipnc
  3303  0D82  3E01               	addlw	1
  3304  0D83  1903               	skipnz
  3305  0D84  2D86               	goto	u773
  3306  0D85  07B1               	addwf	___lmul@product+3,f
  3307  0D86                     u773:
  3308  0D86                     l1130:
  3309  0D86  3001               	movlw	1
  3310  0D87  00FA               	movwf	??___lmul
  3311  0D88                     u785:
  3312  0D88  1003               	clrc
  3313  0D89  0DAA               	rlf	___lmul@multiplicand,f
  3314  0D8A  0DAB               	rlf	___lmul@multiplicand+1,f
  3315  0D8B  0DAC               	rlf	___lmul@multiplicand+2,f
  3316  0D8C  0DAD               	rlf	___lmul@multiplicand+3,f
  3317  0D8D  0BFA               	decfsz	??___lmul,f
  3318  0D8E  2D88               	goto	u785
  3319  0D8F                     l1132:
  3320  0D8F  3001               	movlw	1
  3321  0D90                     u795:
  3322  0D90  1003               	clrc
  3323  0D91  0CA9               	rrf	___lmul@multiplier+3,f
  3324  0D92  0CA8               	rrf	___lmul@multiplier+2,f
  3325  0D93  0CA7               	rrf	___lmul@multiplier+1,f
  3326  0D94  0CA6               	rrf	___lmul@multiplier,f
  3327  0D95  3EFF               	addlw	-1
  3328  0D96  1D03               	skipz
  3329  0D97  2D90               	goto	u795
  3330  0D98  0829               	movf	___lmul@multiplier+3,w
  3331  0D99  0428               	iorwf	___lmul@multiplier+2,w
  3332  0D9A  0427               	iorwf	___lmul@multiplier+1,w
  3333  0D9B  0426               	iorwf	___lmul@multiplier,w
  3334  0D9C  1D03               	skipz
  3335  0D9D  2D9F               	goto	u801
  3336  0D9E  2DA0               	goto	u800
  3337  0D9F                     u801:
  3338  0D9F  2D6B               	goto	l1126
  3339  0DA0                     u800:
  3340  0DA0                     l1134:
  3341  0DA0  0831               	movf	___lmul@product+3,w
  3342  0DA1  00A9               	movwf	?___lmul+3
  3343  0DA2  0830               	movf	___lmul@product+2,w
  3344  0DA3  00A8               	movwf	?___lmul+2
  3345  0DA4  082F               	movf	___lmul@product+1,w
  3346  0DA5  00A7               	movwf	?___lmul+1
  3347  0DA6  082E               	movf	___lmul@product,w
  3348  0DA7  00A6               	movwf	?___lmul
  3349  0DA8                     l256:
  3350  0DA8  0008               	return
  3351  0DA9                     __end_of___lmul:
  3352                           
  3353                           	psect	text7
  3354  0DF5                     __ptext7:	
  3355 ;; *************** function ___lldiv *****************
  3356 ;; Defined at:
  3357 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  divisor         4    0[COMMON] unsigned long 
  3360 ;;  dividend        4    4[COMMON] unsigned long 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  quotient        4    0[BANK0 ] unsigned long 
  3363 ;;  counter         1    4[BANK0 ] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  4    0[COMMON] unsigned long 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3373 ;;      Params:         8       0       0       0       0
  3374 ;;      Locals:         0       5       0       0       0
  3375 ;;      Temps:          1       0       0       0       0
  3376 ;;      Totals:         9       5       0       0       0
  3377 ;;Total ram usage:       14 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_I2C_Master_Init
  3383 ;;		_BMP280_readPressure
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function ___lldiv
  3389  0DF5                     ___lldiv:
  3390  0DF5                     l1040:	
  3391                           ;incstack = 0
  3392                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3393                           
  3394  0DF5  3000               	movlw	0
  3395  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  3396  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  3397  0DF8  00A3               	movwf	___lldiv@quotient+3
  3398  0DF9  3000               	movlw	0
  3399  0DFA  00A2               	movwf	___lldiv@quotient+2
  3400  0DFB  3000               	movlw	0
  3401  0DFC  00A1               	movwf	___lldiv@quotient+1
  3402  0DFD  3000               	movlw	0
  3403  0DFE  00A0               	movwf	___lldiv@quotient
  3404  0DFF  0874               	movf	___lldiv@divisor+3,w
  3405  0E00  0473               	iorwf	___lldiv@divisor+2,w
  3406  0E01  0472               	iorwf	___lldiv@divisor+1,w
  3407  0E02  0471               	iorwf	___lldiv@divisor,w
  3408  0E03  1903               	skipnz
  3409  0E04  2E06               	goto	u621
  3410  0E05  2E07               	goto	u620
  3411  0E06                     u621:
  3412  0E06  2E54               	goto	l1060
  3413  0E07                     u620:
  3414  0E07                     l1042:
  3415  0E07  01A4               	clrf	___lldiv@counter
  3416  0E08  0AA4               	incf	___lldiv@counter,f
  3417  0E09  2E17               	goto	l1046
  3418  0E0A                     l1044:
  3419  0E0A  3001               	movlw	1
  3420  0E0B  00F9               	movwf	??___lldiv
  3421  0E0C                     u635:
  3422  0E0C  1003               	clrc
  3423  0E0D  0DF1               	rlf	___lldiv@divisor,f
  3424  0E0E  0DF2               	rlf	___lldiv@divisor+1,f
  3425  0E0F  0DF3               	rlf	___lldiv@divisor+2,f
  3426  0E10  0DF4               	rlf	___lldiv@divisor+3,f
  3427  0E11  0BF9               	decfsz	??___lldiv,f
  3428  0E12  2E0C               	goto	u635
  3429  0E13  3001               	movlw	1
  3430  0E14  00F9               	movwf	??___lldiv
  3431  0E15  0879               	movf	??___lldiv,w
  3432  0E16  07A4               	addwf	___lldiv@counter,f
  3433  0E17                     l1046:
  3434  0E17  1FF4               	btfss	___lldiv@divisor+3,7
  3435  0E18  2E1A               	goto	u641
  3436  0E19  2E1B               	goto	u640
  3437  0E1A                     u641:
  3438  0E1A  2E0A               	goto	l1044
  3439  0E1B                     u640:
  3440  0E1B                     l1048:
  3441  0E1B  3001               	movlw	1
  3442  0E1C  00F9               	movwf	??___lldiv
  3443  0E1D                     u655:
  3444  0E1D  1003               	clrc
  3445  0E1E  0DA0               	rlf	___lldiv@quotient,f
  3446  0E1F  0DA1               	rlf	___lldiv@quotient+1,f
  3447  0E20  0DA2               	rlf	___lldiv@quotient+2,f
  3448  0E21  0DA3               	rlf	___lldiv@quotient+3,f
  3449  0E22  0BF9               	decfsz	??___lldiv,f
  3450  0E23  2E1D               	goto	u655
  3451  0E24                     l1050:
  3452  0E24  0874               	movf	___lldiv@divisor+3,w
  3453  0E25  0278               	subwf	___lldiv@dividend+3,w
  3454  0E26  1D03               	skipz
  3455  0E27  2E32               	goto	u665
  3456  0E28  0873               	movf	___lldiv@divisor+2,w
  3457  0E29  0277               	subwf	___lldiv@dividend+2,w
  3458  0E2A  1D03               	skipz
  3459  0E2B  2E32               	goto	u665
  3460  0E2C  0872               	movf	___lldiv@divisor+1,w
  3461  0E2D  0276               	subwf	___lldiv@dividend+1,w
  3462  0E2E  1D03               	skipz
  3463  0E2F  2E32               	goto	u665
  3464  0E30  0871               	movf	___lldiv@divisor,w
  3465  0E31  0275               	subwf	___lldiv@dividend,w
  3466  0E32                     u665:
  3467  0E32  1C03               	skipc
  3468  0E33  2E35               	goto	u661
  3469  0E34  2E36               	goto	u660
  3470  0E35                     u661:
  3471  0E35  2E45               	goto	l1056
  3472  0E36                     u660:
  3473  0E36                     l1052:
  3474  0E36  0871               	movf	___lldiv@divisor,w
  3475  0E37  02F5               	subwf	___lldiv@dividend,f
  3476  0E38  0872               	movf	___lldiv@divisor+1,w
  3477  0E39  1C03               	skipc
  3478  0E3A  0F72               	incfsz	___lldiv@divisor+1,w
  3479  0E3B  02F6               	subwf	___lldiv@dividend+1,f
  3480  0E3C  0873               	movf	___lldiv@divisor+2,w
  3481  0E3D  1C03               	skipc
  3482  0E3E  0F73               	incfsz	___lldiv@divisor+2,w
  3483  0E3F  02F7               	subwf	___lldiv@dividend+2,f
  3484  0E40  0874               	movf	___lldiv@divisor+3,w
  3485  0E41  1C03               	skipc
  3486  0E42  0F74               	incfsz	___lldiv@divisor+3,w
  3487  0E43  02F8               	subwf	___lldiv@dividend+3,f
  3488  0E44                     l1054:
  3489  0E44  1420               	bsf	___lldiv@quotient,0
  3490  0E45                     l1056:
  3491  0E45  3001               	movlw	1
  3492  0E46                     u675:
  3493  0E46  1003               	clrc
  3494  0E47  0CF4               	rrf	___lldiv@divisor+3,f
  3495  0E48  0CF3               	rrf	___lldiv@divisor+2,f
  3496  0E49  0CF2               	rrf	___lldiv@divisor+1,f
  3497  0E4A  0CF1               	rrf	___lldiv@divisor,f
  3498  0E4B  3EFF               	addlw	-1
  3499  0E4C  1D03               	skipz
  3500  0E4D  2E46               	goto	u675
  3501  0E4E                     l1058:
  3502  0E4E  3001               	movlw	1
  3503  0E4F  02A4               	subwf	___lldiv@counter,f
  3504  0E50  1D03               	btfss	3,2
  3505  0E51  2E53               	goto	u681
  3506  0E52  2E54               	goto	u680
  3507  0E53                     u681:
  3508  0E53  2E1B               	goto	l1048
  3509  0E54                     u680:
  3510  0E54                     l1060:
  3511  0E54  0823               	movf	___lldiv@quotient+3,w
  3512  0E55  00F4               	movwf	?___lldiv+3
  3513  0E56  0822               	movf	___lldiv@quotient+2,w
  3514  0E57  00F3               	movwf	?___lldiv+2
  3515  0E58  0821               	movf	___lldiv@quotient+1,w
  3516  0E59  00F2               	movwf	?___lldiv+1
  3517  0E5A  0820               	movf	___lldiv@quotient,w
  3518  0E5B  00F1               	movwf	?___lldiv
  3519  0E5C                     l278:
  3520  0E5C  0008               	return
  3521  0E5D                     __end_of___lldiv:
  3522                           
  3523                           	psect	text8
  3524  0016                     __ptext8:	
  3525 ;; *************** function ___aldiv *****************
  3526 ;; Defined at:
  3527 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  divisor         4    0[COMMON] long 
  3530 ;;  dividend        4    4[COMMON] long 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  quotient        4    2[BANK0 ] long 
  3533 ;;  sign            1    1[BANK0 ] unsigned char 
  3534 ;;  counter         1    0[BANK0 ] unsigned char 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  4    0[COMMON] long 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3544 ;;      Params:         8       0       0       0       0
  3545 ;;      Locals:         0       6       0       0       0
  3546 ;;      Temps:          1       0       0       0       0
  3547 ;;      Totals:         9       6       0       0       0
  3548 ;;Total ram usage:       15 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_BMP280_readTemperature
  3554 ;;		_BMP280_readPressure
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function ___aldiv
  3560  0016                     ___aldiv:
  3561  0016                     l1138:	
  3562                           ;incstack = 0
  3563                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3564                           
  3565  0016  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0017  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0018  01A1               	clrf	___aldiv@sign
  3568  0019                     l1140:
  3569  0019  1FF4               	btfss	___aldiv@divisor+3,7
  3570  001A  281C               	goto	u811
  3571  001B  281D               	goto	u810
  3572  001C                     u811:
  3573  001C  282A               	goto	l307
  3574  001D                     u810:
  3575  001D                     l1142:
  3576  001D  09F1               	comf	___aldiv@divisor,f
  3577  001E  09F2               	comf	___aldiv@divisor+1,f
  3578  001F  09F3               	comf	___aldiv@divisor+2,f
  3579  0020  09F4               	comf	___aldiv@divisor+3,f
  3580  0021  0AF1               	incf	___aldiv@divisor,f
  3581  0022  1903               	skipnz
  3582  0023  0AF2               	incf	___aldiv@divisor+1,f
  3583  0024  1903               	skipnz
  3584  0025  0AF3               	incf	___aldiv@divisor+2,f
  3585  0026  1903               	skipnz
  3586  0027  0AF4               	incf	___aldiv@divisor+3,f
  3587  0028  01A1               	clrf	___aldiv@sign
  3588  0029  0AA1               	incf	___aldiv@sign,f
  3589  002A                     l307:
  3590  002A  1FF8               	btfss	___aldiv@dividend+3,7
  3591  002B  282D               	goto	u821
  3592  002C  282E               	goto	u820
  3593  002D                     u821:
  3594  002D  283D               	goto	l1148
  3595  002E                     u820:
  3596  002E                     l1144:
  3597  002E  09F5               	comf	___aldiv@dividend,f
  3598  002F  09F6               	comf	___aldiv@dividend+1,f
  3599  0030  09F7               	comf	___aldiv@dividend+2,f
  3600  0031  09F8               	comf	___aldiv@dividend+3,f
  3601  0032  0AF5               	incf	___aldiv@dividend,f
  3602  0033  1903               	skipnz
  3603  0034  0AF6               	incf	___aldiv@dividend+1,f
  3604  0035  1903               	skipnz
  3605  0036  0AF7               	incf	___aldiv@dividend+2,f
  3606  0037  1903               	skipnz
  3607  0038  0AF8               	incf	___aldiv@dividend+3,f
  3608  0039                     l1146:
  3609  0039  3001               	movlw	1
  3610  003A  00F9               	movwf	??___aldiv
  3611  003B  0879               	movf	??___aldiv,w
  3612  003C  06A1               	xorwf	___aldiv@sign,f
  3613  003D                     l1148:
  3614  003D  3000               	movlw	0
  3615  003E  00A5               	movwf	___aldiv@quotient+3
  3616  003F  3000               	movlw	0
  3617  0040  00A4               	movwf	___aldiv@quotient+2
  3618  0041  3000               	movlw	0
  3619  0042  00A3               	movwf	___aldiv@quotient+1
  3620  0043  3000               	movlw	0
  3621  0044  00A2               	movwf	___aldiv@quotient
  3622  0045                     l1150:
  3623  0045  0874               	movf	___aldiv@divisor+3,w
  3624  0046  0473               	iorwf	___aldiv@divisor+2,w
  3625  0047  0472               	iorwf	___aldiv@divisor+1,w
  3626  0048  0471               	iorwf	___aldiv@divisor,w
  3627  0049  1903               	skipnz
  3628  004A  284C               	goto	u831
  3629  004B  284D               	goto	u830
  3630  004C                     u831:
  3631  004C  289A               	goto	l1170
  3632  004D                     u830:
  3633  004D                     l1152:
  3634  004D  01A0               	clrf	___aldiv@counter
  3635  004E  0AA0               	incf	___aldiv@counter,f
  3636  004F  285D               	goto	l1156
  3637  0050                     l1154:
  3638  0050  3001               	movlw	1
  3639  0051  00F9               	movwf	??___aldiv
  3640  0052                     u845:
  3641  0052  1003               	clrc
  3642  0053  0DF1               	rlf	___aldiv@divisor,f
  3643  0054  0DF2               	rlf	___aldiv@divisor+1,f
  3644  0055  0DF3               	rlf	___aldiv@divisor+2,f
  3645  0056  0DF4               	rlf	___aldiv@divisor+3,f
  3646  0057  0BF9               	decfsz	??___aldiv,f
  3647  0058  2852               	goto	u845
  3648  0059  3001               	movlw	1
  3649  005A  00F9               	movwf	??___aldiv
  3650  005B  0879               	movf	??___aldiv,w
  3651  005C  07A0               	addwf	___aldiv@counter,f
  3652  005D                     l1156:
  3653  005D  1FF4               	btfss	___aldiv@divisor+3,7
  3654  005E  2860               	goto	u851
  3655  005F  2861               	goto	u850
  3656  0060                     u851:
  3657  0060  2850               	goto	l1154
  3658  0061                     u850:
  3659  0061                     l1158:
  3660  0061  3001               	movlw	1
  3661  0062  00F9               	movwf	??___aldiv
  3662  0063                     u865:
  3663  0063  1003               	clrc
  3664  0064  0DA2               	rlf	___aldiv@quotient,f
  3665  0065  0DA3               	rlf	___aldiv@quotient+1,f
  3666  0066  0DA4               	rlf	___aldiv@quotient+2,f
  3667  0067  0DA5               	rlf	___aldiv@quotient+3,f
  3668  0068  0BF9               	decfsz	??___aldiv,f
  3669  0069  2863               	goto	u865
  3670  006A                     l1160:
  3671  006A  0874               	movf	___aldiv@divisor+3,w
  3672  006B  0278               	subwf	___aldiv@dividend+3,w
  3673  006C  1D03               	skipz
  3674  006D  2878               	goto	u875
  3675  006E  0873               	movf	___aldiv@divisor+2,w
  3676  006F  0277               	subwf	___aldiv@dividend+2,w
  3677  0070  1D03               	skipz
  3678  0071  2878               	goto	u875
  3679  0072  0872               	movf	___aldiv@divisor+1,w
  3680  0073  0276               	subwf	___aldiv@dividend+1,w
  3681  0074  1D03               	skipz
  3682  0075  2878               	goto	u875
  3683  0076  0871               	movf	___aldiv@divisor,w
  3684  0077  0275               	subwf	___aldiv@dividend,w
  3685  0078                     u875:
  3686  0078  1C03               	skipc
  3687  0079  287B               	goto	u871
  3688  007A  287C               	goto	u870
  3689  007B                     u871:
  3690  007B  288B               	goto	l1166
  3691  007C                     u870:
  3692  007C                     l1162:
  3693  007C  0871               	movf	___aldiv@divisor,w
  3694  007D  02F5               	subwf	___aldiv@dividend,f
  3695  007E  0872               	movf	___aldiv@divisor+1,w
  3696  007F  1C03               	skipc
  3697  0080  0F72               	incfsz	___aldiv@divisor+1,w
  3698  0081  02F6               	subwf	___aldiv@dividend+1,f
  3699  0082  0873               	movf	___aldiv@divisor+2,w
  3700  0083  1C03               	skipc
  3701  0084  0F73               	incfsz	___aldiv@divisor+2,w
  3702  0085  02F7               	subwf	___aldiv@dividend+2,f
  3703  0086  0874               	movf	___aldiv@divisor+3,w
  3704  0087  1C03               	skipc
  3705  0088  0F74               	incfsz	___aldiv@divisor+3,w
  3706  0089  02F8               	subwf	___aldiv@dividend+3,f
  3707  008A                     l1164:
  3708  008A  1422               	bsf	___aldiv@quotient,0
  3709  008B                     l1166:
  3710  008B  3001               	movlw	1
  3711  008C                     u885:
  3712  008C  1003               	clrc
  3713  008D  0CF4               	rrf	___aldiv@divisor+3,f
  3714  008E  0CF3               	rrf	___aldiv@divisor+2,f
  3715  008F  0CF2               	rrf	___aldiv@divisor+1,f
  3716  0090  0CF1               	rrf	___aldiv@divisor,f
  3717  0091  3EFF               	addlw	-1
  3718  0092  1D03               	skipz
  3719  0093  288C               	goto	u885
  3720  0094                     l1168:
  3721  0094  3001               	movlw	1
  3722  0095  02A0               	subwf	___aldiv@counter,f
  3723  0096  1D03               	btfss	3,2
  3724  0097  2899               	goto	u891
  3725  0098  289A               	goto	u890
  3726  0099                     u891:
  3727  0099  2861               	goto	l1158
  3728  009A                     u890:
  3729  009A                     l1170:
  3730  009A  0821               	movf	___aldiv@sign,w
  3731  009B  1903               	btfsc	3,2
  3732  009C  289E               	goto	u901
  3733  009D  289F               	goto	u900
  3734  009E                     u901:
  3735  009E  28AA               	goto	l1174
  3736  009F                     u900:
  3737  009F                     l1172:
  3738  009F  09A2               	comf	___aldiv@quotient,f
  3739  00A0  09A3               	comf	___aldiv@quotient+1,f
  3740  00A1  09A4               	comf	___aldiv@quotient+2,f
  3741  00A2  09A5               	comf	___aldiv@quotient+3,f
  3742  00A3  0AA2               	incf	___aldiv@quotient,f
  3743  00A4  1903               	skipnz
  3744  00A5  0AA3               	incf	___aldiv@quotient+1,f
  3745  00A6  1903               	skipnz
  3746  00A7  0AA4               	incf	___aldiv@quotient+2,f
  3747  00A8  1903               	skipnz
  3748  00A9  0AA5               	incf	___aldiv@quotient+3,f
  3749  00AA                     l1174:
  3750  00AA  0825               	movf	___aldiv@quotient+3,w
  3751  00AB  00F4               	movwf	?___aldiv+3
  3752  00AC  0824               	movf	___aldiv@quotient+2,w
  3753  00AD  00F3               	movwf	?___aldiv+2
  3754  00AE  0823               	movf	___aldiv@quotient+1,w
  3755  00AF  00F2               	movwf	?___aldiv+1
  3756  00B0  0822               	movf	___aldiv@quotient,w
  3757  00B1  00F1               	movwf	?___aldiv
  3758  00B2                     l317:
  3759  00B2  0008               	return
  3760  00B3                     __end_of___aldiv:
  3761                           
  3762                           	psect	text9
  3763  0F22                     __ptext9:	
  3764 ;; *************** function _BMP280_begin *****************
  3765 ;; Defined at:
  3766 ;;		line 156 in file "BMP280.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  mode            1    wreg     enum E1304
  3769 ;;  T_sampling      1    3[BANK0 ] enum E1309
  3770 ;;  P_sampling      1    4[BANK0 ] enum E1309
  3771 ;;  filter          1    5[BANK0 ] enum E1317
  3772 ;;  standby         1    6[BANK0 ] enum E1324
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  mode            1   11[BANK0 ] enum E1304
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    3[BANK0 ] int 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0, pclath, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3784 ;;      Params:         0       4       0       0       0
  3785 ;;      Locals:         0       1       0       0       0
  3786 ;;      Temps:          0       4       0       0       0
  3787 ;;      Totals:         0       9       0       0       0
  3788 ;;Total ram usage:        9 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    4
  3791 ;; This function calls:
  3792 ;;		_BMP280_Configure
  3793 ;;		_BMP280_Read16
  3794 ;;		_BMP280_Read8
  3795 ;;		_BMP280_Write
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           
  3802                           ;psect for function _BMP280_begin
  3803  0F22                     _BMP280_begin:
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  3807                           ;BMP280_begin@mode stored from wreg
  3808  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  3809  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  3810  0F24  00AB               	movwf	BMP280_begin@mode
  3811  0F25                     l1182:
  3812                           
  3813                           ;BMP280.c: 156: int BMP280_begin(BMP280_mode mode,;BMP280.c: 157:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 158:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 159:                   BMP280_filter filter ,;BMP280.c: 160:                   
      +                          standby_time standby );BMP280.c: 161: {;BMP280.c: 162:   if(BMP280_Read8(0xD0) != 0x58)
  3814  0F25  30D0               	movlw	208
  3815  0F26  120A  158A  24DD  120A  158A  	fcall	_BMP280_Read8
  3816  0F2B  3A58               	xorlw	88
  3817  0F2C  1903               	skipnz
  3818  0F2D  2F2F               	goto	u911
  3819  0F2E  2F30               	goto	u910
  3820  0F2F                     u911:
  3821  0F2F  2F31               	goto	l1186
  3822  0F30                     u910:
  3823  0F30  2FFF               	goto	l134
  3824  0F31                     l1186:
  3825                           
  3826                           ;BMP280.c: 166:   BMP280_Write(0xE0, 0xB6);
  3827  0F31  30B6               	movlw	182
  3828  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  3829  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  3830  0F34  00A7               	movwf	??_BMP280_begin
  3831  0F35  0827               	movf	??_BMP280_begin,w
  3832  0F36  00F3               	movwf	BMP280_Write@_data
  3833  0F37  30E0               	movlw	224
  3834  0F38  120A  158A  2414  120A  158A  	fcall	_BMP280_Write
  3835  0F3D                     l1188:
  3836                           
  3837                           ;BMP280.c: 167:   _delay((unsigned long)((100)*(8000000/4000.0)));
  3838  0F3D  3002               	movlw	2
  3839  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0F40  00A9               	movwf	??_BMP280_begin+2
  3842  0F41  3004               	movlw	4
  3843  0F42  00A8               	movwf	??_BMP280_begin+1
  3844  0F43  30B9               	movlw	185
  3845  0F44  00A7               	movwf	??_BMP280_begin
  3846  0F45                     u1187:
  3847  0F45  0BA7               	decfsz	??_BMP280_begin,f
  3848  0F46  2F45               	goto	u1187
  3849  0F47  0BA8               	decfsz	??_BMP280_begin+1,f
  3850  0F48  2F45               	goto	u1187
  3851  0F49  0BA9               	decfsz	??_BMP280_begin+2,f
  3852  0F4A  2F45               	goto	u1187
  3853  0F4B  2F4C               	nop2
  3854  0F4C                     l1192:	
  3855                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3856                           
  3857                           
  3858                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3859  0F4C  30F3               	movlw	243
  3860  0F4D  120A  158A  24DD  120A  158A  	fcall	_BMP280_Read8
  3861  0F52  3901               	andlw	1
  3862  0F53  1D03               	btfss	3,2
  3863  0F54  2F56               	goto	u921
  3864  0F55  2F57               	goto	u920
  3865  0F56                     u921:
  3866  0F56  2F3D               	goto	l1188
  3867  0F57                     u920:
  3868  0F57                     l1194:
  3869                           
  3870                           ;BMP280.c: 173:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  3871  0F57  3088               	movlw	136
  3872  0F58  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3873  0F5D  0878               	movf	?_BMP280_Read16+1,w
  3874  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  3875  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  3876  0F60  00A5               	movwf	(_BMP280_calib+1)^(0+128)
  3877  0F61  0877               	movf	?_BMP280_Read16,w
  3878  0F62  00A4               	movwf	_BMP280_calib^(0+128)
  3879                           
  3880                           ;BMP280.c: 174:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  3881  0F63  308A               	movlw	138
  3882  0F64  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3883  0F69  0878               	movf	?_BMP280_Read16+1,w
  3884  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3885  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  3886  0F6C  00A7               	movwf	((_BMP280_calib+1)^(0+128)+2)
  3887  0F6D  0877               	movf	?_BMP280_Read16,w
  3888  0F6E  00A6               	movwf	(_BMP280_calib^(0+128)+2)
  3889                           
  3890                           ;BMP280.c: 175:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  3891  0F6F  308C               	movlw	140
  3892  0F70  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3893  0F75  0878               	movf	?_BMP280_Read16+1,w
  3894  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  3896  0F78  00A9               	movwf	((_BMP280_calib+1)^(0+128)+4)
  3897  0F79  0877               	movf	?_BMP280_Read16,w
  3898  0F7A  00A8               	movwf	(_BMP280_calib^(0+128)+4)
  3899                           
  3900                           ;BMP280.c: 177:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  3901  0F7B  308E               	movlw	142
  3902  0F7C  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3903  0F81  0878               	movf	?_BMP280_Read16+1,w
  3904  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  3905  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  3906  0F84  00AB               	movwf	((_BMP280_calib+1)^(0+128)+6)
  3907  0F85  0877               	movf	?_BMP280_Read16,w
  3908  0F86  00AA               	movwf	(_BMP280_calib^(0+128)+6)
  3909                           
  3910                           ;BMP280.c: 178:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  3911  0F87  3090               	movlw	144
  3912  0F88  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3913  0F8D  0878               	movf	?_BMP280_Read16+1,w
  3914  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  3916  0F90  00AD               	movwf	((_BMP280_calib+1)^(0+128)+8)
  3917  0F91  0877               	movf	?_BMP280_Read16,w
  3918  0F92  00AC               	movwf	(_BMP280_calib^(0+128)+8)
  3919                           
  3920                           ;BMP280.c: 179:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  3921  0F93  3092               	movlw	146
  3922  0F94  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3923  0F99  0878               	movf	?_BMP280_Read16+1,w
  3924  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  3925  0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  3926  0F9C  00AF               	movwf	((_BMP280_calib+1)^(0+128)+10)
  3927  0F9D  0877               	movf	?_BMP280_Read16,w
  3928  0F9E  00AE               	movwf	(_BMP280_calib^(0+128)+10)
  3929                           
  3930                           ;BMP280.c: 180:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  3931  0F9F  3094               	movlw	148
  3932  0FA0  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3933  0FA5  0878               	movf	?_BMP280_Read16+1,w
  3934  0FA6  1683               	bsf	3,5	;RP0=1, select bank1
  3935  0FA7  1303               	bcf	3,6	;RP1=0, select bank1
  3936  0FA8  00B1               	movwf	((_BMP280_calib+1)^(0+128)+12)
  3937  0FA9  0877               	movf	?_BMP280_Read16,w
  3938  0FAA  00B0               	movwf	(_BMP280_calib^(0+128)+12)
  3939                           
  3940                           ;BMP280.c: 181:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  3941  0FAB  3096               	movlw	150
  3942  0FAC  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3943  0FB1  0878               	movf	?_BMP280_Read16+1,w
  3944  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  3945  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  3946  0FB4  00B3               	movwf	((_BMP280_calib+1)^(0+128)+14)
  3947  0FB5  0877               	movf	?_BMP280_Read16,w
  3948  0FB6  00B2               	movwf	(_BMP280_calib^(0+128)+14)
  3949                           
  3950                           ;BMP280.c: 182:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  3951  0FB7  3098               	movlw	152
  3952  0FB8  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3953  0FBD  0878               	movf	?_BMP280_Read16+1,w
  3954  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  3955  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  3956  0FC0  00B5               	movwf	((_BMP280_calib+1)^(0+128)+16)
  3957  0FC1  0877               	movf	?_BMP280_Read16,w
  3958  0FC2  00B4               	movwf	(_BMP280_calib^(0+128)+16)
  3959                           
  3960                           ;BMP280.c: 183:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  3961  0FC3  309A               	movlw	154
  3962  0FC4  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3963  0FC9  0878               	movf	?_BMP280_Read16+1,w
  3964  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3965  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  3966  0FCC  00B7               	movwf	((_BMP280_calib+1)^(0+128)+18)
  3967  0FCD  0877               	movf	?_BMP280_Read16,w
  3968  0FCE  00B6               	movwf	(_BMP280_calib^(0+128)+18)
  3969                           
  3970                           ;BMP280.c: 184:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  3971  0FCF  309C               	movlw	156
  3972  0FD0  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3973  0FD5  0878               	movf	?_BMP280_Read16+1,w
  3974  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3975  0FD7  1303               	bcf	3,6	;RP1=0, select bank1
  3976  0FD8  00B9               	movwf	((_BMP280_calib+1)^(0+128)+20)
  3977  0FD9  0877               	movf	?_BMP280_Read16,w
  3978  0FDA  00B8               	movwf	(_BMP280_calib^(0+128)+20)
  3979                           
  3980                           ;BMP280.c: 185:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  3981  0FDB  309E               	movlw	158
  3982  0FDC  120A  158A  25A9  120A  158A  	fcall	_BMP280_Read16
  3983  0FE1  0878               	movf	?_BMP280_Read16+1,w
  3984  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  3985  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  3986  0FE4  00BB               	movwf	((_BMP280_calib+1)^(0+128)+22)
  3987  0FE5  0877               	movf	?_BMP280_Read16,w
  3988  0FE6  00BA               	movwf	(_BMP280_calib^(0+128)+22)
  3989                           
  3990                           ;BMP280.c: 187:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  3991  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0FE9  0823               	movf	BMP280_begin@T_sampling,w
  3994  0FEA  00A7               	movwf	??_BMP280_begin
  3995  0FEB  0827               	movf	??_BMP280_begin,w
  3996  0FEC  00F7               	movwf	BMP280_Configure@T_sampling
  3997  0FED  0824               	movf	BMP280_begin@P_sampling,w
  3998  0FEE  00A8               	movwf	??_BMP280_begin+1
  3999  0FEF  0828               	movf	??_BMP280_begin+1,w
  4000  0FF0  00F8               	movwf	BMP280_Configure@P_sampling
  4001  0FF1  0825               	movf	BMP280_begin@filter,w
  4002  0FF2  00A9               	movwf	??_BMP280_begin+2
  4003  0FF3  0829               	movf	??_BMP280_begin+2,w
  4004  0FF4  00F9               	movwf	BMP280_Configure@filter
  4005  0FF5  0826               	movf	BMP280_begin@standby,w
  4006  0FF6  00AA               	movwf	??_BMP280_begin+3
  4007  0FF7  082A               	movf	??_BMP280_begin+3,w
  4008  0FF8  00FA               	movwf	BMP280_Configure@standby
  4009  0FF9  082B               	movf	BMP280_begin@mode,w
  4010  0FFA  120A  158A  2519  120A  158A  	fcall	_BMP280_Configure
  4011  0FFF                     l134:
  4012  0FFF  0008               	return
  4013  1000                     __end_of_BMP280_begin:
  4014                           
  4015                           	psect	text10
  4016  0CDD                     __ptext10:	
  4017 ;; *************** function _BMP280_Read8 *****************
  4018 ;; Defined at:
  4019 ;;		line 106 in file "BMP280.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  reg_addr        1    wreg     unsigned char 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  reg_addr        1    8[COMMON] unsigned char 
  4024 ;;  ret             1    9[COMMON] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      unsigned char 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, pclath, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         0       0       0       0       0
  4035 ;;      Locals:         2       0       0       0       0
  4036 ;;      Temps:          2       0       0       0       0
  4037 ;;      Totals:         4       0       0       0       0
  4038 ;;Total ram usage:        4 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    2
  4041 ;; This function calls:
  4042 ;;		_I2C_Master_Read
  4043 ;;		_I2C_Master_Start
  4044 ;;		_I2C_Master_Stop
  4045 ;;		_I2C_Master_Write
  4046 ;; This function is called by:
  4047 ;;		_BMP280_begin
  4048 ;;		_BMP280_ForcedMeasurement
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _BMP280_Read8
  4054  0CDD                     _BMP280_Read8:
  4055                           
  4056                           ;incstack = 0
  4057                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  4058                           ;BMP280_Read8@reg_addr stored from wreg
  4059  0CDD  00F9               	movwf	BMP280_Read8@reg_addr
  4060  0CDE                     l1076:
  4061                           
  4062                           ;BMP280.c: 106: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 107: {;BMP280.c: 108:  
      +                           uint8_t ret;;BMP280.c: 110:   I2C_Master_Start();
  4063  0CDE  120A  158A  23D8  120A  158A  	fcall	_I2C_Master_Start
  4064                           
  4065                           ;BMP280.c: 111:   I2C_Master_Write( 0xEE);
  4066  0CE3  30EE               	movlw	238
  4067  0CE4  00F1               	movwf	I2C_Master_Write@d
  4068  0CE5  3000               	movlw	0
  4069  0CE6  00F2               	movwf	I2C_Master_Write@d+1
  4070  0CE7  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4071                           
  4072                           ;BMP280.c: 112:   I2C_Master_Write(reg_addr);
  4073  0CEC  0879               	movf	BMP280_Read8@reg_addr,w
  4074  0CED  00F7               	movwf	??_BMP280_Read8
  4075  0CEE  01F8               	clrf	??_BMP280_Read8+1
  4076  0CEF  0877               	movf	??_BMP280_Read8,w
  4077  0CF0  00F1               	movwf	I2C_Master_Write@d
  4078  0CF1  0878               	movf	??_BMP280_Read8+1,w
  4079  0CF2  00F2               	movwf	I2C_Master_Write@d+1
  4080  0CF3  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4081                           
  4082                           ;BMP280.c: 113:   I2C_Master_Start();
  4083  0CF8  120A  158A  23D8  120A  158A  	fcall	_I2C_Master_Start
  4084                           
  4085                           ;BMP280.c: 114:   I2C_Master_Write( 0xEE | 1);
  4086  0CFD  30EF               	movlw	239
  4087  0CFE  00F1               	movwf	I2C_Master_Write@d
  4088  0CFF  3000               	movlw	0
  4089  0D00  00F2               	movwf	I2C_Master_Write@d+1
  4090  0D01  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4091                           
  4092                           ;BMP280.c: 115:   ret = I2C_Master_Read(0);
  4093  0D06  3000               	movlw	0
  4094  0D07  00F1               	movwf	I2C_Master_Read@a
  4095  0D08  00F2               	movwf	I2C_Master_Read@a+1
  4096  0D09  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  4097  0D0E  0871               	movf	?_I2C_Master_Read,w
  4098  0D0F  00F7               	movwf	??_BMP280_Read8
  4099  0D10  0877               	movf	??_BMP280_Read8,w
  4100  0D11  00FA               	movwf	BMP280_Read8@ret
  4101                           
  4102                           ;BMP280.c: 116:   I2C_Master_Stop();
  4103  0D12  120A  158A  23E1  120A  158A  	fcall	_I2C_Master_Stop
  4104  0D17                     l1078:
  4105                           
  4106                           ;BMP280.c: 118:   return ret;
  4107  0D17  087A               	movf	BMP280_Read8@ret,w
  4108  0D18                     l124:
  4109  0D18  0008               	return
  4110  0D19                     __end_of_BMP280_Read8:
  4111                           
  4112                           	psect	text11
  4113  0DA9                     __ptext11:	
  4114 ;; *************** function _BMP280_Read16 *****************
  4115 ;; Defined at:
  4116 ;;		line 122 in file "BMP280.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  reg_addr        1    wreg     unsigned char 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  reg_addr        1   10[COMMON] unsigned char 
  4121 ;;  ret             2   11[COMMON] struct .
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  2    6[COMMON] unsigned int 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0, pclath, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4131 ;;      Params:         2       0       0       0       0
  4132 ;;      Locals:         3       0       0       0       0
  4133 ;;      Temps:          2       0       0       0       0
  4134 ;;      Totals:         7       0       0       0       0
  4135 ;;Total ram usage:        7 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    2
  4138 ;; This function calls:
  4139 ;;		_I2C_Master_Read
  4140 ;;		_I2C_Master_Start
  4141 ;;		_I2C_Master_Stop
  4142 ;;		_I2C_Master_Write
  4143 ;; This function is called by:
  4144 ;;		_BMP280_begin
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _BMP280_Read16
  4150  0DA9                     _BMP280_Read16:
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  4154                           ;BMP280_Read16@reg_addr stored from wreg
  4155  0DA9  00FB               	movwf	BMP280_Read16@reg_addr
  4156  0DAA                     l1082:
  4157                           
  4158                           ;BMP280.c: 122: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 123: {;BMP280.c: 128:
      +                             } ret;;BMP280.c: 130:   I2C_Master_Start();
  4159  0DAA  120A  158A  23D8  120A  158A  	fcall	_I2C_Master_Start
  4160                           
  4161                           ;BMP280.c: 131:   I2C_Master_Write( 0xEE);
  4162  0DAF  30EE               	movlw	238
  4163  0DB0  00F1               	movwf	I2C_Master_Write@d
  4164  0DB1  3000               	movlw	0
  4165  0DB2  00F2               	movwf	I2C_Master_Write@d+1
  4166  0DB3  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4167                           
  4168                           ;BMP280.c: 132:   I2C_Master_Write(reg_addr);
  4169  0DB8  087B               	movf	BMP280_Read16@reg_addr,w
  4170  0DB9  00F9               	movwf	??_BMP280_Read16
  4171  0DBA  01FA               	clrf	??_BMP280_Read16+1
  4172  0DBB  0879               	movf	??_BMP280_Read16,w
  4173  0DBC  00F1               	movwf	I2C_Master_Write@d
  4174  0DBD  087A               	movf	??_BMP280_Read16+1,w
  4175  0DBE  00F2               	movwf	I2C_Master_Write@d+1
  4176  0DBF  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4177                           
  4178                           ;BMP280.c: 133:   I2C_Master_Start();
  4179  0DC4  120A  158A  23D8  120A  158A  	fcall	_I2C_Master_Start
  4180                           
  4181                           ;BMP280.c: 134:   I2C_Master_Write(0xEE | 1);
  4182  0DC9  30EF               	movlw	239
  4183  0DCA  00F1               	movwf	I2C_Master_Write@d
  4184  0DCB  3000               	movlw	0
  4185  0DCC  00F2               	movwf	I2C_Master_Write@d+1
  4186  0DCD  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4187                           
  4188                           ;BMP280.c: 135:   ret.b[0] = I2C_Master_Read( 1);
  4189  0DD2  3001               	movlw	1
  4190  0DD3  00F1               	movwf	I2C_Master_Read@a
  4191  0DD4  3000               	movlw	0
  4192  0DD5  00F2               	movwf	I2C_Master_Read@a+1
  4193  0DD6  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  4194  0DDB  0871               	movf	?_I2C_Master_Read,w
  4195  0DDC  00F9               	movwf	??_BMP280_Read16
  4196  0DDD  0879               	movf	??_BMP280_Read16,w
  4197  0DDE  00FC               	movwf	BMP280_Read16@ret
  4198                           
  4199                           ;BMP280.c: 136:   ret.b[1] = I2C_Master_Read( 0);
  4200  0DDF  3000               	movlw	0
  4201  0DE0  00F1               	movwf	I2C_Master_Read@a
  4202  0DE1  00F2               	movwf	I2C_Master_Read@a+1
  4203  0DE2  120A  158A  2441  120A  158A  	fcall	_I2C_Master_Read
  4204  0DE7  0871               	movf	?_I2C_Master_Read,w
  4205  0DE8  00F9               	movwf	??_BMP280_Read16
  4206  0DE9  0879               	movf	??_BMP280_Read16,w
  4207  0DEA  00FD               	movwf	BMP280_Read16@ret+1
  4208                           
  4209                           ;BMP280.c: 137:   I2C_Master_Stop();
  4210  0DEB  120A  158A  23E1  120A  158A  	fcall	_I2C_Master_Stop
  4211  0DF0                     l1084:
  4212                           
  4213                           ;BMP280.c: 139:   return(ret.w);
  4214  0DF0  087D               	movf	BMP280_Read16@ret+1,w
  4215  0DF1  00F8               	movwf	?_BMP280_Read16+1
  4216  0DF2  087C               	movf	BMP280_Read16@ret,w
  4217  0DF3  00F7               	movwf	?_BMP280_Read16
  4218  0DF4                     l127:
  4219  0DF4  0008               	return
  4220  0DF5                     __end_of_BMP280_Read16:
  4221                           
  4222                           	psect	text12
  4223  0C41                     __ptext12:	
  4224 ;; *************** function _I2C_Master_Read *****************
  4225 ;; Defined at:
  4226 ;;		line 74 in file "I2C.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  a               2    0[COMMON] unsigned short 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  temp            2    4[COMMON] unsigned short 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2    0[COMMON] unsigned short 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0, pclath, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4240 ;;      Params:         2       0       0       0       0
  4241 ;;      Locals:         2       0       0       0       0
  4242 ;;      Temps:          2       0       0       0       0
  4243 ;;      Totals:         6       0       0       0       0
  4244 ;;Total ram usage:        6 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    1
  4247 ;; This function calls:
  4248 ;;		_I2C_Master_Wait
  4249 ;; This function is called by:
  4250 ;;		_BMP280_Read8
  4251 ;;		_BMP280_Read16
  4252 ;;		_BMP280_Update
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _I2C_Master_Read
  4258  0C41                     _I2C_Master_Read:
  4259  0C41                     l1022:	
  4260                           ;incstack = 0
  4261                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4262                           
  4263                           
  4264                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4265  0C41  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4266  0C46                     l1024:
  4267                           
  4268                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4269  0C46  1683               	bsf	3,5	;RP0=1, select bank1
  4270  0C47  1303               	bcf	3,6	;RP1=0, select bank1
  4271  0C48  1591               	bsf	17,3	;volatile
  4272                           
  4273                           ;I2C.c: 79:     I2C_Master_Wait();
  4274  0C49  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4275  0C4E                     l1026:
  4276                           
  4277                           ;I2C.c: 80:     temp = SSPBUF;
  4278  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0C50  0813               	movf	19,w	;volatile
  4281  0C51  00F3               	movwf	??_I2C_Master_Read
  4282  0C52  01F4               	clrf	??_I2C_Master_Read+1
  4283  0C53  0873               	movf	??_I2C_Master_Read,w
  4284  0C54  00F5               	movwf	I2C_Master_Read@temp
  4285  0C55  0874               	movf	??_I2C_Master_Read+1,w
  4286  0C56  00F6               	movwf	I2C_Master_Read@temp+1
  4287  0C57                     l1028:
  4288                           
  4289                           ;I2C.c: 81:     I2C_Master_Wait();
  4290  0C57  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4291  0C5C                     l1030:
  4292                           
  4293                           ;I2C.c: 82:     if(a == 1){
  4294  0C5C  0371               	decf	I2C_Master_Read@a,w
  4295  0C5D  0472               	iorwf	I2C_Master_Read@a+1,w
  4296  0C5E  1D03               	btfss	3,2
  4297  0C5F  2C61               	goto	u611
  4298  0C60  2C62               	goto	u610
  4299  0C61                     u611:
  4300  0C61  2C66               	goto	l95
  4301  0C62                     u610:
  4302  0C62                     l1032:
  4303                           
  4304                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4305  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  4306  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  4307  0C64  1291               	bcf	17,5	;volatile
  4308                           
  4309                           ;I2C.c: 84:     }else{
  4310  0C65  2C69               	goto	l96
  4311  0C66                     l95:
  4312                           
  4313                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4314  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  4315  0C67  1303               	bcf	3,6	;RP1=0, select bank1
  4316  0C68  1691               	bsf	17,5	;volatile
  4317  0C69                     l96:	
  4318                           ;I2C.c: 86:     }
  4319                           
  4320                           
  4321                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4322  0C69  1611               	bsf	17,4	;volatile
  4323  0C6A                     l1034:
  4324                           
  4325                           ;I2C.c: 88:     return temp;
  4326  0C6A  0876               	movf	I2C_Master_Read@temp+1,w
  4327  0C6B  00F2               	movwf	?_I2C_Master_Read+1
  4328  0C6C  0875               	movf	I2C_Master_Read@temp,w
  4329  0C6D  00F1               	movwf	?_I2C_Master_Read
  4330  0C6E                     l97:
  4331  0C6E  0008               	return
  4332  0C6F                     __end_of_I2C_Master_Read:
  4333                           
  4334                           	psect	text13
  4335  0D19                     __ptext13:	
  4336 ;; *************** function _BMP280_Configure *****************
  4337 ;; Defined at:
  4338 ;;		line 143 in file "BMP280.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  mode            1    wreg     enum E1304
  4341 ;;  T_sampling      1    6[COMMON] enum E1309
  4342 ;;  P_sampling      1    7[COMMON] enum E1309
  4343 ;;  filter          1    8[COMMON] enum E1317
  4344 ;;  standby         1    9[COMMON] enum E1324
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  mode            1    0[BANK0 ] enum E1304
  4347 ;;  _config         1    2[BANK0 ] unsigned char 
  4348 ;;  _ctrl_meas      1    1[BANK0 ] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, pclath, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4358 ;;      Params:         4       0       0       0       0
  4359 ;;      Locals:         0       3       0       0       0
  4360 ;;      Temps:          3       0       0       0       0
  4361 ;;      Totals:         7       3       0       0       0
  4362 ;;Total ram usage:       10 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    3
  4365 ;; This function calls:
  4366 ;;		_BMP280_Write
  4367 ;; This function is called by:
  4368 ;;		_BMP280_begin
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function _BMP280_Configure
  4374  0D19                     _BMP280_Configure:
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  4378                           ;BMP280_Configure@mode stored from wreg
  4379  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  4380  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  4381  0D1B  00A0               	movwf	BMP280_Configure@mode
  4382  0D1C                     l1088:
  4383                           
  4384                           ;BMP280.c: 143: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 144:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 145: {;BMP280.c: 146:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 148:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  4385  0D1C  0879               	movf	BMP280_Configure@filter,w
  4386  0D1D  00FB               	movwf	??_BMP280_Configure
  4387  0D1E  3002               	movlw	2
  4388  0D1F                     u705:
  4389  0D1F  1003               	clrc
  4390  0D20  0DFB               	rlf	??_BMP280_Configure,f
  4391  0D21  3EFF               	addlw	-1
  4392  0D22  1D03               	skipz
  4393  0D23  2D1F               	goto	u705
  4394  0D24  087A               	movf	BMP280_Configure@standby,w
  4395  0D25  00FC               	movwf	??_BMP280_Configure+1
  4396  0D26  3004               	movlw	4
  4397  0D27                     u715:
  4398  0D27  1003               	clrc
  4399  0D28  0DFC               	rlf	??_BMP280_Configure+1,f
  4400  0D29  3EFF               	addlw	-1
  4401  0D2A  1D03               	skipz
  4402  0D2B  2D27               	goto	u715
  4403  0D2C  1003               	clrc
  4404  0D2D  0D7C               	rlf	??_BMP280_Configure+1,w
  4405  0D2E  047B               	iorwf	??_BMP280_Configure,w
  4406  0D2F  39FC               	andlw	252
  4407  0D30  00FD               	movwf	??_BMP280_Configure+2
  4408  0D31  087D               	movf	??_BMP280_Configure+2,w
  4409  0D32  00A2               	movwf	BMP280_Configure@_config
  4410                           
  4411                           ;BMP280.c: 149:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  4412  0D33  0878               	movf	BMP280_Configure@P_sampling,w
  4413  0D34  00FB               	movwf	??_BMP280_Configure
  4414  0D35  3002               	movlw	2
  4415  0D36                     u725:
  4416  0D36  1003               	clrc
  4417  0D37  0DFB               	rlf	??_BMP280_Configure,f
  4418  0D38  3EFF               	addlw	-1
  4419  0D39  1D03               	skipz
  4420  0D3A  2D36               	goto	u725
  4421  0D3B  0877               	movf	BMP280_Configure@T_sampling,w
  4422  0D3C  00FC               	movwf	??_BMP280_Configure+1
  4423  0D3D  3004               	movlw	4
  4424  0D3E                     u735:
  4425  0D3E  1003               	clrc
  4426  0D3F  0DFC               	rlf	??_BMP280_Configure+1,f
  4427  0D40  3EFF               	addlw	-1
  4428  0D41  1D03               	skipz
  4429  0D42  2D3E               	goto	u735
  4430  0D43  1003               	clrc
  4431  0D44  0D7C               	rlf	??_BMP280_Configure+1,w
  4432  0D45  047B               	iorwf	??_BMP280_Configure,w
  4433  0D46  0420               	iorwf	BMP280_Configure@mode,w
  4434  0D47  00FD               	movwf	??_BMP280_Configure+2
  4435  0D48  087D               	movf	??_BMP280_Configure+2,w
  4436  0D49  00A1               	movwf	BMP280_Configure@_ctrl_meas
  4437  0D4A                     l1090:
  4438                           
  4439                           ;BMP280.c: 151:   BMP280_Write(0xF5, _config);
  4440  0D4A  0822               	movf	BMP280_Configure@_config,w
  4441  0D4B  00FB               	movwf	??_BMP280_Configure
  4442  0D4C  087B               	movf	??_BMP280_Configure,w
  4443  0D4D  00F3               	movwf	BMP280_Write@_data
  4444  0D4E  30F5               	movlw	245
  4445  0D4F  120A  158A  2414  120A  158A  	fcall	_BMP280_Write
  4446  0D54                     l1092:
  4447                           
  4448                           ;BMP280.c: 152:   BMP280_Write(0xF4, _ctrl_meas);
  4449  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0D56  0821               	movf	BMP280_Configure@_ctrl_meas,w
  4452  0D57  00FB               	movwf	??_BMP280_Configure
  4453  0D58  087B               	movf	??_BMP280_Configure,w
  4454  0D59  00F3               	movwf	BMP280_Write@_data
  4455  0D5A  30F4               	movlw	244
  4456  0D5B  120A  158A  2414  120A  158A  	fcall	_BMP280_Write
  4457  0D60                     l130:
  4458  0D60  0008               	return
  4459  0D61                     __end_of_BMP280_Configure:
  4460                           
  4461                           	psect	text14
  4462  0C14                     __ptext14:	
  4463 ;; *************** function _BMP280_Write *****************
  4464 ;; Defined at:
  4465 ;;		line 96 in file "BMP280.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  reg_addr        1    wreg     unsigned char 
  4468 ;;  _data           1    2[COMMON] unsigned char 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  reg_addr        1    5[COMMON] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, pclath, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         1       0       0       0       0
  4481 ;;      Locals:         1       0       0       0       0
  4482 ;;      Temps:          2       0       0       0       0
  4483 ;;      Totals:         4       0       0       0       0
  4484 ;;Total ram usage:        4 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    2
  4487 ;; This function calls:
  4488 ;;		_I2C_Master_Start
  4489 ;;		_I2C_Master_Stop
  4490 ;;		_I2C_Master_Write
  4491 ;; This function is called by:
  4492 ;;		_BMP280_Configure
  4493 ;;		_BMP280_begin
  4494 ;;		_BMP280_ForcedMeasurement
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           
  4499                           ;psect for function _BMP280_Write
  4500  0C14                     _BMP280_Write:
  4501                           
  4502                           ;incstack = 0
  4503                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  4504                           ;BMP280_Write@reg_addr stored from wreg
  4505  0C14  00F6               	movwf	BMP280_Write@reg_addr
  4506  0C15                     l1038:
  4507                           
  4508                           ;BMP280.c: 96: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 97: {;BMP280
      +                          .c: 98:   I2C_Master_Start();
  4509  0C15  120A  158A  23D8  120A  158A  	fcall	_I2C_Master_Start
  4510                           
  4511                           ;BMP280.c: 99:   I2C_Master_Write(0xEE);
  4512  0C1A  30EE               	movlw	238
  4513  0C1B  00F1               	movwf	I2C_Master_Write@d
  4514  0C1C  3000               	movlw	0
  4515  0C1D  00F2               	movwf	I2C_Master_Write@d+1
  4516  0C1E  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4517                           
  4518                           ;BMP280.c: 100:   I2C_Master_Write (reg_addr);
  4519  0C23  0876               	movf	BMP280_Write@reg_addr,w
  4520  0C24  00F4               	movwf	??_BMP280_Write
  4521  0C25  01F5               	clrf	??_BMP280_Write+1
  4522  0C26  0874               	movf	??_BMP280_Write,w
  4523  0C27  00F1               	movwf	I2C_Master_Write@d
  4524  0C28  0875               	movf	??_BMP280_Write+1,w
  4525  0C29  00F2               	movwf	I2C_Master_Write@d+1
  4526  0C2A  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4527                           
  4528                           ;BMP280.c: 101:   I2C_Master_Write( _data);
  4529  0C2F  0873               	movf	BMP280_Write@_data,w
  4530  0C30  00F4               	movwf	??_BMP280_Write
  4531  0C31  01F5               	clrf	??_BMP280_Write+1
  4532  0C32  0874               	movf	??_BMP280_Write,w
  4533  0C33  00F1               	movwf	I2C_Master_Write@d
  4534  0C34  0875               	movf	??_BMP280_Write+1,w
  4535  0C35  00F2               	movwf	I2C_Master_Write@d+1
  4536  0C36  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Write
  4537                           
  4538                           ;BMP280.c: 102:   I2C_Master_Stop();
  4539  0C3B  120A  158A  23E1  120A  158A  	fcall	_I2C_Master_Stop
  4540  0C40                     l121:
  4541  0C40  0008               	return
  4542  0C41                     __end_of_BMP280_Write:
  4543                           
  4544                           	psect	text15
  4545  0BEA                     __ptext15:	
  4546 ;; *************** function _I2C_Master_Write *****************
  4547 ;; Defined at:
  4548 ;;		line 65 in file "I2C.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  d               2    0[COMMON] unsigned int 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         2       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0
  4565 ;;      Totals:         2       0       0       0       0
  4566 ;;Total ram usage:        2 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    1
  4569 ;; This function calls:
  4570 ;;		_I2C_Master_Wait
  4571 ;; This function is called by:
  4572 ;;		_BMP280_Write
  4573 ;;		_BMP280_Read8
  4574 ;;		_BMP280_Read16
  4575 ;;		_BMP280_Update
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           
  4580                           ;psect for function _I2C_Master_Write
  4581  0BEA                     _I2C_Master_Write:
  4582  0BEA                     l1018:	
  4583                           ;incstack = 0
  4584                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4585                           
  4586                           
  4587                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4588  0BEA  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4589  0BEF                     l1020:
  4590                           
  4591                           ;I2C.c: 68:     SSPBUF = d;
  4592  0BEF  0871               	movf	I2C_Master_Write@d,w
  4593  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0BF2  0093               	movwf	19	;volatile
  4596  0BF3                     l92:
  4597  0BF3  0008               	return
  4598  0BF4                     __end_of_I2C_Master_Write:
  4599                           
  4600                           	psect	text16
  4601  0BE1                     __ptext16:	
  4602 ;; *************** function _I2C_Master_Stop *****************
  4603 ;; Defined at:
  4604 ;;		line 55 in file "I2C.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;		None
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0, pclath, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4618 ;;      Params:         0       0       0       0       0
  4619 ;;      Locals:         0       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0
  4621 ;;      Totals:         0       0       0       0       0
  4622 ;;Total ram usage:        0 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    1
  4625 ;; This function calls:
  4626 ;;		_I2C_Master_Wait
  4627 ;; This function is called by:
  4628 ;;		_BMP280_Write
  4629 ;;		_BMP280_Read8
  4630 ;;		_BMP280_Read16
  4631 ;;		_BMP280_Update
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           
  4636                           ;psect for function _I2C_Master_Stop
  4637  0BE1                     _I2C_Master_Stop:
  4638  0BE1                     l1014:	
  4639                           ;incstack = 0
  4640                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4641                           
  4642                           
  4643                           ;I2C.c: 57:     I2C_Master_Wait();
  4644  0BE1  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4645  0BE6                     l1016:
  4646                           
  4647                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4648  0BE6  1683               	bsf	3,5	;RP0=1, select bank1
  4649  0BE7  1303               	bcf	3,6	;RP1=0, select bank1
  4650  0BE8  1511               	bsf	17,2	;volatile
  4651  0BE9                     l89:
  4652  0BE9  0008               	return
  4653  0BEA                     __end_of_I2C_Master_Stop:
  4654                           
  4655                           	psect	text17
  4656  0BD8                     __ptext17:	
  4657 ;; *************** function _I2C_Master_Start *****************
  4658 ;; Defined at:
  4659 ;;		line 39 in file "I2C.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, pclath, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4673 ;;      Params:         0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    1
  4680 ;; This function calls:
  4681 ;;		_I2C_Master_Wait
  4682 ;; This function is called by:
  4683 ;;		_BMP280_Write
  4684 ;;		_BMP280_Read8
  4685 ;;		_BMP280_Read16
  4686 ;;		_BMP280_Update
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function _I2C_Master_Start
  4692  0BD8                     _I2C_Master_Start:
  4693  0BD8                     l1010:	
  4694                           ;incstack = 0
  4695                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4696                           
  4697                           
  4698                           ;I2C.c: 41:     I2C_Master_Wait();
  4699  0BD8  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4700  0BDD                     l1012:
  4701                           
  4702                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4703  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  4704  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  4705  0BDF  1411               	bsf	17,0	;volatile
  4706  0BE0                     l83:
  4707  0BE0  0008               	return
  4708  0BE1                     __end_of_I2C_Master_Start:
  4709                           
  4710                           	psect	text18
  4711  0009                     __ptext18:	
  4712 ;; *************** function _I2C_Master_Wait *****************
  4713 ;; Defined at:
  4714 ;;		line 32 in file "I2C.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;		None
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;		None
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4728 ;;      Params:         0       0       0       0       0
  4729 ;;      Locals:         0       0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0
  4731 ;;      Totals:         0       0       0       0       0
  4732 ;;Total ram usage:        0 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_I2C_Master_Start
  4738 ;;		_I2C_Master_Stop
  4739 ;;		_I2C_Master_Write
  4740 ;;		_I2C_Master_Read
  4741 ;;		_I2C_Master_RepeatedStart
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           
  4746                           ;psect for function _I2C_Master_Wait
  4747  0009                     _I2C_Master_Wait:
  4748  0009                     l1006:	
  4749                           ;incstack = 0
  4750                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4751                           
  4752  0009                     l77:	
  4753                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4754                           
  4755  0009  1683               	bsf	3,5	;RP0=1, select bank1
  4756  000A  1303               	bcf	3,6	;RP1=0, select bank1
  4757  000B  1914               	btfsc	20,2	;volatile
  4758  000C  280E               	goto	u591
  4759  000D  280F               	goto	u590
  4760  000E                     u591:
  4761  000E  2809               	goto	l77
  4762  000F                     u590:
  4763  000F                     l1008:
  4764  000F  0811               	movf	17,w	;volatile
  4765  0010  391F               	andlw	31
  4766  0011  1D03               	btfss	3,2
  4767  0012  2814               	goto	u601
  4768  0013  2815               	goto	u600
  4769  0014                     u601:
  4770  0014  2809               	goto	l77
  4771  0015                     u600:
  4772  0015                     l80:
  4773  0015  0008               	return
  4774  0016                     __end_of_I2C_Master_Wait:
  4775  007E                     btemp	set	126	;btemp
  4776  007E                     wtemp0	set	126
  4777                           
  4778                           	psect	config
  4779                           
  4780                           ;Config register CONFIG1 @ 0x2007
  4781                           ;	Oscillator Selection bits
  4782                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4783                           ;	Watchdog Timer Enable bit
  4784                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4785                           ;	Power-up Timer Enable bit
  4786                           ;	PWRTE = OFF, PWRT disabled
  4787                           ;	RE3/MCLR pin function select bit
  4788                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4789                           ;	Code Protection bit
  4790                           ;	CP = OFF, Program memory code protection is disabled
  4791                           ;	Data Code Protection bit
  4792                           ;	CPD = OFF, Data memory code protection is disabled
  4793                           ;	Brown Out Reset Selection bits
  4794                           ;	BOREN = ON, BOR enabled
  4795                           ;	Internal External Switchover bit
  4796                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4797                           ;	Fail-Safe Clock Monitor Enabled bit
  4798                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4799                           ;	Low Voltage Programming Enable bit
  4800                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4801                           ;	In-Circuit Debugger Mode bit
  4802                           ;	DEBUG = 0x1, unprogrammed default
  4803  2007                     	org	8199
  4804  2007  23F4               	dw	9204
  4805                           
  4806                           ;Config register CONFIG2 @ 0x2008
  4807                           ;	Brown-out Reset Selection bit
  4808                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4809                           ;	Flash Program Memory Self Write Enable bits
  4810                           ;	WRT = OFF, Write protection off
  4811  2008                     	org	8200
  4812  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     66      78
    BANK1            80      0      32
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK1[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK0[4]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _BMP280_readTemperature->_BMP280_Update
    _BMP280_readTemperature->___lmul
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure
    _BMP280_begin->_BMP280_Read16
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   23235
                                             63 BANK0      3     3      0
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              9 COMMON     4     4      0
                                              5 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             18 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              6 COMMON     4     4      0
                                              0 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7474
                                             18 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              9 COMMON     1     1      0
                                              6 BANK0     12     4      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                              3 BANK0      9     5      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              6 COMMON     7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              6 COMMON     7     3      4
                                              0 BANK0      3     3      0
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 22:36:32 2021

               _BMP280_Configure 0D19                               l45 0C13                               l80 0015  
                             l74 0CDC                               l83 0BE0                               l92 0BF3  
                             l77 0009                               l95 0C66                               l96 0C69  
                             l89 0BE9                               l97 0C6E                               fsr 0004  
                            l121 0C40                              l130 0D60                              l124 0D18  
                            l134 0FFF                              l150 02C4                              l127 0DF4  
                            l154 07EA                              l307 002A                              l147 0F21  
                            l156 067C                              l317 00B2                              l256 0DA8  
                            l278 0E5C                              _GIE 005F          BMP280_Configure@_config 0022  
                            u600 0015                              u601 0014                              u610 0C62  
                            u611 0C61                              u620 0E07                              u621 0E06  
                            u640 0E1B                              u800 0DA0                              u705 0D1F  
                            u641 0E1A                              u801 0D9F                              u810 001D  
                            u715 0D27                              u811 001C                              u635 0E0C  
                            u900 009F                              u820 002E                              u660 0E36  
                            u740 0EC0                              u725 0D36                              u901 009E  
                            u821 002D                              u661 0E35                              u590 000F  
                            u910 0F30                              u830 004D                              u750 0F12  
                            u591 000E                              u735 0D3E                              u911 0F2F  
                            u831 004C                              u655 0E1D                              u920 0F57  
                            u680 0E54                              u760 0D6F                              u921 0F56  
                            u681 0E53                              u665 0E32                              u761 0D6E  
                            u745 0EBB                              u850 0061                              u930 00CF  
                            u690 0CBC                              u851 0060                              u675 0E46  
                            u771 0D78                              u755 0F0D                              u772 0D7F  
                            u845 0052                              u773 0D86                              u941 00F8  
                            u870 007C                              u942 00F9                              u871 007B  
                            u951 0180                              u943 00FE                              u935 00CA  
                            u695 0CB7                              u952 0181                              u944 00FF  
                            u865 0063                              u785 0D88                              u961 01C9  
                            u953 0186                              u945 0104                              u890 009A  
                            u970 029C                              u962 01CA                              u954 0187  
                            u946 0105                              u891 0099                              u875 0078  
                            u795 0D90                              u971 029D                              u963 01CF  
                            u955 018C                              u980 02EE                              u972 02A2  
                            u964 01D0                              u956 018D                              u885 008C  
                            u981 02EF                              u973 02A3                              u965 01D5  
                            u990 03C3                              u982 02F4                              u966 01D6  
                            u983 02F5                              u995 03BE                              fsr0 0004  
                            indf 0000     __size_of_BMP280_readPressure 0526           BMP280_begin@P_sampling 0024  
                           l1010 0BD8                             l1012 0BDD                             l1020 0BEF  
                           l1100 0E6E                             l1006 0009                             l1014 0BE1  
                           l1030 0C5C                             l1022 0C41                             l1110 0EA3  
                           l1102 0E77                             l1008 000F                             l1016 0BE6  
                           l1032 0C62                             l1024 0C46                             l1040 0DF5  
                           l1120 0EFD                             l1112 0EB2                             l1104 0E7C  
                           l1200 024B                             l1018 0BEA                             l1034 0C6A  
                           l1026 0C4E                             l1050 0E24                             l1042 0E07  
                           l1130 0D86                             l1122 0F02                             l1114 0ED1  
                           l1106 0E85                             l1202 026E                             l1028 0C57  
                           l1140 0019                             l1052 0E36                             l1044 0E0A  
                           l1060 0E54                             l1132 0D8F                             l1124 0D61  
                           l1220 07DC                             l1212 05A2                             l1116 0EE0  
                           l1108 0E94                             l1038 0C15                             l1150 0045  
                           l1142 001D                             l1054 0E44                             l1046 0E17  
                           l1134 0DA0                             l1126 0D6B                             l1214 0623  
                           l1206 02C8                             l1118 0EEF                             l1070 0CD9  
                           l1230 0C95                             l1160 006A                             l1152 004D  
                           l1144 002E                             l1056 0E45                             l1048 0E1B  
                           l1128 0D6F                             l1216 0637                             l1208 0599  
                           l1072 0CDA                             l1064 0CA5                             l1232 0C9B  
                           l1224 0C6F                             l1090 0D4A                             l1082 0DAA  
                           l1162 007C                             l1154 0050                             l1170 009A  
                           l1146 0039                             l1138 0016                             l1058 0E4E  
                           l1218 065A                             l1074 0CDB                             l1066 0CA9  
                           l1226 0C82                             l1092 0D54                             l1084 0DF0  
                           l1076 0CDE                             l1172 009F                             l1164 008A  
                           l1156 005D                             l1148 003D                             l1068 0CAC  
                           l1180 0C04                             l1228 0C91                             l1078 0D17  
                           l1182 0F25                             l1174 00AA                             l1166 008B  
                           l1158 0061                             l1094 0E5D                             l1088 0D1C  
                           l1192 0F4C                             l1168 0094                             l1096 0E60  
                           l1194 0F57                             l1186 0F31                             l1098 0E65  
                           l1178 0BF4                             l1188 0F3D                             l1198 00B6  
                           u1000 03CD                             u1001 03CE                             u1010 03F4  
                           u1002 03D3                             u1003 03D4                             u1100 06A3  
                           u1020 0415                             u1021 0416                             u1110 06C3  
                           u1030 0511                             u1022 041B                             u1031 0512  
                           u1023 041C                             u1015 03EF                             u1120 0723  
                           u1040 055A                             u1032 0517                             u1105 069E  
                           u1041 055B                             u1033 0518                             u1130 078D  
                           u1050 05A1                             u1042 0560                             u1131 078E  
                           u1115 06BE                             u1051 05A0                             u1043 0561  
                           u1140 079F                             u1132 0793                             u1141 07A0  
                           u1133 0794                             u1125 071E                             u1061 05E5  
                           u1142 07A5                             u1070 05F9                             u1062 05E6  
                           u1143 07A6                             u1071 05FA                             u1063 05EB  
                           u1080 0637                             u1072 05FF                             u1064 05EC  
                           u1081 0636                             u1073 0600                             u1065 05F1  
                           u1090 068A                             u1066 05F2                             u1083 0633  
                           u1095 0685                             u1177 0C8A                             u1187 0F45  
                           _PEIE 005E          BMP280_Configure@standby 007A                             _main 0C6F  
                           btemp 007E                             start 0001  __size_of_BMP280_readTemperature 0212  
         BMP280_begin@T_sampling 0023            __size_of_BMP280_Read8 003C                 ?_I2C_Master_Init 0025  
               ?_I2C_Master_Read 0071                 ?_I2C_Master_Wait 0071            __size_of_BMP280_Write 002D  
               ?_I2C_Master_Stop 0071            __size_of_BMP280_begin 00DE                  __end_of___aldiv 00B3  
                          ?_main 0071                            _ANSEL 0188                  __end_of___lldiv 0E5D  
                BMP280_Read8@ret 007A                            _PORTA 0005                            _PORTB 0006  
                          _PORTD 0008                            _TRISA 0085                            _TRISB 0086  
                          _TRISD 0088                            _SSPIE 0463                            _SSPIF 0063  
            ___lmul@multiplicand 002A                            _adc_P 00A0                            _adc_T 0066  
                          _setup 0BF4                            status 0003                            wtemp0 007E  
                   _BMP280_Read8 0CDD                     _BMP280_Write 0C14                     _BMP280_calib 00A4  
                   _BMP280_begin 0F22                  __initialization 07EB                     __end_of_main 0CA5  
         __size_of_BMP280_Read16 004C                           ??_main 005F           __size_of_BMP280_Update 00C5  
         _BMP280_readTemperature 00B3                ?_I2C_Master_Start 0071                ?_I2C_Master_Write 0071  
               BMP280_Read16@ret 007C               ??_I2C_Master_Start 0071               ??_I2C_Master_Write 0073  
                         ?_setup 0071                           _ANSELH 0189                           _SSPADD 0093  
                         _TRISC3 043B                           _TRISC4 043C                           _SSPCON 0014  
                         _SSPBUF 0013                           ___lmul 0D61                        ??___aldiv 0079  
                      ??___lldiv 0079                           _t_fine 0062       BMP280_Configure@P_sampling 0078  
       __end_of_BMP280_Configure 0D61                    _BMP280_Read16 0DA9          __end_of__initialization 07FC  
     BMP280_Configure@T_sampling 0077                    _BMP280_Update 0E5D                   __pcstackCOMMON 0071  
            _BMP280_readPressure 02C5                    __end_of_setup 0C14                 BMP280_Update@ret 0020  
           ?_BMP280_readPressure 0071                          ??_setup 007E                       __pbssBANK0 0062  
                     __pbssBANK1 00A0                   ?_BMP280_Read16 0077                   ?_BMP280_Update 0071  
        BMP280_readPressure@var1 005B          BMP280_readPressure@var2 0053          BMP280_readPressure@pres 004E  
                     __pmaintext 0C6F                          ?___lmul 0026                   ___lmul@product 002E  
               BMP280_begin@mode 002B            ??_BMP280_readPressure 0032                          _SSPCON2 0091  
        _BMP280_readPressure$942 004F          _BMP280_readPressure$943 0042          _BMP280_readPressure$944 0046  
        _BMP280_readPressure$945 004A                          _SSPSTAT 0094       BMP280_Configure@_ctrl_meas 0021  
           BMP280_Write@reg_addr 0076                          ___aldiv 0016                  __size_of___lmul 0048  
                        ___lldiv 0DF5          ?_BMP280_readTemperature 0071                          __ptext1 0BF4  
                        __ptext2 0CA5                          __ptext3 00B3                          __ptext4 0E5D  
                        __ptext5 02C5                          __ptext6 0D61                          __ptext7 0DF5  
                        __ptext8 0016                          __ptext9 0F22                 ___aldiv@dividend 0075  
       __size_of_I2C_Master_Init 0038         __size_of_I2C_Master_Read 002E         __size_of_I2C_Master_Wait 000D  
       __size_of_I2C_Master_Stop 0009                  ??_BMP280_Read16 0079                          clrloop0 0BD1  
           end_of_initialization 07FC                  ??_BMP280_Update 0077            BMP280_Read16@reg_addr 007B  
             BMP280_begin@filter 0025        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0071                  ___lldiv@counter 0024                 ___aldiv@quotient 0022  
               I2C_Master_Init@c 0025                 I2C_Master_Read@a 0071   __end_of_BMP280_readTemperature 02C5  
                      _TRISCbits 0087                ?_BMP280_Configure 0077               ??_BMP280_Configure 007B  
         BMP280_Configure@filter 0079                   __end_of___lmul 0DA9              start_initialization 07EB  
              ??_I2C_Master_Init 007A                ??_I2C_Master_Read 0073                ??_I2C_Master_Wait 0071  
              ??_I2C_Master_Stop 0071                         ??___lmul 007A             BMP280_Configure@mode 0020  
                      ___latbits 0002                    __pcstackBANK0 0020                    ?_BMP280_Read8 0071  
               _I2C_Master_Start 0BD8                 _I2C_Master_Write 0BEA                    ?_BMP280_Write 0073  
                  ?_BMP280_begin 0023             BMP280_readPressure@p 0057                BMP280_Write@_data 0073  
                       ?___aldiv 0071                         ?___lldiv 0071      __end_of_BMP280_readPressure 07EB  
                 __size_of_setup 0020                  ___aldiv@divisor 0071                  ___aldiv@counter 0020  
                 ??_BMP280_Read8 0077                        clear_ram0 0BD0                   ??_BMP280_Write 0074  
                 ??_BMP280_begin 0027       _BMP280_readTemperature$940 004F       _BMP280_readTemperature$941 004A  
            I2C_Master_Read@temp 0075                ___lmul@multiplier 0026            __end_of_BMP280_Read16 0DF5  
          __end_of_BMP280_Update 0F22        __size_of_BMP280_Configure 0048                 __size_of___aldiv 009D  
               __size_of___lldiv 0068                  _I2C_Master_Init 0CA5                  _I2C_Master_Read 0C41  
                _I2C_Master_Wait 0009                  _I2C_Master_Stop 0BE1                         __ptext10 0CDD  
                       __ptext11 0DA9                         __ptext12 0C41                         __ptext13 0D19  
                       __ptext14 0C14                         __ptext15 0BEA                         __ptext16 0BE1  
                       __ptext17 0BD8                         __ptext18 0009       BMP280_readTemperature@var1 0042  
     BMP280_readTemperature@var2 0046       BMP280_readTemperature@temp 004E                    __size_of_main 0036  
                       _pressure 00BC             __end_of_BMP280_Read8 0D19         __end_of_I2C_Master_Start 0BE1  
       __end_of_I2C_Master_Write 0BF4             __end_of_BMP280_Write 0C41             __end_of_BMP280_begin 1000  
           BMP280_Read8@reg_addr 0079                 ___lldiv@dividend 0075              BMP280_begin@standby 0026  
       ??_BMP280_readTemperature 0032          __end_of_I2C_Master_Init 0CDD          __end_of_I2C_Master_Read 0C6F  
        __end_of_I2C_Master_Wait 0016          __end_of_I2C_Master_Stop 0BEA                      _temperature 006A  
               ___lldiv@quotient 0020                I2C_Master_Write@d 0071                     ___aldiv@sign 0021  
                    _SSPCON2bits 0091  
