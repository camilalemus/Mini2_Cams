

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 12 18:45:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  001A                     _RCREG	set	26
   465  0019                     _TXREG	set	25
   466  0018                     _RCSTAbits	set	24
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCON	set	20
   469  000C                     _PIR1bits	set	12
   470  0008                     _PORTD	set	8
   471  0006                     _PORTB	set	6
   472  0006                     _PORTBbits	set	6
   473  0005                     _PORTA	set	5
   474  0064                     _TXIF	set	100
   475  0063                     _SSPIF	set	99
   476  005E                     _PEIE	set	94
   477  005F                     _GIE	set	95
   478  009A                     _SPBRGH	set	154
   479  0099                     _SPBRG	set	153
   480  008C                     _PIE1bits	set	140
   481  0098                     _TXSTAbits	set	152
   482  0091                     _SSPCON2bits	set	145
   483  0087                     _TRISCbits	set	135
   484  0094                     _SSPSTAT	set	148
   485  0093                     _SSPADD	set	147
   486  0091                     _SSPCON2	set	145
   487  0085                     _TRISA	set	133
   488  0088                     _TRISD	set	136
   489  0086                     _TRISB	set	134
   490  0463                     _SSPIE	set	1123
   491  043C                     _TRISC4	set	1084
   492  043B                     _TRISC3	set	1083
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:
   499  0800                     stringtab:
   500  0800                     __stringtab:
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:
   513  0806                     STR_2:
   514  0806  342E               	retlw	46	;'.'
   515  0807  3400               	retlw	0
   516  0808                     STR_1:
   517  0808  3453               	retlw	83	;'S'
   518  0809  3400               	retlw	0
   519                           
   520                           	psect	cinit
   521  000F                     start_initialization:	
   522                           ; #config settings
   523                           
   524  000F                     __initialization:
   525                           
   526                           ; Clear objects allocated to BANK0
   527  000F  1383               	bcf	3,7	;select IRP bank0
   528  0010  3064               	movlw	low __pbssBANK0
   529  0011  0084               	movwf	4
   530  0012  306D               	movlw	low (__pbssBANK0+9)
   531  0013  120A  158A  2184  120A  118A  	fcall	clear_ram0
   532                           
   533                           ; Clear objects allocated to BANK1
   534  0018  30A0               	movlw	low __pbssBANK1
   535  0019  0084               	movwf	4
   536  001A  30CC               	movlw	low (__pbssBANK1+44)
   537  001B  120A  158A  2184  120A  118A  	fcall	clear_ram0
   538  0020                     end_of_initialization:	
   539                           ;End of C runtime variable initialization code
   540                           
   541  0020                     __end_of__initialization:
   542  0020  0183               	clrf	3
   543  0021  120A  158A  2BF1   	ljmp	_main	;jump to C main() function
   544                           
   545                           	psect	bssBANK0
   546  0064                     __pbssBANK0:
   547  0064                     _temp:
   548  0064                     	ds	4
   549  0068                     _RX:
   550  0068                     	ds	1
   551  0069                     _centi:
   552  0069                     	ds	1
   553  006A                     _deci:
   554  006A                     	ds	1
   555  006B                     _uni:
   556  006B                     	ds	1
   557  006C                     _dec:
   558  006C                     	ds	1
   559                           
   560                           	psect	bssBANK1
   561  00A0                     __pbssBANK1:
   562  00A0                     _t_fine:
   563  00A0                     	ds	4
   564  00A4                     _adc_P:
   565  00A4                     	ds	4
   566  00A8                     _adc_T:
   567  00A8                     	ds	4
   568  00AC                     _BMP280_calib:
   569  00AC                     	ds	24
   570  00C4                     _pressure:
   571  00C4                     	ds	4
   572  00C8                     _temperature:
   573  00C8                     	ds	4
   574                           
   575                           	psect	clrtext
   576  0984                     clear_ram0:	
   577                           ;	Called with FSR containing the base address, and
   578                           ;	W with the last address+1
   579                           
   580  0984  0064               	clrwdt	;clear the watchdog before getting into this loop
   581  0985                     clrloop0:
   582  0985  0180               	clrf	0	;clear RAM location pointed to by FSR
   583  0986  0A84               	incf	4,f	;increment pointer
   584  0987  0604               	xorwf	4,w	;XOR with final address
   585  0988  1903               	btfsc	3,2	;have we reached the end yet?
   586  0989  3400               	retlw	0	;all done for this memory range, return
   587  098A  0604               	xorwf	4,w	;XOR again to restore value
   588  098B  2985               	goto	clrloop0	;do the next byte
   589                           
   590                           	psect	cstackCOMMON
   591  0070                     __pcstackCOMMON:
   592  0070                     ?_setup:
   593  0070                     ?_Send_Temp:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_Send_String:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_Send_Data:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Receive_Data:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ??_Receive_Data:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_main:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_isr:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ??_isr:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_I2C_Master_Wait:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_I2C_Master_Start:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_I2C_Master_Stop:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_BMP280_Read8:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_BMP280_Update:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_BMP280_readTemperature:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_BMP280_readPressure:	
   636                           ; 2 bytes @ 0x0
   637                           
   638                           
   639                           ; 2 bytes @ 0x0
   640  0070                     	ds	3
   641  0073                     ??_Send_Data:
   642  0073                     ??_I2C_Master_Wait:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0073                     ??_I2C_Master_Start:	
   646                           ; 1 bytes @ 0x3
   647                           
   648  0073                     ??_I2C_Master_Stop:	
   649                           ; 1 bytes @ 0x3
   650                           
   651  0073                     ?_I2C_Master_Write:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     ?_I2C_Master_Read:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ?___wmul:	
   658                           ; 2 bytes @ 0x3
   659                           
   660  0073                     ?___lldiv:	
   661                           ; 2 bytes @ 0x3
   662                           
   663  0073                     ?___aldiv:	
   664                           ; 4 bytes @ 0x3
   665                           
   666  0073                     Send_Data@X:	
   667                           ; 4 bytes @ 0x3
   668                           
   669  0073                     I2C_Master_Write@d:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     I2C_Master_Read@a:	
   673                           ; 2 bytes @ 0x3
   674                           
   675  0073                     ___wmul@multiplier:	
   676                           ; 2 bytes @ 0x3
   677                           
   678  0073                     ___lldiv@divisor:	
   679                           ; 2 bytes @ 0x3
   680                           
   681  0073                     ___aldiv@divisor:	
   682                           ; 4 bytes @ 0x3
   683                           
   684                           
   685                           ; 4 bytes @ 0x3
   686  0073                     	ds	1
   687  0074                     ??_Send_String:
   688                           
   689                           ; 1 bytes @ 0x4
   690  0074                     	ds	1
   691  0075                     ??_I2C_Master_Write:
   692  0075                     ??_I2C_Master_Read:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     ?_BMP280_Write:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     BMP280_Write@_data:	
   699                           ; 1 bytes @ 0x5
   700                           
   701  0075                     Send_String@X:	
   702                           ; 1 bytes @ 0x5
   703                           
   704  0075                     ___wmul@multiplicand:	
   705                           ; 1 bytes @ 0x5
   706                           
   707                           
   708                           ; 2 bytes @ 0x5
   709  0075                     	ds	1
   710  0076                     ??_BMP280_Write:
   711                           
   712                           ; 1 bytes @ 0x6
   713  0076                     	ds	1
   714  0077                     ??___wmul:
   715  0077                     I2C_Master_Read@temp1:	
   716                           ; 1 bytes @ 0x7
   717                           
   718  0077                     ___wmul@product:	
   719                           ; 2 bytes @ 0x7
   720                           
   721  0077                     ___lldiv@dividend:	
   722                           ; 2 bytes @ 0x7
   723                           
   724  0077                     ___aldiv@dividend:	
   725                           ; 4 bytes @ 0x7
   726                           
   727                           
   728                           ; 4 bytes @ 0x7
   729  0077                     	ds	1
   730  0078                     BMP280_Write@reg_addr:
   731                           
   732                           ; 1 bytes @ 0x8
   733  0078                     	ds	1
   734  0079                     ??_BMP280_Read8:
   735  0079                     ?_BMP280_Read16:	
   736                           ; 1 bytes @ 0x9
   737                           
   738                           
   739                           ; 2 bytes @ 0x9
   740  0079                     	ds	2
   741  007B                     ??_setup:
   742                           
   743                           	psect	cstackBANK0
   744  0020                     __pcstackBANK0:	
   745                           ; 1 bytes @ 0xB
   746                           
   747  0020                     ??_BMP280_Read16:
   748  0020                     ?_BMP280_Configure:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     ??_BMP280_Update:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ??___lldiv:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     ??___aldiv:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0020                     BMP280_Read8@reg_addr:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0020                     BMP280_Configure@T_sampling:	
   764                           ; 1 bytes @ 0x0
   765                           
   766                           
   767                           ; 1 bytes @ 0x0
   768  0020                     	ds	1
   769  0021                     BMP280_Read8@ret:
   770  0021                     BMP280_Configure@P_sampling:	
   771                           ; 1 bytes @ 0x1
   772                           
   773  0021                     ___aldiv@counter:	
   774                           ; 1 bytes @ 0x1
   775                           
   776  0021                     ___lldiv@quotient:	
   777                           ; 1 bytes @ 0x1
   778                           
   779                           
   780                           ; 4 bytes @ 0x1
   781  0021                     	ds	1
   782  0022                     BMP280_Read16@reg_addr:
   783  0022                     BMP280_Configure@filter:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0022                     ___aldiv@sign:	
   787                           ; 1 bytes @ 0x2
   788                           
   789                           
   790                           ; 1 bytes @ 0x2
   791  0022                     	ds	1
   792  0023                     BMP280_Configure@standby:
   793  0023                     BMP280_Read16@ret:	
   794                           ; 1 bytes @ 0x3
   795                           
   796  0023                     ___aldiv@quotient:	
   797                           ; 2 bytes @ 0x3
   798                           
   799                           
   800                           ; 4 bytes @ 0x3
   801  0023                     	ds	1
   802  0024                     ??_BMP280_Configure:
   803  0024                     BMP280_Update@ret:	
   804                           ; 1 bytes @ 0x4
   805                           
   806                           
   807                           ; 4 bytes @ 0x4
   808  0024                     	ds	1
   809  0025                     ___lldiv@counter:
   810                           
   811                           ; 1 bytes @ 0x5
   812  0025                     	ds	1
   813  0026                     ??_Send_Temp:
   814  0026                     ?_I2C_Master_Init:	
   815                           ; 1 bytes @ 0x6
   816                           
   817  0026                     I2C_Master_Init@c:	
   818                           ; 1 bytes @ 0x6
   819                           
   820                           
   821                           ; 4 bytes @ 0x6
   822  0026                     	ds	1
   823  0027                     ?___lmul:
   824  0027                     BMP280_Configure@mode:	
   825                           ; 4 bytes @ 0x7
   826                           
   827  0027                     ___lmul@multiplier:	
   828                           ; 1 bytes @ 0x7
   829                           
   830                           
   831                           ; 4 bytes @ 0x7
   832  0027                     	ds	1
   833  0028                     BMP280_Configure@_ctrl_meas:
   834                           
   835                           ; 1 bytes @ 0x8
   836  0028                     	ds	1
   837  0029                     BMP280_Configure@_config:
   838                           
   839                           ; 1 bytes @ 0x9
   840  0029                     	ds	1
   841  002A                     ??_I2C_Master_Init:
   842  002A                     ?_BMP280_begin:	
   843                           ; 1 bytes @ 0xA
   844                           
   845  002A                     BMP280_begin@T_sampling:	
   846                           ; 2 bytes @ 0xA
   847                           
   848                           
   849                           ; 1 bytes @ 0xA
   850  002A                     	ds	1
   851  002B                     BMP280_begin@P_sampling:
   852  002B                     ___lmul@multiplicand:	
   853                           ; 1 bytes @ 0xB
   854                           
   855                           
   856                           ; 4 bytes @ 0xB
   857  002B                     	ds	1
   858  002C                     BMP280_begin@filter:
   859                           
   860                           ; 1 bytes @ 0xC
   861  002C                     	ds	1
   862  002D                     BMP280_begin@standby:
   863                           
   864                           ; 1 bytes @ 0xD
   865  002D                     	ds	1
   866  002E                     ??_BMP280_begin:
   867                           
   868                           ; 1 bytes @ 0xE
   869  002E                     	ds	1
   870  002F                     ??___lmul:
   871                           
   872                           ; 1 bytes @ 0xF
   873  002F                     	ds	1
   874  0030                     ___lmul@product:
   875                           
   876                           ; 4 bytes @ 0x10
   877  0030                     	ds	2
   878  0032                     BMP280_begin@mode:
   879                           
   880                           ; 1 bytes @ 0x12
   881  0032                     	ds	2
   882  0034                     ??_BMP280_readTemperature:
   883  0034                     ??_BMP280_readPressure:	
   884                           ; 1 bytes @ 0x14
   885                           
   886                           
   887                           ; 1 bytes @ 0x14
   888  0034                     	ds	16
   889  0044                     BMP280_readTemperature@var1:
   890  0044                     _BMP280_readPressure$1202:	
   891                           ; 4 bytes @ 0x24
   892                           
   893                           
   894                           ; 4 bytes @ 0x24
   895  0044                     	ds	4
   896  0048                     BMP280_readTemperature@var2:
   897  0048                     _BMP280_readPressure$1203:	
   898                           ; 4 bytes @ 0x28
   899                           
   900                           
   901                           ; 4 bytes @ 0x28
   902  0048                     	ds	4
   903  004C                     _BMP280_readTemperature$1200:
   904  004C                     _BMP280_readPressure$1204:	
   905                           ; 4 bytes @ 0x2C
   906                           
   907                           
   908                           ; 4 bytes @ 0x2C
   909  004C                     	ds	4
   910  0050                     BMP280_readTemperature@temp:
   911  0050                     BMP280_readPressure@pres:	
   912                           ; 1 bytes @ 0x30
   913                           
   914                           
   915                           ; 1 bytes @ 0x30
   916  0050                     	ds	1
   917  0051                     _BMP280_readTemperature$1199:
   918  0051                     _BMP280_readPressure$1201:	
   919                           ; 4 bytes @ 0x31
   920                           
   921                           
   922                           ; 4 bytes @ 0x31
   923  0051                     	ds	4
   924  0055                     BMP280_readPressure@var2:
   925                           
   926                           ; 4 bytes @ 0x35
   927  0055                     	ds	4
   928  0059                     BMP280_readPressure@p:
   929                           
   930                           ; 4 bytes @ 0x39
   931  0059                     	ds	4
   932  005D                     BMP280_readPressure@var1:
   933                           
   934                           ; 4 bytes @ 0x3D
   935  005D                     	ds	4
   936  0061                     ??_main:
   937                           
   938                           ; 1 bytes @ 0x41
   939  0061                     	ds	3
   940                           
   941                           	psect	maintext
   942  0BF1                     __pmaintext:	
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 126 in file "mainm2.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : B00/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          0       3       0       0       0
   965 ;;      Totals:         0       3       0       0       0
   966 ;;Total ram usage:        3 bytes
   967 ;; Hardware stack levels required when called:    7
   968 ;; This function calls:
   969 ;;		_BMP280_begin
   970 ;;		_BMP280_readPressure
   971 ;;		_BMP280_readTemperature
   972 ;;		_Send_Data
   973 ;;		_Send_String
   974 ;;		_Send_Temp
   975 ;;		_setup
   976 ;; This function is called by:
   977 ;;		Startup code after reset
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _main
   983  0BF1                     _main:
   984  0BF1                     l1449:	
   985                           ;incstack = 0
   986                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   987                           
   988                           
   989                           ;mainm2.c: 127:     setup();
   990  0BF1  120A  158A  21D4  120A  158A  	fcall	_setup
   991                           
   992                           ;mainm2.c: 128:     BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, STAN
      +                          DBY_0_5);
   993  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
   994  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
   995  0BF8  01AA               	clrf	BMP280_begin@T_sampling
   996  0BF9  0AAA               	incf	BMP280_begin@T_sampling,f
   997  0BFA  01AB               	clrf	BMP280_begin@P_sampling
   998  0BFB  0AAB               	incf	BMP280_begin@P_sampling,f
   999  0BFC  01AC               	clrf	BMP280_begin@filter
  1000  0BFD  01AD               	clrf	BMP280_begin@standby
  1001  0BFE  3003               	movlw	3
  1002  0BFF  120A  158A  2518  120A  158A  	fcall	_BMP280_begin
  1003  0C04                     l1451:
  1004                           
  1005                           ;mainm2.c: 130:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1006  0C04  3003               	movlw	3
  1007  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0C07  00E3               	movwf	??_main+2
  1010  0C08  3008               	movlw	8
  1011  0C09  00E2               	movwf	??_main+1
  1012  0C0A  3076               	movlw	118
  1013  0C0B  00E1               	movwf	??_main
  1014  0C0C                     u1397:
  1015  0C0C  0BE1               	decfsz	??_main,f
  1016  0C0D  2C0C               	goto	u1397
  1017  0C0E  0BE2               	decfsz	??_main+1,f
  1018  0C0F  2C0C               	goto	u1397
  1019  0C10  0BE3               	decfsz	??_main+2,f
  1020  0C11  2C0C               	goto	u1397
  1021  0C12  0000               	nop
  1022  0C13                     l1453:
  1023                           
  1024                           ;mainm2.c: 131:         PORTA = 0b11111111;
  1025  0C13  30FF               	movlw	255
  1026  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0C16  0085               	movwf	5	;volatile
  1029  0C17                     l1455:
  1030                           
  1031                           ;mainm2.c: 132:         BMP280_readTemperature(&temperature);
  1032  0C17  30C8               	movlw	(low (_temperature| 0))& (0+255)
  1033  0C18  120A  118A  254C  120A  158A  	fcall	_BMP280_readTemperature
  1034  0C1D                     l1457:
  1035                           
  1036                           ;mainm2.c: 133:         BMP280_readPressure(&pressure);
  1037  0C1D  30C4               	movlw	(low (_pressure| 0))& (0+255)
  1038  0C1E  120A  118A  2024  120A  158A  	fcall	_BMP280_readPressure
  1039                           
  1040                           ;mainm2.c: 134:         Send_Temp();
  1041  0C23  120A  158A  26D5  120A  158A  	fcall	_Send_Temp
  1042  0C28                     l1459:
  1043                           
  1044                           ;mainm2.c: 135:         Send_String("S");
  1045  0C28  3003               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1046  0C29  120A  158A  21F0  120A  158A  	fcall	_Send_String
  1047  0C2E                     l1461:
  1048                           
  1049                           ;mainm2.c: 136:         Send_Data(dec);
  1050  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0C30  086C               	movf	_dec,w
  1053  0C31  120A  158A  21B2  120A  158A  	fcall	_Send_Data
  1054  0C36                     l1463:
  1055                           
  1056                           ;mainm2.c: 137:         Send_Data(uni);
  1057  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0C38  086B               	movf	_uni,w
  1060  0C39  120A  158A  21B2  120A  158A  	fcall	_Send_Data
  1061  0C3E                     l1465:
  1062                           
  1063                           ;mainm2.c: 138:         Send_String(".");
  1064  0C3E  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1065  0C3F  120A  158A  21F0  120A  158A  	fcall	_Send_String
  1066                           
  1067                           ;mainm2.c: 139:         Send_Data(deci);
  1068  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0C46  086A               	movf	_deci,w
  1071  0C47  120A  158A  21B2  120A  158A  	fcall	_Send_Data
  1072                           
  1073                           ;mainm2.c: 140:         Send_Data(centi);
  1074  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0C4E  0869               	movf	_centi,w
  1077  0C4F  120A  158A  21B2  120A  158A  	fcall	_Send_Data
  1078                           
  1079                           ;mainm2.c: 142:         switch (RX) {
  1080  0C54  2C60               	goto	l1469
  1081  0C55                     l65:	
  1082                           ;mainm2.c: 143:             case 49:
  1083                           
  1084                           
  1085                           ;mainm2.c: 144:                 PORTBbits.RB7 = 1;
  1086  0C55  1786               	bsf	6,7	;volatile
  1087                           
  1088                           ;mainm2.c: 145:                 break;
  1089  0C56  2C04               	goto	l1451
  1090  0C57                     l67:	
  1091                           ;mainm2.c: 146:             case 48:
  1092                           
  1093                           
  1094                           ;mainm2.c: 147:                 PORTBbits.RB7 = 0;
  1095  0C57  1386               	bcf	6,7	;volatile
  1096                           
  1097                           ;mainm2.c: 148:                 break;
  1098  0C58  2C04               	goto	l1451
  1099  0C59                     l68:	
  1100                           ;mainm2.c: 149:             case 50:
  1101                           
  1102                           
  1103                           ;mainm2.c: 150:                 PORTBbits.RB6 = 0;
  1104  0C59  1306               	bcf	6,6	;volatile
  1105                           
  1106                           ;mainm2.c: 151:                 break;
  1107  0C5A  2C04               	goto	l1451
  1108  0C5B                     l69:	
  1109                           ;mainm2.c: 152:             case 51:
  1110                           
  1111                           
  1112                           ;mainm2.c: 153:                 PORTBbits.RB6 = 1;
  1113  0C5B  1706               	bsf	6,6	;volatile
  1114                           
  1115                           ;mainm2.c: 154:                 break;
  1116  0C5C  2C04               	goto	l1451
  1117  0C5D                     l70:	
  1118                           ;mainm2.c: 155:             default:
  1119                           
  1120                           
  1121                           ;mainm2.c: 156:                 PORTBbits.RB7 = 0;
  1122  0C5D  1386               	bcf	6,7	;volatile
  1123                           
  1124                           ;mainm2.c: 157:                 PORTBbits.RB6 = 0;
  1125  0C5E  1306               	bcf	6,6	;volatile
  1126                           
  1127                           ;mainm2.c: 158:                 break;
  1128  0C5F  2C04               	goto	l1451
  1129  0C60                     l1469:
  1130  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0C62  0868               	movf	_RX,w
  1133  0C63  00E1               	movwf	??_main
  1134  0C64  01E2               	clrf	??_main+1
  1135                           
  1136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 1, Range of values is 0 to 0
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte            4     3 (average)
  1142                           ; direct_byte           11     8 (fixed)
  1143                           ; jumptable            260     6 (fixed)
  1144                           ;	Chosen strategy is simple_byte
  1145  0C65  0862               	movf	??_main+1,w
  1146  0C66  3A00               	xorlw	0	; case 0
  1147  0C67  1903               	skipnz
  1148  0C68  2C6A               	goto	l1517
  1149  0C69  2C5D               	goto	l70
  1150  0C6A                     l1517:
  1151                           
  1152                           ; Switch size 1, requested type "simple"
  1153                           ; Number of cases is 4, Range of values is 48 to 51
  1154                           ; switch strategies available:
  1155                           ; Name         Instructions Cycles
  1156                           ; simple_byte           13     7 (average)
  1157                           ; direct_byte           23    11 (fixed)
  1158                           ; jumptable            263     9 (fixed)
  1159                           ;	Chosen strategy is simple_byte
  1160  0C6A  0861               	movf	??_main,w
  1161  0C6B  3A30               	xorlw	48	; case 48
  1162  0C6C  1903               	skipnz
  1163  0C6D  2C57               	goto	l67
  1164  0C6E  3A01               	xorlw	1	; case 49
  1165  0C6F  1903               	skipnz
  1166  0C70  2C55               	goto	l65
  1167  0C71  3A03               	xorlw	3	; case 50
  1168  0C72  1903               	skipnz
  1169  0C73  2C59               	goto	l68
  1170  0C74  3A01               	xorlw	1	; case 51
  1171  0C75  1903               	skipnz
  1172  0C76  2C5B               	goto	l69
  1173  0C77  2C5D               	goto	l70
  1174  0C78  120A  118A  280C   	ljmp	start
  1175  0C7B                     __end_of_main:
  1176                           
  1177                           	psect	text1
  1178  09D4                     __ptext1:	
  1179 ;; *************** function _setup *****************
  1180 ;; Defined at:
  1181 ;;		line 169 in file "mainm2.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, pclath, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1195 ;;      Params:         0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    4
  1202 ;; This function calls:
  1203 ;;		_I2C_Master_Init
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _setup
  1211  09D4                     _setup:
  1212  09D4                     l1373:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1215                           
  1216                           
  1217                           ;mainm2.c: 170:     ANSEL = 0;
  1218  09D4  1683               	bsf	3,5	;RP0=1, select bank3
  1219  09D5  1703               	bsf	3,6	;RP1=1, select bank3
  1220  09D6  0188               	clrf	8	;volatile
  1221                           
  1222                           ;mainm2.c: 171:     ANSELH = 0;
  1223  09D7  0189               	clrf	9	;volatile
  1224                           
  1225                           ;mainm2.c: 172:     TRISB = 0;
  1226  09D8  1683               	bsf	3,5	;RP0=1, select bank1
  1227  09D9  1303               	bcf	3,6	;RP1=0, select bank1
  1228  09DA  0186               	clrf	6	;volatile
  1229                           
  1230                           ;mainm2.c: 173:     TRISD = 0;
  1231  09DB  0188               	clrf	8	;volatile
  1232                           
  1233                           ;mainm2.c: 174:     TRISA = 0;
  1234  09DC  0185               	clrf	5	;volatile
  1235                           
  1236                           ;mainm2.c: 175:     PORTB = 0;
  1237  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  1238  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  1239  09DF  0186               	clrf	6	;volatile
  1240                           
  1241                           ;mainm2.c: 176:     PORTD = 0;
  1242  09E0  0188               	clrf	8	;volatile
  1243                           
  1244                           ;mainm2.c: 177:     PORTA = 0;
  1245  09E1  0185               	clrf	5	;volatile
  1246  09E2                     l1375:
  1247                           
  1248                           ;mainm2.c: 179:     I2C_Master_Init(100000);
  1249  09E2  3000               	movlw	0
  1250  09E3  00A9               	movwf	I2C_Master_Init@c+3
  1251  09E4  3001               	movlw	1
  1252  09E5  00A8               	movwf	I2C_Master_Init@c+2
  1253  09E6  3086               	movlw	134
  1254  09E7  00A7               	movwf	I2C_Master_Init@c+1
  1255  09E8  30A0               	movlw	160
  1256  09E9  00A6               	movwf	I2C_Master_Init@c
  1257  09EA  120A  158A  228F  120A  158A  	fcall	_I2C_Master_Init
  1258  09EF                     l76:
  1259  09EF  0008               	return
  1260  09F0                     __end_of_setup:
  1261                           
  1262                           	psect	text2
  1263  0A8F                     __ptext2:	
  1264 ;; *************** function _I2C_Master_Init *****************
  1265 ;; Defined at:
  1266 ;;		line 17 in file "I2C.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  c               4    6[BANK0 ] const unsigned long 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       4       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       4       0       0       0
  1283 ;;      Totals:         0       8       0       0       0
  1284 ;;Total ram usage:        8 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    3
  1287 ;; This function calls:
  1288 ;;		___lldiv
  1289 ;; This function is called by:
  1290 ;;		_setup
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _I2C_Master_Init
  1296  0A8F                     _I2C_Master_Init:
  1297  0A8F                     l1245:	
  1298                           ;incstack = 0
  1299                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1300                           
  1301                           
  1302                           ;I2C.c: 18:     SSPCON = 0b00101000;
  1303  0A8F  3028               	movlw	40
  1304  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0A92  0094               	movwf	20	;volatile
  1307  0A93                     l1247:
  1308                           
  1309                           ;I2C.c: 19:     SSPCON2 = 0;
  1310  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0A95  0191               	clrf	17	;volatile
  1313  0A96                     l1249:
  1314                           
  1315                           ;I2C.c: 20:     SSPADD = (8000000 / (4 * c)) - 1;
  1316  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0A98  0826               	movf	I2C_Master_Init@c,w
  1319  0A99  00AA               	movwf	??_I2C_Master_Init
  1320  0A9A  0827               	movf	I2C_Master_Init@c+1,w
  1321  0A9B  00AB               	movwf	??_I2C_Master_Init+1
  1322  0A9C  0828               	movf	I2C_Master_Init@c+2,w
  1323  0A9D  00AC               	movwf	??_I2C_Master_Init+2
  1324  0A9E  0829               	movf	I2C_Master_Init@c+3,w
  1325  0A9F  00AD               	movwf	??_I2C_Master_Init+3
  1326  0AA0  3002               	movlw	2
  1327  0AA1                     u815:
  1328  0AA1  1003               	clrc
  1329  0AA2  0DAA               	rlf	??_I2C_Master_Init,f
  1330  0AA3  0DAB               	rlf	??_I2C_Master_Init+1,f
  1331  0AA4  0DAC               	rlf	??_I2C_Master_Init+2,f
  1332  0AA5  0DAD               	rlf	??_I2C_Master_Init+3,f
  1333  0AA6                     u810:
  1334  0AA6  3EFF               	addlw	-1
  1335  0AA7  1D03               	skipz
  1336  0AA8  2AA1               	goto	u815
  1337  0AA9  082D               	movf	??_I2C_Master_Init+3,w
  1338  0AAA  00F6               	movwf	___lldiv@divisor+3
  1339  0AAB  082C               	movf	??_I2C_Master_Init+2,w
  1340  0AAC  00F5               	movwf	___lldiv@divisor+2
  1341  0AAD  082B               	movf	??_I2C_Master_Init+1,w
  1342  0AAE  00F4               	movwf	___lldiv@divisor+1
  1343  0AAF  082A               	movf	??_I2C_Master_Init,w
  1344  0AB0  00F3               	movwf	___lldiv@divisor
  1345  0AB1  3000               	movlw	0
  1346  0AB2  00FA               	movwf	___lldiv@dividend+3
  1347  0AB3  307A               	movlw	122
  1348  0AB4  00F9               	movwf	___lldiv@dividend+2
  1349  0AB5  3012               	movlw	18
  1350  0AB6  00F8               	movwf	___lldiv@dividend+1
  1351  0AB7  3000               	movlw	0
  1352  0AB8  00F7               	movwf	___lldiv@dividend
  1353  0AB9  120A  118A  2784  120A  158A  	fcall	___lldiv
  1354  0ABE  0873               	movf	?___lldiv,w
  1355  0ABF  3EFF               	addlw	255
  1356  0AC0  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0AC1  1303               	bcf	3,6	;RP1=0, select bank1
  1358  0AC2  0093               	movwf	19	;volatile
  1359  0AC3                     l1251:
  1360                           
  1361                           ;I2C.c: 21:     SSPSTAT = 0;
  1362  0AC3  0194               	clrf	20	;volatile
  1363  0AC4                     l1253:
  1364                           
  1365                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1366  0AC4  1587               	bsf	7,3	;volatile
  1367  0AC5                     l1255:
  1368                           
  1369                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1370  0AC5  1607               	bsf	7,4	;volatile
  1371  0AC6                     l114:
  1372  0AC6  0008               	return
  1373  0AC7                     __end_of_I2C_Master_Init:
  1374                           
  1375                           	psect	text3
  1376  0ED5                     __ptext3:	
  1377 ;; *************** function _Send_Temp *****************
  1378 ;; Defined at:
  1379 ;;		line 186 in file "mainm2.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0
  1395 ;;      Temps:          0      10       0       0       0
  1396 ;;      Totals:         0      10       0       0       0
  1397 ;;Total ram usage:       10 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		___lldiv
  1402 ;;		___wmul
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _Send_Temp
  1410  0ED5                     _Send_Temp:
  1411  0ED5                     l1419:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _Send_Temp: [wreg+status,2+status,0+pclath+cstack]
  1414                           
  1415                           
  1416                           ;mainm2.c: 187:     temp = temperature;
  1417  0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0ED7  084B               	movf	(_temperature+3)^(0+128),w
  1420  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0EDA  00E7               	movwf	_temp+3
  1423  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  1424  0EDC  1303               	bcf	3,6	;RP1=0, select bank1
  1425  0EDD  084A               	movf	(_temperature+2)^(0+128),w
  1426  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0EE0  00E6               	movwf	_temp+2
  1429  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  1431  0EE3  0849               	movf	(_temperature+1)^(0+128),w
  1432  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0EE6  00E5               	movwf	_temp+1
  1435  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0EE9  0848               	movf	_temperature^(0+128),w
  1438  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0EEC  00E4               	movwf	_temp
  1441  0EED                     l1421:
  1442                           
  1443                           ;mainm2.c: 188:     dec = temp /1000;
  1444  0EED  3000               	movlw	0
  1445  0EEE  00F6               	movwf	___lldiv@divisor+3
  1446  0EEF  3000               	movlw	0
  1447  0EF0  00F5               	movwf	___lldiv@divisor+2
  1448  0EF1  3003               	movlw	3
  1449  0EF2  00F4               	movwf	___lldiv@divisor+1
  1450  0EF3  30E8               	movlw	232
  1451  0EF4  00F3               	movwf	___lldiv@divisor
  1452  0EF5  0867               	movf	_temp+3,w
  1453  0EF6  00FA               	movwf	___lldiv@dividend+3
  1454  0EF7  0866               	movf	_temp+2,w
  1455  0EF8  00F9               	movwf	___lldiv@dividend+2
  1456  0EF9  0865               	movf	_temp+1,w
  1457  0EFA  00F8               	movwf	___lldiv@dividend+1
  1458  0EFB  0864               	movf	_temp,w
  1459  0EFC  00F7               	movwf	___lldiv@dividend
  1460  0EFD  120A  118A  2784  120A  158A  	fcall	___lldiv
  1461  0F02  0873               	movf	?___lldiv,w
  1462  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0F05  00A6               	movwf	??_Send_Temp
  1465  0F06  0826               	movf	??_Send_Temp,w
  1466  0F07  00EC               	movwf	_dec
  1467  0F08                     l1423:
  1468                           
  1469                           ;mainm2.c: 189:     temp = temp - (dec*1000);
  1470  0F08  086C               	movf	_dec,w
  1471  0F09  00A6               	movwf	??_Send_Temp
  1472  0F0A  01A7               	clrf	??_Send_Temp+1
  1473  0F0B  0826               	movf	??_Send_Temp,w
  1474  0F0C  00F3               	movwf	___wmul@multiplier
  1475  0F0D  0827               	movf	??_Send_Temp+1,w
  1476  0F0E  00F4               	movwf	___wmul@multiplier+1
  1477  0F0F  30E8               	movlw	232
  1478  0F10  00F5               	movwf	___wmul@multiplicand
  1479  0F11  3003               	movlw	3
  1480  0F12  00F6               	movwf	___wmul@multiplicand+1
  1481  0F13  120A  158A  220F  120A  158A  	fcall	___wmul
  1482  0F18  0873               	movf	?___wmul,w
  1483  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0F1B  00A8               	movwf	??_Send_Temp+2
  1486  0F1C  0874               	movf	?___wmul+1,w
  1487  0F1D  00A9               	movwf	??_Send_Temp+3
  1488  0F1E  3000               	movlw	0
  1489  0F1F  1BA9               	btfsc	??_Send_Temp+3,7
  1490  0F20  30FF               	movlw	255
  1491  0F21  00AA               	movwf	??_Send_Temp+4
  1492  0F22  00AB               	movwf	??_Send_Temp+5
  1493  0F23  0864               	movf	_temp,w
  1494  0F24  00AC               	movwf	??_Send_Temp+6
  1495  0F25  0865               	movf	_temp+1,w
  1496  0F26  00AD               	movwf	??_Send_Temp+7
  1497  0F27  0866               	movf	_temp+2,w
  1498  0F28  00AE               	movwf	??_Send_Temp+8
  1499  0F29  0867               	movf	_temp+3,w
  1500  0F2A  00AF               	movwf	??_Send_Temp+9
  1501  0F2B  0828               	movf	??_Send_Temp+2,w
  1502  0F2C  02AC               	subwf	??_Send_Temp+6,f
  1503  0F2D  0829               	movf	??_Send_Temp+3,w
  1504  0F2E  1C03               	skipc
  1505  0F2F  0F29               	incfsz	??_Send_Temp+3,w
  1506  0F30  2F32               	goto	u1311
  1507  0F31  2F33               	goto	u1312
  1508  0F32                     u1311:
  1509  0F32  02AD               	subwf	??_Send_Temp+7,f
  1510  0F33                     u1312:
  1511  0F33  082A               	movf	??_Send_Temp+4,w
  1512  0F34  1C03               	skipc
  1513  0F35  0F2A               	incfsz	??_Send_Temp+4,w
  1514  0F36  2F38               	goto	u1313
  1515  0F37  2F39               	goto	u1314
  1516  0F38                     u1313:
  1517  0F38  02AE               	subwf	??_Send_Temp+8,f
  1518  0F39                     u1314:
  1519  0F39  082B               	movf	??_Send_Temp+5,w
  1520  0F3A  1C03               	skipc
  1521  0F3B  0F2B               	incfsz	??_Send_Temp+5,w
  1522  0F3C  2F3E               	goto	u1315
  1523  0F3D  2F3F               	goto	u1316
  1524  0F3E                     u1315:
  1525  0F3E  02AF               	subwf	??_Send_Temp+9,f
  1526  0F3F                     u1316:
  1527  0F3F  082F               	movf	??_Send_Temp+9,w
  1528  0F40  00E7               	movwf	_temp+3
  1529  0F41  082E               	movf	??_Send_Temp+8,w
  1530  0F42  00E6               	movwf	_temp+2
  1531  0F43  082D               	movf	??_Send_Temp+7,w
  1532  0F44  00E5               	movwf	_temp+1
  1533  0F45  082C               	movf	??_Send_Temp+6,w
  1534  0F46  00E4               	movwf	_temp
  1535  0F47                     l1425:
  1536                           
  1537                           ;mainm2.c: 190:     uni = temp /100;
  1538  0F47  3000               	movlw	0
  1539  0F48  00F6               	movwf	___lldiv@divisor+3
  1540  0F49  3000               	movlw	0
  1541  0F4A  00F5               	movwf	___lldiv@divisor+2
  1542  0F4B  3000               	movlw	0
  1543  0F4C  00F4               	movwf	___lldiv@divisor+1
  1544  0F4D  3064               	movlw	100
  1545  0F4E  00F3               	movwf	___lldiv@divisor
  1546  0F4F  0867               	movf	_temp+3,w
  1547  0F50  00FA               	movwf	___lldiv@dividend+3
  1548  0F51  0866               	movf	_temp+2,w
  1549  0F52  00F9               	movwf	___lldiv@dividend+2
  1550  0F53  0865               	movf	_temp+1,w
  1551  0F54  00F8               	movwf	___lldiv@dividend+1
  1552  0F55  0864               	movf	_temp,w
  1553  0F56  00F7               	movwf	___lldiv@dividend
  1554  0F57  120A  118A  2784  120A  158A  	fcall	___lldiv
  1555  0F5C  0873               	movf	?___lldiv,w
  1556  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0F5F  00A6               	movwf	??_Send_Temp
  1559  0F60  0826               	movf	??_Send_Temp,w
  1560  0F61  00EB               	movwf	_uni
  1561  0F62                     l1427:
  1562                           
  1563                           ;mainm2.c: 191:     temp = temp - (uni*100);
  1564  0F62  086B               	movf	_uni,w
  1565  0F63  00A6               	movwf	??_Send_Temp
  1566  0F64  01A7               	clrf	??_Send_Temp+1
  1567  0F65  0826               	movf	??_Send_Temp,w
  1568  0F66  00F3               	movwf	___wmul@multiplier
  1569  0F67  0827               	movf	??_Send_Temp+1,w
  1570  0F68  00F4               	movwf	___wmul@multiplier+1
  1571  0F69  3064               	movlw	100
  1572  0F6A  00F5               	movwf	___wmul@multiplicand
  1573  0F6B  3000               	movlw	0
  1574  0F6C  00F6               	movwf	___wmul@multiplicand+1
  1575  0F6D  120A  158A  220F  120A  158A  	fcall	___wmul
  1576  0F72  0873               	movf	?___wmul,w
  1577  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0F75  00A8               	movwf	??_Send_Temp+2
  1580  0F76  0874               	movf	?___wmul+1,w
  1581  0F77  00A9               	movwf	??_Send_Temp+3
  1582  0F78  3000               	movlw	0
  1583  0F79  1BA9               	btfsc	??_Send_Temp+3,7
  1584  0F7A  30FF               	movlw	255
  1585  0F7B  00AA               	movwf	??_Send_Temp+4
  1586  0F7C  00AB               	movwf	??_Send_Temp+5
  1587  0F7D  0864               	movf	_temp,w
  1588  0F7E  00AC               	movwf	??_Send_Temp+6
  1589  0F7F  0865               	movf	_temp+1,w
  1590  0F80  00AD               	movwf	??_Send_Temp+7
  1591  0F81  0866               	movf	_temp+2,w
  1592  0F82  00AE               	movwf	??_Send_Temp+8
  1593  0F83  0867               	movf	_temp+3,w
  1594  0F84  00AF               	movwf	??_Send_Temp+9
  1595  0F85  0828               	movf	??_Send_Temp+2,w
  1596  0F86  02AC               	subwf	??_Send_Temp+6,f
  1597  0F87  0829               	movf	??_Send_Temp+3,w
  1598  0F88  1C03               	skipc
  1599  0F89  0F29               	incfsz	??_Send_Temp+3,w
  1600  0F8A  2F8C               	goto	u1321
  1601  0F8B  2F8D               	goto	u1322
  1602  0F8C                     u1321:
  1603  0F8C  02AD               	subwf	??_Send_Temp+7,f
  1604  0F8D                     u1322:
  1605  0F8D  082A               	movf	??_Send_Temp+4,w
  1606  0F8E  1C03               	skipc
  1607  0F8F  0F2A               	incfsz	??_Send_Temp+4,w
  1608  0F90  2F92               	goto	u1323
  1609  0F91  2F93               	goto	u1324
  1610  0F92                     u1323:
  1611  0F92  02AE               	subwf	??_Send_Temp+8,f
  1612  0F93                     u1324:
  1613  0F93  082B               	movf	??_Send_Temp+5,w
  1614  0F94  1C03               	skipc
  1615  0F95  0F2B               	incfsz	??_Send_Temp+5,w
  1616  0F96  2F98               	goto	u1325
  1617  0F97  2F99               	goto	u1326
  1618  0F98                     u1325:
  1619  0F98  02AF               	subwf	??_Send_Temp+9,f
  1620  0F99                     u1326:
  1621  0F99  082F               	movf	??_Send_Temp+9,w
  1622  0F9A  00E7               	movwf	_temp+3
  1623  0F9B  082E               	movf	??_Send_Temp+8,w
  1624  0F9C  00E6               	movwf	_temp+2
  1625  0F9D  082D               	movf	??_Send_Temp+7,w
  1626  0F9E  00E5               	movwf	_temp+1
  1627  0F9F  082C               	movf	??_Send_Temp+6,w
  1628  0FA0  00E4               	movwf	_temp
  1629  0FA1                     l1429:
  1630                           
  1631                           ;mainm2.c: 192:     deci = temp /10;
  1632  0FA1  3000               	movlw	0
  1633  0FA2  00F6               	movwf	___lldiv@divisor+3
  1634  0FA3  3000               	movlw	0
  1635  0FA4  00F5               	movwf	___lldiv@divisor+2
  1636  0FA5  3000               	movlw	0
  1637  0FA6  00F4               	movwf	___lldiv@divisor+1
  1638  0FA7  300A               	movlw	10
  1639  0FA8  00F3               	movwf	___lldiv@divisor
  1640  0FA9  0867               	movf	_temp+3,w
  1641  0FAA  00FA               	movwf	___lldiv@dividend+3
  1642  0FAB  0866               	movf	_temp+2,w
  1643  0FAC  00F9               	movwf	___lldiv@dividend+2
  1644  0FAD  0865               	movf	_temp+1,w
  1645  0FAE  00F8               	movwf	___lldiv@dividend+1
  1646  0FAF  0864               	movf	_temp,w
  1647  0FB0  00F7               	movwf	___lldiv@dividend
  1648  0FB1  120A  118A  2784  120A  158A  	fcall	___lldiv
  1649  0FB6  0873               	movf	?___lldiv,w
  1650  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  1652  0FB9  00A6               	movwf	??_Send_Temp
  1653  0FBA  0826               	movf	??_Send_Temp,w
  1654  0FBB  00EA               	movwf	_deci
  1655  0FBC                     l1431:
  1656                           
  1657                           ;mainm2.c: 193:     temp = temp - (deci*10);
  1658  0FBC  086A               	movf	_deci,w
  1659  0FBD  00A6               	movwf	??_Send_Temp
  1660  0FBE  01A7               	clrf	??_Send_Temp+1
  1661  0FBF  0826               	movf	??_Send_Temp,w
  1662  0FC0  00F3               	movwf	___wmul@multiplier
  1663  0FC1  0827               	movf	??_Send_Temp+1,w
  1664  0FC2  00F4               	movwf	___wmul@multiplier+1
  1665  0FC3  300A               	movlw	10
  1666  0FC4  00F5               	movwf	___wmul@multiplicand
  1667  0FC5  3000               	movlw	0
  1668  0FC6  00F6               	movwf	___wmul@multiplicand+1
  1669  0FC7  120A  158A  220F  120A  158A  	fcall	___wmul
  1670  0FCC  0873               	movf	?___wmul,w
  1671  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0FCF  00A8               	movwf	??_Send_Temp+2
  1674  0FD0  0874               	movf	?___wmul+1,w
  1675  0FD1  00A9               	movwf	??_Send_Temp+3
  1676  0FD2  3000               	movlw	0
  1677  0FD3  1BA9               	btfsc	??_Send_Temp+3,7
  1678  0FD4  30FF               	movlw	255
  1679  0FD5  00AA               	movwf	??_Send_Temp+4
  1680  0FD6  00AB               	movwf	??_Send_Temp+5
  1681  0FD7  0864               	movf	_temp,w
  1682  0FD8  00AC               	movwf	??_Send_Temp+6
  1683  0FD9  0865               	movf	_temp+1,w
  1684  0FDA  00AD               	movwf	??_Send_Temp+7
  1685  0FDB  0866               	movf	_temp+2,w
  1686  0FDC  00AE               	movwf	??_Send_Temp+8
  1687  0FDD  0867               	movf	_temp+3,w
  1688  0FDE  00AF               	movwf	??_Send_Temp+9
  1689  0FDF  0828               	movf	??_Send_Temp+2,w
  1690  0FE0  02AC               	subwf	??_Send_Temp+6,f
  1691  0FE1  0829               	movf	??_Send_Temp+3,w
  1692  0FE2  1C03               	skipc
  1693  0FE3  0F29               	incfsz	??_Send_Temp+3,w
  1694  0FE4  2FE6               	goto	u1331
  1695  0FE5  2FE7               	goto	u1332
  1696  0FE6                     u1331:
  1697  0FE6  02AD               	subwf	??_Send_Temp+7,f
  1698  0FE7                     u1332:
  1699  0FE7  082A               	movf	??_Send_Temp+4,w
  1700  0FE8  1C03               	skipc
  1701  0FE9  0F2A               	incfsz	??_Send_Temp+4,w
  1702  0FEA  2FEC               	goto	u1333
  1703  0FEB  2FED               	goto	u1334
  1704  0FEC                     u1333:
  1705  0FEC  02AE               	subwf	??_Send_Temp+8,f
  1706  0FED                     u1334:
  1707  0FED  082B               	movf	??_Send_Temp+5,w
  1708  0FEE  1C03               	skipc
  1709  0FEF  0F2B               	incfsz	??_Send_Temp+5,w
  1710  0FF0  2FF2               	goto	u1335
  1711  0FF1  2FF3               	goto	u1336
  1712  0FF2                     u1335:
  1713  0FF2  02AF               	subwf	??_Send_Temp+9,f
  1714  0FF3                     u1336:
  1715  0FF3  082F               	movf	??_Send_Temp+9,w
  1716  0FF4  00E7               	movwf	_temp+3
  1717  0FF5  082E               	movf	??_Send_Temp+8,w
  1718  0FF6  00E6               	movwf	_temp+2
  1719  0FF7  082D               	movf	??_Send_Temp+7,w
  1720  0FF8  00E5               	movwf	_temp+1
  1721  0FF9  082C               	movf	??_Send_Temp+6,w
  1722  0FFA  00E4               	movwf	_temp
  1723                           
  1724                           ;mainm2.c: 194:     centi = temp;
  1725  0FFB  0864               	movf	_temp,w
  1726  0FFC  00A6               	movwf	??_Send_Temp
  1727  0FFD  0826               	movf	??_Send_Temp,w
  1728  0FFE  00E9               	movwf	_centi
  1729  0FFF                     l79:
  1730  0FFF  0008               	return
  1731  1000                     __end_of_Send_Temp:
  1732                           
  1733                           	psect	text4
  1734  0A0F                     __ptext4:	
  1735 ;; *************** function ___wmul *****************
  1736 ;; Defined at:
  1737 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  multiplier      2    3[COMMON] unsigned int 
  1740 ;;  multiplicand    2    5[COMMON] unsigned int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  product         2    7[COMMON] unsigned int 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    3[COMMON] unsigned int 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         4       0       0       0       0
  1753 ;;      Locals:         2       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         6       0       0       0       0
  1756 ;;Total ram usage:        6 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    2
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_Send_Temp
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function ___wmul
  1768  0A0F                     ___wmul:
  1769  0A0F                     l1305:	
  1770                           ;incstack = 0
  1771                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1772                           
  1773  0A0F  01F7               	clrf	___wmul@product
  1774  0A10  01F8               	clrf	___wmul@product+1
  1775  0A11                     l1307:
  1776  0A11  1C73               	btfss	___wmul@multiplier,0
  1777  0A12  2A14               	goto	u881
  1778  0A13  2A15               	goto	u880
  1779  0A14                     u881:
  1780  0A14  2A1B               	goto	l319
  1781  0A15                     u880:
  1782  0A15                     l1309:
  1783  0A15  0875               	movf	___wmul@multiplicand,w
  1784  0A16  07F7               	addwf	___wmul@product,f
  1785  0A17  1803               	skipnc
  1786  0A18  0AF8               	incf	___wmul@product+1,f
  1787  0A19  0876               	movf	___wmul@multiplicand+1,w
  1788  0A1A  07F8               	addwf	___wmul@product+1,f
  1789  0A1B                     l319:
  1790  0A1B  3001               	movlw	1
  1791  0A1C                     u895:
  1792  0A1C  1003               	clrc
  1793  0A1D  0DF5               	rlf	___wmul@multiplicand,f
  1794  0A1E  0DF6               	rlf	___wmul@multiplicand+1,f
  1795  0A1F  3EFF               	addlw	-1
  1796  0A20  1D03               	skipz
  1797  0A21  2A1C               	goto	u895
  1798  0A22                     l1311:
  1799  0A22  3001               	movlw	1
  1800  0A23                     u905:
  1801  0A23  1003               	clrc
  1802  0A24  0CF4               	rrf	___wmul@multiplier+1,f
  1803  0A25  0CF3               	rrf	___wmul@multiplier,f
  1804  0A26  3EFF               	addlw	-1
  1805  0A27  1D03               	skipz
  1806  0A28  2A23               	goto	u905
  1807  0A29                     l1313:
  1808  0A29  0873               	movf	___wmul@multiplier,w
  1809  0A2A  0474               	iorwf	___wmul@multiplier+1,w
  1810  0A2B  1D03               	btfss	3,2
  1811  0A2C  2A2E               	goto	u911
  1812  0A2D  2A2F               	goto	u910
  1813  0A2E                     u911:
  1814  0A2E  2A11               	goto	l1307
  1815  0A2F                     u910:
  1816  0A2F                     l1315:
  1817  0A2F  0878               	movf	___wmul@product+1,w
  1818  0A30  00F4               	movwf	?___wmul+1
  1819  0A31  0877               	movf	___wmul@product,w
  1820  0A32  00F3               	movwf	?___wmul
  1821  0A33                     l321:
  1822  0A33  0008               	return
  1823  0A34                     __end_of___wmul:
  1824                           
  1825                           	psect	text5
  1826  09F0                     __ptext5:	
  1827 ;; *************** function _Send_String *****************
  1828 ;; Defined at:
  1829 ;;		line 23 in file "UART.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  X               1    wreg     PTR unsigned char 
  1832 ;;		 -> STR_2(2), STR_1(2), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  X               1    5[COMMON] PTR unsigned char 
  1835 ;;		 -> STR_2(2), STR_1(2), 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         0       0       0       0       0
  1846 ;;      Locals:         1       0       0       0       0
  1847 ;;      Temps:          1       0       0       0       0
  1848 ;;      Totals:         2       0       0       0       0
  1849 ;;Total ram usage:        2 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    3
  1852 ;; This function calls:
  1853 ;;		_Send_Data
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function _Send_String
  1861  09F0                     _Send_String:
  1862                           
  1863                           ;incstack = 0
  1864                           ; Regs used in _Send_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1865                           ;Send_String@X stored from wreg
  1866  09F0  00F5               	movwf	Send_String@X
  1867  09F1                     l1433:
  1868                           
  1869                           ;UART.c: 24:     while (*X)
  1870  09F1  2A02               	goto	l1439
  1871  09F2                     l1435:
  1872                           
  1873                           ;UART.c: 25:         Send_Data(*X++);
  1874  09F2  0875               	movf	Send_String@X,w
  1875  09F3  0084               	movwf	4
  1876  09F4  120A  158A  2000  120A  158A  	fcall	stringdir
  1877  09F9  120A  158A  21B2  120A  158A  	fcall	_Send_Data
  1878  09FE                     l1437:
  1879  09FE  3001               	movlw	1
  1880  09FF  00F4               	movwf	??_Send_String
  1881  0A00  0874               	movf	??_Send_String,w
  1882  0A01  07F5               	addwf	Send_String@X,f
  1883  0A02                     l1439:
  1884                           
  1885                           ;UART.c: 24:     while (*X)
  1886  0A02  0875               	movf	Send_String@X,w
  1887  0A03  0084               	movwf	4
  1888  0A04  120A  158A  2000  120A  158A  	fcall	stringdir
  1889  0A09  3A00               	xorlw	0
  1890  0A0A  1D03               	skipz
  1891  0A0B  2A0D               	goto	u1341
  1892  0A0C  2A0E               	goto	u1340
  1893  0A0D                     u1341:
  1894  0A0D  29F2               	goto	l1435
  1895  0A0E                     u1340:
  1896  0A0E                     l229:
  1897  0A0E  0008               	return
  1898  0A0F                     __end_of_Send_String:
  1899                           
  1900                           	psect	text6
  1901  09B2                     __ptext6:	
  1902 ;; *************** function _Send_Data *****************
  1903 ;; Defined at:
  1904 ;;		line 18 in file "UART.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  X               1    wreg     unsigned char 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  X               1    3[COMMON] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       0       0       0       0
  1919 ;;      Locals:         1       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0
  1921 ;;      Totals:         1       0       0       0       0
  1922 ;;Total ram usage:        1 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    2
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;;		_Send_String
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _Send_Data
  1935  09B2                     _Send_Data:
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _Send_Data: [wreg]
  1939                           ;Send_Data@X stored from wreg
  1940  09B2  00F3               	movwf	Send_Data@X
  1941  09B3                     l1241:
  1942  09B3                     l220:	
  1943                           ;UART.c: 19:     while (!TXIF);
  1944                           
  1945  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  1946  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  1947  09B5  1E0C               	btfss	12,4	;volatile
  1948  09B6  29B8               	goto	u801
  1949  09B7  29B9               	goto	u800
  1950  09B8                     u801:
  1951  09B8  29B3               	goto	l220
  1952  09B9                     u800:
  1953  09B9                     l1243:
  1954                           
  1955                           ;UART.c: 20:     TXREG = X;
  1956  09B9  0873               	movf	Send_Data@X,w
  1957  09BA  0099               	movwf	25	;volatile
  1958  09BB                     l223:
  1959  09BB  0008               	return
  1960  09BC                     __end_of_Send_Data:
  1961                           
  1962                           	psect	text7
  1963  054C                     __ptext7:	
  1964 ;; *************** function _BMP280_readTemperature *****************
  1965 ;; Defined at:
  1966 ;;		line 242 in file "BMP280.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  temp            1    wreg     PTR long 
  1969 ;;		 -> temperature(4), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  temp            1   48[BANK0 ] PTR long 
  1972 ;;		 -> temperature(4), 
  1973 ;;  var2            4   40[BANK0 ] long 
  1974 ;;  var1            4   36[BANK0 ] long 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2   10[None  ] int 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       0       0       0       0
  1985 ;;      Locals:         0      17       0       0       0
  1986 ;;      Temps:          0      16       0       0       0
  1987 ;;      Totals:         0      33       0       0       0
  1988 ;;Total ram usage:       33 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    5
  1991 ;; This function calls:
  1992 ;;		_BMP280_Update
  1993 ;;		___aldiv
  1994 ;;		___lmul
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _BMP280_readTemperature
  2002  054C                     _BMP280_readTemperature:
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2006                           ;BMP280_readTemperature@temp stored from wreg
  2007  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2008  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2009  054E  00D0               	movwf	BMP280_readTemperature@temp
  2010  054F                     l1393:
  2011                           
  2012                           ;BMP280.c: 242: int BMP280_readTemperature(int32_t *temp);BMP280.c: 243: {;BMP280.c: 244
      +                          :   int32_t var1, var2;;BMP280.c: 246:   BMP280_Update();
  2013  054F  120A  158A  25F6  120A  118A  	fcall	_BMP280_Update
  2014                           
  2015                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  2016  0554  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0555  1303               	bcf	3,6	;RP1=0, select bank1
  2018  0556  082C               	movf	_BMP280_calib^(0+128),w
  2019  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0559  00B4               	movwf	??_BMP280_readTemperature
  2022  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2023  055B  1303               	bcf	3,6	;RP1=0, select bank1
  2024  055C  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2025  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2026  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2027  055F  00B5               	movwf	??_BMP280_readTemperature+1
  2028  0560  01B6               	clrf	??_BMP280_readTemperature+2
  2029  0561  01B7               	clrf	??_BMP280_readTemperature+3
  2030  0562  3001               	movlw	1
  2031  0563                     u1095:
  2032  0563  1003               	clrc
  2033  0564  0DB4               	rlf	??_BMP280_readTemperature,f
  2034  0565  0DB5               	rlf	??_BMP280_readTemperature+1,f
  2035  0566  0DB6               	rlf	??_BMP280_readTemperature+2,f
  2036  0567  0DB7               	rlf	??_BMP280_readTemperature+3,f
  2037  0568                     u1090:
  2038  0568  3EFF               	addlw	-1
  2039  0569  1D03               	skipz
  2040  056A  2D63               	goto	u1095
  2041  056B  3000               	movlw	0
  2042  056C  00F6               	movwf	___aldiv@divisor+3
  2043  056D  3000               	movlw	0
  2044  056E  00F5               	movwf	___aldiv@divisor+2
  2045  056F  3000               	movlw	0
  2046  0570  00F4               	movwf	___aldiv@divisor+1
  2047  0571  3008               	movlw	8
  2048  0572  00F3               	movwf	___aldiv@divisor
  2049  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2051  0575  082B               	movf	(_adc_T+3)^(0+128),w
  2052  0576  00FA               	movwf	___aldiv@dividend+3
  2053  0577  082A               	movf	(_adc_T+2)^(0+128),w
  2054  0578  00F9               	movwf	___aldiv@dividend+2
  2055  0579  0829               	movf	(_adc_T+1)^(0+128),w
  2056  057A  00F8               	movwf	___aldiv@dividend+1
  2057  057B  0828               	movf	_adc_T^(0+128),w
  2058  057C  00F7               	movwf	___aldiv@dividend
  2059  057D  120A  158A  247B  120A  118A  	fcall	___aldiv
  2060  0582  0873               	movf	?___aldiv,w
  2061  0583  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0584  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0585  00B8               	movwf	??_BMP280_readTemperature+4
  2064  0586  0874               	movf	?___aldiv+1,w
  2065  0587  00B9               	movwf	??_BMP280_readTemperature+5
  2066  0588  0875               	movf	?___aldiv+2,w
  2067  0589  00BA               	movwf	??_BMP280_readTemperature+6
  2068  058A  0876               	movf	?___aldiv+3,w
  2069  058B  00BB               	movwf	??_BMP280_readTemperature+7
  2070  058C  0834               	movf	??_BMP280_readTemperature,w
  2071  058D  02B8               	subwf	??_BMP280_readTemperature+4,f
  2072  058E  0835               	movf	??_BMP280_readTemperature+1,w
  2073  058F  1C03               	skipc
  2074  0590  0F35               	incfsz	??_BMP280_readTemperature+1,w
  2075  0591  2D93               	goto	u1101
  2076  0592  2D94               	goto	u1102
  2077  0593                     u1101:
  2078  0593  02B9               	subwf	??_BMP280_readTemperature+5,f
  2079  0594                     u1102:
  2080  0594  0836               	movf	??_BMP280_readTemperature+2,w
  2081  0595  1C03               	skipc
  2082  0596  0F36               	incfsz	??_BMP280_readTemperature+2,w
  2083  0597  2D99               	goto	u1103
  2084  0598  2D9A               	goto	u1104
  2085  0599                     u1103:
  2086  0599  02BA               	subwf	??_BMP280_readTemperature+6,f
  2087  059A                     u1104:
  2088  059A  0837               	movf	??_BMP280_readTemperature+3,w
  2089  059B  1C03               	skipc
  2090  059C  0F37               	incfsz	??_BMP280_readTemperature+3,w
  2091  059D  2D9F               	goto	u1105
  2092  059E  2DA0               	goto	u1106
  2093  059F                     u1105:
  2094  059F  02BB               	subwf	??_BMP280_readTemperature+7,f
  2095  05A0                     u1106:
  2096  05A0  083B               	movf	??_BMP280_readTemperature+7,w
  2097  05A1  00AA               	movwf	___lmul@multiplier+3
  2098  05A2  083A               	movf	??_BMP280_readTemperature+6,w
  2099  05A3  00A9               	movwf	___lmul@multiplier+2
  2100  05A4  0839               	movf	??_BMP280_readTemperature+5,w
  2101  05A5  00A8               	movwf	___lmul@multiplier+1
  2102  05A6  0838               	movf	??_BMP280_readTemperature+4,w
  2103  05A7  00A7               	movwf	___lmul@multiplier
  2104  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2105  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  2106  05AA  082E               	movf	(_BMP280_calib^(0+128)+2),w
  2107  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2108  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2109  05AD  00AB               	movwf	___lmul@multiplicand
  2110  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2111  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2112  05B0  082F               	movf	((_BMP280_calib+1)^(0+128)+2),w
  2113  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2114  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2115  05B3  00AC               	movwf	___lmul@multiplicand+1
  2116  05B4  3000               	movlw	0
  2117  05B5  1BAC               	btfsc	___lmul@multiplicand+1,7
  2118  05B6  30FF               	movlw	255
  2119  05B7  00AD               	movwf	___lmul@multiplicand+2
  2120  05B8  00AE               	movwf	___lmul@multiplicand+3
  2121  05B9  120A  158A  2353  120A  118A  	fcall	___lmul
  2122  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2123  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2124  05C0  082A               	movf	?___lmul+3,w
  2125  05C1  00D4               	movwf	_BMP280_readTemperature$1199+3
  2126  05C2  0829               	movf	?___lmul+2,w
  2127  05C3  00D3               	movwf	_BMP280_readTemperature$1199+2
  2128  05C4  0828               	movf	?___lmul+1,w
  2129  05C5  00D2               	movwf	_BMP280_readTemperature$1199+1
  2130  05C6  0827               	movf	?___lmul,w
  2131  05C7  00D1               	movwf	_BMP280_readTemperature$1199
  2132                           
  2133                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  2134  05C8  3000               	movlw	0
  2135  05C9  00F6               	movwf	___aldiv@divisor+3
  2136  05CA  3000               	movlw	0
  2137  05CB  00F5               	movwf	___aldiv@divisor+2
  2138  05CC  3008               	movlw	8
  2139  05CD  00F4               	movwf	___aldiv@divisor+1
  2140  05CE  3000               	movlw	0
  2141  05CF  00F3               	movwf	___aldiv@divisor
  2142  05D0  0854               	movf	_BMP280_readTemperature$1199+3,w
  2143  05D1  00FA               	movwf	___aldiv@dividend+3
  2144  05D2  0853               	movf	_BMP280_readTemperature$1199+2,w
  2145  05D3  00F9               	movwf	___aldiv@dividend+2
  2146  05D4  0852               	movf	_BMP280_readTemperature$1199+1,w
  2147  05D5  00F8               	movwf	___aldiv@dividend+1
  2148  05D6  0851               	movf	_BMP280_readTemperature$1199,w
  2149  05D7  00F7               	movwf	___aldiv@dividend
  2150  05D8  120A  158A  247B  120A  118A  	fcall	___aldiv
  2151  05DD  0876               	movf	?___aldiv+3,w
  2152  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  2153  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  2154  05E0  00C7               	movwf	BMP280_readTemperature@var1+3
  2155  05E1  0875               	movf	?___aldiv+2,w
  2156  05E2  00C6               	movwf	BMP280_readTemperature@var1+2
  2157  05E3  0874               	movf	?___aldiv+1,w
  2158  05E4  00C5               	movwf	BMP280_readTemperature@var1+1
  2159  05E5  0873               	movf	?___aldiv,w
  2160  05E6  00C4               	movwf	BMP280_readTemperature@var1
  2161                           
  2162                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2163  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  2164  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  2165  05E9  082C               	movf	_BMP280_calib^(0+128),w
  2166  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  2167  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  2168  05EC  00B4               	movwf	??_BMP280_readTemperature
  2169  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  2170  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  2171  05EF  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2172  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  2173  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  2174  05F2  00B5               	movwf	??_BMP280_readTemperature+1
  2175  05F3  01B6               	clrf	??_BMP280_readTemperature+2
  2176  05F4  01B7               	clrf	??_BMP280_readTemperature+3
  2177  05F5  3000               	movlw	0
  2178  05F6  00F6               	movwf	___aldiv@divisor+3
  2179  05F7  3000               	movlw	0
  2180  05F8  00F5               	movwf	___aldiv@divisor+2
  2181  05F9  3000               	movlw	0
  2182  05FA  00F4               	movwf	___aldiv@divisor+1
  2183  05FB  3010               	movlw	16
  2184  05FC  00F3               	movwf	___aldiv@divisor
  2185  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  2186  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  2187  05FF  082B               	movf	(_adc_T+3)^(0+128),w
  2188  0600  00FA               	movwf	___aldiv@dividend+3
  2189  0601  082A               	movf	(_adc_T+2)^(0+128),w
  2190  0602  00F9               	movwf	___aldiv@dividend+2
  2191  0603  0829               	movf	(_adc_T+1)^(0+128),w
  2192  0604  00F8               	movwf	___aldiv@dividend+1
  2193  0605  0828               	movf	_adc_T^(0+128),w
  2194  0606  00F7               	movwf	___aldiv@dividend
  2195  0607  120A  158A  247B  120A  118A  	fcall	___aldiv
  2196  060C  0873               	movf	?___aldiv,w
  2197  060D  1283               	bcf	3,5	;RP0=0, select bank0
  2198  060E  1303               	bcf	3,6	;RP1=0, select bank0
  2199  060F  00B8               	movwf	??_BMP280_readTemperature+4
  2200  0610  0874               	movf	?___aldiv+1,w
  2201  0611  00B9               	movwf	??_BMP280_readTemperature+5
  2202  0612  0875               	movf	?___aldiv+2,w
  2203  0613  00BA               	movwf	??_BMP280_readTemperature+6
  2204  0614  0876               	movf	?___aldiv+3,w
  2205  0615  00BB               	movwf	??_BMP280_readTemperature+7
  2206  0616  0834               	movf	??_BMP280_readTemperature,w
  2207  0617  02B8               	subwf	??_BMP280_readTemperature+4,f
  2208  0618  0835               	movf	??_BMP280_readTemperature+1,w
  2209  0619  1C03               	skipc
  2210  061A  0F35               	incfsz	??_BMP280_readTemperature+1,w
  2211  061B  2E1D               	goto	u1111
  2212  061C  2E1E               	goto	u1112
  2213  061D                     u1111:
  2214  061D  02B9               	subwf	??_BMP280_readTemperature+5,f
  2215  061E                     u1112:
  2216  061E  0836               	movf	??_BMP280_readTemperature+2,w
  2217  061F  1C03               	skipc
  2218  0620  0F36               	incfsz	??_BMP280_readTemperature+2,w
  2219  0621  2E23               	goto	u1113
  2220  0622  2E24               	goto	u1114
  2221  0623                     u1113:
  2222  0623  02BA               	subwf	??_BMP280_readTemperature+6,f
  2223  0624                     u1114:
  2224  0624  0837               	movf	??_BMP280_readTemperature+3,w
  2225  0625  1C03               	skipc
  2226  0626  0F37               	incfsz	??_BMP280_readTemperature+3,w
  2227  0627  2E29               	goto	u1115
  2228  0628  2E2A               	goto	u1116
  2229  0629                     u1115:
  2230  0629  02BB               	subwf	??_BMP280_readTemperature+7,f
  2231  062A                     u1116:
  2232  062A  083B               	movf	??_BMP280_readTemperature+7,w
  2233  062B  00AA               	movwf	___lmul@multiplier+3
  2234  062C  083A               	movf	??_BMP280_readTemperature+6,w
  2235  062D  00A9               	movwf	___lmul@multiplier+2
  2236  062E  0839               	movf	??_BMP280_readTemperature+5,w
  2237  062F  00A8               	movwf	___lmul@multiplier+1
  2238  0630  0838               	movf	??_BMP280_readTemperature+4,w
  2239  0631  00A7               	movwf	___lmul@multiplier
  2240  0632  1683               	bsf	3,5	;RP0=1, select bank1
  2241  0633  1303               	bcf	3,6	;RP1=0, select bank1
  2242  0634  082C               	movf	_BMP280_calib^(0+128),w
  2243  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0637  00BC               	movwf	??_BMP280_readTemperature+8
  2246  0638  1683               	bsf	3,5	;RP0=1, select bank1
  2247  0639  1303               	bcf	3,6	;RP1=0, select bank1
  2248  063A  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2249  063B  1283               	bcf	3,5	;RP0=0, select bank0
  2250  063C  1303               	bcf	3,6	;RP1=0, select bank0
  2251  063D  00BD               	movwf	??_BMP280_readTemperature+9
  2252  063E  01BE               	clrf	??_BMP280_readTemperature+10
  2253  063F  01BF               	clrf	??_BMP280_readTemperature+11
  2254  0640  3000               	movlw	0
  2255  0641  00F6               	movwf	___aldiv@divisor+3
  2256  0642  3000               	movlw	0
  2257  0643  00F5               	movwf	___aldiv@divisor+2
  2258  0644  3000               	movlw	0
  2259  0645  00F4               	movwf	___aldiv@divisor+1
  2260  0646  3010               	movlw	16
  2261  0647  00F3               	movwf	___aldiv@divisor
  2262  0648  1683               	bsf	3,5	;RP0=1, select bank1
  2263  0649  1303               	bcf	3,6	;RP1=0, select bank1
  2264  064A  082B               	movf	(_adc_T+3)^(0+128),w
  2265  064B  00FA               	movwf	___aldiv@dividend+3
  2266  064C  082A               	movf	(_adc_T+2)^(0+128),w
  2267  064D  00F9               	movwf	___aldiv@dividend+2
  2268  064E  0829               	movf	(_adc_T+1)^(0+128),w
  2269  064F  00F8               	movwf	___aldiv@dividend+1
  2270  0650  0828               	movf	_adc_T^(0+128),w
  2271  0651  00F7               	movwf	___aldiv@dividend
  2272  0652  120A  158A  247B  120A  118A  	fcall	___aldiv
  2273  0657  0873               	movf	?___aldiv,w
  2274  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2276  065A  00C0               	movwf	??_BMP280_readTemperature+12
  2277  065B  0874               	movf	?___aldiv+1,w
  2278  065C  00C1               	movwf	??_BMP280_readTemperature+13
  2279  065D  0875               	movf	?___aldiv+2,w
  2280  065E  00C2               	movwf	??_BMP280_readTemperature+14
  2281  065F  0876               	movf	?___aldiv+3,w
  2282  0660  00C3               	movwf	??_BMP280_readTemperature+15
  2283  0661  083C               	movf	??_BMP280_readTemperature+8,w
  2284  0662  02C0               	subwf	??_BMP280_readTemperature+12,f
  2285  0663  083D               	movf	??_BMP280_readTemperature+9,w
  2286  0664  1C03               	skipc
  2287  0665  0F3D               	incfsz	??_BMP280_readTemperature+9,w
  2288  0666  2E68               	goto	u1121
  2289  0667  2E69               	goto	u1122
  2290  0668                     u1121:
  2291  0668  02C1               	subwf	??_BMP280_readTemperature+13,f
  2292  0669                     u1122:
  2293  0669  083E               	movf	??_BMP280_readTemperature+10,w
  2294  066A  1C03               	skipc
  2295  066B  0F3E               	incfsz	??_BMP280_readTemperature+10,w
  2296  066C  2E6E               	goto	u1123
  2297  066D  2E6F               	goto	u1124
  2298  066E                     u1123:
  2299  066E  02C2               	subwf	??_BMP280_readTemperature+14,f
  2300  066F                     u1124:
  2301  066F  083F               	movf	??_BMP280_readTemperature+11,w
  2302  0670  1C03               	skipc
  2303  0671  0F3F               	incfsz	??_BMP280_readTemperature+11,w
  2304  0672  2E74               	goto	u1125
  2305  0673  2E75               	goto	u1126
  2306  0674                     u1125:
  2307  0674  02C3               	subwf	??_BMP280_readTemperature+15,f
  2308  0675                     u1126:
  2309  0675  0843               	movf	??_BMP280_readTemperature+15,w
  2310  0676  00AE               	movwf	___lmul@multiplicand+3
  2311  0677  0842               	movf	??_BMP280_readTemperature+14,w
  2312  0678  00AD               	movwf	___lmul@multiplicand+2
  2313  0679  0841               	movf	??_BMP280_readTemperature+13,w
  2314  067A  00AC               	movwf	___lmul@multiplicand+1
  2315  067B  0840               	movf	??_BMP280_readTemperature+12,w
  2316  067C  00AB               	movwf	___lmul@multiplicand
  2317  067D  120A  158A  2353  120A  118A  	fcall	___lmul
  2318  0682  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0683  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0684  082A               	movf	?___lmul+3,w
  2321  0685  00D4               	movwf	_BMP280_readTemperature$1199+3
  2322  0686  0829               	movf	?___lmul+2,w
  2323  0687  00D3               	movwf	_BMP280_readTemperature$1199+2
  2324  0688  0828               	movf	?___lmul+1,w
  2325  0689  00D2               	movwf	_BMP280_readTemperature$1199+1
  2326  068A  0827               	movf	?___lmul,w
  2327  068B  00D1               	movwf	_BMP280_readTemperature$1199
  2328                           
  2329                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2330  068C  3000               	movlw	0
  2331  068D  00F6               	movwf	___aldiv@divisor+3
  2332  068E  3000               	movlw	0
  2333  068F  00F5               	movwf	___aldiv@divisor+2
  2334  0690  3010               	movlw	16
  2335  0691  00F4               	movwf	___aldiv@divisor+1
  2336  0692  3000               	movlw	0
  2337  0693  00F3               	movwf	___aldiv@divisor
  2338  0694  0854               	movf	_BMP280_readTemperature$1199+3,w
  2339  0695  00FA               	movwf	___aldiv@dividend+3
  2340  0696  0853               	movf	_BMP280_readTemperature$1199+2,w
  2341  0697  00F9               	movwf	___aldiv@dividend+2
  2342  0698  0852               	movf	_BMP280_readTemperature$1199+1,w
  2343  0699  00F8               	movwf	___aldiv@dividend+1
  2344  069A  0851               	movf	_BMP280_readTemperature$1199,w
  2345  069B  00F7               	movwf	___aldiv@dividend
  2346  069C  120A  158A  247B  120A  118A  	fcall	___aldiv
  2347  06A1  0876               	movf	?___aldiv+3,w
  2348  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2349  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2350  06A4  00AA               	movwf	___lmul@multiplier+3
  2351  06A5  0875               	movf	?___aldiv+2,w
  2352  06A6  00A9               	movwf	___lmul@multiplier+2
  2353  06A7  0874               	movf	?___aldiv+1,w
  2354  06A8  00A8               	movwf	___lmul@multiplier+1
  2355  06A9  0873               	movf	?___aldiv,w
  2356  06AA  00A7               	movwf	___lmul@multiplier
  2357  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  2358  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  2359  06AD  0830               	movf	(_BMP280_calib^(0+128)+4),w
  2360  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2361  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2362  06B0  00AB               	movwf	___lmul@multiplicand
  2363  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  2364  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  2365  06B3  0831               	movf	((_BMP280_calib+1)^(0+128)+4),w
  2366  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2367  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2368  06B6  00AC               	movwf	___lmul@multiplicand+1
  2369  06B7  3000               	movlw	0
  2370  06B8  1BAC               	btfsc	___lmul@multiplicand+1,7
  2371  06B9  30FF               	movlw	255
  2372  06BA  00AD               	movwf	___lmul@multiplicand+2
  2373  06BB  00AE               	movwf	___lmul@multiplicand+3
  2374  06BC  120A  158A  2353  120A  118A  	fcall	___lmul
  2375  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2376  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2377  06C3  082A               	movf	?___lmul+3,w
  2378  06C4  00CF               	movwf	_BMP280_readTemperature$1200+3
  2379  06C5  0829               	movf	?___lmul+2,w
  2380  06C6  00CE               	movwf	_BMP280_readTemperature$1200+2
  2381  06C7  0828               	movf	?___lmul+1,w
  2382  06C8  00CD               	movwf	_BMP280_readTemperature$1200+1
  2383  06C9  0827               	movf	?___lmul,w
  2384  06CA  00CC               	movwf	_BMP280_readTemperature$1200
  2385                           
  2386                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2387  06CB  3000               	movlw	0
  2388  06CC  00F6               	movwf	___aldiv@divisor+3
  2389  06CD  3000               	movlw	0
  2390  06CE  00F5               	movwf	___aldiv@divisor+2
  2391  06CF  3040               	movlw	64
  2392  06D0  00F4               	movwf	___aldiv@divisor+1
  2393  06D1  3000               	movlw	0
  2394  06D2  00F3               	movwf	___aldiv@divisor
  2395  06D3  084F               	movf	_BMP280_readTemperature$1200+3,w
  2396  06D4  00FA               	movwf	___aldiv@dividend+3
  2397  06D5  084E               	movf	_BMP280_readTemperature$1200+2,w
  2398  06D6  00F9               	movwf	___aldiv@dividend+2
  2399  06D7  084D               	movf	_BMP280_readTemperature$1200+1,w
  2400  06D8  00F8               	movwf	___aldiv@dividend+1
  2401  06D9  084C               	movf	_BMP280_readTemperature$1200,w
  2402  06DA  00F7               	movwf	___aldiv@dividend
  2403  06DB  120A  158A  247B  120A  118A  	fcall	___aldiv
  2404  06E0  0876               	movf	?___aldiv+3,w
  2405  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2406  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2407  06E3  00CB               	movwf	BMP280_readTemperature@var2+3
  2408  06E4  0875               	movf	?___aldiv+2,w
  2409  06E5  00CA               	movwf	BMP280_readTemperature@var2+2
  2410  06E6  0874               	movf	?___aldiv+1,w
  2411  06E7  00C9               	movwf	BMP280_readTemperature@var2+1
  2412  06E8  0873               	movf	?___aldiv,w
  2413  06E9  00C8               	movwf	BMP280_readTemperature@var2
  2414  06EA                     l1395:
  2415                           
  2416                           ;BMP280.c: 256:   t_fine = var1 + var2;
  2417  06EA  0844               	movf	BMP280_readTemperature@var1,w
  2418  06EB  0748               	addwf	BMP280_readTemperature@var2,w
  2419  06EC  00B4               	movwf	??_BMP280_readTemperature
  2420  06ED  3000               	movlw	0
  2421  06EE  1803               	skipnc
  2422  06EF  3001               	movlw	1
  2423  06F0  0745               	addwf	BMP280_readTemperature@var1+1,w
  2424  06F1  01B6               	clrf	??_BMP280_readTemperature+2
  2425  06F2  1803               	skipnc
  2426  06F3  0AB6               	incf	??_BMP280_readTemperature+2,f
  2427  06F4  0749               	addwf	BMP280_readTemperature@var2+1,w
  2428  06F5  00B5               	movwf	??_BMP280_readTemperature+1
  2429  06F6  1803               	skipnc
  2430  06F7  0AB6               	incf	??_BMP280_readTemperature+2,f
  2431  06F8  0846               	movf	BMP280_readTemperature@var1+2,w
  2432  06F9  0736               	addwf	??_BMP280_readTemperature+2,w
  2433  06FA  01B7               	clrf	??_BMP280_readTemperature+3
  2434  06FB  1803               	skipnc
  2435  06FC  0AB7               	incf	??_BMP280_readTemperature+3,f
  2436  06FD  074A               	addwf	BMP280_readTemperature@var2+2,w
  2437  06FE  00B6               	movwf	??_BMP280_readTemperature+2
  2438  06FF  1803               	skipnc
  2439  0700  0AB7               	incf	??_BMP280_readTemperature+3,f
  2440  0701  0847               	movf	BMP280_readTemperature@var1+3,w
  2441  0702  0737               	addwf	??_BMP280_readTemperature+3,w
  2442  0703  074B               	addwf	BMP280_readTemperature@var2+3,w
  2443  0704  00B7               	movwf	??_BMP280_readTemperature+3
  2444  0705  0837               	movf	??_BMP280_readTemperature+3,w
  2445  0706  1683               	bsf	3,5	;RP0=1, select bank1
  2446  0707  1303               	bcf	3,6	;RP1=0, select bank1
  2447  0708  00A3               	movwf	(_t_fine+3)^(0+128)
  2448  0709  1283               	bcf	3,5	;RP0=0, select bank0
  2449  070A  1303               	bcf	3,6	;RP1=0, select bank0
  2450  070B  0836               	movf	??_BMP280_readTemperature+2,w
  2451  070C  1683               	bsf	3,5	;RP0=1, select bank1
  2452  070D  1303               	bcf	3,6	;RP1=0, select bank1
  2453  070E  00A2               	movwf	(_t_fine+2)^(0+128)
  2454  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0711  0835               	movf	??_BMP280_readTemperature+1,w
  2457  0712  1683               	bsf	3,5	;RP0=1, select bank1
  2458  0713  1303               	bcf	3,6	;RP1=0, select bank1
  2459  0714  00A1               	movwf	(_t_fine+1)^(0+128)
  2460  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0716  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0717  0834               	movf	??_BMP280_readTemperature,w
  2463  0718  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0719  1303               	bcf	3,6	;RP1=0, select bank1
  2465  071A  00A0               	movwf	_t_fine^(0+128)
  2466  071B                     l1397:
  2467                           
  2468                           ;BMP280.c: 258:   *temp = (t_fine * 5 + 128) / 256;
  2469  071B  3000               	movlw	0
  2470  071C  00F6               	movwf	___aldiv@divisor+3
  2471  071D  3000               	movlw	0
  2472  071E  00F5               	movwf	___aldiv@divisor+2
  2473  071F  3001               	movlw	1
  2474  0720  00F4               	movwf	___aldiv@divisor+1
  2475  0721  3000               	movlw	0
  2476  0722  00F3               	movwf	___aldiv@divisor
  2477  0723  3080               	movlw	128
  2478  0724  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0725  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0726  00B4               	movwf	??_BMP280_readTemperature
  2481  0727  3000               	movlw	0
  2482  0728  00B5               	movwf	??_BMP280_readTemperature+1
  2483  0729  3000               	movlw	0
  2484  072A  00B6               	movwf	??_BMP280_readTemperature+2
  2485  072B  3000               	movlw	0
  2486  072C  00B7               	movwf	??_BMP280_readTemperature+3
  2487  072D  1683               	bsf	3,5	;RP0=1, select bank1
  2488  072E  1303               	bcf	3,6	;RP1=0, select bank1
  2489  072F  0823               	movf	(_t_fine+3)^(0+128),w
  2490  0730  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0731  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0732  00AA               	movwf	___lmul@multiplier+3
  2493  0733  1683               	bsf	3,5	;RP0=1, select bank1
  2494  0734  1303               	bcf	3,6	;RP1=0, select bank1
  2495  0735  0822               	movf	(_t_fine+2)^(0+128),w
  2496  0736  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0737  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0738  00A9               	movwf	___lmul@multiplier+2
  2499  0739  1683               	bsf	3,5	;RP0=1, select bank1
  2500  073A  1303               	bcf	3,6	;RP1=0, select bank1
  2501  073B  0821               	movf	(_t_fine+1)^(0+128),w
  2502  073C  1283               	bcf	3,5	;RP0=0, select bank0
  2503  073D  1303               	bcf	3,6	;RP1=0, select bank0
  2504  073E  00A8               	movwf	___lmul@multiplier+1
  2505  073F  1683               	bsf	3,5	;RP0=1, select bank1
  2506  0740  1303               	bcf	3,6	;RP1=0, select bank1
  2507  0741  0820               	movf	_t_fine^(0+128),w
  2508  0742  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0743  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0744  00A7               	movwf	___lmul@multiplier
  2511  0745  3000               	movlw	0
  2512  0746  00AE               	movwf	___lmul@multiplicand+3
  2513  0747  3000               	movlw	0
  2514  0748  00AD               	movwf	___lmul@multiplicand+2
  2515  0749  3000               	movlw	0
  2516  074A  00AC               	movwf	___lmul@multiplicand+1
  2517  074B  3005               	movlw	5
  2518  074C  00AB               	movwf	___lmul@multiplicand
  2519  074D  120A  158A  2353  120A  118A  	fcall	___lmul
  2520  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0754  0827               	movf	?___lmul,w
  2523  0755  07B4               	addwf	??_BMP280_readTemperature,f
  2524  0756  0828               	movf	?___lmul+1,w
  2525  0757  1803               	skipnc
  2526  0758  0F28               	incfsz	?___lmul+1,w
  2527  0759  2F5B               	goto	u1130
  2528  075A  2F5C               	goto	u1131
  2529  075B                     u1130:
  2530  075B  07B5               	addwf	??_BMP280_readTemperature+1,f
  2531  075C                     u1131:
  2532  075C  0829               	movf	?___lmul+2,w
  2533  075D  1803               	skipnc
  2534  075E  0F29               	incfsz	?___lmul+2,w
  2535  075F  2F61               	goto	u1132
  2536  0760  2F62               	goto	u1133
  2537  0761                     u1132:
  2538  0761  07B6               	addwf	??_BMP280_readTemperature+2,f
  2539  0762                     u1133:
  2540  0762  082A               	movf	?___lmul+3,w
  2541  0763  1803               	skipnc
  2542  0764  0A2A               	incf	?___lmul+3,w
  2543  0765  07B7               	addwf	??_BMP280_readTemperature+3,f
  2544  0766  0837               	movf	??_BMP280_readTemperature+3,w
  2545  0767  00FA               	movwf	___aldiv@dividend+3
  2546  0768  0836               	movf	??_BMP280_readTemperature+2,w
  2547  0769  00F9               	movwf	___aldiv@dividend+2
  2548  076A  0835               	movf	??_BMP280_readTemperature+1,w
  2549  076B  00F8               	movwf	___aldiv@dividend+1
  2550  076C  0834               	movf	??_BMP280_readTemperature,w
  2551  076D  00F7               	movwf	___aldiv@dividend
  2552  076E  120A  158A  247B  120A  118A  	fcall	___aldiv
  2553  0773  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0774  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0775  0850               	movf	BMP280_readTemperature@temp,w
  2556  0776  0084               	movwf	4
  2557  0777  0873               	movf	?___aldiv,w
  2558  0778  1383               	bcf	3,7	;select IRP bank0
  2559  0779  0080               	movwf	0
  2560  077A  0A84               	incf	4,f
  2561  077B  0874               	movf	?___aldiv+1,w
  2562  077C  0080               	movwf	0
  2563  077D  0A84               	incf	4,f
  2564  077E  0875               	movf	?___aldiv+2,w
  2565  077F  0080               	movwf	0
  2566  0780  0A84               	incf	4,f
  2567  0781  0876               	movf	?___aldiv+3,w
  2568  0782  0080               	movwf	0
  2569  0783                     l190:
  2570  0783  0008               	return
  2571  0784                     __end_of_BMP280_readTemperature:
  2572                           
  2573                           	psect	text8
  2574  0DF6                     __ptext8:	
  2575 ;; *************** function _BMP280_Update *****************
  2576 ;; Defined at:
  2577 ;;		line 211 in file "BMP280.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  ret             4    4[BANK0 ] struct .
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       0       0       0       0
  2592 ;;      Locals:         0       4       0       0       0
  2593 ;;      Temps:          0       4       0       0       0
  2594 ;;      Totals:         0       8       0       0       0
  2595 ;;Total ram usage:        8 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    4
  2598 ;; This function calls:
  2599 ;;		_I2C_Master_Read
  2600 ;;		_I2C_Master_Start
  2601 ;;		_I2C_Master_Stop
  2602 ;;		_I2C_Master_Write
  2603 ;; This function is called by:
  2604 ;;		_BMP280_readTemperature
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function _BMP280_Update
  2610  0DF6                     _BMP280_Update:
  2611  0DF6                     l1275:	
  2612                           ;incstack = 0
  2613                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  2614                           
  2615                           
  2616                           ;BMP280.c: 217:   } ret;;BMP280.c: 218:   ret.b[3] = 0x00;
  2617  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0DF8  01A7               	clrf	BMP280_Update@ret+3
  2620  0DF9                     l1277:
  2621                           
  2622                           ;BMP280.c: 220:   I2C_Master_Start();
  2623  0DF9  120A  158A  218C  120A  158A  	fcall	_I2C_Master_Start
  2624  0DFE                     l1279:
  2625                           
  2626                           ;BMP280.c: 221:   I2C_Master_Write( 0xEE);
  2627  0DFE  30EE               	movlw	238
  2628  0DFF  00F3               	movwf	I2C_Master_Write@d
  2629  0E00  3000               	movlw	0
  2630  0E01  00F4               	movwf	I2C_Master_Write@d+1
  2631  0E02  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  2632  0E07                     l1281:
  2633                           
  2634                           ;BMP280.c: 222:   I2C_Master_Write( 0xF7);
  2635  0E07  30F7               	movlw	247
  2636  0E08  00F3               	movwf	I2C_Master_Write@d
  2637  0E09  3000               	movlw	0
  2638  0E0A  00F4               	movwf	I2C_Master_Write@d+1
  2639  0E0B  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  2640  0E10                     l1283:
  2641                           
  2642                           ;BMP280.c: 223:   I2C_Master_Start();
  2643  0E10  120A  158A  218C  120A  158A  	fcall	_I2C_Master_Start
  2644  0E15                     l1285:
  2645                           
  2646                           ;BMP280.c: 224:   I2C_Master_Write( 0xEE | 1);
  2647  0E15  30EF               	movlw	239
  2648  0E16  00F3               	movwf	I2C_Master_Write@d
  2649  0E17  3000               	movlw	0
  2650  0E18  00F4               	movwf	I2C_Master_Write@d+1
  2651  0E19  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  2652  0E1E                     l1287:
  2653                           
  2654                           ;BMP280.c: 225:   ret.b[2] = I2C_Master_Read( 1);
  2655  0E1E  3001               	movlw	1
  2656  0E1F  00F3               	movwf	I2C_Master_Read@a
  2657  0E20  3000               	movlw	0
  2658  0E21  00F4               	movwf	I2C_Master_Read@a+1
  2659  0E22  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2660  0E27  0873               	movf	?_I2C_Master_Read,w
  2661  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0E2A  00A0               	movwf	??_BMP280_Update
  2664  0E2B  0820               	movf	??_BMP280_Update,w
  2665  0E2C  00A6               	movwf	BMP280_Update@ret+2
  2666  0E2D                     l1289:
  2667                           
  2668                           ;BMP280.c: 226:   ret.b[1] = I2C_Master_Read( 1);
  2669  0E2D  3001               	movlw	1
  2670  0E2E  00F3               	movwf	I2C_Master_Read@a
  2671  0E2F  3000               	movlw	0
  2672  0E30  00F4               	movwf	I2C_Master_Read@a+1
  2673  0E31  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2674  0E36  0873               	movf	?_I2C_Master_Read,w
  2675  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0E39  00A0               	movwf	??_BMP280_Update
  2678  0E3A  0820               	movf	??_BMP280_Update,w
  2679  0E3B  00A5               	movwf	BMP280_Update@ret+1
  2680  0E3C                     l1291:
  2681                           
  2682                           ;BMP280.c: 227:   ret.b[0] = I2C_Master_Read( 1);
  2683  0E3C  3001               	movlw	1
  2684  0E3D  00F3               	movwf	I2C_Master_Read@a
  2685  0E3E  3000               	movlw	0
  2686  0E3F  00F4               	movwf	I2C_Master_Read@a+1
  2687  0E40  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2688  0E45  0873               	movf	?_I2C_Master_Read,w
  2689  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0E48  00A0               	movwf	??_BMP280_Update
  2692  0E49  0820               	movf	??_BMP280_Update,w
  2693  0E4A  00A4               	movwf	BMP280_Update@ret
  2694  0E4B                     l1293:
  2695                           
  2696                           ;BMP280.c: 229:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  2697  0E4B  0824               	movf	BMP280_Update@ret,w
  2698  0E4C  00A0               	movwf	??_BMP280_Update
  2699  0E4D  0825               	movf	BMP280_Update@ret+1,w
  2700  0E4E  00A1               	movwf	??_BMP280_Update+1
  2701  0E4F  0826               	movf	BMP280_Update@ret+2,w
  2702  0E50  00A2               	movwf	??_BMP280_Update+2
  2703  0E51  0827               	movf	BMP280_Update@ret+3,w
  2704  0E52  00A3               	movwf	??_BMP280_Update+3
  2705  0E53  3004               	movlw	4
  2706  0E54                     u865:
  2707  0E54  1003               	clrc
  2708  0E55  0CA3               	rrf	??_BMP280_Update+3,f
  2709  0E56  0CA2               	rrf	??_BMP280_Update+2,f
  2710  0E57  0CA1               	rrf	??_BMP280_Update+1,f
  2711  0E58  0CA0               	rrf	??_BMP280_Update,f
  2712  0E59                     u860:
  2713  0E59  3EFF               	addlw	-1
  2714  0E5A  1D03               	skipz
  2715  0E5B  2E54               	goto	u865
  2716  0E5C  30FF               	movlw	255
  2717  0E5D  0520               	andwf	??_BMP280_Update,w
  2718  0E5E  1683               	bsf	3,5	;RP0=1, select bank1
  2719  0E5F  1303               	bcf	3,6	;RP1=0, select bank1
  2720  0E60  00A4               	movwf	_adc_P^(0+128)
  2721  0E61  30FF               	movlw	255
  2722  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0E64  0521               	andwf	??_BMP280_Update+1,w
  2725  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  2726  0E66  1303               	bcf	3,6	;RP1=0, select bank1
  2727  0E67  00A5               	movwf	(_adc_P+1)^(0+128)
  2728  0E68  300F               	movlw	15
  2729  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0E6B  0522               	andwf	??_BMP280_Update+2,w
  2732  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0E6E  00A6               	movwf	(_adc_P+2)^(0+128)
  2735  0E6F  3000               	movlw	0
  2736  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0E72  0523               	andwf	??_BMP280_Update+3,w
  2739  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0E74  1303               	bcf	3,6	;RP1=0, select bank1
  2741  0E75  00A7               	movwf	(_adc_P+3)^(0+128)
  2742  0E76                     l1295:
  2743                           
  2744                           ;BMP280.c: 231:   ret.b[2] = I2C_Master_Read(1);
  2745  0E76  3001               	movlw	1
  2746  0E77  00F3               	movwf	I2C_Master_Read@a
  2747  0E78  3000               	movlw	0
  2748  0E79  00F4               	movwf	I2C_Master_Read@a+1
  2749  0E7A  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2750  0E7F  0873               	movf	?_I2C_Master_Read,w
  2751  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0E82  00A0               	movwf	??_BMP280_Update
  2754  0E83  0820               	movf	??_BMP280_Update,w
  2755  0E84  00A6               	movwf	BMP280_Update@ret+2
  2756  0E85                     l1297:
  2757                           
  2758                           ;BMP280.c: 232:   ret.b[1] = I2C_Master_Read(1);
  2759  0E85  3001               	movlw	1
  2760  0E86  00F3               	movwf	I2C_Master_Read@a
  2761  0E87  3000               	movlw	0
  2762  0E88  00F4               	movwf	I2C_Master_Read@a+1
  2763  0E89  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2764  0E8E  0873               	movf	?_I2C_Master_Read,w
  2765  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0E91  00A0               	movwf	??_BMP280_Update
  2768  0E92  0820               	movf	??_BMP280_Update,w
  2769  0E93  00A5               	movwf	BMP280_Update@ret+1
  2770  0E94                     l1299:
  2771                           
  2772                           ;BMP280.c: 233:   ret.b[0] = I2C_Master_Read(0);
  2773  0E94  3000               	movlw	0
  2774  0E95  00F3               	movwf	I2C_Master_Read@a
  2775  0E96  00F4               	movwf	I2C_Master_Read@a+1
  2776  0E97  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2777  0E9C  0873               	movf	?_I2C_Master_Read,w
  2778  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0E9F  00A0               	movwf	??_BMP280_Update
  2781  0EA0  0820               	movf	??_BMP280_Update,w
  2782  0EA1  00A4               	movwf	BMP280_Update@ret
  2783  0EA2                     l1301:
  2784                           
  2785                           ;BMP280.c: 234:   I2C_Master_Stop();
  2786  0EA2  120A  158A  2195  120A  158A  	fcall	_I2C_Master_Stop
  2787  0EA7                     l1303:
  2788                           
  2789                           ;BMP280.c: 236:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  2790  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0EA9  0824               	movf	BMP280_Update@ret,w
  2793  0EAA  00A0               	movwf	??_BMP280_Update
  2794  0EAB  0825               	movf	BMP280_Update@ret+1,w
  2795  0EAC  00A1               	movwf	??_BMP280_Update+1
  2796  0EAD  0826               	movf	BMP280_Update@ret+2,w
  2797  0EAE  00A2               	movwf	??_BMP280_Update+2
  2798  0EAF  0827               	movf	BMP280_Update@ret+3,w
  2799  0EB0  00A3               	movwf	??_BMP280_Update+3
  2800  0EB1  3004               	movlw	4
  2801  0EB2                     u875:
  2802  0EB2  1003               	clrc
  2803  0EB3  0CA3               	rrf	??_BMP280_Update+3,f
  2804  0EB4  0CA2               	rrf	??_BMP280_Update+2,f
  2805  0EB5  0CA1               	rrf	??_BMP280_Update+1,f
  2806  0EB6  0CA0               	rrf	??_BMP280_Update,f
  2807  0EB7                     u870:
  2808  0EB7  3EFF               	addlw	-1
  2809  0EB8  1D03               	skipz
  2810  0EB9  2EB2               	goto	u875
  2811  0EBA  30FF               	movlw	255
  2812  0EBB  0520               	andwf	??_BMP280_Update,w
  2813  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  2814  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  2815  0EBE  00A8               	movwf	_adc_T^(0+128)
  2816  0EBF  30FF               	movlw	255
  2817  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  2819  0EC2  0521               	andwf	??_BMP280_Update+1,w
  2820  0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  2821  0EC4  1303               	bcf	3,6	;RP1=0, select bank1
  2822  0EC5  00A9               	movwf	(_adc_T+1)^(0+128)
  2823  0EC6  300F               	movlw	15
  2824  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0EC9  0522               	andwf	??_BMP280_Update+2,w
  2827  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  2828  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  2829  0ECC  00AA               	movwf	(_adc_T+2)^(0+128)
  2830  0ECD  3000               	movlw	0
  2831  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0ED0  0523               	andwf	??_BMP280_Update+3,w
  2834  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  2835  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  2836  0ED3  00AB               	movwf	(_adc_T+3)^(0+128)
  2837  0ED4                     l187:
  2838  0ED4  0008               	return
  2839  0ED5                     __end_of_BMP280_Update:
  2840                           
  2841                           	psect	text9
  2842  0024                     __ptext9:	
  2843 ;; *************** function _BMP280_readPressure *****************
  2844 ;; Defined at:
  2845 ;;		line 266 in file "BMP280.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  pres            1    wreg     PTR unsigned long 
  2848 ;;		 -> pressure(4), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  pres            1   48[BANK0 ] PTR unsigned long 
  2851 ;;		 -> pressure(4), 
  2852 ;;  var1            4   61[BANK0 ] long 
  2853 ;;  p               4   57[BANK0 ] unsigned long 
  2854 ;;  var2            4   53[BANK0 ] long 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2   12[None  ] int 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0      29       0       0       0
  2866 ;;      Temps:          0      16       0       0       0
  2867 ;;      Totals:         0      45       0       0       0
  2868 ;;Total ram usage:       45 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    3
  2871 ;; This function calls:
  2872 ;;		___aldiv
  2873 ;;		___lldiv
  2874 ;;		___lmul
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           
  2881                           ;psect for function _BMP280_readPressure
  2882  0024                     _BMP280_readPressure:
  2883                           
  2884                           ;incstack = 0
  2885                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2886                           ;BMP280_readPressure@pres stored from wreg
  2887  0024  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0025  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0026  00D0               	movwf	BMP280_readPressure@pres
  2890  0027                     l1401:
  2891                           
  2892                           ;BMP280.c: 266: int BMP280_readPressure(uint32_t *pres);BMP280.c: 267: {;BMP280.c: 268: 
      +                            int32_t var1, var2;;BMP280.c: 269:   uint32_t p;;BMP280.c: 272:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  2893  0027  3000               	movlw	0
  2894  0028  00B4               	movwf	??_BMP280_readPressure
  2895  0029  3006               	movlw	6
  2896  002A  00B5               	movwf	??_BMP280_readPressure+1
  2897  002B  30FF               	movlw	255
  2898  002C  00B6               	movwf	??_BMP280_readPressure+2
  2899  002D  30FF               	movlw	255
  2900  002E  00B7               	movwf	??_BMP280_readPressure+3
  2901  002F  3000               	movlw	0
  2902  0030  00F6               	movwf	___aldiv@divisor+3
  2903  0031  3000               	movlw	0
  2904  0032  00F5               	movwf	___aldiv@divisor+2
  2905  0033  3000               	movlw	0
  2906  0034  00F4               	movwf	___aldiv@divisor+1
  2907  0035  3002               	movlw	2
  2908  0036  00F3               	movwf	___aldiv@divisor
  2909  0037  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0038  1303               	bcf	3,6	;RP1=0, select bank1
  2911  0039  0823               	movf	(_t_fine+3)^(0+128),w
  2912  003A  00FA               	movwf	___aldiv@dividend+3
  2913  003B  0822               	movf	(_t_fine+2)^(0+128),w
  2914  003C  00F9               	movwf	___aldiv@dividend+2
  2915  003D  0821               	movf	(_t_fine+1)^(0+128),w
  2916  003E  00F8               	movwf	___aldiv@dividend+1
  2917  003F  0820               	movf	_t_fine^(0+128),w
  2918  0040  00F7               	movwf	___aldiv@dividend
  2919  0041  120A  158A  247B  120A  118A  	fcall	___aldiv
  2920  0046  0873               	movf	?___aldiv,w
  2921  0047  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0048  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0049  07B4               	addwf	??_BMP280_readPressure,f
  2924  004A  0874               	movf	?___aldiv+1,w
  2925  004B  1803               	skipnc
  2926  004C  0F74               	incfsz	?___aldiv+1,w
  2927  004D  284F               	goto	u1140
  2928  004E  2850               	goto	u1141
  2929  004F                     u1140:
  2930  004F  07B5               	addwf	??_BMP280_readPressure+1,f
  2931  0050                     u1141:
  2932  0050  0875               	movf	?___aldiv+2,w
  2933  0051  1803               	skipnc
  2934  0052  0F75               	incfsz	?___aldiv+2,w
  2935  0053  2855               	goto	u1142
  2936  0054  2856               	goto	u1143
  2937  0055                     u1142:
  2938  0055  07B6               	addwf	??_BMP280_readPressure+2,f
  2939  0056                     u1143:
  2940  0056  0876               	movf	?___aldiv+3,w
  2941  0057  1803               	skipnc
  2942  0058  0A76               	incf	?___aldiv+3,w
  2943  0059  07B7               	addwf	??_BMP280_readPressure+3,f
  2944  005A  0837               	movf	??_BMP280_readPressure+3,w
  2945  005B  00E0               	movwf	BMP280_readPressure@var1+3
  2946  005C  0836               	movf	??_BMP280_readPressure+2,w
  2947  005D  00DF               	movwf	BMP280_readPressure@var1+2
  2948  005E  0835               	movf	??_BMP280_readPressure+1,w
  2949  005F  00DE               	movwf	BMP280_readPressure@var1+1
  2950  0060  0834               	movf	??_BMP280_readPressure,w
  2951  0061  00DD               	movwf	BMP280_readPressure@var1
  2952                           
  2953                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2954  0062  3000               	movlw	0
  2955  0063  00F6               	movwf	___aldiv@divisor+3
  2956  0064  3000               	movlw	0
  2957  0065  00F5               	movwf	___aldiv@divisor+2
  2958  0066  3000               	movlw	0
  2959  0067  00F4               	movwf	___aldiv@divisor+1
  2960  0068  3004               	movlw	4
  2961  0069  00F3               	movwf	___aldiv@divisor
  2962  006A  0860               	movf	BMP280_readPressure@var1+3,w
  2963  006B  00FA               	movwf	___aldiv@dividend+3
  2964  006C  085F               	movf	BMP280_readPressure@var1+2,w
  2965  006D  00F9               	movwf	___aldiv@dividend+2
  2966  006E  085E               	movf	BMP280_readPressure@var1+1,w
  2967  006F  00F8               	movwf	___aldiv@dividend+1
  2968  0070  085D               	movf	BMP280_readPressure@var1,w
  2969  0071  00F7               	movwf	___aldiv@dividend
  2970  0072  120A  158A  247B  120A  118A  	fcall	___aldiv
  2971  0077  0876               	movf	?___aldiv+3,w
  2972  0078  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0079  1303               	bcf	3,6	;RP1=0, select bank0
  2974  007A  00AA               	movwf	___lmul@multiplier+3
  2975  007B  0875               	movf	?___aldiv+2,w
  2976  007C  00A9               	movwf	___lmul@multiplier+2
  2977  007D  0874               	movf	?___aldiv+1,w
  2978  007E  00A8               	movwf	___lmul@multiplier+1
  2979  007F  0873               	movf	?___aldiv,w
  2980  0080  00A7               	movwf	___lmul@multiplier
  2981  0081  3000               	movlw	0
  2982  0082  00F6               	movwf	___aldiv@divisor+3
  2983  0083  3000               	movlw	0
  2984  0084  00F5               	movwf	___aldiv@divisor+2
  2985  0085  3000               	movlw	0
  2986  0086  00F4               	movwf	___aldiv@divisor+1
  2987  0087  3004               	movlw	4
  2988  0088  00F3               	movwf	___aldiv@divisor
  2989  0089  0860               	movf	BMP280_readPressure@var1+3,w
  2990  008A  00FA               	movwf	___aldiv@dividend+3
  2991  008B  085F               	movf	BMP280_readPressure@var1+2,w
  2992  008C  00F9               	movwf	___aldiv@dividend+2
  2993  008D  085E               	movf	BMP280_readPressure@var1+1,w
  2994  008E  00F8               	movwf	___aldiv@dividend+1
  2995  008F  085D               	movf	BMP280_readPressure@var1,w
  2996  0090  00F7               	movwf	___aldiv@dividend
  2997  0091  120A  158A  247B  120A  118A  	fcall	___aldiv
  2998  0096  0876               	movf	?___aldiv+3,w
  2999  0097  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0098  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0099  00AE               	movwf	___lmul@multiplicand+3
  3002  009A  0875               	movf	?___aldiv+2,w
  3003  009B  00AD               	movwf	___lmul@multiplicand+2
  3004  009C  0874               	movf	?___aldiv+1,w
  3005  009D  00AC               	movwf	___lmul@multiplicand+1
  3006  009E  0873               	movf	?___aldiv,w
  3007  009F  00AB               	movwf	___lmul@multiplicand
  3008  00A0  120A  158A  2353  120A  118A  	fcall	___lmul
  3009  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  3010  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  3011  00A7  082A               	movf	?___lmul+3,w
  3012  00A8  00D4               	movwf	_BMP280_readPressure$1201+3
  3013  00A9  0829               	movf	?___lmul+2,w
  3014  00AA  00D3               	movwf	_BMP280_readPressure$1201+2
  3015  00AB  0828               	movf	?___lmul+1,w
  3016  00AC  00D2               	movwf	_BMP280_readPressure$1201+1
  3017  00AD  0827               	movf	?___lmul,w
  3018  00AE  00D1               	movwf	_BMP280_readPressure$1201
  3019                           
  3020                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  3021  00AF  3000               	movlw	0
  3022  00B0  00F6               	movwf	___aldiv@divisor+3
  3023  00B1  3000               	movlw	0
  3024  00B2  00F5               	movwf	___aldiv@divisor+2
  3025  00B3  3008               	movlw	8
  3026  00B4  00F4               	movwf	___aldiv@divisor+1
  3027  00B5  3000               	movlw	0
  3028  00B6  00F3               	movwf	___aldiv@divisor
  3029  00B7  0854               	movf	_BMP280_readPressure$1201+3,w
  3030  00B8  00FA               	movwf	___aldiv@dividend+3
  3031  00B9  0853               	movf	_BMP280_readPressure$1201+2,w
  3032  00BA  00F9               	movwf	___aldiv@dividend+2
  3033  00BB  0852               	movf	_BMP280_readPressure$1201+1,w
  3034  00BC  00F8               	movwf	___aldiv@dividend+1
  3035  00BD  0851               	movf	_BMP280_readPressure$1201,w
  3036  00BE  00F7               	movwf	___aldiv@dividend
  3037  00BF  120A  158A  247B  120A  118A  	fcall	___aldiv
  3038  00C4  0876               	movf	?___aldiv+3,w
  3039  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  3040  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  3041  00C7  00AA               	movwf	___lmul@multiplier+3
  3042  00C8  0875               	movf	?___aldiv+2,w
  3043  00C9  00A9               	movwf	___lmul@multiplier+2
  3044  00CA  0874               	movf	?___aldiv+1,w
  3045  00CB  00A8               	movwf	___lmul@multiplier+1
  3046  00CC  0873               	movf	?___aldiv,w
  3047  00CD  00A7               	movwf	___lmul@multiplier
  3048  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  3049  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  3050  00D0  083C               	movf	(_BMP280_calib^(0+128)+16),w
  3051  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3052  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3053  00D3  00AB               	movwf	___lmul@multiplicand
  3054  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  3055  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  3056  00D6  083D               	movf	((_BMP280_calib+1)^(0+128)+16),w
  3057  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  3058  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  3059  00D9  00AC               	movwf	___lmul@multiplicand+1
  3060  00DA  3000               	movlw	0
  3061  00DB  1BAC               	btfsc	___lmul@multiplicand+1,7
  3062  00DC  30FF               	movlw	255
  3063  00DD  00AD               	movwf	___lmul@multiplicand+2
  3064  00DE  00AE               	movwf	___lmul@multiplicand+3
  3065  00DF  120A  158A  2353  120A  118A  	fcall	___lmul
  3066  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  3067  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  3068  00E6  082A               	movf	?___lmul+3,w
  3069  00E7  00D8               	movwf	BMP280_readPressure@var2+3
  3070  00E8  0829               	movf	?___lmul+2,w
  3071  00E9  00D7               	movwf	BMP280_readPressure@var2+2
  3072  00EA  0828               	movf	?___lmul+1,w
  3073  00EB  00D6               	movwf	BMP280_readPressure@var2+1
  3074  00EC  0827               	movf	?___lmul,w
  3075  00ED  00D5               	movwf	BMP280_readPressure@var2
  3076                           
  3077                           ;BMP280.c: 275:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  3078  00EE  0855               	movf	BMP280_readPressure@var2,w
  3079  00EF  00B4               	movwf	??_BMP280_readPressure
  3080  00F0  0856               	movf	BMP280_readPressure@var2+1,w
  3081  00F1  00B5               	movwf	??_BMP280_readPressure+1
  3082  00F2  0857               	movf	BMP280_readPressure@var2+2,w
  3083  00F3  00B6               	movwf	??_BMP280_readPressure+2
  3084  00F4  0858               	movf	BMP280_readPressure@var2+3,w
  3085  00F5  00B7               	movwf	??_BMP280_readPressure+3
  3086  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  3087  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  3088  00F8  083A               	movf	(_BMP280_calib^(0+128)+14),w
  3089  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  3090  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  3091  00FB  00A7               	movwf	___lmul@multiplier
  3092  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  3093  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  3094  00FE  083B               	movf	((_BMP280_calib+1)^(0+128)+14),w
  3095  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0100  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0101  00A8               	movwf	___lmul@multiplier+1
  3098  0102  3000               	movlw	0
  3099  0103  1BA8               	btfsc	___lmul@multiplier+1,7
  3100  0104  30FF               	movlw	255
  3101  0105  00A9               	movwf	___lmul@multiplier+2
  3102  0106  00AA               	movwf	___lmul@multiplier+3
  3103  0107  0860               	movf	BMP280_readPressure@var1+3,w
  3104  0108  00AE               	movwf	___lmul@multiplicand+3
  3105  0109  085F               	movf	BMP280_readPressure@var1+2,w
  3106  010A  00AD               	movwf	___lmul@multiplicand+2
  3107  010B  085E               	movf	BMP280_readPressure@var1+1,w
  3108  010C  00AC               	movwf	___lmul@multiplicand+1
  3109  010D  085D               	movf	BMP280_readPressure@var1,w
  3110  010E  00AB               	movwf	___lmul@multiplicand
  3111  010F  120A  158A  2353  120A  118A  	fcall	___lmul
  3112  0114  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0115  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0116  0827               	movf	?___lmul,w
  3115  0117  00B8               	movwf	??_BMP280_readPressure+4
  3116  0118  0828               	movf	?___lmul+1,w
  3117  0119  00B9               	movwf	??_BMP280_readPressure+5
  3118  011A  0829               	movf	?___lmul+2,w
  3119  011B  00BA               	movwf	??_BMP280_readPressure+6
  3120  011C  082A               	movf	?___lmul+3,w
  3121  011D  00BB               	movwf	??_BMP280_readPressure+7
  3122  011E  3001               	movlw	1
  3123  011F                     u1155:
  3124  011F  1003               	clrc
  3125  0120  0DB8               	rlf	??_BMP280_readPressure+4,f
  3126  0121  0DB9               	rlf	??_BMP280_readPressure+5,f
  3127  0122  0DBA               	rlf	??_BMP280_readPressure+6,f
  3128  0123  0DBB               	rlf	??_BMP280_readPressure+7,f
  3129  0124                     u1150:
  3130  0124  3EFF               	addlw	-1
  3131  0125  1D03               	skipz
  3132  0126  291F               	goto	u1155
  3133  0127  0838               	movf	??_BMP280_readPressure+4,w
  3134  0128  07B4               	addwf	??_BMP280_readPressure,f
  3135  0129  0839               	movf	??_BMP280_readPressure+5,w
  3136  012A  1803               	skipnc
  3137  012B  0F39               	incfsz	??_BMP280_readPressure+5,w
  3138  012C  292E               	goto	u1160
  3139  012D  292F               	goto	u1161
  3140  012E                     u1160:
  3141  012E  07B5               	addwf	??_BMP280_readPressure+1,f
  3142  012F                     u1161:
  3143  012F  083A               	movf	??_BMP280_readPressure+6,w
  3144  0130  1803               	skipnc
  3145  0131  0F3A               	incfsz	??_BMP280_readPressure+6,w
  3146  0132  2934               	goto	u1162
  3147  0133  2935               	goto	u1163
  3148  0134                     u1162:
  3149  0134  07B6               	addwf	??_BMP280_readPressure+2,f
  3150  0135                     u1163:
  3151  0135  083B               	movf	??_BMP280_readPressure+7,w
  3152  0136  1803               	skipnc
  3153  0137  0A3B               	incf	??_BMP280_readPressure+7,w
  3154  0138  07B7               	addwf	??_BMP280_readPressure+3,f
  3155  0139  0837               	movf	??_BMP280_readPressure+3,w
  3156  013A  00D8               	movwf	BMP280_readPressure@var2+3
  3157  013B  0836               	movf	??_BMP280_readPressure+2,w
  3158  013C  00D7               	movwf	BMP280_readPressure@var2+2
  3159  013D  0835               	movf	??_BMP280_readPressure+1,w
  3160  013E  00D6               	movwf	BMP280_readPressure@var2+1
  3161  013F  0834               	movf	??_BMP280_readPressure,w
  3162  0140  00D5               	movwf	BMP280_readPressure@var2
  3163                           
  3164                           ;BMP280.c: 276:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  3165  0141  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0142  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0143  0838               	movf	(_BMP280_calib^(0+128)+12),w
  3168  0144  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0145  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0146  00B4               	movwf	??_BMP280_readPressure
  3171  0147  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0148  1303               	bcf	3,6	;RP1=0, select bank1
  3173  0149  0839               	movf	((_BMP280_calib+1)^(0+128)+12),w
  3174  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3175  014B  1303               	bcf	3,6	;RP1=0, select bank0
  3176  014C  00B5               	movwf	??_BMP280_readPressure+1
  3177  014D  01B6               	clrf	??_BMP280_readPressure+2
  3178  014E  01B7               	clrf	??_BMP280_readPressure+3
  3179  014F  3010               	movlw	16
  3180  0150                     u1175:
  3181  0150  1003               	clrc
  3182  0151  0DB4               	rlf	??_BMP280_readPressure,f
  3183  0152  0DB5               	rlf	??_BMP280_readPressure+1,f
  3184  0153  0DB6               	rlf	??_BMP280_readPressure+2,f
  3185  0154  0DB7               	rlf	??_BMP280_readPressure+3,f
  3186  0155                     u1170:
  3187  0155  3EFF               	addlw	-1
  3188  0156  1D03               	skipz
  3189  0157  2950               	goto	u1175
  3190  0158  3000               	movlw	0
  3191  0159  00F6               	movwf	___aldiv@divisor+3
  3192  015A  3000               	movlw	0
  3193  015B  00F5               	movwf	___aldiv@divisor+2
  3194  015C  3000               	movlw	0
  3195  015D  00F4               	movwf	___aldiv@divisor+1
  3196  015E  3004               	movlw	4
  3197  015F  00F3               	movwf	___aldiv@divisor
  3198  0160  0858               	movf	BMP280_readPressure@var2+3,w
  3199  0161  00FA               	movwf	___aldiv@dividend+3
  3200  0162  0857               	movf	BMP280_readPressure@var2+2,w
  3201  0163  00F9               	movwf	___aldiv@dividend+2
  3202  0164  0856               	movf	BMP280_readPressure@var2+1,w
  3203  0165  00F8               	movwf	___aldiv@dividend+1
  3204  0166  0855               	movf	BMP280_readPressure@var2,w
  3205  0167  00F7               	movwf	___aldiv@dividend
  3206  0168  120A  158A  247B  120A  118A  	fcall	___aldiv
  3207  016D  0873               	movf	?___aldiv,w
  3208  016E  1283               	bcf	3,5	;RP0=0, select bank0
  3209  016F  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0170  07B4               	addwf	??_BMP280_readPressure,f
  3211  0171  0874               	movf	?___aldiv+1,w
  3212  0172  1803               	skipnc
  3213  0173  0F74               	incfsz	?___aldiv+1,w
  3214  0174  2976               	goto	u1180
  3215  0175  2977               	goto	u1181
  3216  0176                     u1180:
  3217  0176  07B5               	addwf	??_BMP280_readPressure+1,f
  3218  0177                     u1181:
  3219  0177  0875               	movf	?___aldiv+2,w
  3220  0178  1803               	skipnc
  3221  0179  0F75               	incfsz	?___aldiv+2,w
  3222  017A  297C               	goto	u1182
  3223  017B  297D               	goto	u1183
  3224  017C                     u1182:
  3225  017C  07B6               	addwf	??_BMP280_readPressure+2,f
  3226  017D                     u1183:
  3227  017D  0876               	movf	?___aldiv+3,w
  3228  017E  1803               	skipnc
  3229  017F  0A76               	incf	?___aldiv+3,w
  3230  0180  07B7               	addwf	??_BMP280_readPressure+3,f
  3231  0181  0837               	movf	??_BMP280_readPressure+3,w
  3232  0182  00D8               	movwf	BMP280_readPressure@var2+3
  3233  0183  0836               	movf	??_BMP280_readPressure+2,w
  3234  0184  00D7               	movwf	BMP280_readPressure@var2+2
  3235  0185  0835               	movf	??_BMP280_readPressure+1,w
  3236  0186  00D6               	movwf	BMP280_readPressure@var2+1
  3237  0187  0834               	movf	??_BMP280_readPressure,w
  3238  0188  00D5               	movwf	BMP280_readPressure@var2
  3239                           
  3240                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3241  0189  3000               	movlw	0
  3242  018A  00F6               	movwf	___aldiv@divisor+3
  3243  018B  3000               	movlw	0
  3244  018C  00F5               	movwf	___aldiv@divisor+2
  3245  018D  3000               	movlw	0
  3246  018E  00F4               	movwf	___aldiv@divisor+1
  3247  018F  3004               	movlw	4
  3248  0190  00F3               	movwf	___aldiv@divisor
  3249  0191  0860               	movf	BMP280_readPressure@var1+3,w
  3250  0192  00FA               	movwf	___aldiv@dividend+3
  3251  0193  085F               	movf	BMP280_readPressure@var1+2,w
  3252  0194  00F9               	movwf	___aldiv@dividend+2
  3253  0195  085E               	movf	BMP280_readPressure@var1+1,w
  3254  0196  00F8               	movwf	___aldiv@dividend+1
  3255  0197  085D               	movf	BMP280_readPressure@var1,w
  3256  0198  00F7               	movwf	___aldiv@dividend
  3257  0199  120A  158A  247B  120A  118A  	fcall	___aldiv
  3258  019E  0876               	movf	?___aldiv+3,w
  3259  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3260  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3261  01A1  00AA               	movwf	___lmul@multiplier+3
  3262  01A2  0875               	movf	?___aldiv+2,w
  3263  01A3  00A9               	movwf	___lmul@multiplier+2
  3264  01A4  0874               	movf	?___aldiv+1,w
  3265  01A5  00A8               	movwf	___lmul@multiplier+1
  3266  01A6  0873               	movf	?___aldiv,w
  3267  01A7  00A7               	movwf	___lmul@multiplier
  3268  01A8  3000               	movlw	0
  3269  01A9  00F6               	movwf	___aldiv@divisor+3
  3270  01AA  3000               	movlw	0
  3271  01AB  00F5               	movwf	___aldiv@divisor+2
  3272  01AC  3000               	movlw	0
  3273  01AD  00F4               	movwf	___aldiv@divisor+1
  3274  01AE  3004               	movlw	4
  3275  01AF  00F3               	movwf	___aldiv@divisor
  3276  01B0  0860               	movf	BMP280_readPressure@var1+3,w
  3277  01B1  00FA               	movwf	___aldiv@dividend+3
  3278  01B2  085F               	movf	BMP280_readPressure@var1+2,w
  3279  01B3  00F9               	movwf	___aldiv@dividend+2
  3280  01B4  085E               	movf	BMP280_readPressure@var1+1,w
  3281  01B5  00F8               	movwf	___aldiv@dividend+1
  3282  01B6  085D               	movf	BMP280_readPressure@var1,w
  3283  01B7  00F7               	movwf	___aldiv@dividend
  3284  01B8  120A  158A  247B  120A  118A  	fcall	___aldiv
  3285  01BD  0876               	movf	?___aldiv+3,w
  3286  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3287  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3288  01C0  00AE               	movwf	___lmul@multiplicand+3
  3289  01C1  0875               	movf	?___aldiv+2,w
  3290  01C2  00AD               	movwf	___lmul@multiplicand+2
  3291  01C3  0874               	movf	?___aldiv+1,w
  3292  01C4  00AC               	movwf	___lmul@multiplicand+1
  3293  01C5  0873               	movf	?___aldiv,w
  3294  01C6  00AB               	movwf	___lmul@multiplicand
  3295  01C7  120A  158A  2353  120A  118A  	fcall	___lmul
  3296  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3297  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3298  01CE  082A               	movf	?___lmul+3,w
  3299  01CF  00D4               	movwf	_BMP280_readPressure$1201+3
  3300  01D0  0829               	movf	?___lmul+2,w
  3301  01D1  00D3               	movwf	_BMP280_readPressure$1201+2
  3302  01D2  0828               	movf	?___lmul+1,w
  3303  01D3  00D2               	movwf	_BMP280_readPressure$1201+1
  3304  01D4  0827               	movf	?___lmul,w
  3305  01D5  00D1               	movwf	_BMP280_readPressure$1201
  3306                           
  3307                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3308  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  3309  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  3310  01D8  0836               	movf	(_BMP280_calib^(0+128)+10),w
  3311  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3312  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3313  01DB  00A7               	movwf	___lmul@multiplier
  3314  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  3315  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  3316  01DE  0837               	movf	((_BMP280_calib+1)^(0+128)+10),w
  3317  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3318  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3319  01E1  00A8               	movwf	___lmul@multiplier+1
  3320  01E2  3000               	movlw	0
  3321  01E3  1BA8               	btfsc	___lmul@multiplier+1,7
  3322  01E4  30FF               	movlw	255
  3323  01E5  00A9               	movwf	___lmul@multiplier+2
  3324  01E6  00AA               	movwf	___lmul@multiplier+3
  3325  01E7  3000               	movlw	0
  3326  01E8  00F6               	movwf	___aldiv@divisor+3
  3327  01E9  3000               	movlw	0
  3328  01EA  00F5               	movwf	___aldiv@divisor+2
  3329  01EB  3020               	movlw	32
  3330  01EC  00F4               	movwf	___aldiv@divisor+1
  3331  01ED  3000               	movlw	0
  3332  01EE  00F3               	movwf	___aldiv@divisor
  3333  01EF  0854               	movf	_BMP280_readPressure$1201+3,w
  3334  01F0  00FA               	movwf	___aldiv@dividend+3
  3335  01F1  0853               	movf	_BMP280_readPressure$1201+2,w
  3336  01F2  00F9               	movwf	___aldiv@dividend+2
  3337  01F3  0852               	movf	_BMP280_readPressure$1201+1,w
  3338  01F4  00F8               	movwf	___aldiv@dividend+1
  3339  01F5  0851               	movf	_BMP280_readPressure$1201,w
  3340  01F6  00F7               	movwf	___aldiv@dividend
  3341  01F7  120A  158A  247B  120A  118A  	fcall	___aldiv
  3342  01FC  0876               	movf	?___aldiv+3,w
  3343  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3344  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3345  01FF  00AE               	movwf	___lmul@multiplicand+3
  3346  0200  0875               	movf	?___aldiv+2,w
  3347  0201  00AD               	movwf	___lmul@multiplicand+2
  3348  0202  0874               	movf	?___aldiv+1,w
  3349  0203  00AC               	movwf	___lmul@multiplicand+1
  3350  0204  0873               	movf	?___aldiv,w
  3351  0205  00AB               	movwf	___lmul@multiplicand
  3352  0206  120A  158A  2353  120A  118A  	fcall	___lmul
  3353  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3354  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3355  020D  082A               	movf	?___lmul+3,w
  3356  020E  00C7               	movwf	_BMP280_readPressure$1202+3
  3357  020F  0829               	movf	?___lmul+2,w
  3358  0210  00C6               	movwf	_BMP280_readPressure$1202+2
  3359  0211  0828               	movf	?___lmul+1,w
  3360  0212  00C5               	movwf	_BMP280_readPressure$1202+1
  3361  0213  0827               	movf	?___lmul,w
  3362  0214  00C4               	movwf	_BMP280_readPressure$1202
  3363                           
  3364                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3365  0215  3000               	movlw	0
  3366  0216  00F6               	movwf	___aldiv@divisor+3
  3367  0217  3000               	movlw	0
  3368  0218  00F5               	movwf	___aldiv@divisor+2
  3369  0219  3000               	movlw	0
  3370  021A  00F4               	movwf	___aldiv@divisor+1
  3371  021B  3002               	movlw	2
  3372  021C  00F3               	movwf	___aldiv@divisor
  3373  021D  1683               	bsf	3,5	;RP0=1, select bank1
  3374  021E  1303               	bcf	3,6	;RP1=0, select bank1
  3375  021F  0834               	movf	(_BMP280_calib^(0+128)+8),w
  3376  0220  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0221  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0222  00A7               	movwf	___lmul@multiplier
  3379  0223  1683               	bsf	3,5	;RP0=1, select bank1
  3380  0224  1303               	bcf	3,6	;RP1=0, select bank1
  3381  0225  0835               	movf	((_BMP280_calib+1)^(0+128)+8),w
  3382  0226  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0227  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0228  00A8               	movwf	___lmul@multiplier+1
  3385  0229  3000               	movlw	0
  3386  022A  1BA8               	btfsc	___lmul@multiplier+1,7
  3387  022B  30FF               	movlw	255
  3388  022C  00A9               	movwf	___lmul@multiplier+2
  3389  022D  00AA               	movwf	___lmul@multiplier+3
  3390  022E  0860               	movf	BMP280_readPressure@var1+3,w
  3391  022F  00AE               	movwf	___lmul@multiplicand+3
  3392  0230  085F               	movf	BMP280_readPressure@var1+2,w
  3393  0231  00AD               	movwf	___lmul@multiplicand+2
  3394  0232  085E               	movf	BMP280_readPressure@var1+1,w
  3395  0233  00AC               	movwf	___lmul@multiplicand+1
  3396  0234  085D               	movf	BMP280_readPressure@var1,w
  3397  0235  00AB               	movwf	___lmul@multiplicand
  3398  0236  120A  158A  2353  120A  118A  	fcall	___lmul
  3399  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3400  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3401  023D  082A               	movf	?___lmul+3,w
  3402  023E  00FA               	movwf	___aldiv@dividend+3
  3403  023F  0829               	movf	?___lmul+2,w
  3404  0240  00F9               	movwf	___aldiv@dividend+2
  3405  0241  0828               	movf	?___lmul+1,w
  3406  0242  00F8               	movwf	___aldiv@dividend+1
  3407  0243  0827               	movf	?___lmul,w
  3408  0244  00F7               	movwf	___aldiv@dividend
  3409  0245  120A  158A  247B  120A  118A  	fcall	___aldiv
  3410  024A  0873               	movf	?___aldiv,w
  3411  024B  1283               	bcf	3,5	;RP0=0, select bank0
  3412  024C  1303               	bcf	3,6	;RP1=0, select bank0
  3413  024D  00B4               	movwf	??_BMP280_readPressure
  3414  024E  0874               	movf	?___aldiv+1,w
  3415  024F  00B5               	movwf	??_BMP280_readPressure+1
  3416  0250  0875               	movf	?___aldiv+2,w
  3417  0251  00B6               	movwf	??_BMP280_readPressure+2
  3418  0252  0876               	movf	?___aldiv+3,w
  3419  0253  00B7               	movwf	??_BMP280_readPressure+3
  3420  0254  3000               	movlw	0
  3421  0255  00F6               	movwf	___aldiv@divisor+3
  3422  0256  3000               	movlw	0
  3423  0257  00F5               	movwf	___aldiv@divisor+2
  3424  0258  3000               	movlw	0
  3425  0259  00F4               	movwf	___aldiv@divisor+1
  3426  025A  3008               	movlw	8
  3427  025B  00F3               	movwf	___aldiv@divisor
  3428  025C  0847               	movf	_BMP280_readPressure$1202+3,w
  3429  025D  00FA               	movwf	___aldiv@dividend+3
  3430  025E  0846               	movf	_BMP280_readPressure$1202+2,w
  3431  025F  00F9               	movwf	___aldiv@dividend+2
  3432  0260  0845               	movf	_BMP280_readPressure$1202+1,w
  3433  0261  00F8               	movwf	___aldiv@dividend+1
  3434  0262  0844               	movf	_BMP280_readPressure$1202,w
  3435  0263  00F7               	movwf	___aldiv@dividend
  3436  0264  120A  158A  247B  120A  118A  	fcall	___aldiv
  3437  0269  0873               	movf	?___aldiv,w
  3438  026A  1283               	bcf	3,5	;RP0=0, select bank0
  3439  026B  1303               	bcf	3,6	;RP1=0, select bank0
  3440  026C  07B4               	addwf	??_BMP280_readPressure,f
  3441  026D  0874               	movf	?___aldiv+1,w
  3442  026E  1803               	skipnc
  3443  026F  0F74               	incfsz	?___aldiv+1,w
  3444  0270  2A72               	goto	u1190
  3445  0271  2A73               	goto	u1191
  3446  0272                     u1190:
  3447  0272  07B5               	addwf	??_BMP280_readPressure+1,f
  3448  0273                     u1191:
  3449  0273  0875               	movf	?___aldiv+2,w
  3450  0274  1803               	skipnc
  3451  0275  0F75               	incfsz	?___aldiv+2,w
  3452  0276  2A78               	goto	u1192
  3453  0277  2A79               	goto	u1193
  3454  0278                     u1192:
  3455  0278  07B6               	addwf	??_BMP280_readPressure+2,f
  3456  0279                     u1193:
  3457  0279  0876               	movf	?___aldiv+3,w
  3458  027A  1803               	skipnc
  3459  027B  0A76               	incf	?___aldiv+3,w
  3460  027C  07B7               	addwf	??_BMP280_readPressure+3,f
  3461  027D  0837               	movf	??_BMP280_readPressure+3,w
  3462  027E  00CB               	movwf	_BMP280_readPressure$1203+3
  3463  027F  0836               	movf	??_BMP280_readPressure+2,w
  3464  0280  00CA               	movwf	_BMP280_readPressure$1203+2
  3465  0281  0835               	movf	??_BMP280_readPressure+1,w
  3466  0282  00C9               	movwf	_BMP280_readPressure$1203+1
  3467  0283  0834               	movf	??_BMP280_readPressure,w
  3468  0284  00C8               	movwf	_BMP280_readPressure$1203
  3469                           
  3470                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3471  0285  3000               	movlw	0
  3472  0286  00F6               	movwf	___aldiv@divisor+3
  3473  0287  3004               	movlw	4
  3474  0288  00F5               	movwf	___aldiv@divisor+2
  3475  0289  3000               	movlw	0
  3476  028A  00F4               	movwf	___aldiv@divisor+1
  3477  028B  3000               	movlw	0
  3478  028C  00F3               	movwf	___aldiv@divisor
  3479  028D  084B               	movf	_BMP280_readPressure$1203+3,w
  3480  028E  00FA               	movwf	___aldiv@dividend+3
  3481  028F  084A               	movf	_BMP280_readPressure$1203+2,w
  3482  0290  00F9               	movwf	___aldiv@dividend+2
  3483  0291  0849               	movf	_BMP280_readPressure$1203+1,w
  3484  0292  00F8               	movwf	___aldiv@dividend+1
  3485  0293  0848               	movf	_BMP280_readPressure$1203,w
  3486  0294  00F7               	movwf	___aldiv@dividend
  3487  0295  120A  158A  247B  120A  118A  	fcall	___aldiv
  3488  029A  0876               	movf	?___aldiv+3,w
  3489  029B  1283               	bcf	3,5	;RP0=0, select bank0
  3490  029C  1303               	bcf	3,6	;RP1=0, select bank0
  3491  029D  00E0               	movwf	BMP280_readPressure@var1+3
  3492  029E  0875               	movf	?___aldiv+2,w
  3493  029F  00DF               	movwf	BMP280_readPressure@var1+2
  3494  02A0  0874               	movf	?___aldiv+1,w
  3495  02A1  00DE               	movwf	BMP280_readPressure@var1+1
  3496  02A2  0873               	movf	?___aldiv,w
  3497  02A3  00DD               	movwf	BMP280_readPressure@var1
  3498                           
  3499                           ;BMP280.c: 281:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  3500  02A4  3000               	movlw	0
  3501  02A5  00F6               	movwf	___aldiv@divisor+3
  3502  02A6  3000               	movlw	0
  3503  02A7  00F5               	movwf	___aldiv@divisor+2
  3504  02A8  3080               	movlw	128
  3505  02A9  00F4               	movwf	___aldiv@divisor+1
  3506  02AA  3000               	movlw	0
  3507  02AB  00F3               	movwf	___aldiv@divisor
  3508  02AC  3000               	movlw	0
  3509  02AD  00B4               	movwf	??_BMP280_readPressure
  3510  02AE  3080               	movlw	128
  3511  02AF  00B5               	movwf	??_BMP280_readPressure+1
  3512  02B0  3000               	movlw	0
  3513  02B1  00B6               	movwf	??_BMP280_readPressure+2
  3514  02B2  3000               	movlw	0
  3515  02B3  00B7               	movwf	??_BMP280_readPressure+3
  3516  02B4  085D               	movf	BMP280_readPressure@var1,w
  3517  02B5  07B4               	addwf	??_BMP280_readPressure,f
  3518  02B6  085E               	movf	BMP280_readPressure@var1+1,w
  3519  02B7  1803               	skipnc
  3520  02B8  0F5E               	incfsz	BMP280_readPressure@var1+1,w
  3521  02B9  2ABB               	goto	u1200
  3522  02BA  2ABC               	goto	u1201
  3523  02BB                     u1200:
  3524  02BB  07B5               	addwf	??_BMP280_readPressure+1,f
  3525  02BC                     u1201:
  3526  02BC  085F               	movf	BMP280_readPressure@var1+2,w
  3527  02BD  1803               	skipnc
  3528  02BE  0F5F               	incfsz	BMP280_readPressure@var1+2,w
  3529  02BF  2AC1               	goto	u1202
  3530  02C0  2AC2               	goto	u1203
  3531  02C1                     u1202:
  3532  02C1  07B6               	addwf	??_BMP280_readPressure+2,f
  3533  02C2                     u1203:
  3534  02C2  0860               	movf	BMP280_readPressure@var1+3,w
  3535  02C3  1803               	skipnc
  3536  02C4  0A60               	incf	BMP280_readPressure@var1+3,w
  3537  02C5  07B7               	addwf	??_BMP280_readPressure+3,f
  3538  02C6  0837               	movf	??_BMP280_readPressure+3,w
  3539  02C7  00AA               	movwf	___lmul@multiplier+3
  3540  02C8  0836               	movf	??_BMP280_readPressure+2,w
  3541  02C9  00A9               	movwf	___lmul@multiplier+2
  3542  02CA  0835               	movf	??_BMP280_readPressure+1,w
  3543  02CB  00A8               	movwf	___lmul@multiplier+1
  3544  02CC  0834               	movf	??_BMP280_readPressure,w
  3545  02CD  00A7               	movwf	___lmul@multiplier
  3546  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  3547  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  3548  02D0  0832               	movf	(_BMP280_calib^(0+128)+6),w
  3549  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  3550  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  3551  02D3  00AB               	movwf	___lmul@multiplicand
  3552  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  3553  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  3554  02D6  0833               	movf	((_BMP280_calib+1)^(0+128)+6),w
  3555  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3556  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  3557  02D9  00AC               	movwf	___lmul@multiplicand+1
  3558  02DA  01AD               	clrf	___lmul@multiplicand+2
  3559  02DB  01AE               	clrf	___lmul@multiplicand+3
  3560  02DC  120A  158A  2353  120A  118A  	fcall	___lmul
  3561  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  3562  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  3563  02E3  082A               	movf	?___lmul+3,w
  3564  02E4  00FA               	movwf	___aldiv@dividend+3
  3565  02E5  0829               	movf	?___lmul+2,w
  3566  02E6  00F9               	movwf	___aldiv@dividend+2
  3567  02E7  0828               	movf	?___lmul+1,w
  3568  02E8  00F8               	movwf	___aldiv@dividend+1
  3569  02E9  0827               	movf	?___lmul,w
  3570  02EA  00F7               	movwf	___aldiv@dividend
  3571  02EB  120A  158A  247B  120A  118A  	fcall	___aldiv
  3572  02F0  0876               	movf	?___aldiv+3,w
  3573  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3574  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3575  02F3  00E0               	movwf	BMP280_readPressure@var1+3
  3576  02F4  0875               	movf	?___aldiv+2,w
  3577  02F5  00DF               	movwf	BMP280_readPressure@var1+2
  3578  02F6  0874               	movf	?___aldiv+1,w
  3579  02F7  00DE               	movwf	BMP280_readPressure@var1+1
  3580  02F8  0873               	movf	?___aldiv,w
  3581  02F9  00DD               	movwf	BMP280_readPressure@var1
  3582  02FA                     l1403:
  3583                           
  3584                           ;BMP280.c: 283:   if (var1 == 0)
  3585  02FA  0860               	movf	BMP280_readPressure@var1+3,w
  3586  02FB  045F               	iorwf	BMP280_readPressure@var1+2,w
  3587  02FC  045E               	iorwf	BMP280_readPressure@var1+1,w
  3588  02FD  045D               	iorwf	BMP280_readPressure@var1,w
  3589  02FE  1D03               	skipz
  3590  02FF  2B01               	goto	u1211
  3591  0300  2B02               	goto	u1210
  3592  0301                     u1211:
  3593  0301  2B03               	goto	l1407
  3594  0302                     u1210:
  3595  0302  2D4B               	goto	l194
  3596  0303                     l1407:
  3597                           
  3598                           ;BMP280.c: 286:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  3599  0303  3000               	movlw	0
  3600  0304  00B4               	movwf	??_BMP280_readPressure
  3601  0305  3000               	movlw	0
  3602  0306  00B5               	movwf	??_BMP280_readPressure+1
  3603  0307  3010               	movlw	16
  3604  0308  00B6               	movwf	??_BMP280_readPressure+2
  3605  0309  3000               	movlw	0
  3606  030A  00B7               	movwf	??_BMP280_readPressure+3
  3607  030B  3000               	movlw	0
  3608  030C  00F6               	movwf	___aldiv@divisor+3
  3609  030D  3000               	movlw	0
  3610  030E  00F5               	movwf	___aldiv@divisor+2
  3611  030F  3010               	movlw	16
  3612  0310  00F4               	movwf	___aldiv@divisor+1
  3613  0311  3000               	movlw	0
  3614  0312  00F3               	movwf	___aldiv@divisor
  3615  0313  0858               	movf	BMP280_readPressure@var2+3,w
  3616  0314  00FA               	movwf	___aldiv@dividend+3
  3617  0315  0857               	movf	BMP280_readPressure@var2+2,w
  3618  0316  00F9               	movwf	___aldiv@dividend+2
  3619  0317  0856               	movf	BMP280_readPressure@var2+1,w
  3620  0318  00F8               	movwf	___aldiv@dividend+1
  3621  0319  0855               	movf	BMP280_readPressure@var2,w
  3622  031A  00F7               	movwf	___aldiv@dividend
  3623  031B  120A  158A  247B  120A  118A  	fcall	___aldiv
  3624  0320  1683               	bsf	3,5	;RP0=1, select bank1
  3625  0321  1303               	bcf	3,6	;RP1=0, select bank1
  3626  0322  0924               	comf	_adc_P^(0+128),w
  3627  0323  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0324  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0325  00B8               	movwf	??_BMP280_readPressure+4
  3630  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3631  0327  1303               	bcf	3,6	;RP1=0, select bank1
  3632  0328  0925               	comf	(_adc_P+1)^(0+128),w
  3633  0329  1283               	bcf	3,5	;RP0=0, select bank0
  3634  032A  1303               	bcf	3,6	;RP1=0, select bank0
  3635  032B  00B9               	movwf	??_BMP280_readPressure+5
  3636  032C  1683               	bsf	3,5	;RP0=1, select bank1
  3637  032D  1303               	bcf	3,6	;RP1=0, select bank1
  3638  032E  0926               	comf	(_adc_P+2)^(0+128),w
  3639  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3640  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3641  0331  00BA               	movwf	??_BMP280_readPressure+6
  3642  0332  1683               	bsf	3,5	;RP0=1, select bank1
  3643  0333  1303               	bcf	3,6	;RP1=0, select bank1
  3644  0334  0927               	comf	(_adc_P+3)^(0+128),w
  3645  0335  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0336  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0337  00BB               	movwf	??_BMP280_readPressure+7
  3648  0338  0AB8               	incf	??_BMP280_readPressure+4,f
  3649  0339  1903               	skipnz
  3650  033A  0AB9               	incf	??_BMP280_readPressure+5,f
  3651  033B  1903               	skipnz
  3652  033C  0ABA               	incf	??_BMP280_readPressure+6,f
  3653  033D  1903               	skipnz
  3654  033E  0ABB               	incf	??_BMP280_readPressure+7,f
  3655  033F  0873               	movf	?___aldiv,w
  3656  0340  02B8               	subwf	??_BMP280_readPressure+4,f
  3657  0341  0874               	movf	?___aldiv+1,w
  3658  0342  1C03               	skipc
  3659  0343  0F74               	incfsz	?___aldiv+1,w
  3660  0344  2B46               	goto	u1221
  3661  0345  2B47               	goto	u1222
  3662  0346                     u1221:
  3663  0346  02B9               	subwf	??_BMP280_readPressure+5,f
  3664  0347                     u1222:
  3665  0347  0875               	movf	?___aldiv+2,w
  3666  0348  1C03               	skipc
  3667  0349  0F75               	incfsz	?___aldiv+2,w
  3668  034A  2B4C               	goto	u1223
  3669  034B  2B4D               	goto	u1224
  3670  034C                     u1223:
  3671  034C  02BA               	subwf	??_BMP280_readPressure+6,f
  3672  034D                     u1224:
  3673  034D  0876               	movf	?___aldiv+3,w
  3674  034E  1C03               	skipc
  3675  034F  0F76               	incfsz	?___aldiv+3,w
  3676  0350  2B52               	goto	u1225
  3677  0351  2B53               	goto	u1226
  3678  0352                     u1225:
  3679  0352  02BB               	subwf	??_BMP280_readPressure+7,f
  3680  0353                     u1226:
  3681  0353  0838               	movf	??_BMP280_readPressure+4,w
  3682  0354  07B4               	addwf	??_BMP280_readPressure,f
  3683  0355  0839               	movf	??_BMP280_readPressure+5,w
  3684  0356  1803               	skipnc
  3685  0357  0F39               	incfsz	??_BMP280_readPressure+5,w
  3686  0358  2B5A               	goto	u1230
  3687  0359  2B5B               	goto	u1231
  3688  035A                     u1230:
  3689  035A  07B5               	addwf	??_BMP280_readPressure+1,f
  3690  035B                     u1231:
  3691  035B  083A               	movf	??_BMP280_readPressure+6,w
  3692  035C  1803               	skipnc
  3693  035D  0F3A               	incfsz	??_BMP280_readPressure+6,w
  3694  035E  2B60               	goto	u1232
  3695  035F  2B61               	goto	u1233
  3696  0360                     u1232:
  3697  0360  07B6               	addwf	??_BMP280_readPressure+2,f
  3698  0361                     u1233:
  3699  0361  083B               	movf	??_BMP280_readPressure+7,w
  3700  0362  1803               	skipnc
  3701  0363  0A3B               	incf	??_BMP280_readPressure+7,w
  3702  0364  07B7               	addwf	??_BMP280_readPressure+3,f
  3703  0365  0837               	movf	??_BMP280_readPressure+3,w
  3704  0366  00AA               	movwf	___lmul@multiplier+3
  3705  0367  0836               	movf	??_BMP280_readPressure+2,w
  3706  0368  00A9               	movwf	___lmul@multiplier+2
  3707  0369  0835               	movf	??_BMP280_readPressure+1,w
  3708  036A  00A8               	movwf	___lmul@multiplier+1
  3709  036B  0834               	movf	??_BMP280_readPressure,w
  3710  036C  00A7               	movwf	___lmul@multiplier
  3711  036D  3000               	movlw	0
  3712  036E  00AE               	movwf	___lmul@multiplicand+3
  3713  036F  3000               	movlw	0
  3714  0370  00AD               	movwf	___lmul@multiplicand+2
  3715  0371  300C               	movlw	12
  3716  0372  00AC               	movwf	___lmul@multiplicand+1
  3717  0373  3035               	movlw	53
  3718  0374  00AB               	movwf	___lmul@multiplicand
  3719  0375  120A  158A  2353  120A  118A  	fcall	___lmul
  3720  037A  1283               	bcf	3,5	;RP0=0, select bank0
  3721  037B  1303               	bcf	3,6	;RP1=0, select bank0
  3722  037C  082A               	movf	?___lmul+3,w
  3723  037D  00DC               	movwf	BMP280_readPressure@p+3
  3724  037E  0829               	movf	?___lmul+2,w
  3725  037F  00DB               	movwf	BMP280_readPressure@p+2
  3726  0380  0828               	movf	?___lmul+1,w
  3727  0381  00DA               	movwf	BMP280_readPressure@p+1
  3728  0382  0827               	movf	?___lmul,w
  3729  0383  00D9               	movwf	BMP280_readPressure@p
  3730  0384                     l1409:
  3731                           
  3732                           ;BMP280.c: 288:   if (p < 0x80000000)
  3733  0384  3080               	movlw	128
  3734  0385  025C               	subwf	BMP280_readPressure@p+3,w
  3735  0386  1D03               	skipz
  3736  0387  2B94               	goto	u1243
  3737  0388  3000               	movlw	0
  3738  0389  025B               	subwf	BMP280_readPressure@p+2,w
  3739  038A  1D03               	skipz
  3740  038B  2B94               	goto	u1243
  3741  038C  3000               	movlw	0
  3742  038D  025A               	subwf	BMP280_readPressure@p+1,w
  3743  038E  1D03               	skipz
  3744  038F  2B94               	goto	u1243
  3745  0390  3000               	movlw	0
  3746  0391  0259               	subwf	BMP280_readPressure@p,w
  3747  0392  1D03               	skipz
  3748  0393  2B94               	goto	u1243
  3749  0394                     u1243:
  3750  0394  1803               	btfsc	3,0
  3751  0395  2B97               	goto	u1241
  3752  0396  2B98               	goto	u1240
  3753  0397                     u1241:
  3754  0397  2BBB               	goto	l1413
  3755  0398                     u1240:
  3756  0398                     l1411:
  3757                           
  3758                           ;BMP280.c: 289:     p = (p * 2) / ((uint32_t)var1);
  3759  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3761  039A  0860               	movf	BMP280_readPressure@var1+3,w
  3762  039B  00F6               	movwf	___lldiv@divisor+3
  3763  039C  085F               	movf	BMP280_readPressure@var1+2,w
  3764  039D  00F5               	movwf	___lldiv@divisor+2
  3765  039E  085E               	movf	BMP280_readPressure@var1+1,w
  3766  039F  00F4               	movwf	___lldiv@divisor+1
  3767  03A0  085D               	movf	BMP280_readPressure@var1,w
  3768  03A1  00F3               	movwf	___lldiv@divisor
  3769  03A2  1003               	clrc
  3770  03A3  0D59               	rlf	BMP280_readPressure@p,w
  3771  03A4  00F7               	movwf	___lldiv@dividend
  3772  03A5  0D5A               	rlf	BMP280_readPressure@p+1,w
  3773  03A6  00F8               	movwf	___lldiv@dividend+1
  3774  03A7  0D5B               	rlf	BMP280_readPressure@p+2,w
  3775  03A8  00F9               	movwf	___lldiv@dividend+2
  3776  03A9  0D5C               	rlf	BMP280_readPressure@p+3,w
  3777  03AA  00FA               	movwf	___lldiv@dividend+3
  3778  03AB  120A  118A  2784  120A  118A  	fcall	___lldiv
  3779  03B0  0876               	movf	?___lldiv+3,w
  3780  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3781  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3782  03B3  00DC               	movwf	BMP280_readPressure@p+3
  3783  03B4  0875               	movf	?___lldiv+2,w
  3784  03B5  00DB               	movwf	BMP280_readPressure@p+2
  3785  03B6  0874               	movf	?___lldiv+1,w
  3786  03B7  00DA               	movwf	BMP280_readPressure@p+1
  3787  03B8  0873               	movf	?___lldiv,w
  3788  03B9  00D9               	movwf	BMP280_readPressure@p
  3789  03BA  2BDD               	goto	l196
  3790  03BB                     l1413:
  3791                           
  3792                           ;BMP280.c: 292:     p = (p / (uint32_t)var1) * 2;
  3793  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3794  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3795  03BD  0860               	movf	BMP280_readPressure@var1+3,w
  3796  03BE  00F6               	movwf	___lldiv@divisor+3
  3797  03BF  085F               	movf	BMP280_readPressure@var1+2,w
  3798  03C0  00F5               	movwf	___lldiv@divisor+2
  3799  03C1  085E               	movf	BMP280_readPressure@var1+1,w
  3800  03C2  00F4               	movwf	___lldiv@divisor+1
  3801  03C3  085D               	movf	BMP280_readPressure@var1,w
  3802  03C4  00F3               	movwf	___lldiv@divisor
  3803  03C5  085C               	movf	BMP280_readPressure@p+3,w
  3804  03C6  00FA               	movwf	___lldiv@dividend+3
  3805  03C7  085B               	movf	BMP280_readPressure@p+2,w
  3806  03C8  00F9               	movwf	___lldiv@dividend+2
  3807  03C9  085A               	movf	BMP280_readPressure@p+1,w
  3808  03CA  00F8               	movwf	___lldiv@dividend+1
  3809  03CB  0859               	movf	BMP280_readPressure@p,w
  3810  03CC  00F7               	movwf	___lldiv@dividend
  3811  03CD  120A  118A  2784  120A  118A  	fcall	___lldiv
  3812  03D2  1003               	clrc
  3813  03D3  0D73               	rlf	?___lldiv,w
  3814  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  3815  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  3816  03D6  00D9               	movwf	BMP280_readPressure@p
  3817  03D7  0D74               	rlf	?___lldiv+1,w
  3818  03D8  00DA               	movwf	BMP280_readPressure@p+1
  3819  03D9  0D75               	rlf	?___lldiv+2,w
  3820  03DA  00DB               	movwf	BMP280_readPressure@p+2
  3821  03DB  0D76               	rlf	?___lldiv+3,w
  3822  03DC  00DC               	movwf	BMP280_readPressure@p+3
  3823  03DD                     l196:
  3824                           
  3825                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3826  03DD  0859               	movf	BMP280_readPressure@p,w
  3827  03DE  00B4               	movwf	??_BMP280_readPressure
  3828  03DF  085A               	movf	BMP280_readPressure@p+1,w
  3829  03E0  00B5               	movwf	??_BMP280_readPressure+1
  3830  03E1  085B               	movf	BMP280_readPressure@p+2,w
  3831  03E2  00B6               	movwf	??_BMP280_readPressure+2
  3832  03E3  085C               	movf	BMP280_readPressure@p+3,w
  3833  03E4  00B7               	movwf	??_BMP280_readPressure+3
  3834  03E5  3003               	movlw	3
  3835  03E6                     u1255:
  3836  03E6  1003               	clrc
  3837  03E7  0CB7               	rrf	??_BMP280_readPressure+3,f
  3838  03E8  0CB6               	rrf	??_BMP280_readPressure+2,f
  3839  03E9  0CB5               	rrf	??_BMP280_readPressure+1,f
  3840  03EA  0CB4               	rrf	??_BMP280_readPressure,f
  3841  03EB                     u1250:
  3842  03EB  3EFF               	addlw	-1
  3843  03EC  1D03               	skipz
  3844  03ED  2BE6               	goto	u1255
  3845  03EE  0837               	movf	??_BMP280_readPressure+3,w
  3846  03EF  00AE               	movwf	___lmul@multiplicand+3
  3847  03F0  0836               	movf	??_BMP280_readPressure+2,w
  3848  03F1  00AD               	movwf	___lmul@multiplicand+2
  3849  03F2  0835               	movf	??_BMP280_readPressure+1,w
  3850  03F3  00AC               	movwf	___lmul@multiplicand+1
  3851  03F4  0834               	movf	??_BMP280_readPressure,w
  3852  03F5  00AB               	movwf	___lmul@multiplicand
  3853  03F6  0859               	movf	BMP280_readPressure@p,w
  3854  03F7  00B8               	movwf	??_BMP280_readPressure+4
  3855  03F8  085A               	movf	BMP280_readPressure@p+1,w
  3856  03F9  00B9               	movwf	??_BMP280_readPressure+5
  3857  03FA  085B               	movf	BMP280_readPressure@p+2,w
  3858  03FB  00BA               	movwf	??_BMP280_readPressure+6
  3859  03FC  085C               	movf	BMP280_readPressure@p+3,w
  3860  03FD  00BB               	movwf	??_BMP280_readPressure+7
  3861  03FE  3003               	movlw	3
  3862  03FF                     u1265:
  3863  03FF  1003               	clrc
  3864  0400  0CBB               	rrf	??_BMP280_readPressure+7,f
  3865  0401  0CBA               	rrf	??_BMP280_readPressure+6,f
  3866  0402  0CB9               	rrf	??_BMP280_readPressure+5,f
  3867  0403  0CB8               	rrf	??_BMP280_readPressure+4,f
  3868  0404                     u1260:
  3869  0404  3EFF               	addlw	-1
  3870  0405  1D03               	skipz
  3871  0406  2BFF               	goto	u1265
  3872  0407  083B               	movf	??_BMP280_readPressure+7,w
  3873  0408  00AA               	movwf	___lmul@multiplier+3
  3874  0409  083A               	movf	??_BMP280_readPressure+6,w
  3875  040A  00A9               	movwf	___lmul@multiplier+2
  3876  040B  0839               	movf	??_BMP280_readPressure+5,w
  3877  040C  00A8               	movwf	___lmul@multiplier+1
  3878  040D  0838               	movf	??_BMP280_readPressure+4,w
  3879  040E  00A7               	movwf	___lmul@multiplier
  3880  040F  120A  158A  2353  120A  118A  	fcall	___lmul
  3881  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3882  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3883  0416  0827               	movf	?___lmul,w
  3884  0417  00BC               	movwf	??_BMP280_readPressure+8
  3885  0418  0828               	movf	?___lmul+1,w
  3886  0419  00BD               	movwf	??_BMP280_readPressure+9
  3887  041A  0829               	movf	?___lmul+2,w
  3888  041B  00BE               	movwf	??_BMP280_readPressure+10
  3889  041C  082A               	movf	?___lmul+3,w
  3890  041D  00BF               	movwf	??_BMP280_readPressure+11
  3891  041E  300D               	movlw	13
  3892  041F                     u1275:
  3893  041F  1003               	clrc
  3894  0420  0CBF               	rrf	??_BMP280_readPressure+11,f
  3895  0421  0CBE               	rrf	??_BMP280_readPressure+10,f
  3896  0422  0CBD               	rrf	??_BMP280_readPressure+9,f
  3897  0423  0CBC               	rrf	??_BMP280_readPressure+8,f
  3898  0424                     u1270:
  3899  0424  3EFF               	addlw	-1
  3900  0425  1D03               	skipz
  3901  0426  2C1F               	goto	u1275
  3902  0427  083F               	movf	??_BMP280_readPressure+11,w
  3903  0428  00CF               	movwf	_BMP280_readPressure$1204+3
  3904  0429  083E               	movf	??_BMP280_readPressure+10,w
  3905  042A  00CE               	movwf	_BMP280_readPressure$1204+2
  3906  042B  083D               	movf	??_BMP280_readPressure+9,w
  3907  042C  00CD               	movwf	_BMP280_readPressure$1204+1
  3908  042D  083C               	movf	??_BMP280_readPressure+8,w
  3909  042E  00CC               	movwf	_BMP280_readPressure$1204
  3910                           
  3911                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3912  042F  3000               	movlw	0
  3913  0430  00F6               	movwf	___aldiv@divisor+3
  3914  0431  3000               	movlw	0
  3915  0432  00F5               	movwf	___aldiv@divisor+2
  3916  0433  3010               	movlw	16
  3917  0434  00F4               	movwf	___aldiv@divisor+1
  3918  0435  3000               	movlw	0
  3919  0436  00F3               	movwf	___aldiv@divisor
  3920  0437  1683               	bsf	3,5	;RP0=1, select bank1
  3921  0438  1303               	bcf	3,6	;RP1=0, select bank1
  3922  0439  0842               	movf	(_BMP280_calib^(0+128)+22),w
  3923  043A  1283               	bcf	3,5	;RP0=0, select bank0
  3924  043B  1303               	bcf	3,6	;RP1=0, select bank0
  3925  043C  00A7               	movwf	___lmul@multiplier
  3926  043D  1683               	bsf	3,5	;RP0=1, select bank1
  3927  043E  1303               	bcf	3,6	;RP1=0, select bank1
  3928  043F  0843               	movf	((_BMP280_calib+1)^(0+128)+22),w
  3929  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3930  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3931  0442  00A8               	movwf	___lmul@multiplier+1
  3932  0443  3000               	movlw	0
  3933  0444  1BA8               	btfsc	___lmul@multiplier+1,7
  3934  0445  30FF               	movlw	255
  3935  0446  00A9               	movwf	___lmul@multiplier+2
  3936  0447  00AA               	movwf	___lmul@multiplier+3
  3937  0448  084F               	movf	_BMP280_readPressure$1204+3,w
  3938  0449  00AE               	movwf	___lmul@multiplicand+3
  3939  044A  084E               	movf	_BMP280_readPressure$1204+2,w
  3940  044B  00AD               	movwf	___lmul@multiplicand+2
  3941  044C  084D               	movf	_BMP280_readPressure$1204+1,w
  3942  044D  00AC               	movwf	___lmul@multiplicand+1
  3943  044E  084C               	movf	_BMP280_readPressure$1204,w
  3944  044F  00AB               	movwf	___lmul@multiplicand
  3945  0450  120A  158A  2353  120A  118A  	fcall	___lmul
  3946  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0457  082A               	movf	?___lmul+3,w
  3949  0458  00FA               	movwf	___aldiv@dividend+3
  3950  0459  0829               	movf	?___lmul+2,w
  3951  045A  00F9               	movwf	___aldiv@dividend+2
  3952  045B  0828               	movf	?___lmul+1,w
  3953  045C  00F8               	movwf	___aldiv@dividend+1
  3954  045D  0827               	movf	?___lmul,w
  3955  045E  00F7               	movwf	___aldiv@dividend
  3956  045F  120A  158A  247B  120A  118A  	fcall	___aldiv
  3957  0464  0876               	movf	?___aldiv+3,w
  3958  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3959  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3960  0467  00E0               	movwf	BMP280_readPressure@var1+3
  3961  0468  0875               	movf	?___aldiv+2,w
  3962  0469  00DF               	movwf	BMP280_readPressure@var1+2
  3963  046A  0874               	movf	?___aldiv+1,w
  3964  046B  00DE               	movwf	BMP280_readPressure@var1+1
  3965  046C  0873               	movf	?___aldiv,w
  3966  046D  00DD               	movwf	BMP280_readPressure@var1
  3967                           
  3968                           ;BMP280.c: 295:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  3969  046E  3000               	movlw	0
  3970  046F  00F6               	movwf	___aldiv@divisor+3
  3971  0470  3000               	movlw	0
  3972  0471  00F5               	movwf	___aldiv@divisor+2
  3973  0472  3020               	movlw	32
  3974  0473  00F4               	movwf	___aldiv@divisor+1
  3975  0474  3000               	movlw	0
  3976  0475  00F3               	movwf	___aldiv@divisor
  3977  0476  0859               	movf	BMP280_readPressure@p,w
  3978  0477  00B4               	movwf	??_BMP280_readPressure
  3979  0478  085A               	movf	BMP280_readPressure@p+1,w
  3980  0479  00B5               	movwf	??_BMP280_readPressure+1
  3981  047A  085B               	movf	BMP280_readPressure@p+2,w
  3982  047B  00B6               	movwf	??_BMP280_readPressure+2
  3983  047C  085C               	movf	BMP280_readPressure@p+3,w
  3984  047D  00B7               	movwf	??_BMP280_readPressure+3
  3985  047E  3002               	movlw	2
  3986  047F                     u1285:
  3987  047F  1003               	clrc
  3988  0480  0CB7               	rrf	??_BMP280_readPressure+3,f
  3989  0481  0CB6               	rrf	??_BMP280_readPressure+2,f
  3990  0482  0CB5               	rrf	??_BMP280_readPressure+1,f
  3991  0483  0CB4               	rrf	??_BMP280_readPressure,f
  3992  0484                     u1280:
  3993  0484  3EFF               	addlw	-1
  3994  0485  1D03               	skipz
  3995  0486  2C7F               	goto	u1285
  3996  0487  0837               	movf	??_BMP280_readPressure+3,w
  3997  0488  00AA               	movwf	___lmul@multiplier+3
  3998  0489  0836               	movf	??_BMP280_readPressure+2,w
  3999  048A  00A9               	movwf	___lmul@multiplier+2
  4000  048B  0835               	movf	??_BMP280_readPressure+1,w
  4001  048C  00A8               	movwf	___lmul@multiplier+1
  4002  048D  0834               	movf	??_BMP280_readPressure,w
  4003  048E  00A7               	movwf	___lmul@multiplier
  4004  048F  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0490  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0491  0840               	movf	(_BMP280_calib^(0+128)+20),w
  4007  0492  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0493  1303               	bcf	3,6	;RP1=0, select bank0
  4009  0494  00AB               	movwf	___lmul@multiplicand
  4010  0495  1683               	bsf	3,5	;RP0=1, select bank1
  4011  0496  1303               	bcf	3,6	;RP1=0, select bank1
  4012  0497  0841               	movf	((_BMP280_calib+1)^(0+128)+20),w
  4013  0498  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0499  1303               	bcf	3,6	;RP1=0, select bank0
  4015  049A  00AC               	movwf	___lmul@multiplicand+1
  4016  049B  3000               	movlw	0
  4017  049C  1BAC               	btfsc	___lmul@multiplicand+1,7
  4018  049D  30FF               	movlw	255
  4019  049E  00AD               	movwf	___lmul@multiplicand+2
  4020  049F  00AE               	movwf	___lmul@multiplicand+3
  4021  04A0  120A  158A  2353  120A  118A  	fcall	___lmul
  4022  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  4023  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  4024  04A7  082A               	movf	?___lmul+3,w
  4025  04A8  00FA               	movwf	___aldiv@dividend+3
  4026  04A9  0829               	movf	?___lmul+2,w
  4027  04AA  00F9               	movwf	___aldiv@dividend+2
  4028  04AB  0828               	movf	?___lmul+1,w
  4029  04AC  00F8               	movwf	___aldiv@dividend+1
  4030  04AD  0827               	movf	?___lmul,w
  4031  04AE  00F7               	movwf	___aldiv@dividend
  4032  04AF  120A  158A  247B  120A  118A  	fcall	___aldiv
  4033  04B4  0876               	movf	?___aldiv+3,w
  4034  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  4035  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  4036  04B7  00D8               	movwf	BMP280_readPressure@var2+3
  4037  04B8  0875               	movf	?___aldiv+2,w
  4038  04B9  00D7               	movwf	BMP280_readPressure@var2+2
  4039  04BA  0874               	movf	?___aldiv+1,w
  4040  04BB  00D6               	movwf	BMP280_readPressure@var2+1
  4041  04BC  0873               	movf	?___aldiv,w
  4042  04BD  00D5               	movwf	BMP280_readPressure@var2
  4043                           
  4044                           ;BMP280.c: 297:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  4045  04BE  3000               	movlw	0
  4046  04BF  00F6               	movwf	___aldiv@divisor+3
  4047  04C0  3000               	movlw	0
  4048  04C1  00F5               	movwf	___aldiv@divisor+2
  4049  04C2  3000               	movlw	0
  4050  04C3  00F4               	movwf	___aldiv@divisor+1
  4051  04C4  3010               	movlw	16
  4052  04C5  00F3               	movwf	___aldiv@divisor
  4053  04C6  0855               	movf	BMP280_readPressure@var2,w
  4054  04C7  00B4               	movwf	??_BMP280_readPressure
  4055  04C8  0856               	movf	BMP280_readPressure@var2+1,w
  4056  04C9  00B5               	movwf	??_BMP280_readPressure+1
  4057  04CA  0857               	movf	BMP280_readPressure@var2+2,w
  4058  04CB  00B6               	movwf	??_BMP280_readPressure+2
  4059  04CC  0858               	movf	BMP280_readPressure@var2+3,w
  4060  04CD  00B7               	movwf	??_BMP280_readPressure+3
  4061  04CE  085D               	movf	BMP280_readPressure@var1,w
  4062  04CF  00B8               	movwf	??_BMP280_readPressure+4
  4063  04D0  085E               	movf	BMP280_readPressure@var1+1,w
  4064  04D1  00B9               	movwf	??_BMP280_readPressure+5
  4065  04D2  085F               	movf	BMP280_readPressure@var1+2,w
  4066  04D3  00BA               	movwf	??_BMP280_readPressure+6
  4067  04D4  0860               	movf	BMP280_readPressure@var1+3,w
  4068  04D5  00BB               	movwf	??_BMP280_readPressure+7
  4069  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  4070  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  4071  04D8  083E               	movf	(_BMP280_calib^(0+128)+18),w
  4072  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4073  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  4074  04DB  00BC               	movwf	??_BMP280_readPressure+8
  4075  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  4076  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  4077  04DE  083F               	movf	((_BMP280_calib+1)^(0+128)+18),w
  4078  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  4079  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  4080  04E1  00BD               	movwf	??_BMP280_readPressure+9
  4081  04E2  3000               	movlw	0
  4082  04E3  1BBD               	btfsc	??_BMP280_readPressure+9,7
  4083  04E4  30FF               	movlw	255
  4084  04E5  00BE               	movwf	??_BMP280_readPressure+10
  4085  04E6  00BF               	movwf	??_BMP280_readPressure+11
  4086  04E7  083C               	movf	??_BMP280_readPressure+8,w
  4087  04E8  07B8               	addwf	??_BMP280_readPressure+4,f
  4088  04E9  083D               	movf	??_BMP280_readPressure+9,w
  4089  04EA  1803               	skipnc
  4090  04EB  0F3D               	incfsz	??_BMP280_readPressure+9,w
  4091  04EC  2CEE               	goto	u1290
  4092  04ED  2CEF               	goto	u1291
  4093  04EE                     u1290:
  4094  04EE  07B9               	addwf	??_BMP280_readPressure+5,f
  4095  04EF                     u1291:
  4096  04EF  083E               	movf	??_BMP280_readPressure+10,w
  4097  04F0  1803               	skipnc
  4098  04F1  0F3E               	incfsz	??_BMP280_readPressure+10,w
  4099  04F2  2CF4               	goto	u1292
  4100  04F3  2CF5               	goto	u1293
  4101  04F4                     u1292:
  4102  04F4  07BA               	addwf	??_BMP280_readPressure+6,f
  4103  04F5                     u1293:
  4104  04F5  083F               	movf	??_BMP280_readPressure+11,w
  4105  04F6  1803               	skipnc
  4106  04F7  0A3F               	incf	??_BMP280_readPressure+11,w
  4107  04F8  07BB               	addwf	??_BMP280_readPressure+7,f
  4108  04F9  0838               	movf	??_BMP280_readPressure+4,w
  4109  04FA  07B4               	addwf	??_BMP280_readPressure,f
  4110  04FB  0839               	movf	??_BMP280_readPressure+5,w
  4111  04FC  1803               	skipnc
  4112  04FD  0F39               	incfsz	??_BMP280_readPressure+5,w
  4113  04FE  2D00               	goto	u1300
  4114  04FF  2D01               	goto	u1301
  4115  0500                     u1300:
  4116  0500  07B5               	addwf	??_BMP280_readPressure+1,f
  4117  0501                     u1301:
  4118  0501  083A               	movf	??_BMP280_readPressure+6,w
  4119  0502  1803               	skipnc
  4120  0503  0F3A               	incfsz	??_BMP280_readPressure+6,w
  4121  0504  2D06               	goto	u1302
  4122  0505  2D07               	goto	u1303
  4123  0506                     u1302:
  4124  0506  07B6               	addwf	??_BMP280_readPressure+2,f
  4125  0507                     u1303:
  4126  0507  083B               	movf	??_BMP280_readPressure+7,w
  4127  0508  1803               	skipnc
  4128  0509  0A3B               	incf	??_BMP280_readPressure+7,w
  4129  050A  07B7               	addwf	??_BMP280_readPressure+3,f
  4130  050B  0837               	movf	??_BMP280_readPressure+3,w
  4131  050C  00FA               	movwf	___aldiv@dividend+3
  4132  050D  0836               	movf	??_BMP280_readPressure+2,w
  4133  050E  00F9               	movwf	___aldiv@dividend+2
  4134  050F  0835               	movf	??_BMP280_readPressure+1,w
  4135  0510  00F8               	movwf	___aldiv@dividend+1
  4136  0511  0834               	movf	??_BMP280_readPressure,w
  4137  0512  00F7               	movwf	___aldiv@dividend
  4138  0513  120A  158A  247B  120A  118A  	fcall	___aldiv
  4139  0518  0873               	movf	?___aldiv,w
  4140  0519  1283               	bcf	3,5	;RP0=0, select bank0
  4141  051A  1303               	bcf	3,6	;RP1=0, select bank0
  4142  051B  0759               	addwf	BMP280_readPressure@p,w
  4143  051C  00C0               	movwf	??_BMP280_readPressure+12
  4144  051D  3000               	movlw	0
  4145  051E  1803               	skipnc
  4146  051F  3001               	movlw	1
  4147  0520  0774               	addwf	?___aldiv+1,w
  4148  0521  01C2               	clrf	??_BMP280_readPressure+14
  4149  0522  1803               	skipnc
  4150  0523  0AC2               	incf	??_BMP280_readPressure+14,f
  4151  0524  075A               	addwf	BMP280_readPressure@p+1,w
  4152  0525  00C1               	movwf	??_BMP280_readPressure+13
  4153  0526  1803               	skipnc
  4154  0527  0AC2               	incf	??_BMP280_readPressure+14,f
  4155  0528  0875               	movf	?___aldiv+2,w
  4156  0529  0742               	addwf	??_BMP280_readPressure+14,w
  4157  052A  01C3               	clrf	??_BMP280_readPressure+15
  4158  052B  1803               	skipnc
  4159  052C  0AC3               	incf	??_BMP280_readPressure+15,f
  4160  052D  075B               	addwf	BMP280_readPressure@p+2,w
  4161  052E  00C2               	movwf	??_BMP280_readPressure+14
  4162  052F  1803               	skipnc
  4163  0530  0AC3               	incf	??_BMP280_readPressure+15,f
  4164  0531  0876               	movf	?___aldiv+3,w
  4165  0532  0743               	addwf	??_BMP280_readPressure+15,w
  4166  0533  075C               	addwf	BMP280_readPressure@p+3,w
  4167  0534  00C3               	movwf	??_BMP280_readPressure+15
  4168  0535  0843               	movf	??_BMP280_readPressure+15,w
  4169  0536  00DC               	movwf	BMP280_readPressure@p+3
  4170  0537  0842               	movf	??_BMP280_readPressure+14,w
  4171  0538  00DB               	movwf	BMP280_readPressure@p+2
  4172  0539  0841               	movf	??_BMP280_readPressure+13,w
  4173  053A  00DA               	movwf	BMP280_readPressure@p+1
  4174  053B  0840               	movf	??_BMP280_readPressure+12,w
  4175  053C  00D9               	movwf	BMP280_readPressure@p
  4176  053D                     l1415:
  4177                           
  4178                           ;BMP280.c: 299:   *pres = p;
  4179  053D  0850               	movf	BMP280_readPressure@pres,w
  4180  053E  0084               	movwf	4
  4181  053F  0859               	movf	BMP280_readPressure@p,w
  4182  0540  1383               	bcf	3,7	;select IRP bank0
  4183  0541  0080               	movwf	0
  4184  0542  0A84               	incf	4,f
  4185  0543  085A               	movf	BMP280_readPressure@p+1,w
  4186  0544  0080               	movwf	0
  4187  0545  0A84               	incf	4,f
  4188  0546  085B               	movf	BMP280_readPressure@p+2,w
  4189  0547  0080               	movwf	0
  4190  0548  0A84               	incf	4,f
  4191  0549  085C               	movf	BMP280_readPressure@p+3,w
  4192  054A  0080               	movwf	0
  4193  054B                     l194:
  4194  054B  0008               	return
  4195  054C                     __end_of_BMP280_readPressure:
  4196                           
  4197                           	psect	text10
  4198  0B53                     __ptext10:	
  4199 ;; *************** function ___lmul *****************
  4200 ;; Defined at:
  4201 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  multiplier      4    7[BANK0 ] unsigned long 
  4204 ;;  multiplicand    4   11[BANK0 ] unsigned long 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  product         4   16[BANK0 ] unsigned long 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  4    7[BANK0 ] unsigned long 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         0       8       0       0       0
  4217 ;;      Locals:         0       4       0       0       0
  4218 ;;      Temps:          0       1       0       0       0
  4219 ;;      Totals:         0      13       0       0       0
  4220 ;;Total ram usage:       13 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    2
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_BMP280_readTemperature
  4227 ;;		_BMP280_readPressure
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           
  4232                           ;psect for function ___lmul
  4233  0B53                     ___lmul:
  4234  0B53                     l1319:	
  4235                           ;incstack = 0
  4236                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4237                           
  4238  0B53  3000               	movlw	0
  4239  0B54  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0B55  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0B56  00B3               	movwf	___lmul@product+3
  4242  0B57  3000               	movlw	0
  4243  0B58  00B2               	movwf	___lmul@product+2
  4244  0B59  3000               	movlw	0
  4245  0B5A  00B1               	movwf	___lmul@product+1
  4246  0B5B  3000               	movlw	0
  4247  0B5C  00B0               	movwf	___lmul@product
  4248  0B5D                     l1321:
  4249  0B5D  1C27               	btfss	___lmul@multiplier,0
  4250  0B5E  2B60               	goto	u921
  4251  0B5F  2B61               	goto	u920
  4252  0B60                     u921:
  4253  0B60  2B78               	goto	l1325
  4254  0B61                     u920:
  4255  0B61                     l1323:
  4256  0B61  082B               	movf	___lmul@multiplicand,w
  4257  0B62  07B0               	addwf	___lmul@product,f
  4258  0B63  082C               	movf	___lmul@multiplicand+1,w
  4259  0B64  1103               	clrz
  4260  0B65  1803               	skipnc
  4261  0B66  3E01               	addlw	1
  4262  0B67  1903               	skipnz
  4263  0B68  2B6A               	goto	u931
  4264  0B69  07B1               	addwf	___lmul@product+1,f
  4265  0B6A                     u931:
  4266  0B6A  082D               	movf	___lmul@multiplicand+2,w
  4267  0B6B  1103               	clrz
  4268  0B6C  1803               	skipnc
  4269  0B6D  3E01               	addlw	1
  4270  0B6E  1903               	skipnz
  4271  0B6F  2B71               	goto	u932
  4272  0B70  07B2               	addwf	___lmul@product+2,f
  4273  0B71                     u932:
  4274  0B71  082E               	movf	___lmul@multiplicand+3,w
  4275  0B72  1103               	clrz
  4276  0B73  1803               	skipnc
  4277  0B74  3E01               	addlw	1
  4278  0B75  1903               	skipnz
  4279  0B76  2B78               	goto	u933
  4280  0B77  07B3               	addwf	___lmul@product+3,f
  4281  0B78                     u933:
  4282  0B78                     l1325:
  4283  0B78  3001               	movlw	1
  4284  0B79  00AF               	movwf	??___lmul
  4285  0B7A                     u945:
  4286  0B7A  1003               	clrc
  4287  0B7B  0DAB               	rlf	___lmul@multiplicand,f
  4288  0B7C  0DAC               	rlf	___lmul@multiplicand+1,f
  4289  0B7D  0DAD               	rlf	___lmul@multiplicand+2,f
  4290  0B7E  0DAE               	rlf	___lmul@multiplicand+3,f
  4291  0B7F  0BAF               	decfsz	??___lmul,f
  4292  0B80  2B7A               	goto	u945
  4293  0B81                     l1327:
  4294  0B81  3001               	movlw	1
  4295  0B82                     u955:
  4296  0B82  1003               	clrc
  4297  0B83  0CAA               	rrf	___lmul@multiplier+3,f
  4298  0B84  0CA9               	rrf	___lmul@multiplier+2,f
  4299  0B85  0CA8               	rrf	___lmul@multiplier+1,f
  4300  0B86  0CA7               	rrf	___lmul@multiplier,f
  4301  0B87  3EFF               	addlw	-1
  4302  0B88  1D03               	skipz
  4303  0B89  2B82               	goto	u955
  4304  0B8A  082A               	movf	___lmul@multiplier+3,w
  4305  0B8B  0429               	iorwf	___lmul@multiplier+2,w
  4306  0B8C  0428               	iorwf	___lmul@multiplier+1,w
  4307  0B8D  0427               	iorwf	___lmul@multiplier,w
  4308  0B8E  1D03               	skipz
  4309  0B8F  2B91               	goto	u961
  4310  0B90  2B92               	goto	u960
  4311  0B91                     u961:
  4312  0B91  2B5D               	goto	l1321
  4313  0B92                     u960:
  4314  0B92                     l1329:
  4315  0B92  0833               	movf	___lmul@product+3,w
  4316  0B93  00AA               	movwf	?___lmul+3
  4317  0B94  0832               	movf	___lmul@product+2,w
  4318  0B95  00A9               	movwf	?___lmul+2
  4319  0B96  0831               	movf	___lmul@product+1,w
  4320  0B97  00A8               	movwf	?___lmul+1
  4321  0B98  0830               	movf	___lmul@product,w
  4322  0B99  00A7               	movwf	?___lmul
  4323  0B9A                     l333:
  4324  0B9A  0008               	return
  4325  0B9B                     __end_of___lmul:
  4326                           
  4327                           	psect	text11
  4328  0784                     __ptext11:	
  4329 ;; *************** function ___lldiv *****************
  4330 ;; Defined at:
  4331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  divisor         4    3[COMMON] unsigned long 
  4334 ;;  dividend        4    7[COMMON] unsigned long 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  quotient        4    1[BANK0 ] unsigned long 
  4337 ;;  counter         1    5[BANK0 ] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  4    3[COMMON] unsigned long 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4347 ;;      Params:         8       0       0       0       0
  4348 ;;      Locals:         0       5       0       0       0
  4349 ;;      Temps:          0       1       0       0       0
  4350 ;;      Totals:         8       6       0       0       0
  4351 ;;Total ram usage:       14 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    2
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_Send_Temp
  4358 ;;		_I2C_Master_Init
  4359 ;;		_BMP280_readPressure
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function ___lldiv
  4365  0784                     ___lldiv:
  4366  0784                     l1217:	
  4367                           ;incstack = 0
  4368                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4369                           
  4370  0784  3000               	movlw	0
  4371  0785  1283               	bcf	3,5	;RP0=0, select bank0
  4372  0786  1303               	bcf	3,6	;RP1=0, select bank0
  4373  0787  00A4               	movwf	___lldiv@quotient+3
  4374  0788  3000               	movlw	0
  4375  0789  00A3               	movwf	___lldiv@quotient+2
  4376  078A  3000               	movlw	0
  4377  078B  00A2               	movwf	___lldiv@quotient+1
  4378  078C  3000               	movlw	0
  4379  078D  00A1               	movwf	___lldiv@quotient
  4380  078E  0876               	movf	___lldiv@divisor+3,w
  4381  078F  0475               	iorwf	___lldiv@divisor+2,w
  4382  0790  0474               	iorwf	___lldiv@divisor+1,w
  4383  0791  0473               	iorwf	___lldiv@divisor,w
  4384  0792  1903               	skipnz
  4385  0793  2F95               	goto	u731
  4386  0794  2F96               	goto	u730
  4387  0795                     u731:
  4388  0795  2FE3               	goto	l1237
  4389  0796                     u730:
  4390  0796                     l1219:
  4391  0796  01A5               	clrf	___lldiv@counter
  4392  0797  0AA5               	incf	___lldiv@counter,f
  4393  0798  2FA6               	goto	l1223
  4394  0799                     l1221:
  4395  0799  3001               	movlw	1
  4396  079A  00A0               	movwf	??___lldiv
  4397  079B                     u745:
  4398  079B  1003               	clrc
  4399  079C  0DF3               	rlf	___lldiv@divisor,f
  4400  079D  0DF4               	rlf	___lldiv@divisor+1,f
  4401  079E  0DF5               	rlf	___lldiv@divisor+2,f
  4402  079F  0DF6               	rlf	___lldiv@divisor+3,f
  4403  07A0  0BA0               	decfsz	??___lldiv,f
  4404  07A1  2F9B               	goto	u745
  4405  07A2  3001               	movlw	1
  4406  07A3  00A0               	movwf	??___lldiv
  4407  07A4  0820               	movf	??___lldiv,w
  4408  07A5  07A5               	addwf	___lldiv@counter,f
  4409  07A6                     l1223:
  4410  07A6  1FF6               	btfss	___lldiv@divisor+3,7
  4411  07A7  2FA9               	goto	u751
  4412  07A8  2FAA               	goto	u750
  4413  07A9                     u751:
  4414  07A9  2F99               	goto	l1221
  4415  07AA                     u750:
  4416  07AA                     l1225:
  4417  07AA  3001               	movlw	1
  4418  07AB  00A0               	movwf	??___lldiv
  4419  07AC                     u765:
  4420  07AC  1003               	clrc
  4421  07AD  0DA1               	rlf	___lldiv@quotient,f
  4422  07AE  0DA2               	rlf	___lldiv@quotient+1,f
  4423  07AF  0DA3               	rlf	___lldiv@quotient+2,f
  4424  07B0  0DA4               	rlf	___lldiv@quotient+3,f
  4425  07B1  0BA0               	decfsz	??___lldiv,f
  4426  07B2  2FAC               	goto	u765
  4427  07B3                     l1227:
  4428  07B3  0876               	movf	___lldiv@divisor+3,w
  4429  07B4  027A               	subwf	___lldiv@dividend+3,w
  4430  07B5  1D03               	skipz
  4431  07B6  2FC1               	goto	u775
  4432  07B7  0875               	movf	___lldiv@divisor+2,w
  4433  07B8  0279               	subwf	___lldiv@dividend+2,w
  4434  07B9  1D03               	skipz
  4435  07BA  2FC1               	goto	u775
  4436  07BB  0874               	movf	___lldiv@divisor+1,w
  4437  07BC  0278               	subwf	___lldiv@dividend+1,w
  4438  07BD  1D03               	skipz
  4439  07BE  2FC1               	goto	u775
  4440  07BF  0873               	movf	___lldiv@divisor,w
  4441  07C0  0277               	subwf	___lldiv@dividend,w
  4442  07C1                     u775:
  4443  07C1  1C03               	skipc
  4444  07C2  2FC4               	goto	u771
  4445  07C3  2FC5               	goto	u770
  4446  07C4                     u771:
  4447  07C4  2FD4               	goto	l1233
  4448  07C5                     u770:
  4449  07C5                     l1229:
  4450  07C5  0873               	movf	___lldiv@divisor,w
  4451  07C6  02F7               	subwf	___lldiv@dividend,f
  4452  07C7  0874               	movf	___lldiv@divisor+1,w
  4453  07C8  1C03               	skipc
  4454  07C9  0F74               	incfsz	___lldiv@divisor+1,w
  4455  07CA  02F8               	subwf	___lldiv@dividend+1,f
  4456  07CB  0875               	movf	___lldiv@divisor+2,w
  4457  07CC  1C03               	skipc
  4458  07CD  0F75               	incfsz	___lldiv@divisor+2,w
  4459  07CE  02F9               	subwf	___lldiv@dividend+2,f
  4460  07CF  0876               	movf	___lldiv@divisor+3,w
  4461  07D0  1C03               	skipc
  4462  07D1  0F76               	incfsz	___lldiv@divisor+3,w
  4463  07D2  02FA               	subwf	___lldiv@dividend+3,f
  4464  07D3                     l1231:
  4465  07D3  1421               	bsf	___lldiv@quotient,0
  4466  07D4                     l1233:
  4467  07D4  3001               	movlw	1
  4468  07D5                     u785:
  4469  07D5  1003               	clrc
  4470  07D6  0CF6               	rrf	___lldiv@divisor+3,f
  4471  07D7  0CF5               	rrf	___lldiv@divisor+2,f
  4472  07D8  0CF4               	rrf	___lldiv@divisor+1,f
  4473  07D9  0CF3               	rrf	___lldiv@divisor,f
  4474  07DA  3EFF               	addlw	-1
  4475  07DB  1D03               	skipz
  4476  07DC  2FD5               	goto	u785
  4477  07DD                     l1235:
  4478  07DD  3001               	movlw	1
  4479  07DE  02A5               	subwf	___lldiv@counter,f
  4480  07DF  1D03               	btfss	3,2
  4481  07E0  2FE2               	goto	u791
  4482  07E1  2FE3               	goto	u790
  4483  07E2                     u791:
  4484  07E2  2FAA               	goto	l1225
  4485  07E3                     u790:
  4486  07E3                     l1237:
  4487  07E3  0824               	movf	___lldiv@quotient+3,w
  4488  07E4  00F6               	movwf	?___lldiv+3
  4489  07E5  0823               	movf	___lldiv@quotient+2,w
  4490  07E6  00F5               	movwf	?___lldiv+2
  4491  07E7  0822               	movf	___lldiv@quotient+1,w
  4492  07E8  00F4               	movwf	?___lldiv+1
  4493  07E9  0821               	movf	___lldiv@quotient,w
  4494  07EA  00F3               	movwf	?___lldiv
  4495  07EB                     l355:
  4496  07EB  0008               	return
  4497  07EC                     __end_of___lldiv:
  4498                           
  4499                           	psect	text12
  4500  0C7B                     __ptext12:	
  4501 ;; *************** function ___aldiv *****************
  4502 ;; Defined at:
  4503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  divisor         4    3[COMMON] long 
  4506 ;;  dividend        4    7[COMMON] long 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  quotient        4    3[BANK0 ] long 
  4509 ;;  sign            1    2[BANK0 ] unsigned char 
  4510 ;;  counter         1    1[BANK0 ] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  4    3[COMMON] long 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4520 ;;      Params:         8       0       0       0       0
  4521 ;;      Locals:         0       6       0       0       0
  4522 ;;      Temps:          0       1       0       0       0
  4523 ;;      Totals:         8       7       0       0       0
  4524 ;;Total ram usage:       15 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    2
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_BMP280_readTemperature
  4531 ;;		_BMP280_readPressure
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function ___aldiv
  4537  0C7B                     ___aldiv:
  4538  0C7B                     l1333:	
  4539                           ;incstack = 0
  4540                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4541                           
  4542  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0C7D  01A2               	clrf	___aldiv@sign
  4545  0C7E                     l1335:
  4546  0C7E  1FF6               	btfss	___aldiv@divisor+3,7
  4547  0C7F  2C81               	goto	u971
  4548  0C80  2C82               	goto	u970
  4549  0C81                     u971:
  4550  0C81  2C8F               	goto	l384
  4551  0C82                     u970:
  4552  0C82                     l1337:
  4553  0C82  09F3               	comf	___aldiv@divisor,f
  4554  0C83  09F4               	comf	___aldiv@divisor+1,f
  4555  0C84  09F5               	comf	___aldiv@divisor+2,f
  4556  0C85  09F6               	comf	___aldiv@divisor+3,f
  4557  0C86  0AF3               	incf	___aldiv@divisor,f
  4558  0C87  1903               	skipnz
  4559  0C88  0AF4               	incf	___aldiv@divisor+1,f
  4560  0C89  1903               	skipnz
  4561  0C8A  0AF5               	incf	___aldiv@divisor+2,f
  4562  0C8B  1903               	skipnz
  4563  0C8C  0AF6               	incf	___aldiv@divisor+3,f
  4564  0C8D  01A2               	clrf	___aldiv@sign
  4565  0C8E  0AA2               	incf	___aldiv@sign,f
  4566  0C8F                     l384:
  4567  0C8F  1FFA               	btfss	___aldiv@dividend+3,7
  4568  0C90  2C92               	goto	u981
  4569  0C91  2C93               	goto	u980
  4570  0C92                     u981:
  4571  0C92  2CA2               	goto	l1343
  4572  0C93                     u980:
  4573  0C93                     l1339:
  4574  0C93  09F7               	comf	___aldiv@dividend,f
  4575  0C94  09F8               	comf	___aldiv@dividend+1,f
  4576  0C95  09F9               	comf	___aldiv@dividend+2,f
  4577  0C96  09FA               	comf	___aldiv@dividend+3,f
  4578  0C97  0AF7               	incf	___aldiv@dividend,f
  4579  0C98  1903               	skipnz
  4580  0C99  0AF8               	incf	___aldiv@dividend+1,f
  4581  0C9A  1903               	skipnz
  4582  0C9B  0AF9               	incf	___aldiv@dividend+2,f
  4583  0C9C  1903               	skipnz
  4584  0C9D  0AFA               	incf	___aldiv@dividend+3,f
  4585  0C9E                     l1341:
  4586  0C9E  3001               	movlw	1
  4587  0C9F  00A0               	movwf	??___aldiv
  4588  0CA0  0820               	movf	??___aldiv,w
  4589  0CA1  06A2               	xorwf	___aldiv@sign,f
  4590  0CA2                     l1343:
  4591  0CA2  3000               	movlw	0
  4592  0CA3  00A6               	movwf	___aldiv@quotient+3
  4593  0CA4  3000               	movlw	0
  4594  0CA5  00A5               	movwf	___aldiv@quotient+2
  4595  0CA6  3000               	movlw	0
  4596  0CA7  00A4               	movwf	___aldiv@quotient+1
  4597  0CA8  3000               	movlw	0
  4598  0CA9  00A3               	movwf	___aldiv@quotient
  4599  0CAA                     l1345:
  4600  0CAA  0876               	movf	___aldiv@divisor+3,w
  4601  0CAB  0475               	iorwf	___aldiv@divisor+2,w
  4602  0CAC  0474               	iorwf	___aldiv@divisor+1,w
  4603  0CAD  0473               	iorwf	___aldiv@divisor,w
  4604  0CAE  1903               	skipnz
  4605  0CAF  2CB1               	goto	u991
  4606  0CB0  2CB2               	goto	u990
  4607  0CB1                     u991:
  4608  0CB1  2CFF               	goto	l1365
  4609  0CB2                     u990:
  4610  0CB2                     l1347:
  4611  0CB2  01A1               	clrf	___aldiv@counter
  4612  0CB3  0AA1               	incf	___aldiv@counter,f
  4613  0CB4  2CC2               	goto	l1351
  4614  0CB5                     l1349:
  4615  0CB5  3001               	movlw	1
  4616  0CB6  00A0               	movwf	??___aldiv
  4617  0CB7                     u1005:
  4618  0CB7  1003               	clrc
  4619  0CB8  0DF3               	rlf	___aldiv@divisor,f
  4620  0CB9  0DF4               	rlf	___aldiv@divisor+1,f
  4621  0CBA  0DF5               	rlf	___aldiv@divisor+2,f
  4622  0CBB  0DF6               	rlf	___aldiv@divisor+3,f
  4623  0CBC  0BA0               	decfsz	??___aldiv,f
  4624  0CBD  2CB7               	goto	u1005
  4625  0CBE  3001               	movlw	1
  4626  0CBF  00A0               	movwf	??___aldiv
  4627  0CC0  0820               	movf	??___aldiv,w
  4628  0CC1  07A1               	addwf	___aldiv@counter,f
  4629  0CC2                     l1351:
  4630  0CC2  1FF6               	btfss	___aldiv@divisor+3,7
  4631  0CC3  2CC5               	goto	u1011
  4632  0CC4  2CC6               	goto	u1010
  4633  0CC5                     u1011:
  4634  0CC5  2CB5               	goto	l1349
  4635  0CC6                     u1010:
  4636  0CC6                     l1353:
  4637  0CC6  3001               	movlw	1
  4638  0CC7  00A0               	movwf	??___aldiv
  4639  0CC8                     u1025:
  4640  0CC8  1003               	clrc
  4641  0CC9  0DA3               	rlf	___aldiv@quotient,f
  4642  0CCA  0DA4               	rlf	___aldiv@quotient+1,f
  4643  0CCB  0DA5               	rlf	___aldiv@quotient+2,f
  4644  0CCC  0DA6               	rlf	___aldiv@quotient+3,f
  4645  0CCD  0BA0               	decfsz	??___aldiv,f
  4646  0CCE  2CC8               	goto	u1025
  4647  0CCF                     l1355:
  4648  0CCF  0876               	movf	___aldiv@divisor+3,w
  4649  0CD0  027A               	subwf	___aldiv@dividend+3,w
  4650  0CD1  1D03               	skipz
  4651  0CD2  2CDD               	goto	u1035
  4652  0CD3  0875               	movf	___aldiv@divisor+2,w
  4653  0CD4  0279               	subwf	___aldiv@dividend+2,w
  4654  0CD5  1D03               	skipz
  4655  0CD6  2CDD               	goto	u1035
  4656  0CD7  0874               	movf	___aldiv@divisor+1,w
  4657  0CD8  0278               	subwf	___aldiv@dividend+1,w
  4658  0CD9  1D03               	skipz
  4659  0CDA  2CDD               	goto	u1035
  4660  0CDB  0873               	movf	___aldiv@divisor,w
  4661  0CDC  0277               	subwf	___aldiv@dividend,w
  4662  0CDD                     u1035:
  4663  0CDD  1C03               	skipc
  4664  0CDE  2CE0               	goto	u1031
  4665  0CDF  2CE1               	goto	u1030
  4666  0CE0                     u1031:
  4667  0CE0  2CF0               	goto	l1361
  4668  0CE1                     u1030:
  4669  0CE1                     l1357:
  4670  0CE1  0873               	movf	___aldiv@divisor,w
  4671  0CE2  02F7               	subwf	___aldiv@dividend,f
  4672  0CE3  0874               	movf	___aldiv@divisor+1,w
  4673  0CE4  1C03               	skipc
  4674  0CE5  0F74               	incfsz	___aldiv@divisor+1,w
  4675  0CE6  02F8               	subwf	___aldiv@dividend+1,f
  4676  0CE7  0875               	movf	___aldiv@divisor+2,w
  4677  0CE8  1C03               	skipc
  4678  0CE9  0F75               	incfsz	___aldiv@divisor+2,w
  4679  0CEA  02F9               	subwf	___aldiv@dividend+2,f
  4680  0CEB  0876               	movf	___aldiv@divisor+3,w
  4681  0CEC  1C03               	skipc
  4682  0CED  0F76               	incfsz	___aldiv@divisor+3,w
  4683  0CEE  02FA               	subwf	___aldiv@dividend+3,f
  4684  0CEF                     l1359:
  4685  0CEF  1423               	bsf	___aldiv@quotient,0
  4686  0CF0                     l1361:
  4687  0CF0  3001               	movlw	1
  4688  0CF1                     u1045:
  4689  0CF1  1003               	clrc
  4690  0CF2  0CF6               	rrf	___aldiv@divisor+3,f
  4691  0CF3  0CF5               	rrf	___aldiv@divisor+2,f
  4692  0CF4  0CF4               	rrf	___aldiv@divisor+1,f
  4693  0CF5  0CF3               	rrf	___aldiv@divisor,f
  4694  0CF6  3EFF               	addlw	-1
  4695  0CF7  1D03               	skipz
  4696  0CF8  2CF1               	goto	u1045
  4697  0CF9                     l1363:
  4698  0CF9  3001               	movlw	1
  4699  0CFA  02A1               	subwf	___aldiv@counter,f
  4700  0CFB  1D03               	btfss	3,2
  4701  0CFC  2CFE               	goto	u1051
  4702  0CFD  2CFF               	goto	u1050
  4703  0CFE                     u1051:
  4704  0CFE  2CC6               	goto	l1353
  4705  0CFF                     u1050:
  4706  0CFF                     l1365:
  4707  0CFF  0822               	movf	___aldiv@sign,w
  4708  0D00  1903               	btfsc	3,2
  4709  0D01  2D03               	goto	u1061
  4710  0D02  2D04               	goto	u1060
  4711  0D03                     u1061:
  4712  0D03  2D0F               	goto	l1369
  4713  0D04                     u1060:
  4714  0D04                     l1367:
  4715  0D04  09A3               	comf	___aldiv@quotient,f
  4716  0D05  09A4               	comf	___aldiv@quotient+1,f
  4717  0D06  09A5               	comf	___aldiv@quotient+2,f
  4718  0D07  09A6               	comf	___aldiv@quotient+3,f
  4719  0D08  0AA3               	incf	___aldiv@quotient,f
  4720  0D09  1903               	skipnz
  4721  0D0A  0AA4               	incf	___aldiv@quotient+1,f
  4722  0D0B  1903               	skipnz
  4723  0D0C  0AA5               	incf	___aldiv@quotient+2,f
  4724  0D0D  1903               	skipnz
  4725  0D0E  0AA6               	incf	___aldiv@quotient+3,f
  4726  0D0F                     l1369:
  4727  0D0F  0826               	movf	___aldiv@quotient+3,w
  4728  0D10  00F6               	movwf	?___aldiv+3
  4729  0D11  0825               	movf	___aldiv@quotient+2,w
  4730  0D12  00F5               	movwf	?___aldiv+2
  4731  0D13  0824               	movf	___aldiv@quotient+1,w
  4732  0D14  00F4               	movwf	?___aldiv+1
  4733  0D15  0823               	movf	___aldiv@quotient,w
  4734  0D16  00F3               	movwf	?___aldiv
  4735  0D17                     l394:
  4736  0D17  0008               	return
  4737  0D18                     __end_of___aldiv:
  4738                           
  4739                           	psect	text13
  4740  0D18                     __ptext13:	
  4741 ;; *************** function _BMP280_begin *****************
  4742 ;; Defined at:
  4743 ;;		line 156 in file "BMP280.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  mode            1    wreg     enum E1304
  4746 ;;  T_sampling      1   10[BANK0 ] enum E1309
  4747 ;;  P_sampling      1   11[BANK0 ] enum E1309
  4748 ;;  filter          1   12[BANK0 ] enum E1317
  4749 ;;  standby         1   13[BANK0 ] enum E1324
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  mode            1   18[BANK0 ] enum E1304
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2   10[BANK0 ] int 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0, pclath, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4761 ;;      Params:         0       4       0       0       0
  4762 ;;      Locals:         0       1       0       0       0
  4763 ;;      Temps:          0       4       0       0       0
  4764 ;;      Totals:         0       9       0       0       0
  4765 ;;Total ram usage:        9 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    6
  4768 ;; This function calls:
  4769 ;;		_BMP280_Configure
  4770 ;;		_BMP280_Read16
  4771 ;;		_BMP280_Read8
  4772 ;;		_BMP280_Write
  4773 ;; This function is called by:
  4774 ;;		_main
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _BMP280_begin
  4780  0D18                     _BMP280_begin:
  4781                           
  4782                           ;incstack = 0
  4783                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  4784                           ;BMP280_begin@mode stored from wreg
  4785  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  4786  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  4787  0D1A  00B2               	movwf	BMP280_begin@mode
  4788  0D1B                     l1377:
  4789                           
  4790                           ;BMP280.c: 156: int BMP280_begin(BMP280_mode mode,;BMP280.c: 157:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 158:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 159:                   BMP280_filter filter ,;BMP280.c: 160:                   
      +                          standby_time standby );BMP280.c: 161: {;BMP280.c: 162:   if(BMP280_Read8(0xD0) != 0x58)
  4791  0D1B  30D0               	movlw	208
  4792  0D1C  120A  158A  22C7  120A  158A  	fcall	_BMP280_Read8
  4793  0D21  3A58               	xorlw	88
  4794  0D22  1903               	skipnz
  4795  0D23  2D25               	goto	u1071
  4796  0D24  2D26               	goto	u1070
  4797  0D25                     u1071:
  4798  0D25  2D27               	goto	l1381
  4799  0D26                     u1070:
  4800  0D26  2DF5               	goto	l174
  4801  0D27                     l1381:
  4802                           
  4803                           ;BMP280.c: 166:   BMP280_Write(0xE0, 0xB6);
  4804  0D27  30B6               	movlw	182
  4805  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0D2A  00AE               	movwf	??_BMP280_begin
  4808  0D2B  082E               	movf	??_BMP280_begin,w
  4809  0D2C  00F5               	movwf	BMP280_Write@_data
  4810  0D2D  30E0               	movlw	224
  4811  0D2E  120A  158A  2234  120A  158A  	fcall	_BMP280_Write
  4812  0D33                     l1383:
  4813                           
  4814                           ;BMP280.c: 167:   _delay((unsigned long)((100)*(8000000/4000.0)));
  4815  0D33  3002               	movlw	2
  4816  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  4817  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  4818  0D36  00B0               	movwf	??_BMP280_begin+2
  4819  0D37  3004               	movlw	4
  4820  0D38  00AF               	movwf	??_BMP280_begin+1
  4821  0D39  30B9               	movlw	185
  4822  0D3A  00AE               	movwf	??_BMP280_begin
  4823  0D3B                     u1407:
  4824  0D3B  0BAE               	decfsz	??_BMP280_begin,f
  4825  0D3C  2D3B               	goto	u1407
  4826  0D3D  0BAF               	decfsz	??_BMP280_begin+1,f
  4827  0D3E  2D3B               	goto	u1407
  4828  0D3F  0BB0               	decfsz	??_BMP280_begin+2,f
  4829  0D40  2D3B               	goto	u1407
  4830  0D41  2D42               	nop2
  4831  0D42                     l1387:	
  4832                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  4833                           
  4834                           
  4835                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  4836  0D42  30F3               	movlw	243
  4837  0D43  120A  158A  22C7  120A  158A  	fcall	_BMP280_Read8
  4838  0D48  3901               	andlw	1
  4839  0D49  1D03               	btfss	3,2
  4840  0D4A  2D4C               	goto	u1081
  4841  0D4B  2D4D               	goto	u1080
  4842  0D4C                     u1081:
  4843  0D4C  2D33               	goto	l1383
  4844  0D4D                     u1080:
  4845  0D4D                     l1389:
  4846                           
  4847                           ;BMP280.c: 173:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  4848  0D4D  3088               	movlw	136
  4849  0D4E  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4850  0D53  087A               	movf	?_BMP280_Read16+1,w
  4851  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  4852  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  4853  0D56  00AD               	movwf	(_BMP280_calib+1)^(0+128)
  4854  0D57  0879               	movf	?_BMP280_Read16,w
  4855  0D58  00AC               	movwf	_BMP280_calib^(0+128)
  4856                           
  4857                           ;BMP280.c: 174:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  4858  0D59  308A               	movlw	138
  4859  0D5A  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4860  0D5F  087A               	movf	?_BMP280_Read16+1,w
  4861  0D60  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0D61  1303               	bcf	3,6	;RP1=0, select bank1
  4863  0D62  00AF               	movwf	((_BMP280_calib+1)^(0+128)+2)
  4864  0D63  0879               	movf	?_BMP280_Read16,w
  4865  0D64  00AE               	movwf	(_BMP280_calib^(0+128)+2)
  4866                           
  4867                           ;BMP280.c: 175:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  4868  0D65  308C               	movlw	140
  4869  0D66  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4870  0D6B  087A               	movf	?_BMP280_Read16+1,w
  4871  0D6C  1683               	bsf	3,5	;RP0=1, select bank1
  4872  0D6D  1303               	bcf	3,6	;RP1=0, select bank1
  4873  0D6E  00B1               	movwf	((_BMP280_calib+1)^(0+128)+4)
  4874  0D6F  0879               	movf	?_BMP280_Read16,w
  4875  0D70  00B0               	movwf	(_BMP280_calib^(0+128)+4)
  4876                           
  4877                           ;BMP280.c: 177:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  4878  0D71  308E               	movlw	142
  4879  0D72  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4880  0D77  087A               	movf	?_BMP280_Read16+1,w
  4881  0D78  1683               	bsf	3,5	;RP0=1, select bank1
  4882  0D79  1303               	bcf	3,6	;RP1=0, select bank1
  4883  0D7A  00B3               	movwf	((_BMP280_calib+1)^(0+128)+6)
  4884  0D7B  0879               	movf	?_BMP280_Read16,w
  4885  0D7C  00B2               	movwf	(_BMP280_calib^(0+128)+6)
  4886                           
  4887                           ;BMP280.c: 178:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  4888  0D7D  3090               	movlw	144
  4889  0D7E  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4890  0D83  087A               	movf	?_BMP280_Read16+1,w
  4891  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  4892  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  4893  0D86  00B5               	movwf	((_BMP280_calib+1)^(0+128)+8)
  4894  0D87  0879               	movf	?_BMP280_Read16,w
  4895  0D88  00B4               	movwf	(_BMP280_calib^(0+128)+8)
  4896                           
  4897                           ;BMP280.c: 179:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  4898  0D89  3092               	movlw	146
  4899  0D8A  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4900  0D8F  087A               	movf	?_BMP280_Read16+1,w
  4901  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  4902  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  4903  0D92  00B7               	movwf	((_BMP280_calib+1)^(0+128)+10)
  4904  0D93  0879               	movf	?_BMP280_Read16,w
  4905  0D94  00B6               	movwf	(_BMP280_calib^(0+128)+10)
  4906                           
  4907                           ;BMP280.c: 180:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  4908  0D95  3094               	movlw	148
  4909  0D96  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4910  0D9B  087A               	movf	?_BMP280_Read16+1,w
  4911  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  4912  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  4913  0D9E  00B9               	movwf	((_BMP280_calib+1)^(0+128)+12)
  4914  0D9F  0879               	movf	?_BMP280_Read16,w
  4915  0DA0  00B8               	movwf	(_BMP280_calib^(0+128)+12)
  4916                           
  4917                           ;BMP280.c: 181:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  4918  0DA1  3096               	movlw	150
  4919  0DA2  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4920  0DA7  087A               	movf	?_BMP280_Read16+1,w
  4921  0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  4922  0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  4923  0DAA  00BB               	movwf	((_BMP280_calib+1)^(0+128)+14)
  4924  0DAB  0879               	movf	?_BMP280_Read16,w
  4925  0DAC  00BA               	movwf	(_BMP280_calib^(0+128)+14)
  4926                           
  4927                           ;BMP280.c: 182:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  4928  0DAD  3098               	movlw	152
  4929  0DAE  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4930  0DB3  087A               	movf	?_BMP280_Read16+1,w
  4931  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  4932  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  4933  0DB6  00BD               	movwf	((_BMP280_calib+1)^(0+128)+16)
  4934  0DB7  0879               	movf	?_BMP280_Read16,w
  4935  0DB8  00BC               	movwf	(_BMP280_calib^(0+128)+16)
  4936                           
  4937                           ;BMP280.c: 183:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  4938  0DB9  309A               	movlw	154
  4939  0DBA  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4940  0DBF  087A               	movf	?_BMP280_Read16+1,w
  4941  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  4942  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  4943  0DC2  00BF               	movwf	((_BMP280_calib+1)^(0+128)+18)
  4944  0DC3  0879               	movf	?_BMP280_Read16,w
  4945  0DC4  00BE               	movwf	(_BMP280_calib^(0+128)+18)
  4946                           
  4947                           ;BMP280.c: 184:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  4948  0DC5  309C               	movlw	156
  4949  0DC6  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4950  0DCB  087A               	movf	?_BMP280_Read16+1,w
  4951  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  4952  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  4953  0DCE  00C1               	movwf	((_BMP280_calib+1)^(0+128)+20)
  4954  0DCF  0879               	movf	?_BMP280_Read16,w
  4955  0DD0  00C0               	movwf	(_BMP280_calib^(0+128)+20)
  4956                           
  4957                           ;BMP280.c: 185:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  4958  0DD1  309E               	movlw	158
  4959  0DD2  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4960  0DD7  087A               	movf	?_BMP280_Read16+1,w
  4961  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  4962  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  4963  0DDA  00C3               	movwf	((_BMP280_calib+1)^(0+128)+22)
  4964  0DDB  0879               	movf	?_BMP280_Read16,w
  4965  0DDC  00C2               	movwf	(_BMP280_calib^(0+128)+22)
  4966                           
  4967                           ;BMP280.c: 187:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  4968  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0DDF  082A               	movf	BMP280_begin@T_sampling,w
  4971  0DE0  00AE               	movwf	??_BMP280_begin
  4972  0DE1  082E               	movf	??_BMP280_begin,w
  4973  0DE2  00A0               	movwf	BMP280_Configure@T_sampling
  4974  0DE3  082B               	movf	BMP280_begin@P_sampling,w
  4975  0DE4  00AF               	movwf	??_BMP280_begin+1
  4976  0DE5  082F               	movf	??_BMP280_begin+1,w
  4977  0DE6  00A1               	movwf	BMP280_Configure@P_sampling
  4978  0DE7  082C               	movf	BMP280_begin@filter,w
  4979  0DE8  00B0               	movwf	??_BMP280_begin+2
  4980  0DE9  0830               	movf	??_BMP280_begin+2,w
  4981  0DEA  00A2               	movwf	BMP280_Configure@filter
  4982  0DEB  082D               	movf	BMP280_begin@standby,w
  4983  0DEC  00B1               	movwf	??_BMP280_begin+3
  4984  0DED  0831               	movf	??_BMP280_begin+3,w
  4985  0DEE  00A3               	movwf	BMP280_Configure@standby
  4986  0DEF  0832               	movf	BMP280_begin@mode,w
  4987  0DF0  120A  158A  230B  120A  158A  	fcall	_BMP280_Configure
  4988  0DF5                     l174:
  4989  0DF5  0008               	return
  4990  0DF6                     __end_of_BMP280_begin:
  4991                           
  4992                           	psect	text14
  4993  0AC7                     __ptext14:	
  4994 ;; *************** function _BMP280_Read8 *****************
  4995 ;; Defined at:
  4996 ;;		line 106 in file "BMP280.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  reg_addr        1    wreg     unsigned char 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  reg_addr        1    0[BANK0 ] unsigned char 
  5001 ;;  ret             1    1[BANK0 ] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      unsigned char 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         0       0       0       0       0
  5012 ;;      Locals:         0       2       0       0       0
  5013 ;;      Temps:          2       0       0       0       0
  5014 ;;      Totals:         2       2       0       0       0
  5015 ;;Total ram usage:        4 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    4
  5018 ;; This function calls:
  5019 ;;		_I2C_Master_Read
  5020 ;;		_I2C_Master_Start
  5021 ;;		_I2C_Master_Stop
  5022 ;;		_I2C_Master_Write
  5023 ;; This function is called by:
  5024 ;;		_BMP280_begin
  5025 ;;		_BMP280_ForcedMeasurement
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           
  5030                           ;psect for function _BMP280_Read8
  5031  0AC7                     _BMP280_Read8:
  5032                           
  5033                           ;incstack = 0
  5034                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  5035                           ;BMP280_Read8@reg_addr stored from wreg
  5036  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0AC9  00A0               	movwf	BMP280_Read8@reg_addr
  5039  0ACA                     l1257:
  5040                           
  5041                           ;BMP280.c: 106: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 107: {;BMP280.c: 108:  
      +                           uint8_t ret;;BMP280.c: 110:   I2C_Master_Start();
  5042  0ACA  120A  158A  218C  120A  158A  	fcall	_I2C_Master_Start
  5043                           
  5044                           ;BMP280.c: 111:   I2C_Master_Write( 0xEE);
  5045  0ACF  30EE               	movlw	238
  5046  0AD0  00F3               	movwf	I2C_Master_Write@d
  5047  0AD1  3000               	movlw	0
  5048  0AD2  00F4               	movwf	I2C_Master_Write@d+1
  5049  0AD3  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5050                           
  5051                           ;BMP280.c: 112:   I2C_Master_Write(reg_addr);
  5052  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  5053  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  5054  0ADA  0820               	movf	BMP280_Read8@reg_addr,w
  5055  0ADB  00F9               	movwf	??_BMP280_Read8
  5056  0ADC  01FA               	clrf	??_BMP280_Read8+1
  5057  0ADD  0879               	movf	??_BMP280_Read8,w
  5058  0ADE  00F3               	movwf	I2C_Master_Write@d
  5059  0ADF  087A               	movf	??_BMP280_Read8+1,w
  5060  0AE0  00F4               	movwf	I2C_Master_Write@d+1
  5061  0AE1  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5062                           
  5063                           ;BMP280.c: 113:   I2C_Master_Start();
  5064  0AE6  120A  158A  218C  120A  158A  	fcall	_I2C_Master_Start
  5065                           
  5066                           ;BMP280.c: 114:   I2C_Master_Write( 0xEE | 1);
  5067  0AEB  30EF               	movlw	239
  5068  0AEC  00F3               	movwf	I2C_Master_Write@d
  5069  0AED  3000               	movlw	0
  5070  0AEE  00F4               	movwf	I2C_Master_Write@d+1
  5071  0AEF  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5072                           
  5073                           ;BMP280.c: 115:   ret = I2C_Master_Read(0);
  5074  0AF4  3000               	movlw	0
  5075  0AF5  00F3               	movwf	I2C_Master_Read@a
  5076  0AF6  00F4               	movwf	I2C_Master_Read@a+1
  5077  0AF7  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  5078  0AFC  0873               	movf	?_I2C_Master_Read,w
  5079  0AFD  00F9               	movwf	??_BMP280_Read8
  5080  0AFE  0879               	movf	??_BMP280_Read8,w
  5081  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0B01  00A1               	movwf	BMP280_Read8@ret
  5084                           
  5085                           ;BMP280.c: 116:   I2C_Master_Stop();
  5086  0B02  120A  158A  2195  120A  158A  	fcall	_I2C_Master_Stop
  5087  0B07                     l1259:
  5088                           
  5089                           ;BMP280.c: 118:   return ret;
  5090  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5091  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5092  0B09  0821               	movf	BMP280_Read8@ret,w
  5093  0B0A                     l164:
  5094  0B0A  0008               	return
  5095  0B0B                     __end_of_BMP280_Read8:
  5096                           
  5097                           	psect	text15
  5098  0B9B                     __ptext15:	
  5099 ;; *************** function _BMP280_Read16 *****************
  5100 ;; Defined at:
  5101 ;;		line 122 in file "BMP280.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  reg_addr        1    wreg     unsigned char 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  reg_addr        1    2[BANK0 ] unsigned char 
  5106 ;;  ret             2    3[BANK0 ] struct .
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2    9[COMMON] unsigned int 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5116 ;;      Params:         2       0       0       0       0
  5117 ;;      Locals:         0       3       0       0       0
  5118 ;;      Temps:          0       2       0       0       0
  5119 ;;      Totals:         2       5       0       0       0
  5120 ;;Total ram usage:        7 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    4
  5123 ;; This function calls:
  5124 ;;		_I2C_Master_Read
  5125 ;;		_I2C_Master_Start
  5126 ;;		_I2C_Master_Stop
  5127 ;;		_I2C_Master_Write
  5128 ;; This function is called by:
  5129 ;;		_BMP280_begin
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           
  5134                           ;psect for function _BMP280_Read16
  5135  0B9B                     _BMP280_Read16:
  5136                           
  5137                           ;incstack = 0
  5138                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  5139                           ;BMP280_Read16@reg_addr stored from wreg
  5140  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0B9D  00A2               	movwf	BMP280_Read16@reg_addr
  5143  0B9E                     l1263:
  5144                           
  5145                           ;BMP280.c: 122: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 123: {;BMP280.c: 128:
      +                             } ret;;BMP280.c: 130:   I2C_Master_Start();
  5146  0B9E  120A  158A  218C  120A  158A  	fcall	_I2C_Master_Start
  5147                           
  5148                           ;BMP280.c: 131:   I2C_Master_Write( 0xEE);
  5149  0BA3  30EE               	movlw	238
  5150  0BA4  00F3               	movwf	I2C_Master_Write@d
  5151  0BA5  3000               	movlw	0
  5152  0BA6  00F4               	movwf	I2C_Master_Write@d+1
  5153  0BA7  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5154                           
  5155                           ;BMP280.c: 132:   I2C_Master_Write(reg_addr);
  5156  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  5157  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  5158  0BAE  0822               	movf	BMP280_Read16@reg_addr,w
  5159  0BAF  00A0               	movwf	??_BMP280_Read16
  5160  0BB0  01A1               	clrf	??_BMP280_Read16+1
  5161  0BB1  0820               	movf	??_BMP280_Read16,w
  5162  0BB2  00F3               	movwf	I2C_Master_Write@d
  5163  0BB3  0821               	movf	??_BMP280_Read16+1,w
  5164  0BB4  00F4               	movwf	I2C_Master_Write@d+1
  5165  0BB5  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5166                           
  5167                           ;BMP280.c: 133:   I2C_Master_Start();
  5168  0BBA  120A  158A  218C  120A  158A  	fcall	_I2C_Master_Start
  5169                           
  5170                           ;BMP280.c: 134:   I2C_Master_Write(0xEE | 1);
  5171  0BBF  30EF               	movlw	239
  5172  0BC0  00F3               	movwf	I2C_Master_Write@d
  5173  0BC1  3000               	movlw	0
  5174  0BC2  00F4               	movwf	I2C_Master_Write@d+1
  5175  0BC3  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5176                           
  5177                           ;BMP280.c: 135:   ret.b[0] = I2C_Master_Read( 1);
  5178  0BC8  3001               	movlw	1
  5179  0BC9  00F3               	movwf	I2C_Master_Read@a
  5180  0BCA  3000               	movlw	0
  5181  0BCB  00F4               	movwf	I2C_Master_Read@a+1
  5182  0BCC  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  5183  0BD1  0873               	movf	?_I2C_Master_Read,w
  5184  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  5185  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  5186  0BD4  00A0               	movwf	??_BMP280_Read16
  5187  0BD5  0820               	movf	??_BMP280_Read16,w
  5188  0BD6  00A3               	movwf	BMP280_Read16@ret
  5189                           
  5190                           ;BMP280.c: 136:   ret.b[1] = I2C_Master_Read( 0);
  5191  0BD7  3000               	movlw	0
  5192  0BD8  00F3               	movwf	I2C_Master_Read@a
  5193  0BD9  00F4               	movwf	I2C_Master_Read@a+1
  5194  0BDA  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  5195  0BDF  0873               	movf	?_I2C_Master_Read,w
  5196  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  5198  0BE2  00A0               	movwf	??_BMP280_Read16
  5199  0BE3  0820               	movf	??_BMP280_Read16,w
  5200  0BE4  00A4               	movwf	BMP280_Read16@ret+1
  5201                           
  5202                           ;BMP280.c: 137:   I2C_Master_Stop();
  5203  0BE5  120A  158A  2195  120A  158A  	fcall	_I2C_Master_Stop
  5204  0BEA                     l1265:
  5205                           
  5206                           ;BMP280.c: 139:   return(ret.w);
  5207  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  5208  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  5209  0BEC  0824               	movf	BMP280_Read16@ret+1,w
  5210  0BED  00FA               	movwf	?_BMP280_Read16+1
  5211  0BEE  0823               	movf	BMP280_Read16@ret,w
  5212  0BEF  00F9               	movwf	?_BMP280_Read16
  5213  0BF0                     l167:
  5214  0BF0  0008               	return
  5215  0BF1                     __end_of_BMP280_Read16:
  5216                           
  5217                           	psect	text16
  5218  0A61                     __ptext16:	
  5219 ;; *************** function _I2C_Master_Read *****************
  5220 ;; Defined at:
  5221 ;;		line 75 in file "I2C.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  a               2    3[COMMON] unsigned short 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  temp1           2    7[COMMON] unsigned short 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  2    3[COMMON] unsigned short 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0, pclath, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5235 ;;      Params:         2       0       0       0       0
  5236 ;;      Locals:         2       0       0       0       0
  5237 ;;      Temps:          2       0       0       0       0
  5238 ;;      Totals:         6       0       0       0       0
  5239 ;;Total ram usage:        6 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    3
  5242 ;; This function calls:
  5243 ;;		_I2C_Master_Wait
  5244 ;; This function is called by:
  5245 ;;		_BMP280_Read8
  5246 ;;		_BMP280_Read16
  5247 ;;		_BMP280_Update
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _I2C_Master_Read
  5253  0A61                     _I2C_Master_Read:
  5254  0A61                     l1199:	
  5255                           ;incstack = 0
  5256                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5257                           
  5258                           
  5259                           ;I2C.c: 76:     unsigned short temp1;;I2C.c: 77:     I2C_Master_Wait();
  5260  0A61  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5261  0A66                     l1201:
  5262                           
  5263                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5264  0A66  1683               	bsf	3,5	;RP0=1, select bank1
  5265  0A67  1303               	bcf	3,6	;RP1=0, select bank1
  5266  0A68  1591               	bsf	17,3	;volatile
  5267                           
  5268                           ;I2C.c: 79:     I2C_Master_Wait();
  5269  0A69  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5270  0A6E                     l1203:
  5271                           
  5272                           ;I2C.c: 80:     temp1 = SSPBUF;
  5273  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  5274  0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  5275  0A70  0813               	movf	19,w	;volatile
  5276  0A71  00F5               	movwf	??_I2C_Master_Read
  5277  0A72  01F6               	clrf	??_I2C_Master_Read+1
  5278  0A73  0875               	movf	??_I2C_Master_Read,w
  5279  0A74  00F7               	movwf	I2C_Master_Read@temp1
  5280  0A75  0876               	movf	??_I2C_Master_Read+1,w
  5281  0A76  00F8               	movwf	I2C_Master_Read@temp1+1
  5282  0A77                     l1205:
  5283                           
  5284                           ;I2C.c: 81:     I2C_Master_Wait();
  5285  0A77  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5286  0A7C                     l1207:
  5287                           
  5288                           ;I2C.c: 82:     if (a == 1) {
  5289  0A7C  0373               	decf	I2C_Master_Read@a,w
  5290  0A7D  0474               	iorwf	I2C_Master_Read@a+1,w
  5291  0A7E  1D03               	btfss	3,2
  5292  0A7F  2A81               	goto	u721
  5293  0A80  2A82               	goto	u720
  5294  0A81                     u721:
  5295  0A81  2A86               	goto	l135
  5296  0A82                     u720:
  5297  0A82                     l1209:
  5298                           
  5299                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5300  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  5301  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  5302  0A84  1291               	bcf	17,5	;volatile
  5303                           
  5304                           ;I2C.c: 84:     } else {
  5305  0A85  2A89               	goto	l136
  5306  0A86                     l135:
  5307                           
  5308                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5309  0A86  1683               	bsf	3,5	;RP0=1, select bank1
  5310  0A87  1303               	bcf	3,6	;RP1=0, select bank1
  5311  0A88  1691               	bsf	17,5	;volatile
  5312  0A89                     l136:	
  5313                           ;I2C.c: 86:     }
  5314                           
  5315                           
  5316                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5317  0A89  1611               	bsf	17,4	;volatile
  5318  0A8A                     l1211:
  5319                           
  5320                           ;I2C.c: 88:     return temp1;
  5321  0A8A  0878               	movf	I2C_Master_Read@temp1+1,w
  5322  0A8B  00F4               	movwf	?_I2C_Master_Read+1
  5323  0A8C  0877               	movf	I2C_Master_Read@temp1,w
  5324  0A8D  00F3               	movwf	?_I2C_Master_Read
  5325  0A8E                     l137:
  5326  0A8E  0008               	return
  5327  0A8F                     __end_of_I2C_Master_Read:
  5328                           
  5329                           	psect	text17
  5330  0B0B                     __ptext17:	
  5331 ;; *************** function _BMP280_Configure *****************
  5332 ;; Defined at:
  5333 ;;		line 143 in file "BMP280.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  mode            1    wreg     enum E1304
  5336 ;;  T_sampling      1    0[BANK0 ] enum E1309
  5337 ;;  P_sampling      1    1[BANK0 ] enum E1309
  5338 ;;  filter          1    2[BANK0 ] enum E1317
  5339 ;;  standby         1    3[BANK0 ] enum E1324
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  mode            1    7[BANK0 ] enum E1304
  5342 ;;  _config         1    9[BANK0 ] unsigned char 
  5343 ;;  _ctrl_meas      1    8[BANK0 ] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, pclath, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5353 ;;      Params:         0       4       0       0       0
  5354 ;;      Locals:         0       3       0       0       0
  5355 ;;      Temps:          0       3       0       0       0
  5356 ;;      Totals:         0      10       0       0       0
  5357 ;;Total ram usage:       10 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    5
  5360 ;; This function calls:
  5361 ;;		_BMP280_Write
  5362 ;; This function is called by:
  5363 ;;		_BMP280_begin
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           
  5368                           ;psect for function _BMP280_Configure
  5369  0B0B                     _BMP280_Configure:
  5370                           
  5371                           ;incstack = 0
  5372                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  5373                           ;BMP280_Configure@mode stored from wreg
  5374  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  5375  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  5376  0B0D  00A7               	movwf	BMP280_Configure@mode
  5377  0B0E                     l1269:
  5378                           
  5379                           ;BMP280.c: 143: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 144:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 145: {;BMP280.c: 146:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 148:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  5380  0B0E  0822               	movf	BMP280_Configure@filter,w
  5381  0B0F  00A4               	movwf	??_BMP280_Configure
  5382  0B10  3002               	movlw	2
  5383  0B11                     u825:
  5384  0B11  1003               	clrc
  5385  0B12  0DA4               	rlf	??_BMP280_Configure,f
  5386  0B13  3EFF               	addlw	-1
  5387  0B14  1D03               	skipz
  5388  0B15  2B11               	goto	u825
  5389  0B16  0823               	movf	BMP280_Configure@standby,w
  5390  0B17  00A5               	movwf	??_BMP280_Configure+1
  5391  0B18  3004               	movlw	4
  5392  0B19                     u835:
  5393  0B19  1003               	clrc
  5394  0B1A  0DA5               	rlf	??_BMP280_Configure+1,f
  5395  0B1B  3EFF               	addlw	-1
  5396  0B1C  1D03               	skipz
  5397  0B1D  2B19               	goto	u835
  5398  0B1E  1003               	clrc
  5399  0B1F  0D25               	rlf	??_BMP280_Configure+1,w
  5400  0B20  0424               	iorwf	??_BMP280_Configure,w
  5401  0B21  39FC               	andlw	252
  5402  0B22  00A6               	movwf	??_BMP280_Configure+2
  5403  0B23  0826               	movf	??_BMP280_Configure+2,w
  5404  0B24  00A9               	movwf	BMP280_Configure@_config
  5405                           
  5406                           ;BMP280.c: 149:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  5407  0B25  0821               	movf	BMP280_Configure@P_sampling,w
  5408  0B26  00A4               	movwf	??_BMP280_Configure
  5409  0B27  3002               	movlw	2
  5410  0B28                     u845:
  5411  0B28  1003               	clrc
  5412  0B29  0DA4               	rlf	??_BMP280_Configure,f
  5413  0B2A  3EFF               	addlw	-1
  5414  0B2B  1D03               	skipz
  5415  0B2C  2B28               	goto	u845
  5416  0B2D  0820               	movf	BMP280_Configure@T_sampling,w
  5417  0B2E  00A5               	movwf	??_BMP280_Configure+1
  5418  0B2F  3004               	movlw	4
  5419  0B30                     u855:
  5420  0B30  1003               	clrc
  5421  0B31  0DA5               	rlf	??_BMP280_Configure+1,f
  5422  0B32  3EFF               	addlw	-1
  5423  0B33  1D03               	skipz
  5424  0B34  2B30               	goto	u855
  5425  0B35  1003               	clrc
  5426  0B36  0D25               	rlf	??_BMP280_Configure+1,w
  5427  0B37  0424               	iorwf	??_BMP280_Configure,w
  5428  0B38  0427               	iorwf	BMP280_Configure@mode,w
  5429  0B39  00A6               	movwf	??_BMP280_Configure+2
  5430  0B3A  0826               	movf	??_BMP280_Configure+2,w
  5431  0B3B  00A8               	movwf	BMP280_Configure@_ctrl_meas
  5432  0B3C                     l1271:
  5433                           
  5434                           ;BMP280.c: 151:   BMP280_Write(0xF5, _config);
  5435  0B3C  0829               	movf	BMP280_Configure@_config,w
  5436  0B3D  00A4               	movwf	??_BMP280_Configure
  5437  0B3E  0824               	movf	??_BMP280_Configure,w
  5438  0B3F  00F5               	movwf	BMP280_Write@_data
  5439  0B40  30F5               	movlw	245
  5440  0B41  120A  158A  2234  120A  158A  	fcall	_BMP280_Write
  5441  0B46                     l1273:
  5442                           
  5443                           ;BMP280.c: 152:   BMP280_Write(0xF4, _ctrl_meas);
  5444  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  5445  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  5446  0B48  0828               	movf	BMP280_Configure@_ctrl_meas,w
  5447  0B49  00A4               	movwf	??_BMP280_Configure
  5448  0B4A  0824               	movf	??_BMP280_Configure,w
  5449  0B4B  00F5               	movwf	BMP280_Write@_data
  5450  0B4C  30F4               	movlw	244
  5451  0B4D  120A  158A  2234  120A  158A  	fcall	_BMP280_Write
  5452  0B52                     l170:
  5453  0B52  0008               	return
  5454  0B53                     __end_of_BMP280_Configure:
  5455                           
  5456                           	psect	text18
  5457  0A34                     __ptext18:	
  5458 ;; *************** function _BMP280_Write *****************
  5459 ;; Defined at:
  5460 ;;		line 96 in file "BMP280.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  reg_addr        1    wreg     unsigned char 
  5463 ;;  _data           1    5[COMMON] unsigned char 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  reg_addr        1    8[COMMON] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0, pclath, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5475 ;;      Params:         1       0       0       0       0
  5476 ;;      Locals:         1       0       0       0       0
  5477 ;;      Temps:          2       0       0       0       0
  5478 ;;      Totals:         4       0       0       0       0
  5479 ;;Total ram usage:        4 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; Hardware stack levels required when called:    4
  5482 ;; This function calls:
  5483 ;;		_I2C_Master_Start
  5484 ;;		_I2C_Master_Stop
  5485 ;;		_I2C_Master_Write
  5486 ;; This function is called by:
  5487 ;;		_BMP280_Configure
  5488 ;;		_BMP280_begin
  5489 ;;		_BMP280_ForcedMeasurement
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function _BMP280_Write
  5495  0A34                     _BMP280_Write:
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  5499                           ;BMP280_Write@reg_addr stored from wreg
  5500  0A34  00F8               	movwf	BMP280_Write@reg_addr
  5501  0A35                     l1215:
  5502                           
  5503                           ;BMP280.c: 96: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 97: {;BMP280
      +                          .c: 98:   I2C_Master_Start();
  5504  0A35  120A  158A  218C  120A  158A  	fcall	_I2C_Master_Start
  5505                           
  5506                           ;BMP280.c: 99:   I2C_Master_Write(0xEE);
  5507  0A3A  30EE               	movlw	238
  5508  0A3B  00F3               	movwf	I2C_Master_Write@d
  5509  0A3C  3000               	movlw	0
  5510  0A3D  00F4               	movwf	I2C_Master_Write@d+1
  5511  0A3E  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5512                           
  5513                           ;BMP280.c: 100:   I2C_Master_Write (reg_addr);
  5514  0A43  0878               	movf	BMP280_Write@reg_addr,w
  5515  0A44  00F6               	movwf	??_BMP280_Write
  5516  0A45  01F7               	clrf	??_BMP280_Write+1
  5517  0A46  0876               	movf	??_BMP280_Write,w
  5518  0A47  00F3               	movwf	I2C_Master_Write@d
  5519  0A48  0877               	movf	??_BMP280_Write+1,w
  5520  0A49  00F4               	movwf	I2C_Master_Write@d+1
  5521  0A4A  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5522                           
  5523                           ;BMP280.c: 101:   I2C_Master_Write( _data);
  5524  0A4F  0875               	movf	BMP280_Write@_data,w
  5525  0A50  00F6               	movwf	??_BMP280_Write
  5526  0A51  01F7               	clrf	??_BMP280_Write+1
  5527  0A52  0876               	movf	??_BMP280_Write,w
  5528  0A53  00F3               	movwf	I2C_Master_Write@d
  5529  0A54  0877               	movf	??_BMP280_Write+1,w
  5530  0A55  00F4               	movwf	I2C_Master_Write@d+1
  5531  0A56  120A  158A  21A8  120A  158A  	fcall	_I2C_Master_Write
  5532                           
  5533                           ;BMP280.c: 102:   I2C_Master_Stop();
  5534  0A5B  120A  158A  2195  120A  158A  	fcall	_I2C_Master_Stop
  5535  0A60                     l161:
  5536  0A60  0008               	return
  5537  0A61                     __end_of_BMP280_Write:
  5538                           
  5539                           	psect	text19
  5540  09A8                     __ptext19:	
  5541 ;; *************** function _I2C_Master_Write *****************
  5542 ;; Defined at:
  5543 ;;		line 66 in file "I2C.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  d               2    3[COMMON] unsigned int 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;		None
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      void 
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0, pclath, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5557 ;;      Params:         2       0       0       0       0
  5558 ;;      Locals:         0       0       0       0       0
  5559 ;;      Temps:          0       0       0       0       0
  5560 ;;      Totals:         2       0       0       0       0
  5561 ;;Total ram usage:        2 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    3
  5564 ;; This function calls:
  5565 ;;		_I2C_Master_Wait
  5566 ;; This function is called by:
  5567 ;;		_BMP280_Write
  5568 ;;		_BMP280_Read8
  5569 ;;		_BMP280_Read16
  5570 ;;		_BMP280_Update
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           
  5575                           ;psect for function _I2C_Master_Write
  5576  09A8                     _I2C_Master_Write:
  5577  09A8                     l1195:	
  5578                           ;incstack = 0
  5579                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5580                           
  5581                           
  5582                           ;I2C.c: 67:     I2C_Master_Wait();
  5583  09A8  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5584  09AD                     l1197:
  5585                           
  5586                           ;I2C.c: 68:     SSPBUF = d;
  5587  09AD  0873               	movf	I2C_Master_Write@d,w
  5588  09AE  1283               	bcf	3,5	;RP0=0, select bank0
  5589  09AF  1303               	bcf	3,6	;RP1=0, select bank0
  5590  09B0  0093               	movwf	19	;volatile
  5591  09B1                     l132:
  5592  09B1  0008               	return
  5593  09B2                     __end_of_I2C_Master_Write:
  5594                           
  5595                           	psect	text20
  5596  0995                     __ptext20:	
  5597 ;; *************** function _I2C_Master_Stop *****************
  5598 ;; Defined at:
  5599 ;;		line 56 in file "I2C.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0, pclath, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5613 ;;      Params:         0       0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0
  5616 ;;      Totals:         0       0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    3
  5620 ;; This function calls:
  5621 ;;		_I2C_Master_Wait
  5622 ;; This function is called by:
  5623 ;;		_BMP280_Write
  5624 ;;		_BMP280_Read8
  5625 ;;		_BMP280_Read16
  5626 ;;		_BMP280_Update
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function _I2C_Master_Stop
  5632  0995                     _I2C_Master_Stop:
  5633  0995                     l1191:	
  5634                           ;incstack = 0
  5635                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5636                           
  5637                           
  5638                           ;I2C.c: 57:     I2C_Master_Wait();
  5639  0995  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5640  099A                     l1193:
  5641                           
  5642                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5643  099A  1683               	bsf	3,5	;RP0=1, select bank1
  5644  099B  1303               	bcf	3,6	;RP1=0, select bank1
  5645  099C  1511               	bsf	17,2	;volatile
  5646  099D                     l129:
  5647  099D  0008               	return
  5648  099E                     __end_of_I2C_Master_Stop:
  5649                           
  5650                           	psect	text21
  5651  098C                     __ptext21:	
  5652 ;; *************** function _I2C_Master_Start *****************
  5653 ;; Defined at:
  5654 ;;		line 40 in file "I2C.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;		None
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0, pclath, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5668 ;;      Params:         0       0       0       0       0
  5669 ;;      Locals:         0       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0
  5671 ;;      Totals:         0       0       0       0       0
  5672 ;;Total ram usage:        0 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    3
  5675 ;; This function calls:
  5676 ;;		_I2C_Master_Wait
  5677 ;; This function is called by:
  5678 ;;		_BMP280_Write
  5679 ;;		_BMP280_Read8
  5680 ;;		_BMP280_Read16
  5681 ;;		_BMP280_Update
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           
  5686                           ;psect for function _I2C_Master_Start
  5687  098C                     _I2C_Master_Start:
  5688  098C                     l1187:	
  5689                           ;incstack = 0
  5690                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5691                           
  5692                           
  5693                           ;I2C.c: 41:     I2C_Master_Wait();
  5694  098C  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5695  0991                     l1189:
  5696                           
  5697                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  5698  0991  1683               	bsf	3,5	;RP0=1, select bank1
  5699  0992  1303               	bcf	3,6	;RP1=0, select bank1
  5700  0993  1411               	bsf	17,0	;volatile
  5701  0994                     l123:
  5702  0994  0008               	return
  5703  0995                     __end_of_I2C_Master_Start:
  5704                           
  5705                           	psect	text22
  5706  07EC                     __ptext22:	
  5707 ;; *************** function _I2C_Master_Wait *****************
  5708 ;; Defined at:
  5709 ;;		line 33 in file "I2C.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5723 ;;      Params:         0       0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0
  5725 ;;      Temps:          0       0       0       0       0
  5726 ;;      Totals:         0       0       0       0       0
  5727 ;;Total ram usage:        0 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    2
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_I2C_Master_Start
  5734 ;;		_I2C_Master_Stop
  5735 ;;		_I2C_Master_Write
  5736 ;;		_I2C_Master_Read
  5737 ;;		_I2C_Master_RepeatedStart
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           
  5742                           ;psect for function _I2C_Master_Wait
  5743  07EC                     _I2C_Master_Wait:
  5744  07EC                     l1183:	
  5745                           ;incstack = 0
  5746                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5747                           
  5748  07EC                     l117:	
  5749                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5750                           
  5751  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  5752  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  5753  07EE  1914               	btfsc	20,2	;volatile
  5754  07EF  2FF1               	goto	u701
  5755  07F0  2FF2               	goto	u700
  5756  07F1                     u701:
  5757  07F1  2FEC               	goto	l117
  5758  07F2                     u700:
  5759  07F2                     l1185:
  5760  07F2  0811               	movf	17,w	;volatile
  5761  07F3  391F               	andlw	31
  5762  07F4  1D03               	btfss	3,2
  5763  07F5  2FF7               	goto	u711
  5764  07F6  2FF8               	goto	u710
  5765  07F7                     u711:
  5766  07F7  2FEC               	goto	l117
  5767  07F8                     u710:
  5768  07F8                     l120:
  5769  07F8  0008               	return
  5770  07F9                     __end_of_I2C_Master_Wait:
  5771                           
  5772                           	psect	text23
  5773  09BC                     __ptext23:	
  5774 ;; *************** function _isr *****************
  5775 ;; Defined at:
  5776 ;;		line 201 in file "mainm2.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		wreg, pclath, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5790 ;;      Params:         0       0       0       0       0
  5791 ;;      Locals:         0       0       0       0       0
  5792 ;;      Temps:          3       0       0       0       0
  5793 ;;      Totals:         3       0       0       0       0
  5794 ;;Total ram usage:        3 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    1
  5797 ;; This function calls:
  5798 ;;		_Receive_Data
  5799 ;; This function is called by:
  5800 ;;		Interrupt level 1
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           
  5805                           ;psect for function _isr
  5806  09BC                     _isr:
  5807  09BC                     i1l1475:
  5808                           
  5809                           ;mainm2.c: 202:     if (PIR1bits.RCIF == 1) {
  5810  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  5811  09BD  1303               	bcf	3,6	;RP1=0, select bank0
  5812  09BE  1E8C               	btfss	12,5	;volatile
  5813  09BF  29C1               	goto	u136_21
  5814  09C0  29C2               	goto	u136_20
  5815  09C1                     u136_21:
  5816  09C1  29CD               	goto	i1l85
  5817  09C2                     u136_20:
  5818  09C2                     i1l1477:
  5819                           
  5820                           ;mainm2.c: 203:         RX = Receive_Data();
  5821  09C2  120A  158A  219E  120A  158A  	fcall	_Receive_Data
  5822  09C7  00F0               	movwf	??_isr
  5823  09C8  0870               	movf	??_isr,w
  5824  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  5825  09CA  1303               	bcf	3,6	;RP1=0, select bank0
  5826  09CB  00E8               	movwf	_RX
  5827  09CC                     i1l1479:
  5828                           
  5829                           ;mainm2.c: 204:         PIR1bits.RCIF = 0;
  5830  09CC  128C               	bcf	12,5	;volatile
  5831  09CD                     i1l85:
  5832  09CD  0872               	movf	??_isr+2,w
  5833  09CE  008A               	movwf	10
  5834  09CF  0E71               	swapf	??_isr+1,w
  5835  09D0  0083               	movwf	3
  5836  09D1  0EFE               	swapf	btemp,f
  5837  09D2  0E7E               	swapf	btemp,w
  5838  09D3  0009               	retfie
  5839  09D4                     __end_of_isr:
  5840                           
  5841                           	psect	intentry
  5842  0004                     __pintentry:	
  5843                           ;incstack = 0
  5844                           ; Regs used in _isr: [wreg+pclath+cstack]
  5845                           
  5846  0004                     interrupt_function:
  5847  007E                     saved_w	set	btemp
  5848  0004  00FE               	movwf	btemp
  5849  0005  0E03               	swapf	3,w
  5850  0006  00F1               	movwf	??_isr+1
  5851  0007  080A               	movf	10,w
  5852  0008  00F2               	movwf	??_isr+2
  5853  0009  120A  158A  29BC   	ljmp	_isr
  5854                           
  5855                           	psect	text24
  5856  099E                     __ptext24:	
  5857 ;; *************** function _Receive_Data *****************
  5858 ;; Defined at:
  5859 ;;		line 28 in file "UART.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      unsigned char 
  5866 ;; Registers used:
  5867 ;;		wreg
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         0       0       0       0       0
  5874 ;;      Locals:         0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0
  5876 ;;      Totals:         0       0       0       0       0
  5877 ;;Total ram usage:        0 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_isr
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _Receive_Data
  5888  099E                     _Receive_Data:
  5889  099E                     i1l1441:	
  5890                           ;incstack = 0
  5891                           ; Regs used in _Receive_Data: [wreg]
  5892                           
  5893                           
  5894                           ;UART.c: 29:     if (RCSTAbits.OERR) {
  5895  099E  1283               	bcf	3,5	;RP0=0, select bank0
  5896  099F  1303               	bcf	3,6	;RP1=0, select bank0
  5897  09A0  1C98               	btfss	24,1	;volatile
  5898  09A1  29A3               	goto	u135_21
  5899  09A2  29A4               	goto	u135_20
  5900  09A3                     u135_21:
  5901  09A3  29A6               	goto	i1l1445
  5902  09A4                     u135_20:
  5903  09A4                     i1l1443:
  5904                           
  5905                           ;UART.c: 30:         RCSTAbits.CREN = 0;
  5906  09A4  1218               	bcf	24,4	;volatile
  5907                           
  5908                           ;UART.c: 31:         RCSTAbits.CREN = 1;
  5909  09A5  1618               	bsf	24,4	;volatile
  5910  09A6                     i1l1445:
  5911                           
  5912                           ;UART.c: 34:     return RCREG;
  5913  09A6  081A               	movf	26,w	;volatile
  5914  09A7                     i1l233:
  5915  09A7  0008               	return
  5916  09A8                     __end_of_Receive_Data:
  5917  007E                     btemp	set	126	;btemp
  5918  007E                     wtemp0	set	126
  5919                           
  5920                           	psect	config
  5921                           
  5922                           ;Config register CONFIG1 @ 0x2007
  5923                           ;	Oscillator Selection bits
  5924                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5925                           ;	Watchdog Timer Enable bit
  5926                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5927                           ;	Power-up Timer Enable bit
  5928                           ;	PWRTE = OFF, PWRT disabled
  5929                           ;	RE3/MCLR pin function select bit
  5930                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  5931                           ;	Code Protection bit
  5932                           ;	CP = OFF, Program memory code protection is disabled
  5933                           ;	Data Code Protection bit
  5934                           ;	CPD = OFF, Data memory code protection is disabled
  5935                           ;	Brown Out Reset Selection bits
  5936                           ;	BOREN = ON, BOR enabled
  5937                           ;	Internal External Switchover bit
  5938                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5939                           ;	Fail-Safe Clock Monitor Enabled bit
  5940                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5941                           ;	Low Voltage Programming Enable bit
  5942                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5943                           ;	In-Circuit Debugger Mode bit
  5944                           ;	DEBUG = 0x1, unprogrammed default
  5945  2007                     	org	8199
  5946  2007  23F4               	dw	9204
  5947                           
  5948                           ;Config register CONFIG2 @ 0x2008
  5949                           ;	Brown-out Reset Selection bit
  5950                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5951                           ;	Flash Program Memory Self Write Enable bits
  5952                           ;	WRT = OFF, Write protection off
  5953  2008                     	org	8200
  5954  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     68      77
    BANK1            80      0      44
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Send_String@X	PTR unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK1[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK1[4]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _Send_Temp->___lldiv
    _Send_String->_Send_Data
    _BMP280_readTemperature->___aldiv
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___aldiv
    _BMP280_readPressure->___lldiv
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Read16
    _BMP280_begin->_BMP280_Read8
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Send_Temp->___lldiv
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   25924
                                             65 BANK0      3     3      0
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                          _Send_Data
                        _Send_String
                          _Send_Temp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1172
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4    1172
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _Send_Temp                                           10    10      0    1622
                                              6 BANK0     10    10      0
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          2     2      0     133
                                              4 COMMON     2     2      0
                          _Send_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Data                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             20 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7930
                                             20 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              7 BANK0     13     5      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8    1074
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                             10 BANK0      9     5      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              9 COMMON     2     2      0
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              9 COMMON     2     0      2
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              0 BANK0     10     6      4
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              5 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                       _Receive_Data
 ---------------------------------------------------------------------------------
 (7) _Receive_Data                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _Send_Data
   _Send_String
     _Send_Data
   _Send_Temp
     ___lldiv
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)
   _Receive_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      84       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     44      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2C       7       55.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      84      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 12 18:45:18 2021

               _BMP280_Configure 0B0B                                pc 0002                               l70 0C5D  
                             l65 0C55                               l67 0C57                               l76 09EF  
                             l68 0C59                               l69 0C5B                               l79 0FFF  
                             _RX 0068                               fsr 0004              ___wmul@multiplicand 0075  
                            l120 07F8                              l114 0AC6                              l123 0994  
                            l132 09B1                              l220 09B3                              l117 07EC  
                            l135 0A86                              l223 09BB                              l136 0A89  
                            l129 099D                              l161 0A60                              l137 0A8E  
                            l321 0A33                              l170 0B52                              l164 0B0A  
                            l333 0B9A                              l229 0A0E                              l174 0DF5  
                            l190 0783                              l167 0BF0                              l319 0A1B  
                            l194 054B                              l355 07EB                              l187 0ED4  
                            l196 03DD                              l384 0C8F                              l394 0D17  
                            _GIE 005F          BMP280_Configure@_config 0029                              u700 07F2  
                            u701 07F1                              u710 07F8                              u711 07F7  
                            u720 0A82                              u800 09B9                              u721 0A81  
                            u801 09B8                              u730 0796                              u810 0AA6  
                            u731 0795                              u750 07AA                              u910 0A2F  
                            u751 07A9                              u911 0A2E                              u815 0AA1  
                            u920 0B61                              u825 0B11                              u745 079B  
                            u921 0B60                              u905 0A23                              u770 07C5  
                            u835 0B19                              u771 07C4                              u931 0B6A  
                            u932 0B71                              u860 0E59                              u845 0B28  
                            u765 07AC                              u933 0B78                              u790 07E3  
                            u870 0EB7                              u855 0B30                              u791 07E2  
                            u775 07C1                              u960 0B92                              u880 0A15  
                            u785 07D5                              u961 0B91                              u945 0B7A  
                            u865 0E54                              u881 0A14                              u970 0C82  
                            u971 0C81                              u955 0B82                              u875 0EB2  
                            u980 0C93                              u981 0C92                              u990 0CB2  
                            u991 0CB1                              u895 0A1C                              _dec 006C  
                            _isr 09BC                              fsr0 0004                              _uni 006B  
                            indf 0000     __size_of_BMP280_readPressure 0528           BMP280_begin@P_sampling 002B  
                           l1201 0A66                             l1211 0A8A                             l1203 0A6E  
                           l1205 0A77                             l1221 0799                             l1301 0EA2  
                           l1215 0A35                             l1207 0A7C                             l1231 07D3  
                           l1223 07A6                             l1303 0EA7                             l1311 0A22  
                           l1209 0A82                             l1233 07D4                             l1225 07AA  
                           l1217 0784                             l1321 0B5D                             l1401 0027  
                           l1241 09B3                             l1313 0A29                             l1305 0A0F  
                           l1235 07DD                             l1227 07B3                             l1219 0796  
                           l1323 0B61                             l1411 0398                             l1403 02FA  
                           l1243 09B9                             l1315 0A2F                             l1307 0A11  
                           l1251 0AC3                             l1341 0C9E                             l1333 0C7B  
                           l1229 07C5                             l1237 07E3                             l1325 0B78  
                           l1413 03BB                             l1309 0A15                             l1421 0EED  
                           l1253 0AC4                             l1245 0A8F                             l1183 07EC  
                           l1191 0995                             l1271 0B3C                             l1263 0B9E  
                           l1351 0CC2                             l1343 0CA2                             l1335 0C7E  
                           l1327 0B81                             l1319 0B53                             l1415 053D  
                           l1407 0303                             l1431 0FBC                             l1423 0F08  
                           l1255 0AC5                             l1247 0A93                             l1185 07F2  
                           l1193 099A                             l1273 0B46                             l1265 0BEA  
                           l1257 0ACA                             l1361 0CF0                             l1353 0CC6  
                           l1345 0CAA                             l1337 0C82                             l1329 0B92  
                           l1409 0384                             l1281 0E07                             l1433 09F1  
                           l1425 0F47                             l1249 0A96                             l1187 098C  
                           l1195 09A8                             l1259 0B07                             l1363 0CF9  
                           l1355 0CCF                             l1347 0CB2                             l1339 0C93  
                           l1291 0E3C                             l1283 0E10                             l1275 0DF6  
                           l1435 09F2                             l1427 0F62                             l1419 0ED5  
                           l1451 0C04                             l1189 0991                             l1197 09AD  
                           l1269 0B0E                             l1381 0D27                             l1357 0CE1  
                           l1349 0CB5                             l1365 0CFF                             l1293 0E4B  
                           l1285 0E15                             l1277 0DF9                             l1437 09FE  
                           l1429 0FA1                             l1373 09D4                             l1517 0C6A  
                           l1461 0C2E                             l1453 0C13                             l1199 0A61  
                           l1383 0D33                             l1367 0D04                             l1359 0CEF  
                           l1295 0E76                             l1287 0E1E                             l1279 0DFE  
                           l1439 0A02                             l1375 09E2                             l1463 0C36  
                           l1455 0C17                             l1377 0D1B                             l1369 0D0F  
                           l1297 0E85                             l1289 0E2D                             l1393 054F  
                           l1465 0C3E                             l1457 0C1D                             l1449 0BF1  
                           l1387 0D42                             l1299 0E94                             l1395 06EA  
                           l1459 0C28                             l1389 0D4D                             l1397 071B  
                           l1469 0C60                             ?_isr 0070                             STR_1 0808  
                           STR_2 0806                             u1010 0CC6                             u1011 0CC5  
                           u1005 0CB7                             u1101 0593                             u1030 0CE1  
                           u1102 0594                             u1031 0CE0                             u1111 061D  
                           u1103 0599                             u1200 02BB                             u1112 061E  
                           u1104 059A                             u1025 0CC8                             u1201 02BC  
                           u1121 0668                             u1113 0623                             u1105 059F  
                           u1050 0CFF                             u1210 0302                             u1202 02C1  
                           u1130 075B                             u1122 0669                             u1114 0624  
                           u1106 05A0                             u1051 0CFE                             u1035 0CDD  
                           u1211 0301                             u1203 02C2                             u1131 075C  
                           u1123 066E                             u1115 0629                             u1060 0D04  
                           u1300 0500                             u1140 004F                             u1132 0761  
                           u1124 066F                             u1116 062A                             u1061 0D03  
                           u1045 0CF1                             u1301 0501                             u1221 0346  
                           u1141 0050                             u1133 0762                             u1125 0674  
                           u1070 0D26                             u1302 0506                             u1230 035A  
                           u1222 0347                             u1150 0124                             u1142 0055  
                           u1126 0675                             u1071 0D25                             u1303 0507  
                           u1231 035B                             u1223 034C                             u1143 0056  
                           u1311 0F32                             u1080 0D4D                             u1240 0398  
                           u1232 0360                             u1224 034D                             u1160 012E  
                           u1312 0F33                             u1081 0D4C                             u1241 0397  
                           u1233 0361                             u1225 0352                             u1161 012F  
                           u1321 0F8C                             u1313 0F38                             u1250 03EB  
                           u1226 0353                             u1170 0155                             u1162 0134  
                           u1090 0568                             u1322 0F8D                             u1314 0F39  
                           u1243 0394                             u1163 0135                             u1155 011F  
                           u1331 0FE6                             u1323 0F92                             u1315 0F3E  
                           u1260 0404                             u1180 0176                             u1340 0A0E  
                           u1332 0FE7                             u1324 0F93                             u1316 0F3F  
                           u1181 0177                             u1341 0A0D                             u1333 0FEC  
                           u1325 0F98                             u1270 0424                             u1190 0272  
                           u1182 017C                             u1334 0FED                             u1326 0F99  
                           u1407 0D3B                             u1255 03E6                             u1191 0273  
                           u1183 017D                             u1175 0150                             u1095 0563  
                           u1335 0FF2                             u1280 0484                             u1192 0278  
                           u1336 0FF3                             u1265 03FF                             u1193 0279  
                           u1290 04EE                             u1291 04EF                             u1275 041F  
                           u1292 04F4                             u1293 04F5                             u1285 047F  
                           u1397 0C0C                             _PEIE 005E                             i1l85 09CD  
                           _TXIF 0064          BMP280_Configure@standby 0023                             _deci 006A  
                           _main 0BF1                             _temp 0064                             btemp 007E  
                           start 000C  __size_of_BMP280_readTemperature 0238           BMP280_begin@T_sampling 002A  
          __size_of_BMP280_Read8 0044                            ??_isr 0070                 ?_I2C_Master_Init 0026  
               ?_I2C_Master_Read 0073                 ?_I2C_Master_Wait 0070            __size_of_BMP280_Write 002D  
               ?_I2C_Master_Stop 0070            __size_of_BMP280_begin 00DE                  __end_of___aldiv 0D18  
                          ?_main 0070                            _ANSEL 0188                  __end_of___lldiv 07EC  
                          i1l233 09A7                            _RCREG 001A                  BMP280_Read8@ret 0021  
    _BMP280_readTemperature$1200 004C                            _SPBRG 0099      _BMP280_readTemperature$1199 0051  
                          _PORTA 0005                            _PORTB 0006                            _PORTD 0008  
                          _TRISA 0085                            _TRISB 0086                            _TRISD 0088  
                          _SSPIE 0463                            _SSPIF 0063                            _TXREG 0019  
            ___lmul@multiplicand 002B                            _adc_P 00A4                            _adc_T 00A8  
                          _centi 0069                            _setup 09D4                            pclath 000A  
                          status 0003                            wtemp0 007E                     _BMP280_Read8 0AC7  
                     Send_Data@X 0073                     _BMP280_Write 0A34                     _BMP280_calib 00AC  
                   _BMP280_begin 0D18                  __initialization 000F                     __end_of_main 0C7B  
         __size_of_BMP280_Read16 0056                           ??_main 0061                    ??_Send_String 0074  
         __size_of_BMP280_Update 00DF           _BMP280_readTemperature 054C                ?_I2C_Master_Start 0070  
                  ?_Receive_Data 0070                ?_I2C_Master_Write 0073                 BMP280_Read16@ret 0023  
             ??_I2C_Master_Start 0073               ??_I2C_Master_Write 0075                           ?_setup 0070  
                         _ANSELH 0189                           i1l1441 099E                           i1l1443 09A4  
                         i1l1445 09A6                           i1l1475 09BC                           i1l1477 09C2  
                         i1l1479 09CC                           u135_20 09A4                           u135_21 09A3  
                         u136_20 09C2                           u136_21 09C1                           _SPBRGH 009A  
                         _SSPADD 0093                           _TRISC3 043B                           _TRISC4 043C  
                         _SSPCON 0014                           _SSPBUF 0013                           ___lmul 0B53  
             __size_of_Send_Data 000A                        ??___aldiv 0020                           ___wmul 0A0F  
             __size_of_Send_Temp 012B                        ??___lldiv 0020                           _t_fine 00A0  
     BMP280_Configure@P_sampling 0021                   ??_Receive_Data 0070                           saved_w 007E  
       __end_of_BMP280_Configure 0B53              __end_of_Send_String 0A0F                    _BMP280_Read16 0B9B  
        __end_of__initialization 0020       BMP280_Configure@T_sampling 0020                    _BMP280_Update 0DF6  
                 __pcstackCOMMON 0070              _BMP280_readPressure 0024                    __end_of_setup 09F0  
               BMP280_Update@ret 0024             ?_BMP280_readPressure 0070                __end_of_Send_Data 09BC  
              __end_of_Send_Temp 1000                          ??_setup 007B                       __pbssBANK0 0064  
                     __pbssBANK1 00A0                   ?_BMP280_Read16 0079                   ?_BMP280_Update 0070  
        BMP280_readPressure@var1 005D          BMP280_readPressure@var2 0055          BMP280_readPressure@pres 0050  
                     __pmaintext 0BF1                          ?___lmul 0027                          ?___wmul 0073  
                     __pintentry 0004                   ___lmul@product 0030                      _Send_String 09F0  
               BMP280_begin@mode 0032            ??_BMP280_readPressure 0034                          _SSPCON2 0091  
                        _SSPSTAT 0094                       __stringtab 0800       BMP280_Configure@_ctrl_meas 0028  
           __end_of_Receive_Data 09A8             BMP280_Write@reg_addr 0078                          ___aldiv 0C7B  
                __size_of___lmul 0048                          ___lldiv 0784                  __size_of___wmul 0025  
        ?_BMP280_readTemperature 0070                          __ptext1 09D4                          __ptext2 0A8F  
                        __ptext3 0ED5                          __ptext4 0A0F                          __ptext5 09F0  
                        __ptext6 09B2                          __ptext7 054C                          __ptext8 0DF6  
                        __ptext9 0024                     __size_of_isr 0018                 ___aldiv@dividend 0077  
       __size_of_I2C_Master_Init 0038         __size_of_I2C_Master_Read 002E         __size_of_I2C_Master_Wait 000D  
       __size_of_I2C_Master_Stop 0009                  ??_BMP280_Read16 0020                          clrloop0 0985  
           end_of_initialization 0020                  ??_BMP280_Update 0020            BMP280_Read16@reg_addr 0022  
             BMP280_begin@filter 002C        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0073                  ___lldiv@counter 0025                        _RCSTAbits 0018  
               ___aldiv@quotient 0023                 I2C_Master_Init@c 0026                 I2C_Master_Read@a 0073  
 __end_of_BMP280_readTemperature 0784                        _PORTBbits 0006                        _TRISCbits 0087  
              ?_BMP280_Configure 0020               ??_BMP280_Configure 0024           BMP280_Configure@filter 0022  
                      _TXSTAbits 0098                   __end_of___lmul 0B9B             I2C_Master_Read@temp1 0077  
                 __end_of___wmul 0A34                      _BAUDCTLbits 0187                     Send_String@X 0075  
            start_initialization 000F                      __end_of_isr 09D4            __size_of_Receive_Data 000A  
              ??_I2C_Master_Init 002A                ??_I2C_Master_Read 0075                ??_I2C_Master_Wait 0073  
              ??_I2C_Master_Stop 0073                        _Send_Data 09B2                        _Send_Temp 0ED5  
                       ??___lmul 002F                         ??___wmul 0077                     ?_Send_String 0070  
           BMP280_Configure@mode 0027                        ___latbits 0002                     _Receive_Data 099E  
                  __pcstackBANK0 0020                       ?_Send_Data 0070                       ?_Send_Temp 0070  
                  ?_BMP280_Read8 0070                 _I2C_Master_Start 098C                 _I2C_Master_Write 09A8  
                  ?_BMP280_Write 0075                    ?_BMP280_begin 002A             BMP280_readPressure@p 0059  
              BMP280_Write@_data 0075                         ?___aldiv 0073                         ?___lldiv 0073  
                      __pstrings 0800      __end_of_BMP280_readPressure 054C                   __size_of_setup 001C  
                ___aldiv@divisor 0073                interrupt_function 0004                  ___aldiv@counter 0021  
                 ___wmul@product 0077                   ??_BMP280_Read8 0079                        clear_ram0 0984  
                 ??_BMP280_Write 0076                         _PIE1bits 008C                   ??_BMP280_begin 002E  
                       _PIR1bits 000C         _BMP280_readPressure$1201 0051         _BMP280_readPressure$1202 0044  
       _BMP280_readPressure$1203 0048         _BMP280_readPressure$1204 004C                      __stringbase 0805  
              ___wmul@multiplier 0073                ___lmul@multiplier 0027            __end_of_BMP280_Read16 0BF1  
                    ??_Send_Data 0073                      ??_Send_Temp 0026            __end_of_BMP280_Update 0ED5  
      __size_of_BMP280_Configure 0048                 __size_of___aldiv 009D                 __size_of___lldiv 0068  
             __end_of__stringtab 0806                  _I2C_Master_Init 0A8F                  _I2C_Master_Read 0A61  
                _I2C_Master_Wait 07EC                  _I2C_Master_Stop 0995             __size_of_Send_String 001F  
                       __ptext10 0B53                         __ptext11 0784                         __ptext20 0995  
                       __ptext12 0C7B                         __ptext21 098C                         __ptext13 0D18  
                       __ptext22 07EC                         __ptext14 0AC7                         __ptext23 09BC  
                       __ptext15 0B9B                         __ptext24 099E                         __ptext16 0A61  
                       __ptext17 0B0B                         __ptext18 0A34                         __ptext19 09A8  
     BMP280_readTemperature@var1 0044       BMP280_readTemperature@var2 0048       BMP280_readTemperature@temp 0050  
                  __size_of_main 008A                         _pressure 00C4             __end_of_BMP280_Read8 0B0B  
       __end_of_I2C_Master_Start 0995         __end_of_I2C_Master_Write 09B2             __end_of_BMP280_Write 0A61  
           __end_of_BMP280_begin 0DF6                         intlevel1 0000             BMP280_Read8@reg_addr 0020  
               ___lldiv@dividend 0077              BMP280_begin@standby 002D         ??_BMP280_readTemperature 0034  
                      stringcode 0800          __end_of_I2C_Master_Init 0AC7          __end_of_I2C_Master_Read 0A8F  
        __end_of_I2C_Master_Wait 07F9          __end_of_I2C_Master_Stop 099E                      _temperature 00C8  
               ___lldiv@quotient 0021                I2C_Master_Write@d 0073                         stringdir 0800  
                       stringtab 0800                     ___aldiv@sign 0022                      _SSPCON2bits 0091  
