

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 12 17:23:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  001A                     _RCREG	set	26
   465  0019                     _TXREG	set	25
   466  0018                     _RCSTAbits	set	24
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCON	set	20
   469  000C                     _PIR1bits	set	12
   470  0008                     _PORTD	set	8
   471  0006                     _PORTB	set	6
   472  0006                     _PORTBbits	set	6
   473  0005                     _PORTA	set	5
   474  0064                     _TXIF	set	100
   475  0063                     _SSPIF	set	99
   476  005E                     _PEIE	set	94
   477  005F                     _GIE	set	95
   478  009A                     _SPBRGH	set	154
   479  0099                     _SPBRG	set	153
   480  008C                     _PIE1bits	set	140
   481  0098                     _TXSTAbits	set	152
   482  0091                     _SSPCON2bits	set	145
   483  0087                     _TRISCbits	set	135
   484  0094                     _SSPSTAT	set	148
   485  0093                     _SSPADD	set	147
   486  0091                     _SSPCON2	set	145
   487  0085                     _TRISA	set	133
   488  0088                     _TRISD	set	136
   489  0086                     _TRISB	set	134
   490  0463                     _SSPIE	set	1123
   491  043C                     _TRISC4	set	1084
   492  043B                     _TRISC3	set	1083
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:
   499  0800                     stringtab:
   500  0800                     __stringtab:
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:
   513  0806                     STR_2:
   514  0806  342E               	retlw	46	;'.'
   515  0807  3400               	retlw	0
   516  0808                     STR_1:
   517  0808  3453               	retlw	83	;'S'
   518  0809  3400               	retlw	0
   519                           
   520                           	psect	cinit
   521  000F                     start_initialization:	
   522                           ; #config settings
   523                           
   524  000F                     __initialization:
   525                           
   526                           ; Clear objects allocated to BANK0
   527  000F  1383               	bcf	3,7	;select IRP bank0
   528  0010  3064               	movlw	low __pbssBANK0
   529  0011  0084               	movwf	4
   530  0012  306D               	movlw	low (__pbssBANK0+9)
   531  0013  120A  158A  2180  120A  118A  	fcall	clear_ram0
   532                           
   533                           ; Clear objects allocated to BANK1
   534  0018  30A0               	movlw	low __pbssBANK1
   535  0019  0084               	movwf	4
   536  001A  30CC               	movlw	low (__pbssBANK1+44)
   537  001B  120A  158A  2180  120A  118A  	fcall	clear_ram0
   538  0020                     end_of_initialization:	
   539                           ;End of C runtime variable initialization code
   540                           
   541  0020                     __end_of__initialization:
   542  0020  0183               	clrf	3
   543  0021  120A  158A  2BF1   	ljmp	_main	;jump to C main() function
   544                           
   545                           	psect	bssBANK0
   546  0064                     __pbssBANK0:
   547  0064                     _temp:
   548  0064                     	ds	4
   549  0068                     _RX:
   550  0068                     	ds	1
   551  0069                     _centi:
   552  0069                     	ds	1
   553  006A                     _deci:
   554  006A                     	ds	1
   555  006B                     _uni:
   556  006B                     	ds	1
   557  006C                     _dec:
   558  006C                     	ds	1
   559                           
   560                           	psect	bssBANK1
   561  00A0                     __pbssBANK1:
   562  00A0                     _t_fine:
   563  00A0                     	ds	4
   564  00A4                     _adc_P:
   565  00A4                     	ds	4
   566  00A8                     _adc_T:
   567  00A8                     	ds	4
   568  00AC                     _BMP280_calib:
   569  00AC                     	ds	24
   570  00C4                     _pressure:
   571  00C4                     	ds	4
   572  00C8                     _temperature:
   573  00C8                     	ds	4
   574                           
   575                           	psect	clrtext
   576  0980                     clear_ram0:	
   577                           ;	Called with FSR containing the base address, and
   578                           ;	W with the last address+1
   579                           
   580  0980  0064               	clrwdt	;clear the watchdog before getting into this loop
   581  0981                     clrloop0:
   582  0981  0180               	clrf	0	;clear RAM location pointed to by FSR
   583  0982  0A84               	incf	4,f	;increment pointer
   584  0983  0604               	xorwf	4,w	;XOR with final address
   585  0984  1903               	btfsc	3,2	;have we reached the end yet?
   586  0985  3400               	retlw	0	;all done for this memory range, return
   587  0986  0604               	xorwf	4,w	;XOR again to restore value
   588  0987  2981               	goto	clrloop0	;do the next byte
   589                           
   590                           	psect	cstackCOMMON
   591  0070                     __pcstackCOMMON:
   592  0070                     ?_setup:
   593  0070                     ?_Send_Temp:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_Send_String:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_Send_Data:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Receive_Data:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ??_Receive_Data:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_main:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_isr:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ??_isr:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_I2C_Master_Wait:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_I2C_Master_Start:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_I2C_Master_Stop:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_BMP280_Read8:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_BMP280_Update:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_BMP280_readTemperature:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_BMP280_readPressure:	
   636                           ; 2 bytes @ 0x0
   637                           
   638                           
   639                           ; 2 bytes @ 0x0
   640  0070                     	ds	3
   641  0073                     ??_Send_Data:
   642  0073                     ??_I2C_Master_Wait:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0073                     ??_I2C_Master_Start:	
   646                           ; 1 bytes @ 0x3
   647                           
   648  0073                     ??_I2C_Master_Stop:	
   649                           ; 1 bytes @ 0x3
   650                           
   651  0073                     ?_I2C_Master_Write:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     ?_I2C_Master_Read:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ?___wmul:	
   658                           ; 2 bytes @ 0x3
   659                           
   660  0073                     ?___lldiv:	
   661                           ; 2 bytes @ 0x3
   662                           
   663  0073                     ?___aldiv:	
   664                           ; 4 bytes @ 0x3
   665                           
   666  0073                     Send_Data@X:	
   667                           ; 4 bytes @ 0x3
   668                           
   669  0073                     I2C_Master_Write@d:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     I2C_Master_Read@a:	
   673                           ; 2 bytes @ 0x3
   674                           
   675  0073                     ___wmul@multiplier:	
   676                           ; 2 bytes @ 0x3
   677                           
   678  0073                     ___lldiv@divisor:	
   679                           ; 2 bytes @ 0x3
   680                           
   681  0073                     ___aldiv@divisor:	
   682                           ; 4 bytes @ 0x3
   683                           
   684                           
   685                           ; 4 bytes @ 0x3
   686  0073                     	ds	1
   687  0074                     ??_Send_String:
   688                           
   689                           ; 1 bytes @ 0x4
   690  0074                     	ds	1
   691  0075                     ??_I2C_Master_Write:
   692  0075                     ??_I2C_Master_Read:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     ?_BMP280_Write:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     BMP280_Write@_data:	
   699                           ; 1 bytes @ 0x5
   700                           
   701  0075                     Send_String@X:	
   702                           ; 1 bytes @ 0x5
   703                           
   704  0075                     ___wmul@multiplicand:	
   705                           ; 1 bytes @ 0x5
   706                           
   707                           
   708                           ; 2 bytes @ 0x5
   709  0075                     	ds	1
   710  0076                     ??_BMP280_Write:
   711                           
   712                           ; 1 bytes @ 0x6
   713  0076                     	ds	1
   714  0077                     ??___wmul:
   715  0077                     I2C_Master_Read@temp1:	
   716                           ; 1 bytes @ 0x7
   717                           
   718  0077                     ___wmul@product:	
   719                           ; 2 bytes @ 0x7
   720                           
   721  0077                     ___lldiv@dividend:	
   722                           ; 2 bytes @ 0x7
   723                           
   724  0077                     ___aldiv@dividend:	
   725                           ; 4 bytes @ 0x7
   726                           
   727                           
   728                           ; 4 bytes @ 0x7
   729  0077                     	ds	1
   730  0078                     BMP280_Write@reg_addr:
   731                           
   732                           ; 1 bytes @ 0x8
   733  0078                     	ds	1
   734  0079                     ??_BMP280_Read8:
   735  0079                     ?_BMP280_Read16:	
   736                           ; 1 bytes @ 0x9
   737                           
   738                           
   739                           ; 2 bytes @ 0x9
   740  0079                     	ds	2
   741  007B                     ??_setup:
   742                           
   743                           	psect	cstackBANK0
   744  0020                     __pcstackBANK0:	
   745                           ; 1 bytes @ 0xB
   746                           
   747  0020                     ??_BMP280_Read16:
   748  0020                     ?_BMP280_Configure:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     ??_BMP280_Update:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ??___lldiv:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     ??___aldiv:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0020                     BMP280_Read8@reg_addr:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0020                     BMP280_Configure@T_sampling:	
   764                           ; 1 bytes @ 0x0
   765                           
   766                           
   767                           ; 1 bytes @ 0x0
   768  0020                     	ds	1
   769  0021                     BMP280_Read8@ret:
   770  0021                     BMP280_Configure@P_sampling:	
   771                           ; 1 bytes @ 0x1
   772                           
   773  0021                     ___aldiv@counter:	
   774                           ; 1 bytes @ 0x1
   775                           
   776  0021                     ___lldiv@quotient:	
   777                           ; 1 bytes @ 0x1
   778                           
   779                           
   780                           ; 4 bytes @ 0x1
   781  0021                     	ds	1
   782  0022                     BMP280_Read16@reg_addr:
   783  0022                     BMP280_Configure@filter:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0022                     ___aldiv@sign:	
   787                           ; 1 bytes @ 0x2
   788                           
   789                           
   790                           ; 1 bytes @ 0x2
   791  0022                     	ds	1
   792  0023                     BMP280_Configure@standby:
   793  0023                     BMP280_Read16@ret:	
   794                           ; 1 bytes @ 0x3
   795                           
   796  0023                     ___aldiv@quotient:	
   797                           ; 2 bytes @ 0x3
   798                           
   799                           
   800                           ; 4 bytes @ 0x3
   801  0023                     	ds	1
   802  0024                     ??_BMP280_Configure:
   803  0024                     BMP280_Update@ret:	
   804                           ; 1 bytes @ 0x4
   805                           
   806                           
   807                           ; 4 bytes @ 0x4
   808  0024                     	ds	1
   809  0025                     ___lldiv@counter:
   810                           
   811                           ; 1 bytes @ 0x5
   812  0025                     	ds	1
   813  0026                     ??_Send_Temp:
   814  0026                     ?_I2C_Master_Init:	
   815                           ; 1 bytes @ 0x6
   816                           
   817  0026                     I2C_Master_Init@c:	
   818                           ; 1 bytes @ 0x6
   819                           
   820                           
   821                           ; 4 bytes @ 0x6
   822  0026                     	ds	1
   823  0027                     ?___lmul:
   824  0027                     BMP280_Configure@mode:	
   825                           ; 4 bytes @ 0x7
   826                           
   827  0027                     ___lmul@multiplier:	
   828                           ; 1 bytes @ 0x7
   829                           
   830                           
   831                           ; 4 bytes @ 0x7
   832  0027                     	ds	1
   833  0028                     BMP280_Configure@_ctrl_meas:
   834                           
   835                           ; 1 bytes @ 0x8
   836  0028                     	ds	1
   837  0029                     BMP280_Configure@_config:
   838                           
   839                           ; 1 bytes @ 0x9
   840  0029                     	ds	1
   841  002A                     ??_I2C_Master_Init:
   842  002A                     ?_BMP280_begin:	
   843                           ; 1 bytes @ 0xA
   844                           
   845  002A                     BMP280_begin@T_sampling:	
   846                           ; 2 bytes @ 0xA
   847                           
   848                           
   849                           ; 1 bytes @ 0xA
   850  002A                     	ds	1
   851  002B                     BMP280_begin@P_sampling:
   852  002B                     ___lmul@multiplicand:	
   853                           ; 1 bytes @ 0xB
   854                           
   855                           
   856                           ; 4 bytes @ 0xB
   857  002B                     	ds	1
   858  002C                     BMP280_begin@filter:
   859                           
   860                           ; 1 bytes @ 0xC
   861  002C                     	ds	1
   862  002D                     BMP280_begin@standby:
   863                           
   864                           ; 1 bytes @ 0xD
   865  002D                     	ds	1
   866  002E                     ??_BMP280_begin:
   867                           
   868                           ; 1 bytes @ 0xE
   869  002E                     	ds	1
   870  002F                     ??___lmul:
   871                           
   872                           ; 1 bytes @ 0xF
   873  002F                     	ds	1
   874  0030                     ___lmul@product:
   875                           
   876                           ; 4 bytes @ 0x10
   877  0030                     	ds	2
   878  0032                     BMP280_begin@mode:
   879                           
   880                           ; 1 bytes @ 0x12
   881  0032                     	ds	2
   882  0034                     ??_BMP280_readTemperature:
   883  0034                     ??_BMP280_readPressure:	
   884                           ; 1 bytes @ 0x14
   885                           
   886                           
   887                           ; 1 bytes @ 0x14
   888  0034                     	ds	16
   889  0044                     BMP280_readTemperature@var1:
   890  0044                     _BMP280_readPressure$1202:	
   891                           ; 4 bytes @ 0x24
   892                           
   893                           
   894                           ; 4 bytes @ 0x24
   895  0044                     	ds	4
   896  0048                     BMP280_readTemperature@var2:
   897  0048                     _BMP280_readPressure$1203:	
   898                           ; 4 bytes @ 0x28
   899                           
   900                           
   901                           ; 4 bytes @ 0x28
   902  0048                     	ds	4
   903  004C                     _BMP280_readTemperature$1200:
   904  004C                     _BMP280_readPressure$1204:	
   905                           ; 4 bytes @ 0x2C
   906                           
   907                           
   908                           ; 4 bytes @ 0x2C
   909  004C                     	ds	4
   910  0050                     BMP280_readTemperature@temp:
   911  0050                     BMP280_readPressure@pres:	
   912                           ; 1 bytes @ 0x30
   913                           
   914                           
   915                           ; 1 bytes @ 0x30
   916  0050                     	ds	1
   917  0051                     _BMP280_readTemperature$1199:
   918  0051                     _BMP280_readPressure$1201:	
   919                           ; 4 bytes @ 0x31
   920                           
   921                           
   922                           ; 4 bytes @ 0x31
   923  0051                     	ds	4
   924  0055                     BMP280_readPressure@var2:
   925                           
   926                           ; 4 bytes @ 0x35
   927  0055                     	ds	4
   928  0059                     BMP280_readPressure@p:
   929                           
   930                           ; 4 bytes @ 0x39
   931  0059                     	ds	4
   932  005D                     BMP280_readPressure@var1:
   933                           
   934                           ; 4 bytes @ 0x3D
   935  005D                     	ds	4
   936  0061                     ??_main:
   937                           
   938                           ; 1 bytes @ 0x41
   939  0061                     	ds	3
   940                           
   941                           	psect	maintext
   942  0BF1                     __pmaintext:	
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 126 in file "mainm2.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : B00/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          0       3       0       0       0
   965 ;;      Totals:         0       3       0       0       0
   966 ;;Total ram usage:        3 bytes
   967 ;; Hardware stack levels required when called:    7
   968 ;; This function calls:
   969 ;;		_BMP280_begin
   970 ;;		_BMP280_readPressure
   971 ;;		_BMP280_readTemperature
   972 ;;		_Send_Data
   973 ;;		_Send_String
   974 ;;		_Send_Temp
   975 ;;		_setup
   976 ;; This function is called by:
   977 ;;		Startup code after reset
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _main
   983  0BF1                     _main:
   984  0BF1                     l1449:	
   985                           ;incstack = 0
   986                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   987                           
   988                           
   989                           ;mainm2.c: 127:     setup();
   990  0BF1  120A  158A  21EF  120A  158A  	fcall	_setup
   991                           
   992                           ;mainm2.c: 128:     BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, STAN
      +                          DBY_0_5);
   993  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
   994  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
   995  0BF8  01AA               	clrf	BMP280_begin@T_sampling
   996  0BF9  0AAA               	incf	BMP280_begin@T_sampling,f
   997  0BFA  01AB               	clrf	BMP280_begin@P_sampling
   998  0BFB  0AAB               	incf	BMP280_begin@P_sampling,f
   999  0BFC  01AC               	clrf	BMP280_begin@filter
  1000  0BFD  01AD               	clrf	BMP280_begin@standby
  1001  0BFE  3003               	movlw	3
  1002  0BFF  120A  158A  2518  120A  158A  	fcall	_BMP280_begin
  1003  0C04                     l1451:
  1004                           
  1005                           ;mainm2.c: 130:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1006  0C04  3003               	movlw	3
  1007  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0C07  00E3               	movwf	??_main+2
  1010  0C08  3008               	movlw	8
  1011  0C09  00E2               	movwf	??_main+1
  1012  0C0A  3076               	movlw	118
  1013  0C0B  00E1               	movwf	??_main
  1014  0C0C                     u1397:
  1015  0C0C  0BE1               	decfsz	??_main,f
  1016  0C0D  2C0C               	goto	u1397
  1017  0C0E  0BE2               	decfsz	??_main+1,f
  1018  0C0F  2C0C               	goto	u1397
  1019  0C10  0BE3               	decfsz	??_main+2,f
  1020  0C11  2C0C               	goto	u1397
  1021  0C12  0000               	nop
  1022  0C13                     l1453:
  1023                           
  1024                           ;mainm2.c: 131:         PORTA = 0b11111111;
  1025  0C13  30FF               	movlw	255
  1026  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0C16  0085               	movwf	5	;volatile
  1029  0C17                     l1455:
  1030                           
  1031                           ;mainm2.c: 132:         BMP280_readTemperature(&temperature);
  1032  0C17  30C8               	movlw	(low (_temperature| 0))& (0+255)
  1033  0C18  120A  118A  254C  120A  158A  	fcall	_BMP280_readTemperature
  1034  0C1D                     l1457:
  1035                           
  1036                           ;mainm2.c: 133:         BMP280_readPressure(&pressure);
  1037  0C1D  30C4               	movlw	(low (_pressure| 0))& (0+255)
  1038  0C1E  120A  118A  2024  120A  158A  	fcall	_BMP280_readPressure
  1039                           
  1040                           ;mainm2.c: 134:         Send_Temp();
  1041  0C23  120A  158A  26D5  120A  158A  	fcall	_Send_Temp
  1042  0C28                     l1459:
  1043                           
  1044                           ;mainm2.c: 135:         Send_String("S");
  1045  0C28  3003               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1046  0C29  120A  158A  21D0  120A  158A  	fcall	_Send_String
  1047  0C2E                     l1461:
  1048                           
  1049                           ;mainm2.c: 136:         Send_Data(dec);
  1050  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0C30  086C               	movf	_dec,w
  1053  0C31  120A  158A  21AE  120A  158A  	fcall	_Send_Data
  1054  0C36                     l1463:
  1055                           
  1056                           ;mainm2.c: 137:         Send_Data(uni);
  1057  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0C38  086B               	movf	_uni,w
  1060  0C39  120A  158A  21AE  120A  158A  	fcall	_Send_Data
  1061  0C3E                     l1465:
  1062                           
  1063                           ;mainm2.c: 138:         Send_String(".");
  1064  0C3E  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1065  0C3F  120A  158A  21D0  120A  158A  	fcall	_Send_String
  1066                           
  1067                           ;mainm2.c: 139:         Send_Data(deci);
  1068  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0C46  086A               	movf	_deci,w
  1071  0C47  120A  158A  21AE  120A  158A  	fcall	_Send_Data
  1072                           
  1073                           ;mainm2.c: 140:         Send_Data(centi);
  1074  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0C4E  0869               	movf	_centi,w
  1077  0C4F  120A  158A  21AE  120A  158A  	fcall	_Send_Data
  1078                           
  1079                           ;mainm2.c: 142:         switch (RX) {
  1080  0C54  2C60               	goto	l1469
  1081  0C55                     l65:	
  1082                           ;mainm2.c: 143:             case 49:
  1083                           
  1084                           
  1085                           ;mainm2.c: 144:                 PORTBbits.RB7 = 1;
  1086  0C55  1786               	bsf	6,7	;volatile
  1087                           
  1088                           ;mainm2.c: 145:                 break;
  1089  0C56  2C04               	goto	l1451
  1090  0C57                     l67:	
  1091                           ;mainm2.c: 146:             case 48:
  1092                           
  1093                           
  1094                           ;mainm2.c: 147:                 PORTBbits.RB7 = 0;
  1095  0C57  1386               	bcf	6,7	;volatile
  1096                           
  1097                           ;mainm2.c: 148:                 break;
  1098  0C58  2C04               	goto	l1451
  1099  0C59                     l68:	
  1100                           ;mainm2.c: 149:             case 50:
  1101                           
  1102                           
  1103                           ;mainm2.c: 150:                 PORTBbits.RB6 = 0;
  1104  0C59  1306               	bcf	6,6	;volatile
  1105                           
  1106                           ;mainm2.c: 151:                 break;
  1107  0C5A  2C04               	goto	l1451
  1108  0C5B                     l69:	
  1109                           ;mainm2.c: 152:             case 51:
  1110                           
  1111                           
  1112                           ;mainm2.c: 153:                 PORTBbits.RB6 = 1;
  1113  0C5B  1706               	bsf	6,6	;volatile
  1114                           
  1115                           ;mainm2.c: 154:                 break;
  1116  0C5C  2C04               	goto	l1451
  1117  0C5D                     l70:	
  1118                           ;mainm2.c: 155:             default:
  1119                           
  1120                           
  1121                           ;mainm2.c: 156:                 PORTBbits.RB7 = 0;
  1122  0C5D  1386               	bcf	6,7	;volatile
  1123                           
  1124                           ;mainm2.c: 157:                 PORTBbits.RB6 = 0;
  1125  0C5E  1306               	bcf	6,6	;volatile
  1126                           
  1127                           ;mainm2.c: 158:                 break;
  1128  0C5F  2C04               	goto	l1451
  1129  0C60                     l1469:
  1130  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0C62  0868               	movf	_RX,w
  1133  0C63  00E1               	movwf	??_main
  1134  0C64  01E2               	clrf	??_main+1
  1135                           
  1136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 1, Range of values is 0 to 0
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte            4     3 (average)
  1142                           ; direct_byte           11     8 (fixed)
  1143                           ; jumptable            260     6 (fixed)
  1144                           ;	Chosen strategy is simple_byte
  1145  0C65  0862               	movf	??_main+1,w
  1146  0C66  3A00               	xorlw	0	; case 0
  1147  0C67  1903               	skipnz
  1148  0C68  2C6A               	goto	l1517
  1149  0C69  2C5D               	goto	l70
  1150  0C6A                     l1517:
  1151                           
  1152                           ; Switch size 1, requested type "simple"
  1153                           ; Number of cases is 4, Range of values is 48 to 51
  1154                           ; switch strategies available:
  1155                           ; Name         Instructions Cycles
  1156                           ; simple_byte           13     7 (average)
  1157                           ; direct_byte           23    11 (fixed)
  1158                           ; jumptable            263     9 (fixed)
  1159                           ;	Chosen strategy is simple_byte
  1160  0C6A  0861               	movf	??_main,w
  1161  0C6B  3A30               	xorlw	48	; case 48
  1162  0C6C  1903               	skipnz
  1163  0C6D  2C57               	goto	l67
  1164  0C6E  3A01               	xorlw	1	; case 49
  1165  0C6F  1903               	skipnz
  1166  0C70  2C55               	goto	l65
  1167  0C71  3A03               	xorlw	3	; case 50
  1168  0C72  1903               	skipnz
  1169  0C73  2C59               	goto	l68
  1170  0C74  3A01               	xorlw	1	; case 51
  1171  0C75  1903               	skipnz
  1172  0C76  2C5B               	goto	l69
  1173  0C77  2C5D               	goto	l70
  1174  0C78  120A  118A  280C   	ljmp	start
  1175  0C7B                     __end_of_main:
  1176                           
  1177                           	psect	text1
  1178  09EF                     __ptext1:	
  1179 ;; *************** function _setup *****************
  1180 ;; Defined at:
  1181 ;;		line 169 in file "mainm2.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, pclath, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1195 ;;      Params:         0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    4
  1202 ;; This function calls:
  1203 ;;		_I2C_Master_Init
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _setup
  1211  09EF                     _setup:
  1212  09EF                     l1373:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1215                           
  1216                           
  1217                           ;mainm2.c: 170:     ANSEL = 0;
  1218  09EF  1683               	bsf	3,5	;RP0=1, select bank3
  1219  09F0  1703               	bsf	3,6	;RP1=1, select bank3
  1220  09F1  0188               	clrf	8	;volatile
  1221                           
  1222                           ;mainm2.c: 171:     ANSELH = 0;
  1223  09F2  0189               	clrf	9	;volatile
  1224                           
  1225                           ;mainm2.c: 172:     TRISB = 0;
  1226  09F3  1683               	bsf	3,5	;RP0=1, select bank1
  1227  09F4  1303               	bcf	3,6	;RP1=0, select bank1
  1228  09F5  0186               	clrf	6	;volatile
  1229                           
  1230                           ;mainm2.c: 173:     TRISD = 0;
  1231  09F6  0188               	clrf	8	;volatile
  1232                           
  1233                           ;mainm2.c: 174:     PORTB = 0;
  1234  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  1235  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  1236  09F9  0186               	clrf	6	;volatile
  1237                           
  1238                           ;mainm2.c: 175:     PORTD = 0;
  1239  09FA  0188               	clrf	8	;volatile
  1240                           
  1241                           ;mainm2.c: 176:     PORTA = 0;
  1242  09FB  0185               	clrf	5	;volatile
  1243                           
  1244                           ;mainm2.c: 177:     TRISA = 0;
  1245  09FC  1683               	bsf	3,5	;RP0=1, select bank1
  1246  09FD  1303               	bcf	3,6	;RP1=0, select bank1
  1247  09FE  0185               	clrf	5	;volatile
  1248  09FF                     l1375:
  1249                           
  1250                           ;mainm2.c: 178:     I2C_Master_Init(100000);
  1251  09FF  3000               	movlw	0
  1252  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0A02  00A9               	movwf	I2C_Master_Init@c+3
  1255  0A03  3001               	movlw	1
  1256  0A04  00A8               	movwf	I2C_Master_Init@c+2
  1257  0A05  3086               	movlw	134
  1258  0A06  00A7               	movwf	I2C_Master_Init@c+1
  1259  0A07  30A0               	movlw	160
  1260  0A08  00A6               	movwf	I2C_Master_Init@c
  1261  0A09  120A  158A  228F  120A  158A  	fcall	_I2C_Master_Init
  1262  0A0E                     l76:
  1263  0A0E  0008               	return
  1264  0A0F                     __end_of_setup:
  1265                           
  1266                           	psect	text2
  1267  0A8F                     __ptext2:	
  1268 ;; *************** function _I2C_Master_Init *****************
  1269 ;; Defined at:
  1270 ;;		line 17 in file "I2C.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  c               4    6[BANK0 ] const unsigned long 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         0       4       0       0       0
  1285 ;;      Locals:         0       0       0       0       0
  1286 ;;      Temps:          0       4       0       0       0
  1287 ;;      Totals:         0       8       0       0       0
  1288 ;;Total ram usage:        8 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    3
  1291 ;; This function calls:
  1292 ;;		___lldiv
  1293 ;; This function is called by:
  1294 ;;		_setup
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _I2C_Master_Init
  1300  0A8F                     _I2C_Master_Init:
  1301  0A8F                     l1245:	
  1302                           ;incstack = 0
  1303                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1304                           
  1305                           
  1306                           ;I2C.c: 18:     SSPCON = 0b00101000;
  1307  0A8F  3028               	movlw	40
  1308  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0A92  0094               	movwf	20	;volatile
  1311  0A93                     l1247:
  1312                           
  1313                           ;I2C.c: 19:     SSPCON2 = 0;
  1314  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  1315  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  1316  0A95  0191               	clrf	17	;volatile
  1317  0A96                     l1249:
  1318                           
  1319                           ;I2C.c: 20:     SSPADD = (8000000 / (4 * c)) - 1;
  1320  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0A98  0826               	movf	I2C_Master_Init@c,w
  1323  0A99  00AA               	movwf	??_I2C_Master_Init
  1324  0A9A  0827               	movf	I2C_Master_Init@c+1,w
  1325  0A9B  00AB               	movwf	??_I2C_Master_Init+1
  1326  0A9C  0828               	movf	I2C_Master_Init@c+2,w
  1327  0A9D  00AC               	movwf	??_I2C_Master_Init+2
  1328  0A9E  0829               	movf	I2C_Master_Init@c+3,w
  1329  0A9F  00AD               	movwf	??_I2C_Master_Init+3
  1330  0AA0  3002               	movlw	2
  1331  0AA1                     u815:
  1332  0AA1  1003               	clrc
  1333  0AA2  0DAA               	rlf	??_I2C_Master_Init,f
  1334  0AA3  0DAB               	rlf	??_I2C_Master_Init+1,f
  1335  0AA4  0DAC               	rlf	??_I2C_Master_Init+2,f
  1336  0AA5  0DAD               	rlf	??_I2C_Master_Init+3,f
  1337  0AA6                     u810:
  1338  0AA6  3EFF               	addlw	-1
  1339  0AA7  1D03               	skipz
  1340  0AA8  2AA1               	goto	u815
  1341  0AA9  082D               	movf	??_I2C_Master_Init+3,w
  1342  0AAA  00F6               	movwf	___lldiv@divisor+3
  1343  0AAB  082C               	movf	??_I2C_Master_Init+2,w
  1344  0AAC  00F5               	movwf	___lldiv@divisor+2
  1345  0AAD  082B               	movf	??_I2C_Master_Init+1,w
  1346  0AAE  00F4               	movwf	___lldiv@divisor+1
  1347  0AAF  082A               	movf	??_I2C_Master_Init,w
  1348  0AB0  00F3               	movwf	___lldiv@divisor
  1349  0AB1  3000               	movlw	0
  1350  0AB2  00FA               	movwf	___lldiv@dividend+3
  1351  0AB3  307A               	movlw	122
  1352  0AB4  00F9               	movwf	___lldiv@dividend+2
  1353  0AB5  3012               	movlw	18
  1354  0AB6  00F8               	movwf	___lldiv@dividend+1
  1355  0AB7  3000               	movlw	0
  1356  0AB8  00F7               	movwf	___lldiv@dividend
  1357  0AB9  120A  118A  2784  120A  158A  	fcall	___lldiv
  1358  0ABE  0873               	movf	?___lldiv,w
  1359  0ABF  3EFF               	addlw	255
  1360  0AC0  1683               	bsf	3,5	;RP0=1, select bank1
  1361  0AC1  1303               	bcf	3,6	;RP1=0, select bank1
  1362  0AC2  0093               	movwf	19	;volatile
  1363  0AC3                     l1251:
  1364                           
  1365                           ;I2C.c: 21:     SSPSTAT = 0;
  1366  0AC3  0194               	clrf	20	;volatile
  1367  0AC4                     l1253:
  1368                           
  1369                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1370  0AC4  1587               	bsf	7,3	;volatile
  1371  0AC5                     l1255:
  1372                           
  1373                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1374  0AC5  1607               	bsf	7,4	;volatile
  1375  0AC6                     l114:
  1376  0AC6  0008               	return
  1377  0AC7                     __end_of_I2C_Master_Init:
  1378                           
  1379                           	psect	text3
  1380  0ED5                     __ptext3:	
  1381 ;; *************** function _Send_Temp *****************
  1382 ;; Defined at:
  1383 ;;		line 185 in file "mainm2.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0, pclath, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          0      10       0       0       0
  1400 ;;      Totals:         0      10       0       0       0
  1401 ;;Total ram usage:       10 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    3
  1404 ;; This function calls:
  1405 ;;		___lldiv
  1406 ;;		___wmul
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _Send_Temp
  1414  0ED5                     _Send_Temp:
  1415  0ED5                     l1419:	
  1416                           ;incstack = 0
  1417                           ; Regs used in _Send_Temp: [wreg+status,2+status,0+pclath+cstack]
  1418                           
  1419                           
  1420                           ;mainm2.c: 186:     temp = temperature;
  1421  0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  1422  0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  1423  0ED7  084B               	movf	(_temperature+3)^(0+128),w
  1424  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0EDA  00E7               	movwf	_temp+3
  1427  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  1428  0EDC  1303               	bcf	3,6	;RP1=0, select bank1
  1429  0EDD  084A               	movf	(_temperature+2)^(0+128),w
  1430  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0EE0  00E6               	movwf	_temp+2
  1433  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  1434  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  1435  0EE3  0849               	movf	(_temperature+1)^(0+128),w
  1436  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0EE6  00E5               	movwf	_temp+1
  1439  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  1440  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  1441  0EE9  0848               	movf	_temperature^(0+128),w
  1442  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0EEC  00E4               	movwf	_temp
  1445  0EED                     l1421:
  1446                           
  1447                           ;mainm2.c: 187:     dec = temp /1000;
  1448  0EED  3000               	movlw	0
  1449  0EEE  00F6               	movwf	___lldiv@divisor+3
  1450  0EEF  3000               	movlw	0
  1451  0EF0  00F5               	movwf	___lldiv@divisor+2
  1452  0EF1  3003               	movlw	3
  1453  0EF2  00F4               	movwf	___lldiv@divisor+1
  1454  0EF3  30E8               	movlw	232
  1455  0EF4  00F3               	movwf	___lldiv@divisor
  1456  0EF5  0867               	movf	_temp+3,w
  1457  0EF6  00FA               	movwf	___lldiv@dividend+3
  1458  0EF7  0866               	movf	_temp+2,w
  1459  0EF8  00F9               	movwf	___lldiv@dividend+2
  1460  0EF9  0865               	movf	_temp+1,w
  1461  0EFA  00F8               	movwf	___lldiv@dividend+1
  1462  0EFB  0864               	movf	_temp,w
  1463  0EFC  00F7               	movwf	___lldiv@dividend
  1464  0EFD  120A  118A  2784  120A  158A  	fcall	___lldiv
  1465  0F02  0873               	movf	?___lldiv,w
  1466  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0F05  00A6               	movwf	??_Send_Temp
  1469  0F06  0826               	movf	??_Send_Temp,w
  1470  0F07  00EC               	movwf	_dec
  1471  0F08                     l1423:
  1472                           
  1473                           ;mainm2.c: 188:     temp = temp - (dec*1000);
  1474  0F08  086C               	movf	_dec,w
  1475  0F09  00A6               	movwf	??_Send_Temp
  1476  0F0A  01A7               	clrf	??_Send_Temp+1
  1477  0F0B  0826               	movf	??_Send_Temp,w
  1478  0F0C  00F3               	movwf	___wmul@multiplier
  1479  0F0D  0827               	movf	??_Send_Temp+1,w
  1480  0F0E  00F4               	movwf	___wmul@multiplier+1
  1481  0F0F  30E8               	movlw	232
  1482  0F10  00F5               	movwf	___wmul@multiplicand
  1483  0F11  3003               	movlw	3
  1484  0F12  00F6               	movwf	___wmul@multiplicand+1
  1485  0F13  120A  158A  220F  120A  158A  	fcall	___wmul
  1486  0F18  0873               	movf	?___wmul,w
  1487  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  1489  0F1B  00A8               	movwf	??_Send_Temp+2
  1490  0F1C  0874               	movf	?___wmul+1,w
  1491  0F1D  00A9               	movwf	??_Send_Temp+3
  1492  0F1E  3000               	movlw	0
  1493  0F1F  1BA9               	btfsc	??_Send_Temp+3,7
  1494  0F20  30FF               	movlw	255
  1495  0F21  00AA               	movwf	??_Send_Temp+4
  1496  0F22  00AB               	movwf	??_Send_Temp+5
  1497  0F23  0864               	movf	_temp,w
  1498  0F24  00AC               	movwf	??_Send_Temp+6
  1499  0F25  0865               	movf	_temp+1,w
  1500  0F26  00AD               	movwf	??_Send_Temp+7
  1501  0F27  0866               	movf	_temp+2,w
  1502  0F28  00AE               	movwf	??_Send_Temp+8
  1503  0F29  0867               	movf	_temp+3,w
  1504  0F2A  00AF               	movwf	??_Send_Temp+9
  1505  0F2B  0828               	movf	??_Send_Temp+2,w
  1506  0F2C  02AC               	subwf	??_Send_Temp+6,f
  1507  0F2D  0829               	movf	??_Send_Temp+3,w
  1508  0F2E  1C03               	skipc
  1509  0F2F  0F29               	incfsz	??_Send_Temp+3,w
  1510  0F30  2F32               	goto	u1311
  1511  0F31  2F33               	goto	u1312
  1512  0F32                     u1311:
  1513  0F32  02AD               	subwf	??_Send_Temp+7,f
  1514  0F33                     u1312:
  1515  0F33  082A               	movf	??_Send_Temp+4,w
  1516  0F34  1C03               	skipc
  1517  0F35  0F2A               	incfsz	??_Send_Temp+4,w
  1518  0F36  2F38               	goto	u1313
  1519  0F37  2F39               	goto	u1314
  1520  0F38                     u1313:
  1521  0F38  02AE               	subwf	??_Send_Temp+8,f
  1522  0F39                     u1314:
  1523  0F39  082B               	movf	??_Send_Temp+5,w
  1524  0F3A  1C03               	skipc
  1525  0F3B  0F2B               	incfsz	??_Send_Temp+5,w
  1526  0F3C  2F3E               	goto	u1315
  1527  0F3D  2F3F               	goto	u1316
  1528  0F3E                     u1315:
  1529  0F3E  02AF               	subwf	??_Send_Temp+9,f
  1530  0F3F                     u1316:
  1531  0F3F  082F               	movf	??_Send_Temp+9,w
  1532  0F40  00E7               	movwf	_temp+3
  1533  0F41  082E               	movf	??_Send_Temp+8,w
  1534  0F42  00E6               	movwf	_temp+2
  1535  0F43  082D               	movf	??_Send_Temp+7,w
  1536  0F44  00E5               	movwf	_temp+1
  1537  0F45  082C               	movf	??_Send_Temp+6,w
  1538  0F46  00E4               	movwf	_temp
  1539  0F47                     l1425:
  1540                           
  1541                           ;mainm2.c: 189:     uni = temp /100;
  1542  0F47  3000               	movlw	0
  1543  0F48  00F6               	movwf	___lldiv@divisor+3
  1544  0F49  3000               	movlw	0
  1545  0F4A  00F5               	movwf	___lldiv@divisor+2
  1546  0F4B  3000               	movlw	0
  1547  0F4C  00F4               	movwf	___lldiv@divisor+1
  1548  0F4D  3064               	movlw	100
  1549  0F4E  00F3               	movwf	___lldiv@divisor
  1550  0F4F  0867               	movf	_temp+3,w
  1551  0F50  00FA               	movwf	___lldiv@dividend+3
  1552  0F51  0866               	movf	_temp+2,w
  1553  0F52  00F9               	movwf	___lldiv@dividend+2
  1554  0F53  0865               	movf	_temp+1,w
  1555  0F54  00F8               	movwf	___lldiv@dividend+1
  1556  0F55  0864               	movf	_temp,w
  1557  0F56  00F7               	movwf	___lldiv@dividend
  1558  0F57  120A  118A  2784  120A  158A  	fcall	___lldiv
  1559  0F5C  0873               	movf	?___lldiv,w
  1560  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0F5F  00A6               	movwf	??_Send_Temp
  1563  0F60  0826               	movf	??_Send_Temp,w
  1564  0F61  00EB               	movwf	_uni
  1565  0F62                     l1427:
  1566                           
  1567                           ;mainm2.c: 190:     temp = temp - (uni*100);
  1568  0F62  086B               	movf	_uni,w
  1569  0F63  00A6               	movwf	??_Send_Temp
  1570  0F64  01A7               	clrf	??_Send_Temp+1
  1571  0F65  0826               	movf	??_Send_Temp,w
  1572  0F66  00F3               	movwf	___wmul@multiplier
  1573  0F67  0827               	movf	??_Send_Temp+1,w
  1574  0F68  00F4               	movwf	___wmul@multiplier+1
  1575  0F69  3064               	movlw	100
  1576  0F6A  00F5               	movwf	___wmul@multiplicand
  1577  0F6B  3000               	movlw	0
  1578  0F6C  00F6               	movwf	___wmul@multiplicand+1
  1579  0F6D  120A  158A  220F  120A  158A  	fcall	___wmul
  1580  0F72  0873               	movf	?___wmul,w
  1581  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0F75  00A8               	movwf	??_Send_Temp+2
  1584  0F76  0874               	movf	?___wmul+1,w
  1585  0F77  00A9               	movwf	??_Send_Temp+3
  1586  0F78  3000               	movlw	0
  1587  0F79  1BA9               	btfsc	??_Send_Temp+3,7
  1588  0F7A  30FF               	movlw	255
  1589  0F7B  00AA               	movwf	??_Send_Temp+4
  1590  0F7C  00AB               	movwf	??_Send_Temp+5
  1591  0F7D  0864               	movf	_temp,w
  1592  0F7E  00AC               	movwf	??_Send_Temp+6
  1593  0F7F  0865               	movf	_temp+1,w
  1594  0F80  00AD               	movwf	??_Send_Temp+7
  1595  0F81  0866               	movf	_temp+2,w
  1596  0F82  00AE               	movwf	??_Send_Temp+8
  1597  0F83  0867               	movf	_temp+3,w
  1598  0F84  00AF               	movwf	??_Send_Temp+9
  1599  0F85  0828               	movf	??_Send_Temp+2,w
  1600  0F86  02AC               	subwf	??_Send_Temp+6,f
  1601  0F87  0829               	movf	??_Send_Temp+3,w
  1602  0F88  1C03               	skipc
  1603  0F89  0F29               	incfsz	??_Send_Temp+3,w
  1604  0F8A  2F8C               	goto	u1321
  1605  0F8B  2F8D               	goto	u1322
  1606  0F8C                     u1321:
  1607  0F8C  02AD               	subwf	??_Send_Temp+7,f
  1608  0F8D                     u1322:
  1609  0F8D  082A               	movf	??_Send_Temp+4,w
  1610  0F8E  1C03               	skipc
  1611  0F8F  0F2A               	incfsz	??_Send_Temp+4,w
  1612  0F90  2F92               	goto	u1323
  1613  0F91  2F93               	goto	u1324
  1614  0F92                     u1323:
  1615  0F92  02AE               	subwf	??_Send_Temp+8,f
  1616  0F93                     u1324:
  1617  0F93  082B               	movf	??_Send_Temp+5,w
  1618  0F94  1C03               	skipc
  1619  0F95  0F2B               	incfsz	??_Send_Temp+5,w
  1620  0F96  2F98               	goto	u1325
  1621  0F97  2F99               	goto	u1326
  1622  0F98                     u1325:
  1623  0F98  02AF               	subwf	??_Send_Temp+9,f
  1624  0F99                     u1326:
  1625  0F99  082F               	movf	??_Send_Temp+9,w
  1626  0F9A  00E7               	movwf	_temp+3
  1627  0F9B  082E               	movf	??_Send_Temp+8,w
  1628  0F9C  00E6               	movwf	_temp+2
  1629  0F9D  082D               	movf	??_Send_Temp+7,w
  1630  0F9E  00E5               	movwf	_temp+1
  1631  0F9F  082C               	movf	??_Send_Temp+6,w
  1632  0FA0  00E4               	movwf	_temp
  1633  0FA1                     l1429:
  1634                           
  1635                           ;mainm2.c: 191:     deci = temp /10;
  1636  0FA1  3000               	movlw	0
  1637  0FA2  00F6               	movwf	___lldiv@divisor+3
  1638  0FA3  3000               	movlw	0
  1639  0FA4  00F5               	movwf	___lldiv@divisor+2
  1640  0FA5  3000               	movlw	0
  1641  0FA6  00F4               	movwf	___lldiv@divisor+1
  1642  0FA7  300A               	movlw	10
  1643  0FA8  00F3               	movwf	___lldiv@divisor
  1644  0FA9  0867               	movf	_temp+3,w
  1645  0FAA  00FA               	movwf	___lldiv@dividend+3
  1646  0FAB  0866               	movf	_temp+2,w
  1647  0FAC  00F9               	movwf	___lldiv@dividend+2
  1648  0FAD  0865               	movf	_temp+1,w
  1649  0FAE  00F8               	movwf	___lldiv@dividend+1
  1650  0FAF  0864               	movf	_temp,w
  1651  0FB0  00F7               	movwf	___lldiv@dividend
  1652  0FB1  120A  118A  2784  120A  158A  	fcall	___lldiv
  1653  0FB6  0873               	movf	?___lldiv,w
  1654  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0FB9  00A6               	movwf	??_Send_Temp
  1657  0FBA  0826               	movf	??_Send_Temp,w
  1658  0FBB  00EA               	movwf	_deci
  1659  0FBC                     l1431:
  1660                           
  1661                           ;mainm2.c: 192:     temp = temp - (deci*10);
  1662  0FBC  086A               	movf	_deci,w
  1663  0FBD  00A6               	movwf	??_Send_Temp
  1664  0FBE  01A7               	clrf	??_Send_Temp+1
  1665  0FBF  0826               	movf	??_Send_Temp,w
  1666  0FC0  00F3               	movwf	___wmul@multiplier
  1667  0FC1  0827               	movf	??_Send_Temp+1,w
  1668  0FC2  00F4               	movwf	___wmul@multiplier+1
  1669  0FC3  300A               	movlw	10
  1670  0FC4  00F5               	movwf	___wmul@multiplicand
  1671  0FC5  3000               	movlw	0
  1672  0FC6  00F6               	movwf	___wmul@multiplicand+1
  1673  0FC7  120A  158A  220F  120A  158A  	fcall	___wmul
  1674  0FCC  0873               	movf	?___wmul,w
  1675  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0FCF  00A8               	movwf	??_Send_Temp+2
  1678  0FD0  0874               	movf	?___wmul+1,w
  1679  0FD1  00A9               	movwf	??_Send_Temp+3
  1680  0FD2  3000               	movlw	0
  1681  0FD3  1BA9               	btfsc	??_Send_Temp+3,7
  1682  0FD4  30FF               	movlw	255
  1683  0FD5  00AA               	movwf	??_Send_Temp+4
  1684  0FD6  00AB               	movwf	??_Send_Temp+5
  1685  0FD7  0864               	movf	_temp,w
  1686  0FD8  00AC               	movwf	??_Send_Temp+6
  1687  0FD9  0865               	movf	_temp+1,w
  1688  0FDA  00AD               	movwf	??_Send_Temp+7
  1689  0FDB  0866               	movf	_temp+2,w
  1690  0FDC  00AE               	movwf	??_Send_Temp+8
  1691  0FDD  0867               	movf	_temp+3,w
  1692  0FDE  00AF               	movwf	??_Send_Temp+9
  1693  0FDF  0828               	movf	??_Send_Temp+2,w
  1694  0FE0  02AC               	subwf	??_Send_Temp+6,f
  1695  0FE1  0829               	movf	??_Send_Temp+3,w
  1696  0FE2  1C03               	skipc
  1697  0FE3  0F29               	incfsz	??_Send_Temp+3,w
  1698  0FE4  2FE6               	goto	u1331
  1699  0FE5  2FE7               	goto	u1332
  1700  0FE6                     u1331:
  1701  0FE6  02AD               	subwf	??_Send_Temp+7,f
  1702  0FE7                     u1332:
  1703  0FE7  082A               	movf	??_Send_Temp+4,w
  1704  0FE8  1C03               	skipc
  1705  0FE9  0F2A               	incfsz	??_Send_Temp+4,w
  1706  0FEA  2FEC               	goto	u1333
  1707  0FEB  2FED               	goto	u1334
  1708  0FEC                     u1333:
  1709  0FEC  02AE               	subwf	??_Send_Temp+8,f
  1710  0FED                     u1334:
  1711  0FED  082B               	movf	??_Send_Temp+5,w
  1712  0FEE  1C03               	skipc
  1713  0FEF  0F2B               	incfsz	??_Send_Temp+5,w
  1714  0FF0  2FF2               	goto	u1335
  1715  0FF1  2FF3               	goto	u1336
  1716  0FF2                     u1335:
  1717  0FF2  02AF               	subwf	??_Send_Temp+9,f
  1718  0FF3                     u1336:
  1719  0FF3  082F               	movf	??_Send_Temp+9,w
  1720  0FF4  00E7               	movwf	_temp+3
  1721  0FF5  082E               	movf	??_Send_Temp+8,w
  1722  0FF6  00E6               	movwf	_temp+2
  1723  0FF7  082D               	movf	??_Send_Temp+7,w
  1724  0FF8  00E5               	movwf	_temp+1
  1725  0FF9  082C               	movf	??_Send_Temp+6,w
  1726  0FFA  00E4               	movwf	_temp
  1727                           
  1728                           ;mainm2.c: 193:     centi = temp;
  1729  0FFB  0864               	movf	_temp,w
  1730  0FFC  00A6               	movwf	??_Send_Temp
  1731  0FFD  0826               	movf	??_Send_Temp,w
  1732  0FFE  00E9               	movwf	_centi
  1733  0FFF                     l79:
  1734  0FFF  0008               	return
  1735  1000                     __end_of_Send_Temp:
  1736                           
  1737                           	psect	text4
  1738  0A0F                     __ptext4:	
  1739 ;; *************** function ___wmul *****************
  1740 ;; Defined at:
  1741 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  multiplier      2    3[COMMON] unsigned int 
  1744 ;;  multiplicand    2    5[COMMON] unsigned int 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  product         2    7[COMMON] unsigned int 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  2    3[COMMON] unsigned int 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         4       0       0       0       0
  1757 ;;      Locals:         2       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0
  1759 ;;      Totals:         6       0       0       0       0
  1760 ;;Total ram usage:        6 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    2
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_Send_Temp
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function ___wmul
  1772  0A0F                     ___wmul:
  1773  0A0F                     l1305:	
  1774                           ;incstack = 0
  1775                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1776                           
  1777  0A0F  01F7               	clrf	___wmul@product
  1778  0A10  01F8               	clrf	___wmul@product+1
  1779  0A11                     l1307:
  1780  0A11  1C73               	btfss	___wmul@multiplier,0
  1781  0A12  2A14               	goto	u881
  1782  0A13  2A15               	goto	u880
  1783  0A14                     u881:
  1784  0A14  2A1B               	goto	l319
  1785  0A15                     u880:
  1786  0A15                     l1309:
  1787  0A15  0875               	movf	___wmul@multiplicand,w
  1788  0A16  07F7               	addwf	___wmul@product,f
  1789  0A17  1803               	skipnc
  1790  0A18  0AF8               	incf	___wmul@product+1,f
  1791  0A19  0876               	movf	___wmul@multiplicand+1,w
  1792  0A1A  07F8               	addwf	___wmul@product+1,f
  1793  0A1B                     l319:
  1794  0A1B  3001               	movlw	1
  1795  0A1C                     u895:
  1796  0A1C  1003               	clrc
  1797  0A1D  0DF5               	rlf	___wmul@multiplicand,f
  1798  0A1E  0DF6               	rlf	___wmul@multiplicand+1,f
  1799  0A1F  3EFF               	addlw	-1
  1800  0A20  1D03               	skipz
  1801  0A21  2A1C               	goto	u895
  1802  0A22                     l1311:
  1803  0A22  3001               	movlw	1
  1804  0A23                     u905:
  1805  0A23  1003               	clrc
  1806  0A24  0CF4               	rrf	___wmul@multiplier+1,f
  1807  0A25  0CF3               	rrf	___wmul@multiplier,f
  1808  0A26  3EFF               	addlw	-1
  1809  0A27  1D03               	skipz
  1810  0A28  2A23               	goto	u905
  1811  0A29                     l1313:
  1812  0A29  0873               	movf	___wmul@multiplier,w
  1813  0A2A  0474               	iorwf	___wmul@multiplier+1,w
  1814  0A2B  1D03               	btfss	3,2
  1815  0A2C  2A2E               	goto	u911
  1816  0A2D  2A2F               	goto	u910
  1817  0A2E                     u911:
  1818  0A2E  2A11               	goto	l1307
  1819  0A2F                     u910:
  1820  0A2F                     l1315:
  1821  0A2F  0878               	movf	___wmul@product+1,w
  1822  0A30  00F4               	movwf	?___wmul+1
  1823  0A31  0877               	movf	___wmul@product,w
  1824  0A32  00F3               	movwf	?___wmul
  1825  0A33                     l321:
  1826  0A33  0008               	return
  1827  0A34                     __end_of___wmul:
  1828                           
  1829                           	psect	text5
  1830  09D0                     __ptext5:	
  1831 ;; *************** function _Send_String *****************
  1832 ;; Defined at:
  1833 ;;		line 23 in file "UART.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  X               1    wreg     PTR unsigned char 
  1836 ;;		 -> STR_2(2), STR_1(2), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  X               1    5[COMMON] PTR unsigned char 
  1839 ;;		 -> STR_2(2), STR_1(2), 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         1       0       0       0       0
  1851 ;;      Temps:          1       0       0       0       0
  1852 ;;      Totals:         2       0       0       0       0
  1853 ;;Total ram usage:        2 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    3
  1856 ;; This function calls:
  1857 ;;		_Send_Data
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _Send_String
  1865  09D0                     _Send_String:
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _Send_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1869                           ;Send_String@X stored from wreg
  1870  09D0  00F5               	movwf	Send_String@X
  1871  09D1                     l1433:
  1872                           
  1873                           ;UART.c: 24:     while (*X)
  1874  09D1  29E2               	goto	l1439
  1875  09D2                     l1435:
  1876                           
  1877                           ;UART.c: 25:         Send_Data(*X++);
  1878  09D2  0875               	movf	Send_String@X,w
  1879  09D3  0084               	movwf	4
  1880  09D4  120A  158A  2000  120A  158A  	fcall	stringdir
  1881  09D9  120A  158A  21AE  120A  158A  	fcall	_Send_Data
  1882  09DE                     l1437:
  1883  09DE  3001               	movlw	1
  1884  09DF  00F4               	movwf	??_Send_String
  1885  09E0  0874               	movf	??_Send_String,w
  1886  09E1  07F5               	addwf	Send_String@X,f
  1887  09E2                     l1439:
  1888                           
  1889                           ;UART.c: 24:     while (*X)
  1890  09E2  0875               	movf	Send_String@X,w
  1891  09E3  0084               	movwf	4
  1892  09E4  120A  158A  2000  120A  158A  	fcall	stringdir
  1893  09E9  3A00               	xorlw	0
  1894  09EA  1D03               	skipz
  1895  09EB  29ED               	goto	u1341
  1896  09EC  29EE               	goto	u1340
  1897  09ED                     u1341:
  1898  09ED  29D2               	goto	l1435
  1899  09EE                     u1340:
  1900  09EE                     l229:
  1901  09EE  0008               	return
  1902  09EF                     __end_of_Send_String:
  1903                           
  1904                           	psect	text6
  1905  09AE                     __ptext6:	
  1906 ;; *************** function _Send_Data *****************
  1907 ;; Defined at:
  1908 ;;		line 18 in file "UART.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  X               1    wreg     unsigned char 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  X               1    3[COMMON] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         1       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0
  1925 ;;      Totals:         1       0       0       0       0
  1926 ;;Total ram usage:        1 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    2
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_main
  1933 ;;		_Send_String
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _Send_Data
  1939  09AE                     _Send_Data:
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _Send_Data: [wreg]
  1943                           ;Send_Data@X stored from wreg
  1944  09AE  00F3               	movwf	Send_Data@X
  1945  09AF                     l1241:
  1946  09AF                     l220:	
  1947                           ;UART.c: 19:     while (!TXIF);
  1948                           
  1949  09AF  1283               	bcf	3,5	;RP0=0, select bank0
  1950  09B0  1303               	bcf	3,6	;RP1=0, select bank0
  1951  09B1  1E0C               	btfss	12,4	;volatile
  1952  09B2  29B4               	goto	u801
  1953  09B3  29B5               	goto	u800
  1954  09B4                     u801:
  1955  09B4  29AF               	goto	l220
  1956  09B5                     u800:
  1957  09B5                     l1243:
  1958                           
  1959                           ;UART.c: 20:     TXREG = X;
  1960  09B5  0873               	movf	Send_Data@X,w
  1961  09B6  0099               	movwf	25	;volatile
  1962  09B7                     l223:
  1963  09B7  0008               	return
  1964  09B8                     __end_of_Send_Data:
  1965                           
  1966                           	psect	text7
  1967  054C                     __ptext7:	
  1968 ;; *************** function _BMP280_readTemperature *****************
  1969 ;; Defined at:
  1970 ;;		line 242 in file "BMP280.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  temp            1    wreg     PTR long 
  1973 ;;		 -> temperature(4), 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  temp            1   48[BANK0 ] PTR long 
  1976 ;;		 -> temperature(4), 
  1977 ;;  var2            4   40[BANK0 ] long 
  1978 ;;  var1            4   36[BANK0 ] long 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2   10[None  ] int 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       0       0       0       0
  1989 ;;      Locals:         0      17       0       0       0
  1990 ;;      Temps:          0      16       0       0       0
  1991 ;;      Totals:         0      33       0       0       0
  1992 ;;Total ram usage:       33 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    5
  1995 ;; This function calls:
  1996 ;;		_BMP280_Update
  1997 ;;		___aldiv
  1998 ;;		___lmul
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _BMP280_readTemperature
  2006  054C                     _BMP280_readTemperature:
  2007                           
  2008                           ;incstack = 0
  2009                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2010                           ;BMP280_readTemperature@temp stored from wreg
  2011  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2012  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2013  054E  00D0               	movwf	BMP280_readTemperature@temp
  2014  054F                     l1393:
  2015                           
  2016                           ;BMP280.c: 242: int BMP280_readTemperature(int32_t *temp);BMP280.c: 243: {;BMP280.c: 244
      +                          :   int32_t var1, var2;;BMP280.c: 246:   BMP280_Update();
  2017  054F  120A  158A  25F6  120A  118A  	fcall	_BMP280_Update
  2018                           
  2019                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  2020  0554  1683               	bsf	3,5	;RP0=1, select bank1
  2021  0555  1303               	bcf	3,6	;RP1=0, select bank1
  2022  0556  082C               	movf	_BMP280_calib^(0+128),w
  2023  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0559  00B4               	movwf	??_BMP280_readTemperature
  2026  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2027  055B  1303               	bcf	3,6	;RP1=0, select bank1
  2028  055C  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2029  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2030  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2031  055F  00B5               	movwf	??_BMP280_readTemperature+1
  2032  0560  01B6               	clrf	??_BMP280_readTemperature+2
  2033  0561  01B7               	clrf	??_BMP280_readTemperature+3
  2034  0562  3001               	movlw	1
  2035  0563                     u1095:
  2036  0563  1003               	clrc
  2037  0564  0DB4               	rlf	??_BMP280_readTemperature,f
  2038  0565  0DB5               	rlf	??_BMP280_readTemperature+1,f
  2039  0566  0DB6               	rlf	??_BMP280_readTemperature+2,f
  2040  0567  0DB7               	rlf	??_BMP280_readTemperature+3,f
  2041  0568                     u1090:
  2042  0568  3EFF               	addlw	-1
  2043  0569  1D03               	skipz
  2044  056A  2D63               	goto	u1095
  2045  056B  3000               	movlw	0
  2046  056C  00F6               	movwf	___aldiv@divisor+3
  2047  056D  3000               	movlw	0
  2048  056E  00F5               	movwf	___aldiv@divisor+2
  2049  056F  3000               	movlw	0
  2050  0570  00F4               	movwf	___aldiv@divisor+1
  2051  0571  3008               	movlw	8
  2052  0572  00F3               	movwf	___aldiv@divisor
  2053  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2055  0575  082B               	movf	(_adc_T+3)^(0+128),w
  2056  0576  00FA               	movwf	___aldiv@dividend+3
  2057  0577  082A               	movf	(_adc_T+2)^(0+128),w
  2058  0578  00F9               	movwf	___aldiv@dividend+2
  2059  0579  0829               	movf	(_adc_T+1)^(0+128),w
  2060  057A  00F8               	movwf	___aldiv@dividend+1
  2061  057B  0828               	movf	_adc_T^(0+128),w
  2062  057C  00F7               	movwf	___aldiv@dividend
  2063  057D  120A  158A  247B  120A  118A  	fcall	___aldiv
  2064  0582  0873               	movf	?___aldiv,w
  2065  0583  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0584  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0585  00B8               	movwf	??_BMP280_readTemperature+4
  2068  0586  0874               	movf	?___aldiv+1,w
  2069  0587  00B9               	movwf	??_BMP280_readTemperature+5
  2070  0588  0875               	movf	?___aldiv+2,w
  2071  0589  00BA               	movwf	??_BMP280_readTemperature+6
  2072  058A  0876               	movf	?___aldiv+3,w
  2073  058B  00BB               	movwf	??_BMP280_readTemperature+7
  2074  058C  0834               	movf	??_BMP280_readTemperature,w
  2075  058D  02B8               	subwf	??_BMP280_readTemperature+4,f
  2076  058E  0835               	movf	??_BMP280_readTemperature+1,w
  2077  058F  1C03               	skipc
  2078  0590  0F35               	incfsz	??_BMP280_readTemperature+1,w
  2079  0591  2D93               	goto	u1101
  2080  0592  2D94               	goto	u1102
  2081  0593                     u1101:
  2082  0593  02B9               	subwf	??_BMP280_readTemperature+5,f
  2083  0594                     u1102:
  2084  0594  0836               	movf	??_BMP280_readTemperature+2,w
  2085  0595  1C03               	skipc
  2086  0596  0F36               	incfsz	??_BMP280_readTemperature+2,w
  2087  0597  2D99               	goto	u1103
  2088  0598  2D9A               	goto	u1104
  2089  0599                     u1103:
  2090  0599  02BA               	subwf	??_BMP280_readTemperature+6,f
  2091  059A                     u1104:
  2092  059A  0837               	movf	??_BMP280_readTemperature+3,w
  2093  059B  1C03               	skipc
  2094  059C  0F37               	incfsz	??_BMP280_readTemperature+3,w
  2095  059D  2D9F               	goto	u1105
  2096  059E  2DA0               	goto	u1106
  2097  059F                     u1105:
  2098  059F  02BB               	subwf	??_BMP280_readTemperature+7,f
  2099  05A0                     u1106:
  2100  05A0  083B               	movf	??_BMP280_readTemperature+7,w
  2101  05A1  00AA               	movwf	___lmul@multiplier+3
  2102  05A2  083A               	movf	??_BMP280_readTemperature+6,w
  2103  05A3  00A9               	movwf	___lmul@multiplier+2
  2104  05A4  0839               	movf	??_BMP280_readTemperature+5,w
  2105  05A5  00A8               	movwf	___lmul@multiplier+1
  2106  05A6  0838               	movf	??_BMP280_readTemperature+4,w
  2107  05A7  00A7               	movwf	___lmul@multiplier
  2108  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2109  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  2110  05AA  082E               	movf	(_BMP280_calib^(0+128)+2),w
  2111  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2112  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2113  05AD  00AB               	movwf	___lmul@multiplicand
  2114  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2115  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2116  05B0  082F               	movf	((_BMP280_calib+1)^(0+128)+2),w
  2117  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2118  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2119  05B3  00AC               	movwf	___lmul@multiplicand+1
  2120  05B4  3000               	movlw	0
  2121  05B5  1BAC               	btfsc	___lmul@multiplicand+1,7
  2122  05B6  30FF               	movlw	255
  2123  05B7  00AD               	movwf	___lmul@multiplicand+2
  2124  05B8  00AE               	movwf	___lmul@multiplicand+3
  2125  05B9  120A  158A  2353  120A  118A  	fcall	___lmul
  2126  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2127  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2128  05C0  082A               	movf	?___lmul+3,w
  2129  05C1  00D4               	movwf	_BMP280_readTemperature$1199+3
  2130  05C2  0829               	movf	?___lmul+2,w
  2131  05C3  00D3               	movwf	_BMP280_readTemperature$1199+2
  2132  05C4  0828               	movf	?___lmul+1,w
  2133  05C5  00D2               	movwf	_BMP280_readTemperature$1199+1
  2134  05C6  0827               	movf	?___lmul,w
  2135  05C7  00D1               	movwf	_BMP280_readTemperature$1199
  2136                           
  2137                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  2138  05C8  3000               	movlw	0
  2139  05C9  00F6               	movwf	___aldiv@divisor+3
  2140  05CA  3000               	movlw	0
  2141  05CB  00F5               	movwf	___aldiv@divisor+2
  2142  05CC  3008               	movlw	8
  2143  05CD  00F4               	movwf	___aldiv@divisor+1
  2144  05CE  3000               	movlw	0
  2145  05CF  00F3               	movwf	___aldiv@divisor
  2146  05D0  0854               	movf	_BMP280_readTemperature$1199+3,w
  2147  05D1  00FA               	movwf	___aldiv@dividend+3
  2148  05D2  0853               	movf	_BMP280_readTemperature$1199+2,w
  2149  05D3  00F9               	movwf	___aldiv@dividend+2
  2150  05D4  0852               	movf	_BMP280_readTemperature$1199+1,w
  2151  05D5  00F8               	movwf	___aldiv@dividend+1
  2152  05D6  0851               	movf	_BMP280_readTemperature$1199,w
  2153  05D7  00F7               	movwf	___aldiv@dividend
  2154  05D8  120A  158A  247B  120A  118A  	fcall	___aldiv
  2155  05DD  0876               	movf	?___aldiv+3,w
  2156  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  2157  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  2158  05E0  00C7               	movwf	BMP280_readTemperature@var1+3
  2159  05E1  0875               	movf	?___aldiv+2,w
  2160  05E2  00C6               	movwf	BMP280_readTemperature@var1+2
  2161  05E3  0874               	movf	?___aldiv+1,w
  2162  05E4  00C5               	movwf	BMP280_readTemperature@var1+1
  2163  05E5  0873               	movf	?___aldiv,w
  2164  05E6  00C4               	movwf	BMP280_readTemperature@var1
  2165                           
  2166                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2167  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  2168  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  2169  05E9  082C               	movf	_BMP280_calib^(0+128),w
  2170  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  2171  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  2172  05EC  00B4               	movwf	??_BMP280_readTemperature
  2173  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  2174  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  2175  05EF  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2176  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  2177  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  2178  05F2  00B5               	movwf	??_BMP280_readTemperature+1
  2179  05F3  01B6               	clrf	??_BMP280_readTemperature+2
  2180  05F4  01B7               	clrf	??_BMP280_readTemperature+3
  2181  05F5  3000               	movlw	0
  2182  05F6  00F6               	movwf	___aldiv@divisor+3
  2183  05F7  3000               	movlw	0
  2184  05F8  00F5               	movwf	___aldiv@divisor+2
  2185  05F9  3000               	movlw	0
  2186  05FA  00F4               	movwf	___aldiv@divisor+1
  2187  05FB  3010               	movlw	16
  2188  05FC  00F3               	movwf	___aldiv@divisor
  2189  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  2190  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  2191  05FF  082B               	movf	(_adc_T+3)^(0+128),w
  2192  0600  00FA               	movwf	___aldiv@dividend+3
  2193  0601  082A               	movf	(_adc_T+2)^(0+128),w
  2194  0602  00F9               	movwf	___aldiv@dividend+2
  2195  0603  0829               	movf	(_adc_T+1)^(0+128),w
  2196  0604  00F8               	movwf	___aldiv@dividend+1
  2197  0605  0828               	movf	_adc_T^(0+128),w
  2198  0606  00F7               	movwf	___aldiv@dividend
  2199  0607  120A  158A  247B  120A  118A  	fcall	___aldiv
  2200  060C  0873               	movf	?___aldiv,w
  2201  060D  1283               	bcf	3,5	;RP0=0, select bank0
  2202  060E  1303               	bcf	3,6	;RP1=0, select bank0
  2203  060F  00B8               	movwf	??_BMP280_readTemperature+4
  2204  0610  0874               	movf	?___aldiv+1,w
  2205  0611  00B9               	movwf	??_BMP280_readTemperature+5
  2206  0612  0875               	movf	?___aldiv+2,w
  2207  0613  00BA               	movwf	??_BMP280_readTemperature+6
  2208  0614  0876               	movf	?___aldiv+3,w
  2209  0615  00BB               	movwf	??_BMP280_readTemperature+7
  2210  0616  0834               	movf	??_BMP280_readTemperature,w
  2211  0617  02B8               	subwf	??_BMP280_readTemperature+4,f
  2212  0618  0835               	movf	??_BMP280_readTemperature+1,w
  2213  0619  1C03               	skipc
  2214  061A  0F35               	incfsz	??_BMP280_readTemperature+1,w
  2215  061B  2E1D               	goto	u1111
  2216  061C  2E1E               	goto	u1112
  2217  061D                     u1111:
  2218  061D  02B9               	subwf	??_BMP280_readTemperature+5,f
  2219  061E                     u1112:
  2220  061E  0836               	movf	??_BMP280_readTemperature+2,w
  2221  061F  1C03               	skipc
  2222  0620  0F36               	incfsz	??_BMP280_readTemperature+2,w
  2223  0621  2E23               	goto	u1113
  2224  0622  2E24               	goto	u1114
  2225  0623                     u1113:
  2226  0623  02BA               	subwf	??_BMP280_readTemperature+6,f
  2227  0624                     u1114:
  2228  0624  0837               	movf	??_BMP280_readTemperature+3,w
  2229  0625  1C03               	skipc
  2230  0626  0F37               	incfsz	??_BMP280_readTemperature+3,w
  2231  0627  2E29               	goto	u1115
  2232  0628  2E2A               	goto	u1116
  2233  0629                     u1115:
  2234  0629  02BB               	subwf	??_BMP280_readTemperature+7,f
  2235  062A                     u1116:
  2236  062A  083B               	movf	??_BMP280_readTemperature+7,w
  2237  062B  00AA               	movwf	___lmul@multiplier+3
  2238  062C  083A               	movf	??_BMP280_readTemperature+6,w
  2239  062D  00A9               	movwf	___lmul@multiplier+2
  2240  062E  0839               	movf	??_BMP280_readTemperature+5,w
  2241  062F  00A8               	movwf	___lmul@multiplier+1
  2242  0630  0838               	movf	??_BMP280_readTemperature+4,w
  2243  0631  00A7               	movwf	___lmul@multiplier
  2244  0632  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0633  1303               	bcf	3,6	;RP1=0, select bank1
  2246  0634  082C               	movf	_BMP280_calib^(0+128),w
  2247  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0637  00BC               	movwf	??_BMP280_readTemperature+8
  2250  0638  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0639  1303               	bcf	3,6	;RP1=0, select bank1
  2252  063A  082D               	movf	(_BMP280_calib+1)^(0+128),w
  2253  063B  1283               	bcf	3,5	;RP0=0, select bank0
  2254  063C  1303               	bcf	3,6	;RP1=0, select bank0
  2255  063D  00BD               	movwf	??_BMP280_readTemperature+9
  2256  063E  01BE               	clrf	??_BMP280_readTemperature+10
  2257  063F  01BF               	clrf	??_BMP280_readTemperature+11
  2258  0640  3000               	movlw	0
  2259  0641  00F6               	movwf	___aldiv@divisor+3
  2260  0642  3000               	movlw	0
  2261  0643  00F5               	movwf	___aldiv@divisor+2
  2262  0644  3000               	movlw	0
  2263  0645  00F4               	movwf	___aldiv@divisor+1
  2264  0646  3010               	movlw	16
  2265  0647  00F3               	movwf	___aldiv@divisor
  2266  0648  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0649  1303               	bcf	3,6	;RP1=0, select bank1
  2268  064A  082B               	movf	(_adc_T+3)^(0+128),w
  2269  064B  00FA               	movwf	___aldiv@dividend+3
  2270  064C  082A               	movf	(_adc_T+2)^(0+128),w
  2271  064D  00F9               	movwf	___aldiv@dividend+2
  2272  064E  0829               	movf	(_adc_T+1)^(0+128),w
  2273  064F  00F8               	movwf	___aldiv@dividend+1
  2274  0650  0828               	movf	_adc_T^(0+128),w
  2275  0651  00F7               	movwf	___aldiv@dividend
  2276  0652  120A  158A  247B  120A  118A  	fcall	___aldiv
  2277  0657  0873               	movf	?___aldiv,w
  2278  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2280  065A  00C0               	movwf	??_BMP280_readTemperature+12
  2281  065B  0874               	movf	?___aldiv+1,w
  2282  065C  00C1               	movwf	??_BMP280_readTemperature+13
  2283  065D  0875               	movf	?___aldiv+2,w
  2284  065E  00C2               	movwf	??_BMP280_readTemperature+14
  2285  065F  0876               	movf	?___aldiv+3,w
  2286  0660  00C3               	movwf	??_BMP280_readTemperature+15
  2287  0661  083C               	movf	??_BMP280_readTemperature+8,w
  2288  0662  02C0               	subwf	??_BMP280_readTemperature+12,f
  2289  0663  083D               	movf	??_BMP280_readTemperature+9,w
  2290  0664  1C03               	skipc
  2291  0665  0F3D               	incfsz	??_BMP280_readTemperature+9,w
  2292  0666  2E68               	goto	u1121
  2293  0667  2E69               	goto	u1122
  2294  0668                     u1121:
  2295  0668  02C1               	subwf	??_BMP280_readTemperature+13,f
  2296  0669                     u1122:
  2297  0669  083E               	movf	??_BMP280_readTemperature+10,w
  2298  066A  1C03               	skipc
  2299  066B  0F3E               	incfsz	??_BMP280_readTemperature+10,w
  2300  066C  2E6E               	goto	u1123
  2301  066D  2E6F               	goto	u1124
  2302  066E                     u1123:
  2303  066E  02C2               	subwf	??_BMP280_readTemperature+14,f
  2304  066F                     u1124:
  2305  066F  083F               	movf	??_BMP280_readTemperature+11,w
  2306  0670  1C03               	skipc
  2307  0671  0F3F               	incfsz	??_BMP280_readTemperature+11,w
  2308  0672  2E74               	goto	u1125
  2309  0673  2E75               	goto	u1126
  2310  0674                     u1125:
  2311  0674  02C3               	subwf	??_BMP280_readTemperature+15,f
  2312  0675                     u1126:
  2313  0675  0843               	movf	??_BMP280_readTemperature+15,w
  2314  0676  00AE               	movwf	___lmul@multiplicand+3
  2315  0677  0842               	movf	??_BMP280_readTemperature+14,w
  2316  0678  00AD               	movwf	___lmul@multiplicand+2
  2317  0679  0841               	movf	??_BMP280_readTemperature+13,w
  2318  067A  00AC               	movwf	___lmul@multiplicand+1
  2319  067B  0840               	movf	??_BMP280_readTemperature+12,w
  2320  067C  00AB               	movwf	___lmul@multiplicand
  2321  067D  120A  158A  2353  120A  118A  	fcall	___lmul
  2322  0682  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0683  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0684  082A               	movf	?___lmul+3,w
  2325  0685  00D4               	movwf	_BMP280_readTemperature$1199+3
  2326  0686  0829               	movf	?___lmul+2,w
  2327  0687  00D3               	movwf	_BMP280_readTemperature$1199+2
  2328  0688  0828               	movf	?___lmul+1,w
  2329  0689  00D2               	movwf	_BMP280_readTemperature$1199+1
  2330  068A  0827               	movf	?___lmul,w
  2331  068B  00D1               	movwf	_BMP280_readTemperature$1199
  2332                           
  2333                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2334  068C  3000               	movlw	0
  2335  068D  00F6               	movwf	___aldiv@divisor+3
  2336  068E  3000               	movlw	0
  2337  068F  00F5               	movwf	___aldiv@divisor+2
  2338  0690  3010               	movlw	16
  2339  0691  00F4               	movwf	___aldiv@divisor+1
  2340  0692  3000               	movlw	0
  2341  0693  00F3               	movwf	___aldiv@divisor
  2342  0694  0854               	movf	_BMP280_readTemperature$1199+3,w
  2343  0695  00FA               	movwf	___aldiv@dividend+3
  2344  0696  0853               	movf	_BMP280_readTemperature$1199+2,w
  2345  0697  00F9               	movwf	___aldiv@dividend+2
  2346  0698  0852               	movf	_BMP280_readTemperature$1199+1,w
  2347  0699  00F8               	movwf	___aldiv@dividend+1
  2348  069A  0851               	movf	_BMP280_readTemperature$1199,w
  2349  069B  00F7               	movwf	___aldiv@dividend
  2350  069C  120A  158A  247B  120A  118A  	fcall	___aldiv
  2351  06A1  0876               	movf	?___aldiv+3,w
  2352  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2353  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2354  06A4  00AA               	movwf	___lmul@multiplier+3
  2355  06A5  0875               	movf	?___aldiv+2,w
  2356  06A6  00A9               	movwf	___lmul@multiplier+2
  2357  06A7  0874               	movf	?___aldiv+1,w
  2358  06A8  00A8               	movwf	___lmul@multiplier+1
  2359  06A9  0873               	movf	?___aldiv,w
  2360  06AA  00A7               	movwf	___lmul@multiplier
  2361  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  2362  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  2363  06AD  0830               	movf	(_BMP280_calib^(0+128)+4),w
  2364  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2365  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2366  06B0  00AB               	movwf	___lmul@multiplicand
  2367  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  2368  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  2369  06B3  0831               	movf	((_BMP280_calib+1)^(0+128)+4),w
  2370  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2371  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2372  06B6  00AC               	movwf	___lmul@multiplicand+1
  2373  06B7  3000               	movlw	0
  2374  06B8  1BAC               	btfsc	___lmul@multiplicand+1,7
  2375  06B9  30FF               	movlw	255
  2376  06BA  00AD               	movwf	___lmul@multiplicand+2
  2377  06BB  00AE               	movwf	___lmul@multiplicand+3
  2378  06BC  120A  158A  2353  120A  118A  	fcall	___lmul
  2379  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2380  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2381  06C3  082A               	movf	?___lmul+3,w
  2382  06C4  00CF               	movwf	_BMP280_readTemperature$1200+3
  2383  06C5  0829               	movf	?___lmul+2,w
  2384  06C6  00CE               	movwf	_BMP280_readTemperature$1200+2
  2385  06C7  0828               	movf	?___lmul+1,w
  2386  06C8  00CD               	movwf	_BMP280_readTemperature$1200+1
  2387  06C9  0827               	movf	?___lmul,w
  2388  06CA  00CC               	movwf	_BMP280_readTemperature$1200
  2389                           
  2390                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2391  06CB  3000               	movlw	0
  2392  06CC  00F6               	movwf	___aldiv@divisor+3
  2393  06CD  3000               	movlw	0
  2394  06CE  00F5               	movwf	___aldiv@divisor+2
  2395  06CF  3040               	movlw	64
  2396  06D0  00F4               	movwf	___aldiv@divisor+1
  2397  06D1  3000               	movlw	0
  2398  06D2  00F3               	movwf	___aldiv@divisor
  2399  06D3  084F               	movf	_BMP280_readTemperature$1200+3,w
  2400  06D4  00FA               	movwf	___aldiv@dividend+3
  2401  06D5  084E               	movf	_BMP280_readTemperature$1200+2,w
  2402  06D6  00F9               	movwf	___aldiv@dividend+2
  2403  06D7  084D               	movf	_BMP280_readTemperature$1200+1,w
  2404  06D8  00F8               	movwf	___aldiv@dividend+1
  2405  06D9  084C               	movf	_BMP280_readTemperature$1200,w
  2406  06DA  00F7               	movwf	___aldiv@dividend
  2407  06DB  120A  158A  247B  120A  118A  	fcall	___aldiv
  2408  06E0  0876               	movf	?___aldiv+3,w
  2409  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2410  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2411  06E3  00CB               	movwf	BMP280_readTemperature@var2+3
  2412  06E4  0875               	movf	?___aldiv+2,w
  2413  06E5  00CA               	movwf	BMP280_readTemperature@var2+2
  2414  06E6  0874               	movf	?___aldiv+1,w
  2415  06E7  00C9               	movwf	BMP280_readTemperature@var2+1
  2416  06E8  0873               	movf	?___aldiv,w
  2417  06E9  00C8               	movwf	BMP280_readTemperature@var2
  2418  06EA                     l1395:
  2419                           
  2420                           ;BMP280.c: 256:   t_fine = var1 + var2;
  2421  06EA  0844               	movf	BMP280_readTemperature@var1,w
  2422  06EB  0748               	addwf	BMP280_readTemperature@var2,w
  2423  06EC  00B4               	movwf	??_BMP280_readTemperature
  2424  06ED  3000               	movlw	0
  2425  06EE  1803               	skipnc
  2426  06EF  3001               	movlw	1
  2427  06F0  0745               	addwf	BMP280_readTemperature@var1+1,w
  2428  06F1  01B6               	clrf	??_BMP280_readTemperature+2
  2429  06F2  1803               	skipnc
  2430  06F3  0AB6               	incf	??_BMP280_readTemperature+2,f
  2431  06F4  0749               	addwf	BMP280_readTemperature@var2+1,w
  2432  06F5  00B5               	movwf	??_BMP280_readTemperature+1
  2433  06F6  1803               	skipnc
  2434  06F7  0AB6               	incf	??_BMP280_readTemperature+2,f
  2435  06F8  0846               	movf	BMP280_readTemperature@var1+2,w
  2436  06F9  0736               	addwf	??_BMP280_readTemperature+2,w
  2437  06FA  01B7               	clrf	??_BMP280_readTemperature+3
  2438  06FB  1803               	skipnc
  2439  06FC  0AB7               	incf	??_BMP280_readTemperature+3,f
  2440  06FD  074A               	addwf	BMP280_readTemperature@var2+2,w
  2441  06FE  00B6               	movwf	??_BMP280_readTemperature+2
  2442  06FF  1803               	skipnc
  2443  0700  0AB7               	incf	??_BMP280_readTemperature+3,f
  2444  0701  0847               	movf	BMP280_readTemperature@var1+3,w
  2445  0702  0737               	addwf	??_BMP280_readTemperature+3,w
  2446  0703  074B               	addwf	BMP280_readTemperature@var2+3,w
  2447  0704  00B7               	movwf	??_BMP280_readTemperature+3
  2448  0705  0837               	movf	??_BMP280_readTemperature+3,w
  2449  0706  1683               	bsf	3,5	;RP0=1, select bank1
  2450  0707  1303               	bcf	3,6	;RP1=0, select bank1
  2451  0708  00A3               	movwf	(_t_fine+3)^(0+128)
  2452  0709  1283               	bcf	3,5	;RP0=0, select bank0
  2453  070A  1303               	bcf	3,6	;RP1=0, select bank0
  2454  070B  0836               	movf	??_BMP280_readTemperature+2,w
  2455  070C  1683               	bsf	3,5	;RP0=1, select bank1
  2456  070D  1303               	bcf	3,6	;RP1=0, select bank1
  2457  070E  00A2               	movwf	(_t_fine+2)^(0+128)
  2458  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0711  0835               	movf	??_BMP280_readTemperature+1,w
  2461  0712  1683               	bsf	3,5	;RP0=1, select bank1
  2462  0713  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0714  00A1               	movwf	(_t_fine+1)^(0+128)
  2464  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0716  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0717  0834               	movf	??_BMP280_readTemperature,w
  2467  0718  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0719  1303               	bcf	3,6	;RP1=0, select bank1
  2469  071A  00A0               	movwf	_t_fine^(0+128)
  2470  071B                     l1397:
  2471                           
  2472                           ;BMP280.c: 258:   *temp = (t_fine * 5 + 128) / 256;
  2473  071B  3000               	movlw	0
  2474  071C  00F6               	movwf	___aldiv@divisor+3
  2475  071D  3000               	movlw	0
  2476  071E  00F5               	movwf	___aldiv@divisor+2
  2477  071F  3001               	movlw	1
  2478  0720  00F4               	movwf	___aldiv@divisor+1
  2479  0721  3000               	movlw	0
  2480  0722  00F3               	movwf	___aldiv@divisor
  2481  0723  3080               	movlw	128
  2482  0724  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0725  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0726  00B4               	movwf	??_BMP280_readTemperature
  2485  0727  3000               	movlw	0
  2486  0728  00B5               	movwf	??_BMP280_readTemperature+1
  2487  0729  3000               	movlw	0
  2488  072A  00B6               	movwf	??_BMP280_readTemperature+2
  2489  072B  3000               	movlw	0
  2490  072C  00B7               	movwf	??_BMP280_readTemperature+3
  2491  072D  1683               	bsf	3,5	;RP0=1, select bank1
  2492  072E  1303               	bcf	3,6	;RP1=0, select bank1
  2493  072F  0823               	movf	(_t_fine+3)^(0+128),w
  2494  0730  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0731  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0732  00AA               	movwf	___lmul@multiplier+3
  2497  0733  1683               	bsf	3,5	;RP0=1, select bank1
  2498  0734  1303               	bcf	3,6	;RP1=0, select bank1
  2499  0735  0822               	movf	(_t_fine+2)^(0+128),w
  2500  0736  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0737  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0738  00A9               	movwf	___lmul@multiplier+2
  2503  0739  1683               	bsf	3,5	;RP0=1, select bank1
  2504  073A  1303               	bcf	3,6	;RP1=0, select bank1
  2505  073B  0821               	movf	(_t_fine+1)^(0+128),w
  2506  073C  1283               	bcf	3,5	;RP0=0, select bank0
  2507  073D  1303               	bcf	3,6	;RP1=0, select bank0
  2508  073E  00A8               	movwf	___lmul@multiplier+1
  2509  073F  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0740  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0741  0820               	movf	_t_fine^(0+128),w
  2512  0742  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0743  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0744  00A7               	movwf	___lmul@multiplier
  2515  0745  3000               	movlw	0
  2516  0746  00AE               	movwf	___lmul@multiplicand+3
  2517  0747  3000               	movlw	0
  2518  0748  00AD               	movwf	___lmul@multiplicand+2
  2519  0749  3000               	movlw	0
  2520  074A  00AC               	movwf	___lmul@multiplicand+1
  2521  074B  3005               	movlw	5
  2522  074C  00AB               	movwf	___lmul@multiplicand
  2523  074D  120A  158A  2353  120A  118A  	fcall	___lmul
  2524  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0754  0827               	movf	?___lmul,w
  2527  0755  07B4               	addwf	??_BMP280_readTemperature,f
  2528  0756  0828               	movf	?___lmul+1,w
  2529  0757  1803               	skipnc
  2530  0758  0F28               	incfsz	?___lmul+1,w
  2531  0759  2F5B               	goto	u1130
  2532  075A  2F5C               	goto	u1131
  2533  075B                     u1130:
  2534  075B  07B5               	addwf	??_BMP280_readTemperature+1,f
  2535  075C                     u1131:
  2536  075C  0829               	movf	?___lmul+2,w
  2537  075D  1803               	skipnc
  2538  075E  0F29               	incfsz	?___lmul+2,w
  2539  075F  2F61               	goto	u1132
  2540  0760  2F62               	goto	u1133
  2541  0761                     u1132:
  2542  0761  07B6               	addwf	??_BMP280_readTemperature+2,f
  2543  0762                     u1133:
  2544  0762  082A               	movf	?___lmul+3,w
  2545  0763  1803               	skipnc
  2546  0764  0A2A               	incf	?___lmul+3,w
  2547  0765  07B7               	addwf	??_BMP280_readTemperature+3,f
  2548  0766  0837               	movf	??_BMP280_readTemperature+3,w
  2549  0767  00FA               	movwf	___aldiv@dividend+3
  2550  0768  0836               	movf	??_BMP280_readTemperature+2,w
  2551  0769  00F9               	movwf	___aldiv@dividend+2
  2552  076A  0835               	movf	??_BMP280_readTemperature+1,w
  2553  076B  00F8               	movwf	___aldiv@dividend+1
  2554  076C  0834               	movf	??_BMP280_readTemperature,w
  2555  076D  00F7               	movwf	___aldiv@dividend
  2556  076E  120A  158A  247B  120A  118A  	fcall	___aldiv
  2557  0773  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0774  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0775  0850               	movf	BMP280_readTemperature@temp,w
  2560  0776  0084               	movwf	4
  2561  0777  0873               	movf	?___aldiv,w
  2562  0778  1383               	bcf	3,7	;select IRP bank0
  2563  0779  0080               	movwf	0
  2564  077A  0A84               	incf	4,f
  2565  077B  0874               	movf	?___aldiv+1,w
  2566  077C  0080               	movwf	0
  2567  077D  0A84               	incf	4,f
  2568  077E  0875               	movf	?___aldiv+2,w
  2569  077F  0080               	movwf	0
  2570  0780  0A84               	incf	4,f
  2571  0781  0876               	movf	?___aldiv+3,w
  2572  0782  0080               	movwf	0
  2573  0783                     l190:
  2574  0783  0008               	return
  2575  0784                     __end_of_BMP280_readTemperature:
  2576                           
  2577                           	psect	text8
  2578  0DF6                     __ptext8:	
  2579 ;; *************** function _BMP280_Update *****************
  2580 ;; Defined at:
  2581 ;;		line 211 in file "BMP280.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  ret             4    4[BANK0 ] struct .
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       0       0       0       0
  2596 ;;      Locals:         0       4       0       0       0
  2597 ;;      Temps:          0       4       0       0       0
  2598 ;;      Totals:         0       8       0       0       0
  2599 ;;Total ram usage:        8 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    4
  2602 ;; This function calls:
  2603 ;;		_I2C_Master_Read
  2604 ;;		_I2C_Master_Start
  2605 ;;		_I2C_Master_Stop
  2606 ;;		_I2C_Master_Write
  2607 ;; This function is called by:
  2608 ;;		_BMP280_readTemperature
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _BMP280_Update
  2614  0DF6                     _BMP280_Update:
  2615  0DF6                     l1275:	
  2616                           ;incstack = 0
  2617                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  2618                           
  2619                           
  2620                           ;BMP280.c: 217:   } ret;;BMP280.c: 218:   ret.b[3] = 0x00;
  2621  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0DF8  01A7               	clrf	BMP280_Update@ret+3
  2624  0DF9                     l1277:
  2625                           
  2626                           ;BMP280.c: 220:   I2C_Master_Start();
  2627  0DF9  120A  158A  2188  120A  158A  	fcall	_I2C_Master_Start
  2628  0DFE                     l1279:
  2629                           
  2630                           ;BMP280.c: 221:   I2C_Master_Write( 0xEE);
  2631  0DFE  30EE               	movlw	238
  2632  0DFF  00F3               	movwf	I2C_Master_Write@d
  2633  0E00  3000               	movlw	0
  2634  0E01  00F4               	movwf	I2C_Master_Write@d+1
  2635  0E02  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  2636  0E07                     l1281:
  2637                           
  2638                           ;BMP280.c: 222:   I2C_Master_Write( 0xF7);
  2639  0E07  30F7               	movlw	247
  2640  0E08  00F3               	movwf	I2C_Master_Write@d
  2641  0E09  3000               	movlw	0
  2642  0E0A  00F4               	movwf	I2C_Master_Write@d+1
  2643  0E0B  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  2644  0E10                     l1283:
  2645                           
  2646                           ;BMP280.c: 223:   I2C_Master_Start();
  2647  0E10  120A  158A  2188  120A  158A  	fcall	_I2C_Master_Start
  2648  0E15                     l1285:
  2649                           
  2650                           ;BMP280.c: 224:   I2C_Master_Write( 0xEE | 1);
  2651  0E15  30EF               	movlw	239
  2652  0E16  00F3               	movwf	I2C_Master_Write@d
  2653  0E17  3000               	movlw	0
  2654  0E18  00F4               	movwf	I2C_Master_Write@d+1
  2655  0E19  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  2656  0E1E                     l1287:
  2657                           
  2658                           ;BMP280.c: 225:   ret.b[2] = I2C_Master_Read( 1);
  2659  0E1E  3001               	movlw	1
  2660  0E1F  00F3               	movwf	I2C_Master_Read@a
  2661  0E20  3000               	movlw	0
  2662  0E21  00F4               	movwf	I2C_Master_Read@a+1
  2663  0E22  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2664  0E27  0873               	movf	?_I2C_Master_Read,w
  2665  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  2667  0E2A  00A0               	movwf	??_BMP280_Update
  2668  0E2B  0820               	movf	??_BMP280_Update,w
  2669  0E2C  00A6               	movwf	BMP280_Update@ret+2
  2670  0E2D                     l1289:
  2671                           
  2672                           ;BMP280.c: 226:   ret.b[1] = I2C_Master_Read( 1);
  2673  0E2D  3001               	movlw	1
  2674  0E2E  00F3               	movwf	I2C_Master_Read@a
  2675  0E2F  3000               	movlw	0
  2676  0E30  00F4               	movwf	I2C_Master_Read@a+1
  2677  0E31  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2678  0E36  0873               	movf	?_I2C_Master_Read,w
  2679  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0E39  00A0               	movwf	??_BMP280_Update
  2682  0E3A  0820               	movf	??_BMP280_Update,w
  2683  0E3B  00A5               	movwf	BMP280_Update@ret+1
  2684  0E3C                     l1291:
  2685                           
  2686                           ;BMP280.c: 227:   ret.b[0] = I2C_Master_Read( 1);
  2687  0E3C  3001               	movlw	1
  2688  0E3D  00F3               	movwf	I2C_Master_Read@a
  2689  0E3E  3000               	movlw	0
  2690  0E3F  00F4               	movwf	I2C_Master_Read@a+1
  2691  0E40  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2692  0E45  0873               	movf	?_I2C_Master_Read,w
  2693  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0E48  00A0               	movwf	??_BMP280_Update
  2696  0E49  0820               	movf	??_BMP280_Update,w
  2697  0E4A  00A4               	movwf	BMP280_Update@ret
  2698  0E4B                     l1293:
  2699                           
  2700                           ;BMP280.c: 229:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  2701  0E4B  0824               	movf	BMP280_Update@ret,w
  2702  0E4C  00A0               	movwf	??_BMP280_Update
  2703  0E4D  0825               	movf	BMP280_Update@ret+1,w
  2704  0E4E  00A1               	movwf	??_BMP280_Update+1
  2705  0E4F  0826               	movf	BMP280_Update@ret+2,w
  2706  0E50  00A2               	movwf	??_BMP280_Update+2
  2707  0E51  0827               	movf	BMP280_Update@ret+3,w
  2708  0E52  00A3               	movwf	??_BMP280_Update+3
  2709  0E53  3004               	movlw	4
  2710  0E54                     u865:
  2711  0E54  1003               	clrc
  2712  0E55  0CA3               	rrf	??_BMP280_Update+3,f
  2713  0E56  0CA2               	rrf	??_BMP280_Update+2,f
  2714  0E57  0CA1               	rrf	??_BMP280_Update+1,f
  2715  0E58  0CA0               	rrf	??_BMP280_Update,f
  2716  0E59                     u860:
  2717  0E59  3EFF               	addlw	-1
  2718  0E5A  1D03               	skipz
  2719  0E5B  2E54               	goto	u865
  2720  0E5C  30FF               	movlw	255
  2721  0E5D  0520               	andwf	??_BMP280_Update,w
  2722  0E5E  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0E5F  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0E60  00A4               	movwf	_adc_P^(0+128)
  2725  0E61  30FF               	movlw	255
  2726  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0E64  0521               	andwf	??_BMP280_Update+1,w
  2729  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0E66  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0E67  00A5               	movwf	(_adc_P+1)^(0+128)
  2732  0E68  300F               	movlw	15
  2733  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0E6B  0522               	andwf	??_BMP280_Update+2,w
  2736  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  2737  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
  2738  0E6E  00A6               	movwf	(_adc_P+2)^(0+128)
  2739  0E6F  3000               	movlw	0
  2740  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0E72  0523               	andwf	??_BMP280_Update+3,w
  2743  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  2744  0E74  1303               	bcf	3,6	;RP1=0, select bank1
  2745  0E75  00A7               	movwf	(_adc_P+3)^(0+128)
  2746  0E76                     l1295:
  2747                           
  2748                           ;BMP280.c: 231:   ret.b[2] = I2C_Master_Read(1);
  2749  0E76  3001               	movlw	1
  2750  0E77  00F3               	movwf	I2C_Master_Read@a
  2751  0E78  3000               	movlw	0
  2752  0E79  00F4               	movwf	I2C_Master_Read@a+1
  2753  0E7A  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2754  0E7F  0873               	movf	?_I2C_Master_Read,w
  2755  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0E82  00A0               	movwf	??_BMP280_Update
  2758  0E83  0820               	movf	??_BMP280_Update,w
  2759  0E84  00A6               	movwf	BMP280_Update@ret+2
  2760  0E85                     l1297:
  2761                           
  2762                           ;BMP280.c: 232:   ret.b[1] = I2C_Master_Read(1);
  2763  0E85  3001               	movlw	1
  2764  0E86  00F3               	movwf	I2C_Master_Read@a
  2765  0E87  3000               	movlw	0
  2766  0E88  00F4               	movwf	I2C_Master_Read@a+1
  2767  0E89  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2768  0E8E  0873               	movf	?_I2C_Master_Read,w
  2769  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0E91  00A0               	movwf	??_BMP280_Update
  2772  0E92  0820               	movf	??_BMP280_Update,w
  2773  0E93  00A5               	movwf	BMP280_Update@ret+1
  2774  0E94                     l1299:
  2775                           
  2776                           ;BMP280.c: 233:   ret.b[0] = I2C_Master_Read(0);
  2777  0E94  3000               	movlw	0
  2778  0E95  00F3               	movwf	I2C_Master_Read@a
  2779  0E96  00F4               	movwf	I2C_Master_Read@a+1
  2780  0E97  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  2781  0E9C  0873               	movf	?_I2C_Master_Read,w
  2782  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0E9F  00A0               	movwf	??_BMP280_Update
  2785  0EA0  0820               	movf	??_BMP280_Update,w
  2786  0EA1  00A4               	movwf	BMP280_Update@ret
  2787  0EA2                     l1301:
  2788                           
  2789                           ;BMP280.c: 234:   I2C_Master_Stop();
  2790  0EA2  120A  158A  2191  120A  158A  	fcall	_I2C_Master_Stop
  2791  0EA7                     l1303:
  2792                           
  2793                           ;BMP280.c: 236:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  2794  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0EA9  0824               	movf	BMP280_Update@ret,w
  2797  0EAA  00A0               	movwf	??_BMP280_Update
  2798  0EAB  0825               	movf	BMP280_Update@ret+1,w
  2799  0EAC  00A1               	movwf	??_BMP280_Update+1
  2800  0EAD  0826               	movf	BMP280_Update@ret+2,w
  2801  0EAE  00A2               	movwf	??_BMP280_Update+2
  2802  0EAF  0827               	movf	BMP280_Update@ret+3,w
  2803  0EB0  00A3               	movwf	??_BMP280_Update+3
  2804  0EB1  3004               	movlw	4
  2805  0EB2                     u875:
  2806  0EB2  1003               	clrc
  2807  0EB3  0CA3               	rrf	??_BMP280_Update+3,f
  2808  0EB4  0CA2               	rrf	??_BMP280_Update+2,f
  2809  0EB5  0CA1               	rrf	??_BMP280_Update+1,f
  2810  0EB6  0CA0               	rrf	??_BMP280_Update,f
  2811  0EB7                     u870:
  2812  0EB7  3EFF               	addlw	-1
  2813  0EB8  1D03               	skipz
  2814  0EB9  2EB2               	goto	u875
  2815  0EBA  30FF               	movlw	255
  2816  0EBB  0520               	andwf	??_BMP280_Update,w
  2817  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  2819  0EBE  00A8               	movwf	_adc_T^(0+128)
  2820  0EBF  30FF               	movlw	255
  2821  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  2822  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  2823  0EC2  0521               	andwf	??_BMP280_Update+1,w
  2824  0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  2825  0EC4  1303               	bcf	3,6	;RP1=0, select bank1
  2826  0EC5  00A9               	movwf	(_adc_T+1)^(0+128)
  2827  0EC6  300F               	movlw	15
  2828  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  2830  0EC9  0522               	andwf	??_BMP280_Update+2,w
  2831  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  2832  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  2833  0ECC  00AA               	movwf	(_adc_T+2)^(0+128)
  2834  0ECD  3000               	movlw	0
  2835  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  2836  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  2837  0ED0  0523               	andwf	??_BMP280_Update+3,w
  2838  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0ED3  00AB               	movwf	(_adc_T+3)^(0+128)
  2841  0ED4                     l187:
  2842  0ED4  0008               	return
  2843  0ED5                     __end_of_BMP280_Update:
  2844                           
  2845                           	psect	text9
  2846  0024                     __ptext9:	
  2847 ;; *************** function _BMP280_readPressure *****************
  2848 ;; Defined at:
  2849 ;;		line 266 in file "BMP280.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  pres            1    wreg     PTR unsigned long 
  2852 ;;		 -> pressure(4), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  pres            1   48[BANK0 ] PTR unsigned long 
  2855 ;;		 -> pressure(4), 
  2856 ;;  var1            4   61[BANK0 ] long 
  2857 ;;  p               4   57[BANK0 ] unsigned long 
  2858 ;;  var2            4   53[BANK0 ] long 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  2   12[None  ] int 
  2861 ;; Registers used:
  2862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       0       0       0       0
  2869 ;;      Locals:         0      29       0       0       0
  2870 ;;      Temps:          0      16       0       0       0
  2871 ;;      Totals:         0      45       0       0       0
  2872 ;;Total ram usage:       45 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    3
  2875 ;; This function calls:
  2876 ;;		___aldiv
  2877 ;;		___lldiv
  2878 ;;		___lmul
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _BMP280_readPressure
  2886  0024                     _BMP280_readPressure:
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2890                           ;BMP280_readPressure@pres stored from wreg
  2891  0024  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0025  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0026  00D0               	movwf	BMP280_readPressure@pres
  2894  0027                     l1401:
  2895                           
  2896                           ;BMP280.c: 266: int BMP280_readPressure(uint32_t *pres);BMP280.c: 267: {;BMP280.c: 268: 
      +                            int32_t var1, var2;;BMP280.c: 269:   uint32_t p;;BMP280.c: 272:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  2897  0027  3000               	movlw	0
  2898  0028  00B4               	movwf	??_BMP280_readPressure
  2899  0029  3006               	movlw	6
  2900  002A  00B5               	movwf	??_BMP280_readPressure+1
  2901  002B  30FF               	movlw	255
  2902  002C  00B6               	movwf	??_BMP280_readPressure+2
  2903  002D  30FF               	movlw	255
  2904  002E  00B7               	movwf	??_BMP280_readPressure+3
  2905  002F  3000               	movlw	0
  2906  0030  00F6               	movwf	___aldiv@divisor+3
  2907  0031  3000               	movlw	0
  2908  0032  00F5               	movwf	___aldiv@divisor+2
  2909  0033  3000               	movlw	0
  2910  0034  00F4               	movwf	___aldiv@divisor+1
  2911  0035  3002               	movlw	2
  2912  0036  00F3               	movwf	___aldiv@divisor
  2913  0037  1683               	bsf	3,5	;RP0=1, select bank1
  2914  0038  1303               	bcf	3,6	;RP1=0, select bank1
  2915  0039  0823               	movf	(_t_fine+3)^(0+128),w
  2916  003A  00FA               	movwf	___aldiv@dividend+3
  2917  003B  0822               	movf	(_t_fine+2)^(0+128),w
  2918  003C  00F9               	movwf	___aldiv@dividend+2
  2919  003D  0821               	movf	(_t_fine+1)^(0+128),w
  2920  003E  00F8               	movwf	___aldiv@dividend+1
  2921  003F  0820               	movf	_t_fine^(0+128),w
  2922  0040  00F7               	movwf	___aldiv@dividend
  2923  0041  120A  158A  247B  120A  118A  	fcall	___aldiv
  2924  0046  0873               	movf	?___aldiv,w
  2925  0047  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0048  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0049  07B4               	addwf	??_BMP280_readPressure,f
  2928  004A  0874               	movf	?___aldiv+1,w
  2929  004B  1803               	skipnc
  2930  004C  0F74               	incfsz	?___aldiv+1,w
  2931  004D  284F               	goto	u1140
  2932  004E  2850               	goto	u1141
  2933  004F                     u1140:
  2934  004F  07B5               	addwf	??_BMP280_readPressure+1,f
  2935  0050                     u1141:
  2936  0050  0875               	movf	?___aldiv+2,w
  2937  0051  1803               	skipnc
  2938  0052  0F75               	incfsz	?___aldiv+2,w
  2939  0053  2855               	goto	u1142
  2940  0054  2856               	goto	u1143
  2941  0055                     u1142:
  2942  0055  07B6               	addwf	??_BMP280_readPressure+2,f
  2943  0056                     u1143:
  2944  0056  0876               	movf	?___aldiv+3,w
  2945  0057  1803               	skipnc
  2946  0058  0A76               	incf	?___aldiv+3,w
  2947  0059  07B7               	addwf	??_BMP280_readPressure+3,f
  2948  005A  0837               	movf	??_BMP280_readPressure+3,w
  2949  005B  00E0               	movwf	BMP280_readPressure@var1+3
  2950  005C  0836               	movf	??_BMP280_readPressure+2,w
  2951  005D  00DF               	movwf	BMP280_readPressure@var1+2
  2952  005E  0835               	movf	??_BMP280_readPressure+1,w
  2953  005F  00DE               	movwf	BMP280_readPressure@var1+1
  2954  0060  0834               	movf	??_BMP280_readPressure,w
  2955  0061  00DD               	movwf	BMP280_readPressure@var1
  2956                           
  2957                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2958  0062  3000               	movlw	0
  2959  0063  00F6               	movwf	___aldiv@divisor+3
  2960  0064  3000               	movlw	0
  2961  0065  00F5               	movwf	___aldiv@divisor+2
  2962  0066  3000               	movlw	0
  2963  0067  00F4               	movwf	___aldiv@divisor+1
  2964  0068  3004               	movlw	4
  2965  0069  00F3               	movwf	___aldiv@divisor
  2966  006A  0860               	movf	BMP280_readPressure@var1+3,w
  2967  006B  00FA               	movwf	___aldiv@dividend+3
  2968  006C  085F               	movf	BMP280_readPressure@var1+2,w
  2969  006D  00F9               	movwf	___aldiv@dividend+2
  2970  006E  085E               	movf	BMP280_readPressure@var1+1,w
  2971  006F  00F8               	movwf	___aldiv@dividend+1
  2972  0070  085D               	movf	BMP280_readPressure@var1,w
  2973  0071  00F7               	movwf	___aldiv@dividend
  2974  0072  120A  158A  247B  120A  118A  	fcall	___aldiv
  2975  0077  0876               	movf	?___aldiv+3,w
  2976  0078  1283               	bcf	3,5	;RP0=0, select bank0
  2977  0079  1303               	bcf	3,6	;RP1=0, select bank0
  2978  007A  00AA               	movwf	___lmul@multiplier+3
  2979  007B  0875               	movf	?___aldiv+2,w
  2980  007C  00A9               	movwf	___lmul@multiplier+2
  2981  007D  0874               	movf	?___aldiv+1,w
  2982  007E  00A8               	movwf	___lmul@multiplier+1
  2983  007F  0873               	movf	?___aldiv,w
  2984  0080  00A7               	movwf	___lmul@multiplier
  2985  0081  3000               	movlw	0
  2986  0082  00F6               	movwf	___aldiv@divisor+3
  2987  0083  3000               	movlw	0
  2988  0084  00F5               	movwf	___aldiv@divisor+2
  2989  0085  3000               	movlw	0
  2990  0086  00F4               	movwf	___aldiv@divisor+1
  2991  0087  3004               	movlw	4
  2992  0088  00F3               	movwf	___aldiv@divisor
  2993  0089  0860               	movf	BMP280_readPressure@var1+3,w
  2994  008A  00FA               	movwf	___aldiv@dividend+3
  2995  008B  085F               	movf	BMP280_readPressure@var1+2,w
  2996  008C  00F9               	movwf	___aldiv@dividend+2
  2997  008D  085E               	movf	BMP280_readPressure@var1+1,w
  2998  008E  00F8               	movwf	___aldiv@dividend+1
  2999  008F  085D               	movf	BMP280_readPressure@var1,w
  3000  0090  00F7               	movwf	___aldiv@dividend
  3001  0091  120A  158A  247B  120A  118A  	fcall	___aldiv
  3002  0096  0876               	movf	?___aldiv+3,w
  3003  0097  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0098  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0099  00AE               	movwf	___lmul@multiplicand+3
  3006  009A  0875               	movf	?___aldiv+2,w
  3007  009B  00AD               	movwf	___lmul@multiplicand+2
  3008  009C  0874               	movf	?___aldiv+1,w
  3009  009D  00AC               	movwf	___lmul@multiplicand+1
  3010  009E  0873               	movf	?___aldiv,w
  3011  009F  00AB               	movwf	___lmul@multiplicand
  3012  00A0  120A  158A  2353  120A  118A  	fcall	___lmul
  3013  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  3014  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  3015  00A7  082A               	movf	?___lmul+3,w
  3016  00A8  00D4               	movwf	_BMP280_readPressure$1201+3
  3017  00A9  0829               	movf	?___lmul+2,w
  3018  00AA  00D3               	movwf	_BMP280_readPressure$1201+2
  3019  00AB  0828               	movf	?___lmul+1,w
  3020  00AC  00D2               	movwf	_BMP280_readPressure$1201+1
  3021  00AD  0827               	movf	?___lmul,w
  3022  00AE  00D1               	movwf	_BMP280_readPressure$1201
  3023                           
  3024                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  3025  00AF  3000               	movlw	0
  3026  00B0  00F6               	movwf	___aldiv@divisor+3
  3027  00B1  3000               	movlw	0
  3028  00B2  00F5               	movwf	___aldiv@divisor+2
  3029  00B3  3008               	movlw	8
  3030  00B4  00F4               	movwf	___aldiv@divisor+1
  3031  00B5  3000               	movlw	0
  3032  00B6  00F3               	movwf	___aldiv@divisor
  3033  00B7  0854               	movf	_BMP280_readPressure$1201+3,w
  3034  00B8  00FA               	movwf	___aldiv@dividend+3
  3035  00B9  0853               	movf	_BMP280_readPressure$1201+2,w
  3036  00BA  00F9               	movwf	___aldiv@dividend+2
  3037  00BB  0852               	movf	_BMP280_readPressure$1201+1,w
  3038  00BC  00F8               	movwf	___aldiv@dividend+1
  3039  00BD  0851               	movf	_BMP280_readPressure$1201,w
  3040  00BE  00F7               	movwf	___aldiv@dividend
  3041  00BF  120A  158A  247B  120A  118A  	fcall	___aldiv
  3042  00C4  0876               	movf	?___aldiv+3,w
  3043  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  3044  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  3045  00C7  00AA               	movwf	___lmul@multiplier+3
  3046  00C8  0875               	movf	?___aldiv+2,w
  3047  00C9  00A9               	movwf	___lmul@multiplier+2
  3048  00CA  0874               	movf	?___aldiv+1,w
  3049  00CB  00A8               	movwf	___lmul@multiplier+1
  3050  00CC  0873               	movf	?___aldiv,w
  3051  00CD  00A7               	movwf	___lmul@multiplier
  3052  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  3053  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  3054  00D0  083C               	movf	(_BMP280_calib^(0+128)+16),w
  3055  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3056  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3057  00D3  00AB               	movwf	___lmul@multiplicand
  3058  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  3059  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  3060  00D6  083D               	movf	((_BMP280_calib+1)^(0+128)+16),w
  3061  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  3062  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  3063  00D9  00AC               	movwf	___lmul@multiplicand+1
  3064  00DA  3000               	movlw	0
  3065  00DB  1BAC               	btfsc	___lmul@multiplicand+1,7
  3066  00DC  30FF               	movlw	255
  3067  00DD  00AD               	movwf	___lmul@multiplicand+2
  3068  00DE  00AE               	movwf	___lmul@multiplicand+3
  3069  00DF  120A  158A  2353  120A  118A  	fcall	___lmul
  3070  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  3071  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  3072  00E6  082A               	movf	?___lmul+3,w
  3073  00E7  00D8               	movwf	BMP280_readPressure@var2+3
  3074  00E8  0829               	movf	?___lmul+2,w
  3075  00E9  00D7               	movwf	BMP280_readPressure@var2+2
  3076  00EA  0828               	movf	?___lmul+1,w
  3077  00EB  00D6               	movwf	BMP280_readPressure@var2+1
  3078  00EC  0827               	movf	?___lmul,w
  3079  00ED  00D5               	movwf	BMP280_readPressure@var2
  3080                           
  3081                           ;BMP280.c: 275:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  3082  00EE  0855               	movf	BMP280_readPressure@var2,w
  3083  00EF  00B4               	movwf	??_BMP280_readPressure
  3084  00F0  0856               	movf	BMP280_readPressure@var2+1,w
  3085  00F1  00B5               	movwf	??_BMP280_readPressure+1
  3086  00F2  0857               	movf	BMP280_readPressure@var2+2,w
  3087  00F3  00B6               	movwf	??_BMP280_readPressure+2
  3088  00F4  0858               	movf	BMP280_readPressure@var2+3,w
  3089  00F5  00B7               	movwf	??_BMP280_readPressure+3
  3090  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  3091  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  3092  00F8  083A               	movf	(_BMP280_calib^(0+128)+14),w
  3093  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  3094  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  3095  00FB  00A7               	movwf	___lmul@multiplier
  3096  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  3097  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  3098  00FE  083B               	movf	((_BMP280_calib+1)^(0+128)+14),w
  3099  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0100  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0101  00A8               	movwf	___lmul@multiplier+1
  3102  0102  3000               	movlw	0
  3103  0103  1BA8               	btfsc	___lmul@multiplier+1,7
  3104  0104  30FF               	movlw	255
  3105  0105  00A9               	movwf	___lmul@multiplier+2
  3106  0106  00AA               	movwf	___lmul@multiplier+3
  3107  0107  0860               	movf	BMP280_readPressure@var1+3,w
  3108  0108  00AE               	movwf	___lmul@multiplicand+3
  3109  0109  085F               	movf	BMP280_readPressure@var1+2,w
  3110  010A  00AD               	movwf	___lmul@multiplicand+2
  3111  010B  085E               	movf	BMP280_readPressure@var1+1,w
  3112  010C  00AC               	movwf	___lmul@multiplicand+1
  3113  010D  085D               	movf	BMP280_readPressure@var1,w
  3114  010E  00AB               	movwf	___lmul@multiplicand
  3115  010F  120A  158A  2353  120A  118A  	fcall	___lmul
  3116  0114  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0115  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0116  0827               	movf	?___lmul,w
  3119  0117  00B8               	movwf	??_BMP280_readPressure+4
  3120  0118  0828               	movf	?___lmul+1,w
  3121  0119  00B9               	movwf	??_BMP280_readPressure+5
  3122  011A  0829               	movf	?___lmul+2,w
  3123  011B  00BA               	movwf	??_BMP280_readPressure+6
  3124  011C  082A               	movf	?___lmul+3,w
  3125  011D  00BB               	movwf	??_BMP280_readPressure+7
  3126  011E  3001               	movlw	1
  3127  011F                     u1155:
  3128  011F  1003               	clrc
  3129  0120  0DB8               	rlf	??_BMP280_readPressure+4,f
  3130  0121  0DB9               	rlf	??_BMP280_readPressure+5,f
  3131  0122  0DBA               	rlf	??_BMP280_readPressure+6,f
  3132  0123  0DBB               	rlf	??_BMP280_readPressure+7,f
  3133  0124                     u1150:
  3134  0124  3EFF               	addlw	-1
  3135  0125  1D03               	skipz
  3136  0126  291F               	goto	u1155
  3137  0127  0838               	movf	??_BMP280_readPressure+4,w
  3138  0128  07B4               	addwf	??_BMP280_readPressure,f
  3139  0129  0839               	movf	??_BMP280_readPressure+5,w
  3140  012A  1803               	skipnc
  3141  012B  0F39               	incfsz	??_BMP280_readPressure+5,w
  3142  012C  292E               	goto	u1160
  3143  012D  292F               	goto	u1161
  3144  012E                     u1160:
  3145  012E  07B5               	addwf	??_BMP280_readPressure+1,f
  3146  012F                     u1161:
  3147  012F  083A               	movf	??_BMP280_readPressure+6,w
  3148  0130  1803               	skipnc
  3149  0131  0F3A               	incfsz	??_BMP280_readPressure+6,w
  3150  0132  2934               	goto	u1162
  3151  0133  2935               	goto	u1163
  3152  0134                     u1162:
  3153  0134  07B6               	addwf	??_BMP280_readPressure+2,f
  3154  0135                     u1163:
  3155  0135  083B               	movf	??_BMP280_readPressure+7,w
  3156  0136  1803               	skipnc
  3157  0137  0A3B               	incf	??_BMP280_readPressure+7,w
  3158  0138  07B7               	addwf	??_BMP280_readPressure+3,f
  3159  0139  0837               	movf	??_BMP280_readPressure+3,w
  3160  013A  00D8               	movwf	BMP280_readPressure@var2+3
  3161  013B  0836               	movf	??_BMP280_readPressure+2,w
  3162  013C  00D7               	movwf	BMP280_readPressure@var2+2
  3163  013D  0835               	movf	??_BMP280_readPressure+1,w
  3164  013E  00D6               	movwf	BMP280_readPressure@var2+1
  3165  013F  0834               	movf	??_BMP280_readPressure,w
  3166  0140  00D5               	movwf	BMP280_readPressure@var2
  3167                           
  3168                           ;BMP280.c: 276:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  3169  0141  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0142  1303               	bcf	3,6	;RP1=0, select bank1
  3171  0143  0838               	movf	(_BMP280_calib^(0+128)+12),w
  3172  0144  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0145  1303               	bcf	3,6	;RP1=0, select bank0
  3174  0146  00B4               	movwf	??_BMP280_readPressure
  3175  0147  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0148  1303               	bcf	3,6	;RP1=0, select bank1
  3177  0149  0839               	movf	((_BMP280_calib+1)^(0+128)+12),w
  3178  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3179  014B  1303               	bcf	3,6	;RP1=0, select bank0
  3180  014C  00B5               	movwf	??_BMP280_readPressure+1
  3181  014D  01B6               	clrf	??_BMP280_readPressure+2
  3182  014E  01B7               	clrf	??_BMP280_readPressure+3
  3183  014F  3010               	movlw	16
  3184  0150                     u1175:
  3185  0150  1003               	clrc
  3186  0151  0DB4               	rlf	??_BMP280_readPressure,f
  3187  0152  0DB5               	rlf	??_BMP280_readPressure+1,f
  3188  0153  0DB6               	rlf	??_BMP280_readPressure+2,f
  3189  0154  0DB7               	rlf	??_BMP280_readPressure+3,f
  3190  0155                     u1170:
  3191  0155  3EFF               	addlw	-1
  3192  0156  1D03               	skipz
  3193  0157  2950               	goto	u1175
  3194  0158  3000               	movlw	0
  3195  0159  00F6               	movwf	___aldiv@divisor+3
  3196  015A  3000               	movlw	0
  3197  015B  00F5               	movwf	___aldiv@divisor+2
  3198  015C  3000               	movlw	0
  3199  015D  00F4               	movwf	___aldiv@divisor+1
  3200  015E  3004               	movlw	4
  3201  015F  00F3               	movwf	___aldiv@divisor
  3202  0160  0858               	movf	BMP280_readPressure@var2+3,w
  3203  0161  00FA               	movwf	___aldiv@dividend+3
  3204  0162  0857               	movf	BMP280_readPressure@var2+2,w
  3205  0163  00F9               	movwf	___aldiv@dividend+2
  3206  0164  0856               	movf	BMP280_readPressure@var2+1,w
  3207  0165  00F8               	movwf	___aldiv@dividend+1
  3208  0166  0855               	movf	BMP280_readPressure@var2,w
  3209  0167  00F7               	movwf	___aldiv@dividend
  3210  0168  120A  158A  247B  120A  118A  	fcall	___aldiv
  3211  016D  0873               	movf	?___aldiv,w
  3212  016E  1283               	bcf	3,5	;RP0=0, select bank0
  3213  016F  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0170  07B4               	addwf	??_BMP280_readPressure,f
  3215  0171  0874               	movf	?___aldiv+1,w
  3216  0172  1803               	skipnc
  3217  0173  0F74               	incfsz	?___aldiv+1,w
  3218  0174  2976               	goto	u1180
  3219  0175  2977               	goto	u1181
  3220  0176                     u1180:
  3221  0176  07B5               	addwf	??_BMP280_readPressure+1,f
  3222  0177                     u1181:
  3223  0177  0875               	movf	?___aldiv+2,w
  3224  0178  1803               	skipnc
  3225  0179  0F75               	incfsz	?___aldiv+2,w
  3226  017A  297C               	goto	u1182
  3227  017B  297D               	goto	u1183
  3228  017C                     u1182:
  3229  017C  07B6               	addwf	??_BMP280_readPressure+2,f
  3230  017D                     u1183:
  3231  017D  0876               	movf	?___aldiv+3,w
  3232  017E  1803               	skipnc
  3233  017F  0A76               	incf	?___aldiv+3,w
  3234  0180  07B7               	addwf	??_BMP280_readPressure+3,f
  3235  0181  0837               	movf	??_BMP280_readPressure+3,w
  3236  0182  00D8               	movwf	BMP280_readPressure@var2+3
  3237  0183  0836               	movf	??_BMP280_readPressure+2,w
  3238  0184  00D7               	movwf	BMP280_readPressure@var2+2
  3239  0185  0835               	movf	??_BMP280_readPressure+1,w
  3240  0186  00D6               	movwf	BMP280_readPressure@var2+1
  3241  0187  0834               	movf	??_BMP280_readPressure,w
  3242  0188  00D5               	movwf	BMP280_readPressure@var2
  3243                           
  3244                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3245  0189  3000               	movlw	0
  3246  018A  00F6               	movwf	___aldiv@divisor+3
  3247  018B  3000               	movlw	0
  3248  018C  00F5               	movwf	___aldiv@divisor+2
  3249  018D  3000               	movlw	0
  3250  018E  00F4               	movwf	___aldiv@divisor+1
  3251  018F  3004               	movlw	4
  3252  0190  00F3               	movwf	___aldiv@divisor
  3253  0191  0860               	movf	BMP280_readPressure@var1+3,w
  3254  0192  00FA               	movwf	___aldiv@dividend+3
  3255  0193  085F               	movf	BMP280_readPressure@var1+2,w
  3256  0194  00F9               	movwf	___aldiv@dividend+2
  3257  0195  085E               	movf	BMP280_readPressure@var1+1,w
  3258  0196  00F8               	movwf	___aldiv@dividend+1
  3259  0197  085D               	movf	BMP280_readPressure@var1,w
  3260  0198  00F7               	movwf	___aldiv@dividend
  3261  0199  120A  158A  247B  120A  118A  	fcall	___aldiv
  3262  019E  0876               	movf	?___aldiv+3,w
  3263  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3264  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3265  01A1  00AA               	movwf	___lmul@multiplier+3
  3266  01A2  0875               	movf	?___aldiv+2,w
  3267  01A3  00A9               	movwf	___lmul@multiplier+2
  3268  01A4  0874               	movf	?___aldiv+1,w
  3269  01A5  00A8               	movwf	___lmul@multiplier+1
  3270  01A6  0873               	movf	?___aldiv,w
  3271  01A7  00A7               	movwf	___lmul@multiplier
  3272  01A8  3000               	movlw	0
  3273  01A9  00F6               	movwf	___aldiv@divisor+3
  3274  01AA  3000               	movlw	0
  3275  01AB  00F5               	movwf	___aldiv@divisor+2
  3276  01AC  3000               	movlw	0
  3277  01AD  00F4               	movwf	___aldiv@divisor+1
  3278  01AE  3004               	movlw	4
  3279  01AF  00F3               	movwf	___aldiv@divisor
  3280  01B0  0860               	movf	BMP280_readPressure@var1+3,w
  3281  01B1  00FA               	movwf	___aldiv@dividend+3
  3282  01B2  085F               	movf	BMP280_readPressure@var1+2,w
  3283  01B3  00F9               	movwf	___aldiv@dividend+2
  3284  01B4  085E               	movf	BMP280_readPressure@var1+1,w
  3285  01B5  00F8               	movwf	___aldiv@dividend+1
  3286  01B6  085D               	movf	BMP280_readPressure@var1,w
  3287  01B7  00F7               	movwf	___aldiv@dividend
  3288  01B8  120A  158A  247B  120A  118A  	fcall	___aldiv
  3289  01BD  0876               	movf	?___aldiv+3,w
  3290  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3291  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3292  01C0  00AE               	movwf	___lmul@multiplicand+3
  3293  01C1  0875               	movf	?___aldiv+2,w
  3294  01C2  00AD               	movwf	___lmul@multiplicand+2
  3295  01C3  0874               	movf	?___aldiv+1,w
  3296  01C4  00AC               	movwf	___lmul@multiplicand+1
  3297  01C5  0873               	movf	?___aldiv,w
  3298  01C6  00AB               	movwf	___lmul@multiplicand
  3299  01C7  120A  158A  2353  120A  118A  	fcall	___lmul
  3300  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3301  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3302  01CE  082A               	movf	?___lmul+3,w
  3303  01CF  00D4               	movwf	_BMP280_readPressure$1201+3
  3304  01D0  0829               	movf	?___lmul+2,w
  3305  01D1  00D3               	movwf	_BMP280_readPressure$1201+2
  3306  01D2  0828               	movf	?___lmul+1,w
  3307  01D3  00D2               	movwf	_BMP280_readPressure$1201+1
  3308  01D4  0827               	movf	?___lmul,w
  3309  01D5  00D1               	movwf	_BMP280_readPressure$1201
  3310                           
  3311                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3312  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  3313  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  3314  01D8  0836               	movf	(_BMP280_calib^(0+128)+10),w
  3315  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3316  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3317  01DB  00A7               	movwf	___lmul@multiplier
  3318  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  3319  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  3320  01DE  0837               	movf	((_BMP280_calib+1)^(0+128)+10),w
  3321  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3322  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3323  01E1  00A8               	movwf	___lmul@multiplier+1
  3324  01E2  3000               	movlw	0
  3325  01E3  1BA8               	btfsc	___lmul@multiplier+1,7
  3326  01E4  30FF               	movlw	255
  3327  01E5  00A9               	movwf	___lmul@multiplier+2
  3328  01E6  00AA               	movwf	___lmul@multiplier+3
  3329  01E7  3000               	movlw	0
  3330  01E8  00F6               	movwf	___aldiv@divisor+3
  3331  01E9  3000               	movlw	0
  3332  01EA  00F5               	movwf	___aldiv@divisor+2
  3333  01EB  3020               	movlw	32
  3334  01EC  00F4               	movwf	___aldiv@divisor+1
  3335  01ED  3000               	movlw	0
  3336  01EE  00F3               	movwf	___aldiv@divisor
  3337  01EF  0854               	movf	_BMP280_readPressure$1201+3,w
  3338  01F0  00FA               	movwf	___aldiv@dividend+3
  3339  01F1  0853               	movf	_BMP280_readPressure$1201+2,w
  3340  01F2  00F9               	movwf	___aldiv@dividend+2
  3341  01F3  0852               	movf	_BMP280_readPressure$1201+1,w
  3342  01F4  00F8               	movwf	___aldiv@dividend+1
  3343  01F5  0851               	movf	_BMP280_readPressure$1201,w
  3344  01F6  00F7               	movwf	___aldiv@dividend
  3345  01F7  120A  158A  247B  120A  118A  	fcall	___aldiv
  3346  01FC  0876               	movf	?___aldiv+3,w
  3347  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3348  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3349  01FF  00AE               	movwf	___lmul@multiplicand+3
  3350  0200  0875               	movf	?___aldiv+2,w
  3351  0201  00AD               	movwf	___lmul@multiplicand+2
  3352  0202  0874               	movf	?___aldiv+1,w
  3353  0203  00AC               	movwf	___lmul@multiplicand+1
  3354  0204  0873               	movf	?___aldiv,w
  3355  0205  00AB               	movwf	___lmul@multiplicand
  3356  0206  120A  158A  2353  120A  118A  	fcall	___lmul
  3357  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3358  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3359  020D  082A               	movf	?___lmul+3,w
  3360  020E  00C7               	movwf	_BMP280_readPressure$1202+3
  3361  020F  0829               	movf	?___lmul+2,w
  3362  0210  00C6               	movwf	_BMP280_readPressure$1202+2
  3363  0211  0828               	movf	?___lmul+1,w
  3364  0212  00C5               	movwf	_BMP280_readPressure$1202+1
  3365  0213  0827               	movf	?___lmul,w
  3366  0214  00C4               	movwf	_BMP280_readPressure$1202
  3367                           
  3368                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3369  0215  3000               	movlw	0
  3370  0216  00F6               	movwf	___aldiv@divisor+3
  3371  0217  3000               	movlw	0
  3372  0218  00F5               	movwf	___aldiv@divisor+2
  3373  0219  3000               	movlw	0
  3374  021A  00F4               	movwf	___aldiv@divisor+1
  3375  021B  3002               	movlw	2
  3376  021C  00F3               	movwf	___aldiv@divisor
  3377  021D  1683               	bsf	3,5	;RP0=1, select bank1
  3378  021E  1303               	bcf	3,6	;RP1=0, select bank1
  3379  021F  0834               	movf	(_BMP280_calib^(0+128)+8),w
  3380  0220  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0221  1303               	bcf	3,6	;RP1=0, select bank0
  3382  0222  00A7               	movwf	___lmul@multiplier
  3383  0223  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0224  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0225  0835               	movf	((_BMP280_calib+1)^(0+128)+8),w
  3386  0226  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0227  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0228  00A8               	movwf	___lmul@multiplier+1
  3389  0229  3000               	movlw	0
  3390  022A  1BA8               	btfsc	___lmul@multiplier+1,7
  3391  022B  30FF               	movlw	255
  3392  022C  00A9               	movwf	___lmul@multiplier+2
  3393  022D  00AA               	movwf	___lmul@multiplier+3
  3394  022E  0860               	movf	BMP280_readPressure@var1+3,w
  3395  022F  00AE               	movwf	___lmul@multiplicand+3
  3396  0230  085F               	movf	BMP280_readPressure@var1+2,w
  3397  0231  00AD               	movwf	___lmul@multiplicand+2
  3398  0232  085E               	movf	BMP280_readPressure@var1+1,w
  3399  0233  00AC               	movwf	___lmul@multiplicand+1
  3400  0234  085D               	movf	BMP280_readPressure@var1,w
  3401  0235  00AB               	movwf	___lmul@multiplicand
  3402  0236  120A  158A  2353  120A  118A  	fcall	___lmul
  3403  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3404  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3405  023D  082A               	movf	?___lmul+3,w
  3406  023E  00FA               	movwf	___aldiv@dividend+3
  3407  023F  0829               	movf	?___lmul+2,w
  3408  0240  00F9               	movwf	___aldiv@dividend+2
  3409  0241  0828               	movf	?___lmul+1,w
  3410  0242  00F8               	movwf	___aldiv@dividend+1
  3411  0243  0827               	movf	?___lmul,w
  3412  0244  00F7               	movwf	___aldiv@dividend
  3413  0245  120A  158A  247B  120A  118A  	fcall	___aldiv
  3414  024A  0873               	movf	?___aldiv,w
  3415  024B  1283               	bcf	3,5	;RP0=0, select bank0
  3416  024C  1303               	bcf	3,6	;RP1=0, select bank0
  3417  024D  00B4               	movwf	??_BMP280_readPressure
  3418  024E  0874               	movf	?___aldiv+1,w
  3419  024F  00B5               	movwf	??_BMP280_readPressure+1
  3420  0250  0875               	movf	?___aldiv+2,w
  3421  0251  00B6               	movwf	??_BMP280_readPressure+2
  3422  0252  0876               	movf	?___aldiv+3,w
  3423  0253  00B7               	movwf	??_BMP280_readPressure+3
  3424  0254  3000               	movlw	0
  3425  0255  00F6               	movwf	___aldiv@divisor+3
  3426  0256  3000               	movlw	0
  3427  0257  00F5               	movwf	___aldiv@divisor+2
  3428  0258  3000               	movlw	0
  3429  0259  00F4               	movwf	___aldiv@divisor+1
  3430  025A  3008               	movlw	8
  3431  025B  00F3               	movwf	___aldiv@divisor
  3432  025C  0847               	movf	_BMP280_readPressure$1202+3,w
  3433  025D  00FA               	movwf	___aldiv@dividend+3
  3434  025E  0846               	movf	_BMP280_readPressure$1202+2,w
  3435  025F  00F9               	movwf	___aldiv@dividend+2
  3436  0260  0845               	movf	_BMP280_readPressure$1202+1,w
  3437  0261  00F8               	movwf	___aldiv@dividend+1
  3438  0262  0844               	movf	_BMP280_readPressure$1202,w
  3439  0263  00F7               	movwf	___aldiv@dividend
  3440  0264  120A  158A  247B  120A  118A  	fcall	___aldiv
  3441  0269  0873               	movf	?___aldiv,w
  3442  026A  1283               	bcf	3,5	;RP0=0, select bank0
  3443  026B  1303               	bcf	3,6	;RP1=0, select bank0
  3444  026C  07B4               	addwf	??_BMP280_readPressure,f
  3445  026D  0874               	movf	?___aldiv+1,w
  3446  026E  1803               	skipnc
  3447  026F  0F74               	incfsz	?___aldiv+1,w
  3448  0270  2A72               	goto	u1190
  3449  0271  2A73               	goto	u1191
  3450  0272                     u1190:
  3451  0272  07B5               	addwf	??_BMP280_readPressure+1,f
  3452  0273                     u1191:
  3453  0273  0875               	movf	?___aldiv+2,w
  3454  0274  1803               	skipnc
  3455  0275  0F75               	incfsz	?___aldiv+2,w
  3456  0276  2A78               	goto	u1192
  3457  0277  2A79               	goto	u1193
  3458  0278                     u1192:
  3459  0278  07B6               	addwf	??_BMP280_readPressure+2,f
  3460  0279                     u1193:
  3461  0279  0876               	movf	?___aldiv+3,w
  3462  027A  1803               	skipnc
  3463  027B  0A76               	incf	?___aldiv+3,w
  3464  027C  07B7               	addwf	??_BMP280_readPressure+3,f
  3465  027D  0837               	movf	??_BMP280_readPressure+3,w
  3466  027E  00CB               	movwf	_BMP280_readPressure$1203+3
  3467  027F  0836               	movf	??_BMP280_readPressure+2,w
  3468  0280  00CA               	movwf	_BMP280_readPressure$1203+2
  3469  0281  0835               	movf	??_BMP280_readPressure+1,w
  3470  0282  00C9               	movwf	_BMP280_readPressure$1203+1
  3471  0283  0834               	movf	??_BMP280_readPressure,w
  3472  0284  00C8               	movwf	_BMP280_readPressure$1203
  3473                           
  3474                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3475  0285  3000               	movlw	0
  3476  0286  00F6               	movwf	___aldiv@divisor+3
  3477  0287  3004               	movlw	4
  3478  0288  00F5               	movwf	___aldiv@divisor+2
  3479  0289  3000               	movlw	0
  3480  028A  00F4               	movwf	___aldiv@divisor+1
  3481  028B  3000               	movlw	0
  3482  028C  00F3               	movwf	___aldiv@divisor
  3483  028D  084B               	movf	_BMP280_readPressure$1203+3,w
  3484  028E  00FA               	movwf	___aldiv@dividend+3
  3485  028F  084A               	movf	_BMP280_readPressure$1203+2,w
  3486  0290  00F9               	movwf	___aldiv@dividend+2
  3487  0291  0849               	movf	_BMP280_readPressure$1203+1,w
  3488  0292  00F8               	movwf	___aldiv@dividend+1
  3489  0293  0848               	movf	_BMP280_readPressure$1203,w
  3490  0294  00F7               	movwf	___aldiv@dividend
  3491  0295  120A  158A  247B  120A  118A  	fcall	___aldiv
  3492  029A  0876               	movf	?___aldiv+3,w
  3493  029B  1283               	bcf	3,5	;RP0=0, select bank0
  3494  029C  1303               	bcf	3,6	;RP1=0, select bank0
  3495  029D  00E0               	movwf	BMP280_readPressure@var1+3
  3496  029E  0875               	movf	?___aldiv+2,w
  3497  029F  00DF               	movwf	BMP280_readPressure@var1+2
  3498  02A0  0874               	movf	?___aldiv+1,w
  3499  02A1  00DE               	movwf	BMP280_readPressure@var1+1
  3500  02A2  0873               	movf	?___aldiv,w
  3501  02A3  00DD               	movwf	BMP280_readPressure@var1
  3502                           
  3503                           ;BMP280.c: 281:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  3504  02A4  3000               	movlw	0
  3505  02A5  00F6               	movwf	___aldiv@divisor+3
  3506  02A6  3000               	movlw	0
  3507  02A7  00F5               	movwf	___aldiv@divisor+2
  3508  02A8  3080               	movlw	128
  3509  02A9  00F4               	movwf	___aldiv@divisor+1
  3510  02AA  3000               	movlw	0
  3511  02AB  00F3               	movwf	___aldiv@divisor
  3512  02AC  3000               	movlw	0
  3513  02AD  00B4               	movwf	??_BMP280_readPressure
  3514  02AE  3080               	movlw	128
  3515  02AF  00B5               	movwf	??_BMP280_readPressure+1
  3516  02B0  3000               	movlw	0
  3517  02B1  00B6               	movwf	??_BMP280_readPressure+2
  3518  02B2  3000               	movlw	0
  3519  02B3  00B7               	movwf	??_BMP280_readPressure+3
  3520  02B4  085D               	movf	BMP280_readPressure@var1,w
  3521  02B5  07B4               	addwf	??_BMP280_readPressure,f
  3522  02B6  085E               	movf	BMP280_readPressure@var1+1,w
  3523  02B7  1803               	skipnc
  3524  02B8  0F5E               	incfsz	BMP280_readPressure@var1+1,w
  3525  02B9  2ABB               	goto	u1200
  3526  02BA  2ABC               	goto	u1201
  3527  02BB                     u1200:
  3528  02BB  07B5               	addwf	??_BMP280_readPressure+1,f
  3529  02BC                     u1201:
  3530  02BC  085F               	movf	BMP280_readPressure@var1+2,w
  3531  02BD  1803               	skipnc
  3532  02BE  0F5F               	incfsz	BMP280_readPressure@var1+2,w
  3533  02BF  2AC1               	goto	u1202
  3534  02C0  2AC2               	goto	u1203
  3535  02C1                     u1202:
  3536  02C1  07B6               	addwf	??_BMP280_readPressure+2,f
  3537  02C2                     u1203:
  3538  02C2  0860               	movf	BMP280_readPressure@var1+3,w
  3539  02C3  1803               	skipnc
  3540  02C4  0A60               	incf	BMP280_readPressure@var1+3,w
  3541  02C5  07B7               	addwf	??_BMP280_readPressure+3,f
  3542  02C6  0837               	movf	??_BMP280_readPressure+3,w
  3543  02C7  00AA               	movwf	___lmul@multiplier+3
  3544  02C8  0836               	movf	??_BMP280_readPressure+2,w
  3545  02C9  00A9               	movwf	___lmul@multiplier+2
  3546  02CA  0835               	movf	??_BMP280_readPressure+1,w
  3547  02CB  00A8               	movwf	___lmul@multiplier+1
  3548  02CC  0834               	movf	??_BMP280_readPressure,w
  3549  02CD  00A7               	movwf	___lmul@multiplier
  3550  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  3551  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  3552  02D0  0832               	movf	(_BMP280_calib^(0+128)+6),w
  3553  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  3554  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  3555  02D3  00AB               	movwf	___lmul@multiplicand
  3556  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  3557  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  3558  02D6  0833               	movf	((_BMP280_calib+1)^(0+128)+6),w
  3559  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3560  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  3561  02D9  00AC               	movwf	___lmul@multiplicand+1
  3562  02DA  01AD               	clrf	___lmul@multiplicand+2
  3563  02DB  01AE               	clrf	___lmul@multiplicand+3
  3564  02DC  120A  158A  2353  120A  118A  	fcall	___lmul
  3565  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  3566  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  3567  02E3  082A               	movf	?___lmul+3,w
  3568  02E4  00FA               	movwf	___aldiv@dividend+3
  3569  02E5  0829               	movf	?___lmul+2,w
  3570  02E6  00F9               	movwf	___aldiv@dividend+2
  3571  02E7  0828               	movf	?___lmul+1,w
  3572  02E8  00F8               	movwf	___aldiv@dividend+1
  3573  02E9  0827               	movf	?___lmul,w
  3574  02EA  00F7               	movwf	___aldiv@dividend
  3575  02EB  120A  158A  247B  120A  118A  	fcall	___aldiv
  3576  02F0  0876               	movf	?___aldiv+3,w
  3577  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3578  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3579  02F3  00E0               	movwf	BMP280_readPressure@var1+3
  3580  02F4  0875               	movf	?___aldiv+2,w
  3581  02F5  00DF               	movwf	BMP280_readPressure@var1+2
  3582  02F6  0874               	movf	?___aldiv+1,w
  3583  02F7  00DE               	movwf	BMP280_readPressure@var1+1
  3584  02F8  0873               	movf	?___aldiv,w
  3585  02F9  00DD               	movwf	BMP280_readPressure@var1
  3586  02FA                     l1403:
  3587                           
  3588                           ;BMP280.c: 283:   if (var1 == 0)
  3589  02FA  0860               	movf	BMP280_readPressure@var1+3,w
  3590  02FB  045F               	iorwf	BMP280_readPressure@var1+2,w
  3591  02FC  045E               	iorwf	BMP280_readPressure@var1+1,w
  3592  02FD  045D               	iorwf	BMP280_readPressure@var1,w
  3593  02FE  1D03               	skipz
  3594  02FF  2B01               	goto	u1211
  3595  0300  2B02               	goto	u1210
  3596  0301                     u1211:
  3597  0301  2B03               	goto	l1407
  3598  0302                     u1210:
  3599  0302  2D4B               	goto	l194
  3600  0303                     l1407:
  3601                           
  3602                           ;BMP280.c: 286:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  3603  0303  3000               	movlw	0
  3604  0304  00B4               	movwf	??_BMP280_readPressure
  3605  0305  3000               	movlw	0
  3606  0306  00B5               	movwf	??_BMP280_readPressure+1
  3607  0307  3010               	movlw	16
  3608  0308  00B6               	movwf	??_BMP280_readPressure+2
  3609  0309  3000               	movlw	0
  3610  030A  00B7               	movwf	??_BMP280_readPressure+3
  3611  030B  3000               	movlw	0
  3612  030C  00F6               	movwf	___aldiv@divisor+3
  3613  030D  3000               	movlw	0
  3614  030E  00F5               	movwf	___aldiv@divisor+2
  3615  030F  3010               	movlw	16
  3616  0310  00F4               	movwf	___aldiv@divisor+1
  3617  0311  3000               	movlw	0
  3618  0312  00F3               	movwf	___aldiv@divisor
  3619  0313  0858               	movf	BMP280_readPressure@var2+3,w
  3620  0314  00FA               	movwf	___aldiv@dividend+3
  3621  0315  0857               	movf	BMP280_readPressure@var2+2,w
  3622  0316  00F9               	movwf	___aldiv@dividend+2
  3623  0317  0856               	movf	BMP280_readPressure@var2+1,w
  3624  0318  00F8               	movwf	___aldiv@dividend+1
  3625  0319  0855               	movf	BMP280_readPressure@var2,w
  3626  031A  00F7               	movwf	___aldiv@dividend
  3627  031B  120A  158A  247B  120A  118A  	fcall	___aldiv
  3628  0320  1683               	bsf	3,5	;RP0=1, select bank1
  3629  0321  1303               	bcf	3,6	;RP1=0, select bank1
  3630  0322  0924               	comf	_adc_P^(0+128),w
  3631  0323  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0324  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0325  00B8               	movwf	??_BMP280_readPressure+4
  3634  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0327  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0328  0925               	comf	(_adc_P+1)^(0+128),w
  3637  0329  1283               	bcf	3,5	;RP0=0, select bank0
  3638  032A  1303               	bcf	3,6	;RP1=0, select bank0
  3639  032B  00B9               	movwf	??_BMP280_readPressure+5
  3640  032C  1683               	bsf	3,5	;RP0=1, select bank1
  3641  032D  1303               	bcf	3,6	;RP1=0, select bank1
  3642  032E  0926               	comf	(_adc_P+2)^(0+128),w
  3643  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3644  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3645  0331  00BA               	movwf	??_BMP280_readPressure+6
  3646  0332  1683               	bsf	3,5	;RP0=1, select bank1
  3647  0333  1303               	bcf	3,6	;RP1=0, select bank1
  3648  0334  0927               	comf	(_adc_P+3)^(0+128),w
  3649  0335  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0336  1303               	bcf	3,6	;RP1=0, select bank0
  3651  0337  00BB               	movwf	??_BMP280_readPressure+7
  3652  0338  0AB8               	incf	??_BMP280_readPressure+4,f
  3653  0339  1903               	skipnz
  3654  033A  0AB9               	incf	??_BMP280_readPressure+5,f
  3655  033B  1903               	skipnz
  3656  033C  0ABA               	incf	??_BMP280_readPressure+6,f
  3657  033D  1903               	skipnz
  3658  033E  0ABB               	incf	??_BMP280_readPressure+7,f
  3659  033F  0873               	movf	?___aldiv,w
  3660  0340  02B8               	subwf	??_BMP280_readPressure+4,f
  3661  0341  0874               	movf	?___aldiv+1,w
  3662  0342  1C03               	skipc
  3663  0343  0F74               	incfsz	?___aldiv+1,w
  3664  0344  2B46               	goto	u1221
  3665  0345  2B47               	goto	u1222
  3666  0346                     u1221:
  3667  0346  02B9               	subwf	??_BMP280_readPressure+5,f
  3668  0347                     u1222:
  3669  0347  0875               	movf	?___aldiv+2,w
  3670  0348  1C03               	skipc
  3671  0349  0F75               	incfsz	?___aldiv+2,w
  3672  034A  2B4C               	goto	u1223
  3673  034B  2B4D               	goto	u1224
  3674  034C                     u1223:
  3675  034C  02BA               	subwf	??_BMP280_readPressure+6,f
  3676  034D                     u1224:
  3677  034D  0876               	movf	?___aldiv+3,w
  3678  034E  1C03               	skipc
  3679  034F  0F76               	incfsz	?___aldiv+3,w
  3680  0350  2B52               	goto	u1225
  3681  0351  2B53               	goto	u1226
  3682  0352                     u1225:
  3683  0352  02BB               	subwf	??_BMP280_readPressure+7,f
  3684  0353                     u1226:
  3685  0353  0838               	movf	??_BMP280_readPressure+4,w
  3686  0354  07B4               	addwf	??_BMP280_readPressure,f
  3687  0355  0839               	movf	??_BMP280_readPressure+5,w
  3688  0356  1803               	skipnc
  3689  0357  0F39               	incfsz	??_BMP280_readPressure+5,w
  3690  0358  2B5A               	goto	u1230
  3691  0359  2B5B               	goto	u1231
  3692  035A                     u1230:
  3693  035A  07B5               	addwf	??_BMP280_readPressure+1,f
  3694  035B                     u1231:
  3695  035B  083A               	movf	??_BMP280_readPressure+6,w
  3696  035C  1803               	skipnc
  3697  035D  0F3A               	incfsz	??_BMP280_readPressure+6,w
  3698  035E  2B60               	goto	u1232
  3699  035F  2B61               	goto	u1233
  3700  0360                     u1232:
  3701  0360  07B6               	addwf	??_BMP280_readPressure+2,f
  3702  0361                     u1233:
  3703  0361  083B               	movf	??_BMP280_readPressure+7,w
  3704  0362  1803               	skipnc
  3705  0363  0A3B               	incf	??_BMP280_readPressure+7,w
  3706  0364  07B7               	addwf	??_BMP280_readPressure+3,f
  3707  0365  0837               	movf	??_BMP280_readPressure+3,w
  3708  0366  00AA               	movwf	___lmul@multiplier+3
  3709  0367  0836               	movf	??_BMP280_readPressure+2,w
  3710  0368  00A9               	movwf	___lmul@multiplier+2
  3711  0369  0835               	movf	??_BMP280_readPressure+1,w
  3712  036A  00A8               	movwf	___lmul@multiplier+1
  3713  036B  0834               	movf	??_BMP280_readPressure,w
  3714  036C  00A7               	movwf	___lmul@multiplier
  3715  036D  3000               	movlw	0
  3716  036E  00AE               	movwf	___lmul@multiplicand+3
  3717  036F  3000               	movlw	0
  3718  0370  00AD               	movwf	___lmul@multiplicand+2
  3719  0371  300C               	movlw	12
  3720  0372  00AC               	movwf	___lmul@multiplicand+1
  3721  0373  3035               	movlw	53
  3722  0374  00AB               	movwf	___lmul@multiplicand
  3723  0375  120A  158A  2353  120A  118A  	fcall	___lmul
  3724  037A  1283               	bcf	3,5	;RP0=0, select bank0
  3725  037B  1303               	bcf	3,6	;RP1=0, select bank0
  3726  037C  082A               	movf	?___lmul+3,w
  3727  037D  00DC               	movwf	BMP280_readPressure@p+3
  3728  037E  0829               	movf	?___lmul+2,w
  3729  037F  00DB               	movwf	BMP280_readPressure@p+2
  3730  0380  0828               	movf	?___lmul+1,w
  3731  0381  00DA               	movwf	BMP280_readPressure@p+1
  3732  0382  0827               	movf	?___lmul,w
  3733  0383  00D9               	movwf	BMP280_readPressure@p
  3734  0384                     l1409:
  3735                           
  3736                           ;BMP280.c: 288:   if (p < 0x80000000)
  3737  0384  3080               	movlw	128
  3738  0385  025C               	subwf	BMP280_readPressure@p+3,w
  3739  0386  1D03               	skipz
  3740  0387  2B94               	goto	u1243
  3741  0388  3000               	movlw	0
  3742  0389  025B               	subwf	BMP280_readPressure@p+2,w
  3743  038A  1D03               	skipz
  3744  038B  2B94               	goto	u1243
  3745  038C  3000               	movlw	0
  3746  038D  025A               	subwf	BMP280_readPressure@p+1,w
  3747  038E  1D03               	skipz
  3748  038F  2B94               	goto	u1243
  3749  0390  3000               	movlw	0
  3750  0391  0259               	subwf	BMP280_readPressure@p,w
  3751  0392  1D03               	skipz
  3752  0393  2B94               	goto	u1243
  3753  0394                     u1243:
  3754  0394  1803               	btfsc	3,0
  3755  0395  2B97               	goto	u1241
  3756  0396  2B98               	goto	u1240
  3757  0397                     u1241:
  3758  0397  2BBB               	goto	l1413
  3759  0398                     u1240:
  3760  0398                     l1411:
  3761                           
  3762                           ;BMP280.c: 289:     p = (p * 2) / ((uint32_t)var1);
  3763  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3764  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3765  039A  0860               	movf	BMP280_readPressure@var1+3,w
  3766  039B  00F6               	movwf	___lldiv@divisor+3
  3767  039C  085F               	movf	BMP280_readPressure@var1+2,w
  3768  039D  00F5               	movwf	___lldiv@divisor+2
  3769  039E  085E               	movf	BMP280_readPressure@var1+1,w
  3770  039F  00F4               	movwf	___lldiv@divisor+1
  3771  03A0  085D               	movf	BMP280_readPressure@var1,w
  3772  03A1  00F3               	movwf	___lldiv@divisor
  3773  03A2  1003               	clrc
  3774  03A3  0D59               	rlf	BMP280_readPressure@p,w
  3775  03A4  00F7               	movwf	___lldiv@dividend
  3776  03A5  0D5A               	rlf	BMP280_readPressure@p+1,w
  3777  03A6  00F8               	movwf	___lldiv@dividend+1
  3778  03A7  0D5B               	rlf	BMP280_readPressure@p+2,w
  3779  03A8  00F9               	movwf	___lldiv@dividend+2
  3780  03A9  0D5C               	rlf	BMP280_readPressure@p+3,w
  3781  03AA  00FA               	movwf	___lldiv@dividend+3
  3782  03AB  120A  118A  2784  120A  118A  	fcall	___lldiv
  3783  03B0  0876               	movf	?___lldiv+3,w
  3784  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3785  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3786  03B3  00DC               	movwf	BMP280_readPressure@p+3
  3787  03B4  0875               	movf	?___lldiv+2,w
  3788  03B5  00DB               	movwf	BMP280_readPressure@p+2
  3789  03B6  0874               	movf	?___lldiv+1,w
  3790  03B7  00DA               	movwf	BMP280_readPressure@p+1
  3791  03B8  0873               	movf	?___lldiv,w
  3792  03B9  00D9               	movwf	BMP280_readPressure@p
  3793  03BA  2BDD               	goto	l196
  3794  03BB                     l1413:
  3795                           
  3796                           ;BMP280.c: 292:     p = (p / (uint32_t)var1) * 2;
  3797  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3798  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3799  03BD  0860               	movf	BMP280_readPressure@var1+3,w
  3800  03BE  00F6               	movwf	___lldiv@divisor+3
  3801  03BF  085F               	movf	BMP280_readPressure@var1+2,w
  3802  03C0  00F5               	movwf	___lldiv@divisor+2
  3803  03C1  085E               	movf	BMP280_readPressure@var1+1,w
  3804  03C2  00F4               	movwf	___lldiv@divisor+1
  3805  03C3  085D               	movf	BMP280_readPressure@var1,w
  3806  03C4  00F3               	movwf	___lldiv@divisor
  3807  03C5  085C               	movf	BMP280_readPressure@p+3,w
  3808  03C6  00FA               	movwf	___lldiv@dividend+3
  3809  03C7  085B               	movf	BMP280_readPressure@p+2,w
  3810  03C8  00F9               	movwf	___lldiv@dividend+2
  3811  03C9  085A               	movf	BMP280_readPressure@p+1,w
  3812  03CA  00F8               	movwf	___lldiv@dividend+1
  3813  03CB  0859               	movf	BMP280_readPressure@p,w
  3814  03CC  00F7               	movwf	___lldiv@dividend
  3815  03CD  120A  118A  2784  120A  118A  	fcall	___lldiv
  3816  03D2  1003               	clrc
  3817  03D3  0D73               	rlf	?___lldiv,w
  3818  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  3819  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  3820  03D6  00D9               	movwf	BMP280_readPressure@p
  3821  03D7  0D74               	rlf	?___lldiv+1,w
  3822  03D8  00DA               	movwf	BMP280_readPressure@p+1
  3823  03D9  0D75               	rlf	?___lldiv+2,w
  3824  03DA  00DB               	movwf	BMP280_readPressure@p+2
  3825  03DB  0D76               	rlf	?___lldiv+3,w
  3826  03DC  00DC               	movwf	BMP280_readPressure@p+3
  3827  03DD                     l196:
  3828                           
  3829                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3830  03DD  0859               	movf	BMP280_readPressure@p,w
  3831  03DE  00B4               	movwf	??_BMP280_readPressure
  3832  03DF  085A               	movf	BMP280_readPressure@p+1,w
  3833  03E0  00B5               	movwf	??_BMP280_readPressure+1
  3834  03E1  085B               	movf	BMP280_readPressure@p+2,w
  3835  03E2  00B6               	movwf	??_BMP280_readPressure+2
  3836  03E3  085C               	movf	BMP280_readPressure@p+3,w
  3837  03E4  00B7               	movwf	??_BMP280_readPressure+3
  3838  03E5  3003               	movlw	3
  3839  03E6                     u1255:
  3840  03E6  1003               	clrc
  3841  03E7  0CB7               	rrf	??_BMP280_readPressure+3,f
  3842  03E8  0CB6               	rrf	??_BMP280_readPressure+2,f
  3843  03E9  0CB5               	rrf	??_BMP280_readPressure+1,f
  3844  03EA  0CB4               	rrf	??_BMP280_readPressure,f
  3845  03EB                     u1250:
  3846  03EB  3EFF               	addlw	-1
  3847  03EC  1D03               	skipz
  3848  03ED  2BE6               	goto	u1255
  3849  03EE  0837               	movf	??_BMP280_readPressure+3,w
  3850  03EF  00AE               	movwf	___lmul@multiplicand+3
  3851  03F0  0836               	movf	??_BMP280_readPressure+2,w
  3852  03F1  00AD               	movwf	___lmul@multiplicand+2
  3853  03F2  0835               	movf	??_BMP280_readPressure+1,w
  3854  03F3  00AC               	movwf	___lmul@multiplicand+1
  3855  03F4  0834               	movf	??_BMP280_readPressure,w
  3856  03F5  00AB               	movwf	___lmul@multiplicand
  3857  03F6  0859               	movf	BMP280_readPressure@p,w
  3858  03F7  00B8               	movwf	??_BMP280_readPressure+4
  3859  03F8  085A               	movf	BMP280_readPressure@p+1,w
  3860  03F9  00B9               	movwf	??_BMP280_readPressure+5
  3861  03FA  085B               	movf	BMP280_readPressure@p+2,w
  3862  03FB  00BA               	movwf	??_BMP280_readPressure+6
  3863  03FC  085C               	movf	BMP280_readPressure@p+3,w
  3864  03FD  00BB               	movwf	??_BMP280_readPressure+7
  3865  03FE  3003               	movlw	3
  3866  03FF                     u1265:
  3867  03FF  1003               	clrc
  3868  0400  0CBB               	rrf	??_BMP280_readPressure+7,f
  3869  0401  0CBA               	rrf	??_BMP280_readPressure+6,f
  3870  0402  0CB9               	rrf	??_BMP280_readPressure+5,f
  3871  0403  0CB8               	rrf	??_BMP280_readPressure+4,f
  3872  0404                     u1260:
  3873  0404  3EFF               	addlw	-1
  3874  0405  1D03               	skipz
  3875  0406  2BFF               	goto	u1265
  3876  0407  083B               	movf	??_BMP280_readPressure+7,w
  3877  0408  00AA               	movwf	___lmul@multiplier+3
  3878  0409  083A               	movf	??_BMP280_readPressure+6,w
  3879  040A  00A9               	movwf	___lmul@multiplier+2
  3880  040B  0839               	movf	??_BMP280_readPressure+5,w
  3881  040C  00A8               	movwf	___lmul@multiplier+1
  3882  040D  0838               	movf	??_BMP280_readPressure+4,w
  3883  040E  00A7               	movwf	___lmul@multiplier
  3884  040F  120A  158A  2353  120A  118A  	fcall	___lmul
  3885  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0416  0827               	movf	?___lmul,w
  3888  0417  00BC               	movwf	??_BMP280_readPressure+8
  3889  0418  0828               	movf	?___lmul+1,w
  3890  0419  00BD               	movwf	??_BMP280_readPressure+9
  3891  041A  0829               	movf	?___lmul+2,w
  3892  041B  00BE               	movwf	??_BMP280_readPressure+10
  3893  041C  082A               	movf	?___lmul+3,w
  3894  041D  00BF               	movwf	??_BMP280_readPressure+11
  3895  041E  300D               	movlw	13
  3896  041F                     u1275:
  3897  041F  1003               	clrc
  3898  0420  0CBF               	rrf	??_BMP280_readPressure+11,f
  3899  0421  0CBE               	rrf	??_BMP280_readPressure+10,f
  3900  0422  0CBD               	rrf	??_BMP280_readPressure+9,f
  3901  0423  0CBC               	rrf	??_BMP280_readPressure+8,f
  3902  0424                     u1270:
  3903  0424  3EFF               	addlw	-1
  3904  0425  1D03               	skipz
  3905  0426  2C1F               	goto	u1275
  3906  0427  083F               	movf	??_BMP280_readPressure+11,w
  3907  0428  00CF               	movwf	_BMP280_readPressure$1204+3
  3908  0429  083E               	movf	??_BMP280_readPressure+10,w
  3909  042A  00CE               	movwf	_BMP280_readPressure$1204+2
  3910  042B  083D               	movf	??_BMP280_readPressure+9,w
  3911  042C  00CD               	movwf	_BMP280_readPressure$1204+1
  3912  042D  083C               	movf	??_BMP280_readPressure+8,w
  3913  042E  00CC               	movwf	_BMP280_readPressure$1204
  3914                           
  3915                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3916  042F  3000               	movlw	0
  3917  0430  00F6               	movwf	___aldiv@divisor+3
  3918  0431  3000               	movlw	0
  3919  0432  00F5               	movwf	___aldiv@divisor+2
  3920  0433  3010               	movlw	16
  3921  0434  00F4               	movwf	___aldiv@divisor+1
  3922  0435  3000               	movlw	0
  3923  0436  00F3               	movwf	___aldiv@divisor
  3924  0437  1683               	bsf	3,5	;RP0=1, select bank1
  3925  0438  1303               	bcf	3,6	;RP1=0, select bank1
  3926  0439  0842               	movf	(_BMP280_calib^(0+128)+22),w
  3927  043A  1283               	bcf	3,5	;RP0=0, select bank0
  3928  043B  1303               	bcf	3,6	;RP1=0, select bank0
  3929  043C  00A7               	movwf	___lmul@multiplier
  3930  043D  1683               	bsf	3,5	;RP0=1, select bank1
  3931  043E  1303               	bcf	3,6	;RP1=0, select bank1
  3932  043F  0843               	movf	((_BMP280_calib+1)^(0+128)+22),w
  3933  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3934  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3935  0442  00A8               	movwf	___lmul@multiplier+1
  3936  0443  3000               	movlw	0
  3937  0444  1BA8               	btfsc	___lmul@multiplier+1,7
  3938  0445  30FF               	movlw	255
  3939  0446  00A9               	movwf	___lmul@multiplier+2
  3940  0447  00AA               	movwf	___lmul@multiplier+3
  3941  0448  084F               	movf	_BMP280_readPressure$1204+3,w
  3942  0449  00AE               	movwf	___lmul@multiplicand+3
  3943  044A  084E               	movf	_BMP280_readPressure$1204+2,w
  3944  044B  00AD               	movwf	___lmul@multiplicand+2
  3945  044C  084D               	movf	_BMP280_readPressure$1204+1,w
  3946  044D  00AC               	movwf	___lmul@multiplicand+1
  3947  044E  084C               	movf	_BMP280_readPressure$1204,w
  3948  044F  00AB               	movwf	___lmul@multiplicand
  3949  0450  120A  158A  2353  120A  118A  	fcall	___lmul
  3950  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3951  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3952  0457  082A               	movf	?___lmul+3,w
  3953  0458  00FA               	movwf	___aldiv@dividend+3
  3954  0459  0829               	movf	?___lmul+2,w
  3955  045A  00F9               	movwf	___aldiv@dividend+2
  3956  045B  0828               	movf	?___lmul+1,w
  3957  045C  00F8               	movwf	___aldiv@dividend+1
  3958  045D  0827               	movf	?___lmul,w
  3959  045E  00F7               	movwf	___aldiv@dividend
  3960  045F  120A  158A  247B  120A  118A  	fcall	___aldiv
  3961  0464  0876               	movf	?___aldiv+3,w
  3962  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0467  00E0               	movwf	BMP280_readPressure@var1+3
  3965  0468  0875               	movf	?___aldiv+2,w
  3966  0469  00DF               	movwf	BMP280_readPressure@var1+2
  3967  046A  0874               	movf	?___aldiv+1,w
  3968  046B  00DE               	movwf	BMP280_readPressure@var1+1
  3969  046C  0873               	movf	?___aldiv,w
  3970  046D  00DD               	movwf	BMP280_readPressure@var1
  3971                           
  3972                           ;BMP280.c: 295:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  3973  046E  3000               	movlw	0
  3974  046F  00F6               	movwf	___aldiv@divisor+3
  3975  0470  3000               	movlw	0
  3976  0471  00F5               	movwf	___aldiv@divisor+2
  3977  0472  3020               	movlw	32
  3978  0473  00F4               	movwf	___aldiv@divisor+1
  3979  0474  3000               	movlw	0
  3980  0475  00F3               	movwf	___aldiv@divisor
  3981  0476  0859               	movf	BMP280_readPressure@p,w
  3982  0477  00B4               	movwf	??_BMP280_readPressure
  3983  0478  085A               	movf	BMP280_readPressure@p+1,w
  3984  0479  00B5               	movwf	??_BMP280_readPressure+1
  3985  047A  085B               	movf	BMP280_readPressure@p+2,w
  3986  047B  00B6               	movwf	??_BMP280_readPressure+2
  3987  047C  085C               	movf	BMP280_readPressure@p+3,w
  3988  047D  00B7               	movwf	??_BMP280_readPressure+3
  3989  047E  3002               	movlw	2
  3990  047F                     u1285:
  3991  047F  1003               	clrc
  3992  0480  0CB7               	rrf	??_BMP280_readPressure+3,f
  3993  0481  0CB6               	rrf	??_BMP280_readPressure+2,f
  3994  0482  0CB5               	rrf	??_BMP280_readPressure+1,f
  3995  0483  0CB4               	rrf	??_BMP280_readPressure,f
  3996  0484                     u1280:
  3997  0484  3EFF               	addlw	-1
  3998  0485  1D03               	skipz
  3999  0486  2C7F               	goto	u1285
  4000  0487  0837               	movf	??_BMP280_readPressure+3,w
  4001  0488  00AA               	movwf	___lmul@multiplier+3
  4002  0489  0836               	movf	??_BMP280_readPressure+2,w
  4003  048A  00A9               	movwf	___lmul@multiplier+2
  4004  048B  0835               	movf	??_BMP280_readPressure+1,w
  4005  048C  00A8               	movwf	___lmul@multiplier+1
  4006  048D  0834               	movf	??_BMP280_readPressure,w
  4007  048E  00A7               	movwf	___lmul@multiplier
  4008  048F  1683               	bsf	3,5	;RP0=1, select bank1
  4009  0490  1303               	bcf	3,6	;RP1=0, select bank1
  4010  0491  0840               	movf	(_BMP280_calib^(0+128)+20),w
  4011  0492  1283               	bcf	3,5	;RP0=0, select bank0
  4012  0493  1303               	bcf	3,6	;RP1=0, select bank0
  4013  0494  00AB               	movwf	___lmul@multiplicand
  4014  0495  1683               	bsf	3,5	;RP0=1, select bank1
  4015  0496  1303               	bcf	3,6	;RP1=0, select bank1
  4016  0497  0841               	movf	((_BMP280_calib+1)^(0+128)+20),w
  4017  0498  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0499  1303               	bcf	3,6	;RP1=0, select bank0
  4019  049A  00AC               	movwf	___lmul@multiplicand+1
  4020  049B  3000               	movlw	0
  4021  049C  1BAC               	btfsc	___lmul@multiplicand+1,7
  4022  049D  30FF               	movlw	255
  4023  049E  00AD               	movwf	___lmul@multiplicand+2
  4024  049F  00AE               	movwf	___lmul@multiplicand+3
  4025  04A0  120A  158A  2353  120A  118A  	fcall	___lmul
  4026  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  4027  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  4028  04A7  082A               	movf	?___lmul+3,w
  4029  04A8  00FA               	movwf	___aldiv@dividend+3
  4030  04A9  0829               	movf	?___lmul+2,w
  4031  04AA  00F9               	movwf	___aldiv@dividend+2
  4032  04AB  0828               	movf	?___lmul+1,w
  4033  04AC  00F8               	movwf	___aldiv@dividend+1
  4034  04AD  0827               	movf	?___lmul,w
  4035  04AE  00F7               	movwf	___aldiv@dividend
  4036  04AF  120A  158A  247B  120A  118A  	fcall	___aldiv
  4037  04B4  0876               	movf	?___aldiv+3,w
  4038  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  4039  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  4040  04B7  00D8               	movwf	BMP280_readPressure@var2+3
  4041  04B8  0875               	movf	?___aldiv+2,w
  4042  04B9  00D7               	movwf	BMP280_readPressure@var2+2
  4043  04BA  0874               	movf	?___aldiv+1,w
  4044  04BB  00D6               	movwf	BMP280_readPressure@var2+1
  4045  04BC  0873               	movf	?___aldiv,w
  4046  04BD  00D5               	movwf	BMP280_readPressure@var2
  4047                           
  4048                           ;BMP280.c: 297:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  4049  04BE  3000               	movlw	0
  4050  04BF  00F6               	movwf	___aldiv@divisor+3
  4051  04C0  3000               	movlw	0
  4052  04C1  00F5               	movwf	___aldiv@divisor+2
  4053  04C2  3000               	movlw	0
  4054  04C3  00F4               	movwf	___aldiv@divisor+1
  4055  04C4  3010               	movlw	16
  4056  04C5  00F3               	movwf	___aldiv@divisor
  4057  04C6  0855               	movf	BMP280_readPressure@var2,w
  4058  04C7  00B4               	movwf	??_BMP280_readPressure
  4059  04C8  0856               	movf	BMP280_readPressure@var2+1,w
  4060  04C9  00B5               	movwf	??_BMP280_readPressure+1
  4061  04CA  0857               	movf	BMP280_readPressure@var2+2,w
  4062  04CB  00B6               	movwf	??_BMP280_readPressure+2
  4063  04CC  0858               	movf	BMP280_readPressure@var2+3,w
  4064  04CD  00B7               	movwf	??_BMP280_readPressure+3
  4065  04CE  085D               	movf	BMP280_readPressure@var1,w
  4066  04CF  00B8               	movwf	??_BMP280_readPressure+4
  4067  04D0  085E               	movf	BMP280_readPressure@var1+1,w
  4068  04D1  00B9               	movwf	??_BMP280_readPressure+5
  4069  04D2  085F               	movf	BMP280_readPressure@var1+2,w
  4070  04D3  00BA               	movwf	??_BMP280_readPressure+6
  4071  04D4  0860               	movf	BMP280_readPressure@var1+3,w
  4072  04D5  00BB               	movwf	??_BMP280_readPressure+7
  4073  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  4074  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  4075  04D8  083E               	movf	(_BMP280_calib^(0+128)+18),w
  4076  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4077  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  4078  04DB  00BC               	movwf	??_BMP280_readPressure+8
  4079  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  4080  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  4081  04DE  083F               	movf	((_BMP280_calib+1)^(0+128)+18),w
  4082  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  4083  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  4084  04E1  00BD               	movwf	??_BMP280_readPressure+9
  4085  04E2  3000               	movlw	0
  4086  04E3  1BBD               	btfsc	??_BMP280_readPressure+9,7
  4087  04E4  30FF               	movlw	255
  4088  04E5  00BE               	movwf	??_BMP280_readPressure+10
  4089  04E6  00BF               	movwf	??_BMP280_readPressure+11
  4090  04E7  083C               	movf	??_BMP280_readPressure+8,w
  4091  04E8  07B8               	addwf	??_BMP280_readPressure+4,f
  4092  04E9  083D               	movf	??_BMP280_readPressure+9,w
  4093  04EA  1803               	skipnc
  4094  04EB  0F3D               	incfsz	??_BMP280_readPressure+9,w
  4095  04EC  2CEE               	goto	u1290
  4096  04ED  2CEF               	goto	u1291
  4097  04EE                     u1290:
  4098  04EE  07B9               	addwf	??_BMP280_readPressure+5,f
  4099  04EF                     u1291:
  4100  04EF  083E               	movf	??_BMP280_readPressure+10,w
  4101  04F0  1803               	skipnc
  4102  04F1  0F3E               	incfsz	??_BMP280_readPressure+10,w
  4103  04F2  2CF4               	goto	u1292
  4104  04F3  2CF5               	goto	u1293
  4105  04F4                     u1292:
  4106  04F4  07BA               	addwf	??_BMP280_readPressure+6,f
  4107  04F5                     u1293:
  4108  04F5  083F               	movf	??_BMP280_readPressure+11,w
  4109  04F6  1803               	skipnc
  4110  04F7  0A3F               	incf	??_BMP280_readPressure+11,w
  4111  04F8  07BB               	addwf	??_BMP280_readPressure+7,f
  4112  04F9  0838               	movf	??_BMP280_readPressure+4,w
  4113  04FA  07B4               	addwf	??_BMP280_readPressure,f
  4114  04FB  0839               	movf	??_BMP280_readPressure+5,w
  4115  04FC  1803               	skipnc
  4116  04FD  0F39               	incfsz	??_BMP280_readPressure+5,w
  4117  04FE  2D00               	goto	u1300
  4118  04FF  2D01               	goto	u1301
  4119  0500                     u1300:
  4120  0500  07B5               	addwf	??_BMP280_readPressure+1,f
  4121  0501                     u1301:
  4122  0501  083A               	movf	??_BMP280_readPressure+6,w
  4123  0502  1803               	skipnc
  4124  0503  0F3A               	incfsz	??_BMP280_readPressure+6,w
  4125  0504  2D06               	goto	u1302
  4126  0505  2D07               	goto	u1303
  4127  0506                     u1302:
  4128  0506  07B6               	addwf	??_BMP280_readPressure+2,f
  4129  0507                     u1303:
  4130  0507  083B               	movf	??_BMP280_readPressure+7,w
  4131  0508  1803               	skipnc
  4132  0509  0A3B               	incf	??_BMP280_readPressure+7,w
  4133  050A  07B7               	addwf	??_BMP280_readPressure+3,f
  4134  050B  0837               	movf	??_BMP280_readPressure+3,w
  4135  050C  00FA               	movwf	___aldiv@dividend+3
  4136  050D  0836               	movf	??_BMP280_readPressure+2,w
  4137  050E  00F9               	movwf	___aldiv@dividend+2
  4138  050F  0835               	movf	??_BMP280_readPressure+1,w
  4139  0510  00F8               	movwf	___aldiv@dividend+1
  4140  0511  0834               	movf	??_BMP280_readPressure,w
  4141  0512  00F7               	movwf	___aldiv@dividend
  4142  0513  120A  158A  247B  120A  118A  	fcall	___aldiv
  4143  0518  0873               	movf	?___aldiv,w
  4144  0519  1283               	bcf	3,5	;RP0=0, select bank0
  4145  051A  1303               	bcf	3,6	;RP1=0, select bank0
  4146  051B  0759               	addwf	BMP280_readPressure@p,w
  4147  051C  00C0               	movwf	??_BMP280_readPressure+12
  4148  051D  3000               	movlw	0
  4149  051E  1803               	skipnc
  4150  051F  3001               	movlw	1
  4151  0520  0774               	addwf	?___aldiv+1,w
  4152  0521  01C2               	clrf	??_BMP280_readPressure+14
  4153  0522  1803               	skipnc
  4154  0523  0AC2               	incf	??_BMP280_readPressure+14,f
  4155  0524  075A               	addwf	BMP280_readPressure@p+1,w
  4156  0525  00C1               	movwf	??_BMP280_readPressure+13
  4157  0526  1803               	skipnc
  4158  0527  0AC2               	incf	??_BMP280_readPressure+14,f
  4159  0528  0875               	movf	?___aldiv+2,w
  4160  0529  0742               	addwf	??_BMP280_readPressure+14,w
  4161  052A  01C3               	clrf	??_BMP280_readPressure+15
  4162  052B  1803               	skipnc
  4163  052C  0AC3               	incf	??_BMP280_readPressure+15,f
  4164  052D  075B               	addwf	BMP280_readPressure@p+2,w
  4165  052E  00C2               	movwf	??_BMP280_readPressure+14
  4166  052F  1803               	skipnc
  4167  0530  0AC3               	incf	??_BMP280_readPressure+15,f
  4168  0531  0876               	movf	?___aldiv+3,w
  4169  0532  0743               	addwf	??_BMP280_readPressure+15,w
  4170  0533  075C               	addwf	BMP280_readPressure@p+3,w
  4171  0534  00C3               	movwf	??_BMP280_readPressure+15
  4172  0535  0843               	movf	??_BMP280_readPressure+15,w
  4173  0536  00DC               	movwf	BMP280_readPressure@p+3
  4174  0537  0842               	movf	??_BMP280_readPressure+14,w
  4175  0538  00DB               	movwf	BMP280_readPressure@p+2
  4176  0539  0841               	movf	??_BMP280_readPressure+13,w
  4177  053A  00DA               	movwf	BMP280_readPressure@p+1
  4178  053B  0840               	movf	??_BMP280_readPressure+12,w
  4179  053C  00D9               	movwf	BMP280_readPressure@p
  4180  053D                     l1415:
  4181                           
  4182                           ;BMP280.c: 299:   *pres = p;
  4183  053D  0850               	movf	BMP280_readPressure@pres,w
  4184  053E  0084               	movwf	4
  4185  053F  0859               	movf	BMP280_readPressure@p,w
  4186  0540  1383               	bcf	3,7	;select IRP bank0
  4187  0541  0080               	movwf	0
  4188  0542  0A84               	incf	4,f
  4189  0543  085A               	movf	BMP280_readPressure@p+1,w
  4190  0544  0080               	movwf	0
  4191  0545  0A84               	incf	4,f
  4192  0546  085B               	movf	BMP280_readPressure@p+2,w
  4193  0547  0080               	movwf	0
  4194  0548  0A84               	incf	4,f
  4195  0549  085C               	movf	BMP280_readPressure@p+3,w
  4196  054A  0080               	movwf	0
  4197  054B                     l194:
  4198  054B  0008               	return
  4199  054C                     __end_of_BMP280_readPressure:
  4200                           
  4201                           	psect	text10
  4202  0B53                     __ptext10:	
  4203 ;; *************** function ___lmul *****************
  4204 ;; Defined at:
  4205 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  multiplier      4    7[BANK0 ] unsigned long 
  4208 ;;  multiplicand    4   11[BANK0 ] unsigned long 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  product         4   16[BANK0 ] unsigned long 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  4    7[BANK0 ] unsigned long 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4220 ;;      Params:         0       8       0       0       0
  4221 ;;      Locals:         0       4       0       0       0
  4222 ;;      Temps:          0       1       0       0       0
  4223 ;;      Totals:         0      13       0       0       0
  4224 ;;Total ram usage:       13 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    2
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_BMP280_readTemperature
  4231 ;;		_BMP280_readPressure
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function ___lmul
  4237  0B53                     ___lmul:
  4238  0B53                     l1319:	
  4239                           ;incstack = 0
  4240                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4241                           
  4242  0B53  3000               	movlw	0
  4243  0B54  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0B55  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0B56  00B3               	movwf	___lmul@product+3
  4246  0B57  3000               	movlw	0
  4247  0B58  00B2               	movwf	___lmul@product+2
  4248  0B59  3000               	movlw	0
  4249  0B5A  00B1               	movwf	___lmul@product+1
  4250  0B5B  3000               	movlw	0
  4251  0B5C  00B0               	movwf	___lmul@product
  4252  0B5D                     l1321:
  4253  0B5D  1C27               	btfss	___lmul@multiplier,0
  4254  0B5E  2B60               	goto	u921
  4255  0B5F  2B61               	goto	u920
  4256  0B60                     u921:
  4257  0B60  2B78               	goto	l1325
  4258  0B61                     u920:
  4259  0B61                     l1323:
  4260  0B61  082B               	movf	___lmul@multiplicand,w
  4261  0B62  07B0               	addwf	___lmul@product,f
  4262  0B63  082C               	movf	___lmul@multiplicand+1,w
  4263  0B64  1103               	clrz
  4264  0B65  1803               	skipnc
  4265  0B66  3E01               	addlw	1
  4266  0B67  1903               	skipnz
  4267  0B68  2B6A               	goto	u931
  4268  0B69  07B1               	addwf	___lmul@product+1,f
  4269  0B6A                     u931:
  4270  0B6A  082D               	movf	___lmul@multiplicand+2,w
  4271  0B6B  1103               	clrz
  4272  0B6C  1803               	skipnc
  4273  0B6D  3E01               	addlw	1
  4274  0B6E  1903               	skipnz
  4275  0B6F  2B71               	goto	u932
  4276  0B70  07B2               	addwf	___lmul@product+2,f
  4277  0B71                     u932:
  4278  0B71  082E               	movf	___lmul@multiplicand+3,w
  4279  0B72  1103               	clrz
  4280  0B73  1803               	skipnc
  4281  0B74  3E01               	addlw	1
  4282  0B75  1903               	skipnz
  4283  0B76  2B78               	goto	u933
  4284  0B77  07B3               	addwf	___lmul@product+3,f
  4285  0B78                     u933:
  4286  0B78                     l1325:
  4287  0B78  3001               	movlw	1
  4288  0B79  00AF               	movwf	??___lmul
  4289  0B7A                     u945:
  4290  0B7A  1003               	clrc
  4291  0B7B  0DAB               	rlf	___lmul@multiplicand,f
  4292  0B7C  0DAC               	rlf	___lmul@multiplicand+1,f
  4293  0B7D  0DAD               	rlf	___lmul@multiplicand+2,f
  4294  0B7E  0DAE               	rlf	___lmul@multiplicand+3,f
  4295  0B7F  0BAF               	decfsz	??___lmul,f
  4296  0B80  2B7A               	goto	u945
  4297  0B81                     l1327:
  4298  0B81  3001               	movlw	1
  4299  0B82                     u955:
  4300  0B82  1003               	clrc
  4301  0B83  0CAA               	rrf	___lmul@multiplier+3,f
  4302  0B84  0CA9               	rrf	___lmul@multiplier+2,f
  4303  0B85  0CA8               	rrf	___lmul@multiplier+1,f
  4304  0B86  0CA7               	rrf	___lmul@multiplier,f
  4305  0B87  3EFF               	addlw	-1
  4306  0B88  1D03               	skipz
  4307  0B89  2B82               	goto	u955
  4308  0B8A  082A               	movf	___lmul@multiplier+3,w
  4309  0B8B  0429               	iorwf	___lmul@multiplier+2,w
  4310  0B8C  0428               	iorwf	___lmul@multiplier+1,w
  4311  0B8D  0427               	iorwf	___lmul@multiplier,w
  4312  0B8E  1D03               	skipz
  4313  0B8F  2B91               	goto	u961
  4314  0B90  2B92               	goto	u960
  4315  0B91                     u961:
  4316  0B91  2B5D               	goto	l1321
  4317  0B92                     u960:
  4318  0B92                     l1329:
  4319  0B92  0833               	movf	___lmul@product+3,w
  4320  0B93  00AA               	movwf	?___lmul+3
  4321  0B94  0832               	movf	___lmul@product+2,w
  4322  0B95  00A9               	movwf	?___lmul+2
  4323  0B96  0831               	movf	___lmul@product+1,w
  4324  0B97  00A8               	movwf	?___lmul+1
  4325  0B98  0830               	movf	___lmul@product,w
  4326  0B99  00A7               	movwf	?___lmul
  4327  0B9A                     l333:
  4328  0B9A  0008               	return
  4329  0B9B                     __end_of___lmul:
  4330                           
  4331                           	psect	text11
  4332  0784                     __ptext11:	
  4333 ;; *************** function ___lldiv *****************
  4334 ;; Defined at:
  4335 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  divisor         4    3[COMMON] unsigned long 
  4338 ;;  dividend        4    7[COMMON] unsigned long 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  quotient        4    1[BANK0 ] unsigned long 
  4341 ;;  counter         1    5[BANK0 ] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  4    3[COMMON] unsigned long 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4351 ;;      Params:         8       0       0       0       0
  4352 ;;      Locals:         0       5       0       0       0
  4353 ;;      Temps:          0       1       0       0       0
  4354 ;;      Totals:         8       6       0       0       0
  4355 ;;Total ram usage:       14 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    2
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_Send_Temp
  4362 ;;		_I2C_Master_Init
  4363 ;;		_BMP280_readPressure
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           
  4368                           ;psect for function ___lldiv
  4369  0784                     ___lldiv:
  4370  0784                     l1217:	
  4371                           ;incstack = 0
  4372                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4373                           
  4374  0784  3000               	movlw	0
  4375  0785  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0786  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0787  00A4               	movwf	___lldiv@quotient+3
  4378  0788  3000               	movlw	0
  4379  0789  00A3               	movwf	___lldiv@quotient+2
  4380  078A  3000               	movlw	0
  4381  078B  00A2               	movwf	___lldiv@quotient+1
  4382  078C  3000               	movlw	0
  4383  078D  00A1               	movwf	___lldiv@quotient
  4384  078E  0876               	movf	___lldiv@divisor+3,w
  4385  078F  0475               	iorwf	___lldiv@divisor+2,w
  4386  0790  0474               	iorwf	___lldiv@divisor+1,w
  4387  0791  0473               	iorwf	___lldiv@divisor,w
  4388  0792  1903               	skipnz
  4389  0793  2F95               	goto	u731
  4390  0794  2F96               	goto	u730
  4391  0795                     u731:
  4392  0795  2FE3               	goto	l1237
  4393  0796                     u730:
  4394  0796                     l1219:
  4395  0796  01A5               	clrf	___lldiv@counter
  4396  0797  0AA5               	incf	___lldiv@counter,f
  4397  0798  2FA6               	goto	l1223
  4398  0799                     l1221:
  4399  0799  3001               	movlw	1
  4400  079A  00A0               	movwf	??___lldiv
  4401  079B                     u745:
  4402  079B  1003               	clrc
  4403  079C  0DF3               	rlf	___lldiv@divisor,f
  4404  079D  0DF4               	rlf	___lldiv@divisor+1,f
  4405  079E  0DF5               	rlf	___lldiv@divisor+2,f
  4406  079F  0DF6               	rlf	___lldiv@divisor+3,f
  4407  07A0  0BA0               	decfsz	??___lldiv,f
  4408  07A1  2F9B               	goto	u745
  4409  07A2  3001               	movlw	1
  4410  07A3  00A0               	movwf	??___lldiv
  4411  07A4  0820               	movf	??___lldiv,w
  4412  07A5  07A5               	addwf	___lldiv@counter,f
  4413  07A6                     l1223:
  4414  07A6  1FF6               	btfss	___lldiv@divisor+3,7
  4415  07A7  2FA9               	goto	u751
  4416  07A8  2FAA               	goto	u750
  4417  07A9                     u751:
  4418  07A9  2F99               	goto	l1221
  4419  07AA                     u750:
  4420  07AA                     l1225:
  4421  07AA  3001               	movlw	1
  4422  07AB  00A0               	movwf	??___lldiv
  4423  07AC                     u765:
  4424  07AC  1003               	clrc
  4425  07AD  0DA1               	rlf	___lldiv@quotient,f
  4426  07AE  0DA2               	rlf	___lldiv@quotient+1,f
  4427  07AF  0DA3               	rlf	___lldiv@quotient+2,f
  4428  07B0  0DA4               	rlf	___lldiv@quotient+3,f
  4429  07B1  0BA0               	decfsz	??___lldiv,f
  4430  07B2  2FAC               	goto	u765
  4431  07B3                     l1227:
  4432  07B3  0876               	movf	___lldiv@divisor+3,w
  4433  07B4  027A               	subwf	___lldiv@dividend+3,w
  4434  07B5  1D03               	skipz
  4435  07B6  2FC1               	goto	u775
  4436  07B7  0875               	movf	___lldiv@divisor+2,w
  4437  07B8  0279               	subwf	___lldiv@dividend+2,w
  4438  07B9  1D03               	skipz
  4439  07BA  2FC1               	goto	u775
  4440  07BB  0874               	movf	___lldiv@divisor+1,w
  4441  07BC  0278               	subwf	___lldiv@dividend+1,w
  4442  07BD  1D03               	skipz
  4443  07BE  2FC1               	goto	u775
  4444  07BF  0873               	movf	___lldiv@divisor,w
  4445  07C0  0277               	subwf	___lldiv@dividend,w
  4446  07C1                     u775:
  4447  07C1  1C03               	skipc
  4448  07C2  2FC4               	goto	u771
  4449  07C3  2FC5               	goto	u770
  4450  07C4                     u771:
  4451  07C4  2FD4               	goto	l1233
  4452  07C5                     u770:
  4453  07C5                     l1229:
  4454  07C5  0873               	movf	___lldiv@divisor,w
  4455  07C6  02F7               	subwf	___lldiv@dividend,f
  4456  07C7  0874               	movf	___lldiv@divisor+1,w
  4457  07C8  1C03               	skipc
  4458  07C9  0F74               	incfsz	___lldiv@divisor+1,w
  4459  07CA  02F8               	subwf	___lldiv@dividend+1,f
  4460  07CB  0875               	movf	___lldiv@divisor+2,w
  4461  07CC  1C03               	skipc
  4462  07CD  0F75               	incfsz	___lldiv@divisor+2,w
  4463  07CE  02F9               	subwf	___lldiv@dividend+2,f
  4464  07CF  0876               	movf	___lldiv@divisor+3,w
  4465  07D0  1C03               	skipc
  4466  07D1  0F76               	incfsz	___lldiv@divisor+3,w
  4467  07D2  02FA               	subwf	___lldiv@dividend+3,f
  4468  07D3                     l1231:
  4469  07D3  1421               	bsf	___lldiv@quotient,0
  4470  07D4                     l1233:
  4471  07D4  3001               	movlw	1
  4472  07D5                     u785:
  4473  07D5  1003               	clrc
  4474  07D6  0CF6               	rrf	___lldiv@divisor+3,f
  4475  07D7  0CF5               	rrf	___lldiv@divisor+2,f
  4476  07D8  0CF4               	rrf	___lldiv@divisor+1,f
  4477  07D9  0CF3               	rrf	___lldiv@divisor,f
  4478  07DA  3EFF               	addlw	-1
  4479  07DB  1D03               	skipz
  4480  07DC  2FD5               	goto	u785
  4481  07DD                     l1235:
  4482  07DD  3001               	movlw	1
  4483  07DE  02A5               	subwf	___lldiv@counter,f
  4484  07DF  1D03               	btfss	3,2
  4485  07E0  2FE2               	goto	u791
  4486  07E1  2FE3               	goto	u790
  4487  07E2                     u791:
  4488  07E2  2FAA               	goto	l1225
  4489  07E3                     u790:
  4490  07E3                     l1237:
  4491  07E3  0824               	movf	___lldiv@quotient+3,w
  4492  07E4  00F6               	movwf	?___lldiv+3
  4493  07E5  0823               	movf	___lldiv@quotient+2,w
  4494  07E6  00F5               	movwf	?___lldiv+2
  4495  07E7  0822               	movf	___lldiv@quotient+1,w
  4496  07E8  00F4               	movwf	?___lldiv+1
  4497  07E9  0821               	movf	___lldiv@quotient,w
  4498  07EA  00F3               	movwf	?___lldiv
  4499  07EB                     l355:
  4500  07EB  0008               	return
  4501  07EC                     __end_of___lldiv:
  4502                           
  4503                           	psect	text12
  4504  0C7B                     __ptext12:	
  4505 ;; *************** function ___aldiv *****************
  4506 ;; Defined at:
  4507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  divisor         4    3[COMMON] long 
  4510 ;;  dividend        4    7[COMMON] long 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  quotient        4    3[BANK0 ] long 
  4513 ;;  sign            1    2[BANK0 ] unsigned char 
  4514 ;;  counter         1    1[BANK0 ] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  4    3[COMMON] long 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         8       0       0       0       0
  4525 ;;      Locals:         0       6       0       0       0
  4526 ;;      Temps:          0       1       0       0       0
  4527 ;;      Totals:         8       7       0       0       0
  4528 ;;Total ram usage:       15 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    2
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_BMP280_readTemperature
  4535 ;;		_BMP280_readPressure
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           
  4540                           ;psect for function ___aldiv
  4541  0C7B                     ___aldiv:
  4542  0C7B                     l1333:	
  4543                           ;incstack = 0
  4544                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4545                           
  4546  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0C7D  01A2               	clrf	___aldiv@sign
  4549  0C7E                     l1335:
  4550  0C7E  1FF6               	btfss	___aldiv@divisor+3,7
  4551  0C7F  2C81               	goto	u971
  4552  0C80  2C82               	goto	u970
  4553  0C81                     u971:
  4554  0C81  2C8F               	goto	l384
  4555  0C82                     u970:
  4556  0C82                     l1337:
  4557  0C82  09F3               	comf	___aldiv@divisor,f
  4558  0C83  09F4               	comf	___aldiv@divisor+1,f
  4559  0C84  09F5               	comf	___aldiv@divisor+2,f
  4560  0C85  09F6               	comf	___aldiv@divisor+3,f
  4561  0C86  0AF3               	incf	___aldiv@divisor,f
  4562  0C87  1903               	skipnz
  4563  0C88  0AF4               	incf	___aldiv@divisor+1,f
  4564  0C89  1903               	skipnz
  4565  0C8A  0AF5               	incf	___aldiv@divisor+2,f
  4566  0C8B  1903               	skipnz
  4567  0C8C  0AF6               	incf	___aldiv@divisor+3,f
  4568  0C8D  01A2               	clrf	___aldiv@sign
  4569  0C8E  0AA2               	incf	___aldiv@sign,f
  4570  0C8F                     l384:
  4571  0C8F  1FFA               	btfss	___aldiv@dividend+3,7
  4572  0C90  2C92               	goto	u981
  4573  0C91  2C93               	goto	u980
  4574  0C92                     u981:
  4575  0C92  2CA2               	goto	l1343
  4576  0C93                     u980:
  4577  0C93                     l1339:
  4578  0C93  09F7               	comf	___aldiv@dividend,f
  4579  0C94  09F8               	comf	___aldiv@dividend+1,f
  4580  0C95  09F9               	comf	___aldiv@dividend+2,f
  4581  0C96  09FA               	comf	___aldiv@dividend+3,f
  4582  0C97  0AF7               	incf	___aldiv@dividend,f
  4583  0C98  1903               	skipnz
  4584  0C99  0AF8               	incf	___aldiv@dividend+1,f
  4585  0C9A  1903               	skipnz
  4586  0C9B  0AF9               	incf	___aldiv@dividend+2,f
  4587  0C9C  1903               	skipnz
  4588  0C9D  0AFA               	incf	___aldiv@dividend+3,f
  4589  0C9E                     l1341:
  4590  0C9E  3001               	movlw	1
  4591  0C9F  00A0               	movwf	??___aldiv
  4592  0CA0  0820               	movf	??___aldiv,w
  4593  0CA1  06A2               	xorwf	___aldiv@sign,f
  4594  0CA2                     l1343:
  4595  0CA2  3000               	movlw	0
  4596  0CA3  00A6               	movwf	___aldiv@quotient+3
  4597  0CA4  3000               	movlw	0
  4598  0CA5  00A5               	movwf	___aldiv@quotient+2
  4599  0CA6  3000               	movlw	0
  4600  0CA7  00A4               	movwf	___aldiv@quotient+1
  4601  0CA8  3000               	movlw	0
  4602  0CA9  00A3               	movwf	___aldiv@quotient
  4603  0CAA                     l1345:
  4604  0CAA  0876               	movf	___aldiv@divisor+3,w
  4605  0CAB  0475               	iorwf	___aldiv@divisor+2,w
  4606  0CAC  0474               	iorwf	___aldiv@divisor+1,w
  4607  0CAD  0473               	iorwf	___aldiv@divisor,w
  4608  0CAE  1903               	skipnz
  4609  0CAF  2CB1               	goto	u991
  4610  0CB0  2CB2               	goto	u990
  4611  0CB1                     u991:
  4612  0CB1  2CFF               	goto	l1365
  4613  0CB2                     u990:
  4614  0CB2                     l1347:
  4615  0CB2  01A1               	clrf	___aldiv@counter
  4616  0CB3  0AA1               	incf	___aldiv@counter,f
  4617  0CB4  2CC2               	goto	l1351
  4618  0CB5                     l1349:
  4619  0CB5  3001               	movlw	1
  4620  0CB6  00A0               	movwf	??___aldiv
  4621  0CB7                     u1005:
  4622  0CB7  1003               	clrc
  4623  0CB8  0DF3               	rlf	___aldiv@divisor,f
  4624  0CB9  0DF4               	rlf	___aldiv@divisor+1,f
  4625  0CBA  0DF5               	rlf	___aldiv@divisor+2,f
  4626  0CBB  0DF6               	rlf	___aldiv@divisor+3,f
  4627  0CBC  0BA0               	decfsz	??___aldiv,f
  4628  0CBD  2CB7               	goto	u1005
  4629  0CBE  3001               	movlw	1
  4630  0CBF  00A0               	movwf	??___aldiv
  4631  0CC0  0820               	movf	??___aldiv,w
  4632  0CC1  07A1               	addwf	___aldiv@counter,f
  4633  0CC2                     l1351:
  4634  0CC2  1FF6               	btfss	___aldiv@divisor+3,7
  4635  0CC3  2CC5               	goto	u1011
  4636  0CC4  2CC6               	goto	u1010
  4637  0CC5                     u1011:
  4638  0CC5  2CB5               	goto	l1349
  4639  0CC6                     u1010:
  4640  0CC6                     l1353:
  4641  0CC6  3001               	movlw	1
  4642  0CC7  00A0               	movwf	??___aldiv
  4643  0CC8                     u1025:
  4644  0CC8  1003               	clrc
  4645  0CC9  0DA3               	rlf	___aldiv@quotient,f
  4646  0CCA  0DA4               	rlf	___aldiv@quotient+1,f
  4647  0CCB  0DA5               	rlf	___aldiv@quotient+2,f
  4648  0CCC  0DA6               	rlf	___aldiv@quotient+3,f
  4649  0CCD  0BA0               	decfsz	??___aldiv,f
  4650  0CCE  2CC8               	goto	u1025
  4651  0CCF                     l1355:
  4652  0CCF  0876               	movf	___aldiv@divisor+3,w
  4653  0CD0  027A               	subwf	___aldiv@dividend+3,w
  4654  0CD1  1D03               	skipz
  4655  0CD2  2CDD               	goto	u1035
  4656  0CD3  0875               	movf	___aldiv@divisor+2,w
  4657  0CD4  0279               	subwf	___aldiv@dividend+2,w
  4658  0CD5  1D03               	skipz
  4659  0CD6  2CDD               	goto	u1035
  4660  0CD7  0874               	movf	___aldiv@divisor+1,w
  4661  0CD8  0278               	subwf	___aldiv@dividend+1,w
  4662  0CD9  1D03               	skipz
  4663  0CDA  2CDD               	goto	u1035
  4664  0CDB  0873               	movf	___aldiv@divisor,w
  4665  0CDC  0277               	subwf	___aldiv@dividend,w
  4666  0CDD                     u1035:
  4667  0CDD  1C03               	skipc
  4668  0CDE  2CE0               	goto	u1031
  4669  0CDF  2CE1               	goto	u1030
  4670  0CE0                     u1031:
  4671  0CE0  2CF0               	goto	l1361
  4672  0CE1                     u1030:
  4673  0CE1                     l1357:
  4674  0CE1  0873               	movf	___aldiv@divisor,w
  4675  0CE2  02F7               	subwf	___aldiv@dividend,f
  4676  0CE3  0874               	movf	___aldiv@divisor+1,w
  4677  0CE4  1C03               	skipc
  4678  0CE5  0F74               	incfsz	___aldiv@divisor+1,w
  4679  0CE6  02F8               	subwf	___aldiv@dividend+1,f
  4680  0CE7  0875               	movf	___aldiv@divisor+2,w
  4681  0CE8  1C03               	skipc
  4682  0CE9  0F75               	incfsz	___aldiv@divisor+2,w
  4683  0CEA  02F9               	subwf	___aldiv@dividend+2,f
  4684  0CEB  0876               	movf	___aldiv@divisor+3,w
  4685  0CEC  1C03               	skipc
  4686  0CED  0F76               	incfsz	___aldiv@divisor+3,w
  4687  0CEE  02FA               	subwf	___aldiv@dividend+3,f
  4688  0CEF                     l1359:
  4689  0CEF  1423               	bsf	___aldiv@quotient,0
  4690  0CF0                     l1361:
  4691  0CF0  3001               	movlw	1
  4692  0CF1                     u1045:
  4693  0CF1  1003               	clrc
  4694  0CF2  0CF6               	rrf	___aldiv@divisor+3,f
  4695  0CF3  0CF5               	rrf	___aldiv@divisor+2,f
  4696  0CF4  0CF4               	rrf	___aldiv@divisor+1,f
  4697  0CF5  0CF3               	rrf	___aldiv@divisor,f
  4698  0CF6  3EFF               	addlw	-1
  4699  0CF7  1D03               	skipz
  4700  0CF8  2CF1               	goto	u1045
  4701  0CF9                     l1363:
  4702  0CF9  3001               	movlw	1
  4703  0CFA  02A1               	subwf	___aldiv@counter,f
  4704  0CFB  1D03               	btfss	3,2
  4705  0CFC  2CFE               	goto	u1051
  4706  0CFD  2CFF               	goto	u1050
  4707  0CFE                     u1051:
  4708  0CFE  2CC6               	goto	l1353
  4709  0CFF                     u1050:
  4710  0CFF                     l1365:
  4711  0CFF  0822               	movf	___aldiv@sign,w
  4712  0D00  1903               	btfsc	3,2
  4713  0D01  2D03               	goto	u1061
  4714  0D02  2D04               	goto	u1060
  4715  0D03                     u1061:
  4716  0D03  2D0F               	goto	l1369
  4717  0D04                     u1060:
  4718  0D04                     l1367:
  4719  0D04  09A3               	comf	___aldiv@quotient,f
  4720  0D05  09A4               	comf	___aldiv@quotient+1,f
  4721  0D06  09A5               	comf	___aldiv@quotient+2,f
  4722  0D07  09A6               	comf	___aldiv@quotient+3,f
  4723  0D08  0AA3               	incf	___aldiv@quotient,f
  4724  0D09  1903               	skipnz
  4725  0D0A  0AA4               	incf	___aldiv@quotient+1,f
  4726  0D0B  1903               	skipnz
  4727  0D0C  0AA5               	incf	___aldiv@quotient+2,f
  4728  0D0D  1903               	skipnz
  4729  0D0E  0AA6               	incf	___aldiv@quotient+3,f
  4730  0D0F                     l1369:
  4731  0D0F  0826               	movf	___aldiv@quotient+3,w
  4732  0D10  00F6               	movwf	?___aldiv+3
  4733  0D11  0825               	movf	___aldiv@quotient+2,w
  4734  0D12  00F5               	movwf	?___aldiv+2
  4735  0D13  0824               	movf	___aldiv@quotient+1,w
  4736  0D14  00F4               	movwf	?___aldiv+1
  4737  0D15  0823               	movf	___aldiv@quotient,w
  4738  0D16  00F3               	movwf	?___aldiv
  4739  0D17                     l394:
  4740  0D17  0008               	return
  4741  0D18                     __end_of___aldiv:
  4742                           
  4743                           	psect	text13
  4744  0D18                     __ptext13:	
  4745 ;; *************** function _BMP280_begin *****************
  4746 ;; Defined at:
  4747 ;;		line 156 in file "BMP280.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  mode            1    wreg     enum E1304
  4750 ;;  T_sampling      1   10[BANK0 ] enum E1309
  4751 ;;  P_sampling      1   11[BANK0 ] enum E1309
  4752 ;;  filter          1   12[BANK0 ] enum E1317
  4753 ;;  standby         1   13[BANK0 ] enum E1324
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  mode            1   18[BANK0 ] enum E1304
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  2   10[BANK0 ] int 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0, pclath, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4765 ;;      Params:         0       4       0       0       0
  4766 ;;      Locals:         0       1       0       0       0
  4767 ;;      Temps:          0       4       0       0       0
  4768 ;;      Totals:         0       9       0       0       0
  4769 ;;Total ram usage:        9 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    6
  4772 ;; This function calls:
  4773 ;;		_BMP280_Configure
  4774 ;;		_BMP280_Read16
  4775 ;;		_BMP280_Read8
  4776 ;;		_BMP280_Write
  4777 ;; This function is called by:
  4778 ;;		_main
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _BMP280_begin
  4784  0D18                     _BMP280_begin:
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  4788                           ;BMP280_begin@mode stored from wreg
  4789  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0D1A  00B2               	movwf	BMP280_begin@mode
  4792  0D1B                     l1377:
  4793                           
  4794                           ;BMP280.c: 156: int BMP280_begin(BMP280_mode mode,;BMP280.c: 157:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 158:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 159:                   BMP280_filter filter ,;BMP280.c: 160:                   
      +                          standby_time standby );BMP280.c: 161: {;BMP280.c: 162:   if(BMP280_Read8(0xD0) != 0x58)
  4795  0D1B  30D0               	movlw	208
  4796  0D1C  120A  158A  22C7  120A  158A  	fcall	_BMP280_Read8
  4797  0D21  3A58               	xorlw	88
  4798  0D22  1903               	skipnz
  4799  0D23  2D25               	goto	u1071
  4800  0D24  2D26               	goto	u1070
  4801  0D25                     u1071:
  4802  0D25  2D27               	goto	l1381
  4803  0D26                     u1070:
  4804  0D26  2DF5               	goto	l174
  4805  0D27                     l1381:
  4806                           
  4807                           ;BMP280.c: 166:   BMP280_Write(0xE0, 0xB6);
  4808  0D27  30B6               	movlw	182
  4809  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  4811  0D2A  00AE               	movwf	??_BMP280_begin
  4812  0D2B  082E               	movf	??_BMP280_begin,w
  4813  0D2C  00F5               	movwf	BMP280_Write@_data
  4814  0D2D  30E0               	movlw	224
  4815  0D2E  120A  158A  2234  120A  158A  	fcall	_BMP280_Write
  4816  0D33                     l1383:
  4817                           
  4818                           ;BMP280.c: 167:   _delay((unsigned long)((100)*(8000000/4000.0)));
  4819  0D33  3002               	movlw	2
  4820  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  4821  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  4822  0D36  00B0               	movwf	??_BMP280_begin+2
  4823  0D37  3004               	movlw	4
  4824  0D38  00AF               	movwf	??_BMP280_begin+1
  4825  0D39  30B9               	movlw	185
  4826  0D3A  00AE               	movwf	??_BMP280_begin
  4827  0D3B                     u1407:
  4828  0D3B  0BAE               	decfsz	??_BMP280_begin,f
  4829  0D3C  2D3B               	goto	u1407
  4830  0D3D  0BAF               	decfsz	??_BMP280_begin+1,f
  4831  0D3E  2D3B               	goto	u1407
  4832  0D3F  0BB0               	decfsz	??_BMP280_begin+2,f
  4833  0D40  2D3B               	goto	u1407
  4834  0D41  2D42               	nop2
  4835  0D42                     l1387:	
  4836                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  4837                           
  4838                           
  4839                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  4840  0D42  30F3               	movlw	243
  4841  0D43  120A  158A  22C7  120A  158A  	fcall	_BMP280_Read8
  4842  0D48  3901               	andlw	1
  4843  0D49  1D03               	btfss	3,2
  4844  0D4A  2D4C               	goto	u1081
  4845  0D4B  2D4D               	goto	u1080
  4846  0D4C                     u1081:
  4847  0D4C  2D33               	goto	l1383
  4848  0D4D                     u1080:
  4849  0D4D                     l1389:
  4850                           
  4851                           ;BMP280.c: 173:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  4852  0D4D  3088               	movlw	136
  4853  0D4E  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4854  0D53  087A               	movf	?_BMP280_Read16+1,w
  4855  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  4856  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  4857  0D56  00AD               	movwf	(_BMP280_calib+1)^(0+128)
  4858  0D57  0879               	movf	?_BMP280_Read16,w
  4859  0D58  00AC               	movwf	_BMP280_calib^(0+128)
  4860                           
  4861                           ;BMP280.c: 174:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  4862  0D59  308A               	movlw	138
  4863  0D5A  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4864  0D5F  087A               	movf	?_BMP280_Read16+1,w
  4865  0D60  1683               	bsf	3,5	;RP0=1, select bank1
  4866  0D61  1303               	bcf	3,6	;RP1=0, select bank1
  4867  0D62  00AF               	movwf	((_BMP280_calib+1)^(0+128)+2)
  4868  0D63  0879               	movf	?_BMP280_Read16,w
  4869  0D64  00AE               	movwf	(_BMP280_calib^(0+128)+2)
  4870                           
  4871                           ;BMP280.c: 175:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  4872  0D65  308C               	movlw	140
  4873  0D66  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4874  0D6B  087A               	movf	?_BMP280_Read16+1,w
  4875  0D6C  1683               	bsf	3,5	;RP0=1, select bank1
  4876  0D6D  1303               	bcf	3,6	;RP1=0, select bank1
  4877  0D6E  00B1               	movwf	((_BMP280_calib+1)^(0+128)+4)
  4878  0D6F  0879               	movf	?_BMP280_Read16,w
  4879  0D70  00B0               	movwf	(_BMP280_calib^(0+128)+4)
  4880                           
  4881                           ;BMP280.c: 177:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  4882  0D71  308E               	movlw	142
  4883  0D72  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4884  0D77  087A               	movf	?_BMP280_Read16+1,w
  4885  0D78  1683               	bsf	3,5	;RP0=1, select bank1
  4886  0D79  1303               	bcf	3,6	;RP1=0, select bank1
  4887  0D7A  00B3               	movwf	((_BMP280_calib+1)^(0+128)+6)
  4888  0D7B  0879               	movf	?_BMP280_Read16,w
  4889  0D7C  00B2               	movwf	(_BMP280_calib^(0+128)+6)
  4890                           
  4891                           ;BMP280.c: 178:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  4892  0D7D  3090               	movlw	144
  4893  0D7E  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4894  0D83  087A               	movf	?_BMP280_Read16+1,w
  4895  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  4896  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  4897  0D86  00B5               	movwf	((_BMP280_calib+1)^(0+128)+8)
  4898  0D87  0879               	movf	?_BMP280_Read16,w
  4899  0D88  00B4               	movwf	(_BMP280_calib^(0+128)+8)
  4900                           
  4901                           ;BMP280.c: 179:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  4902  0D89  3092               	movlw	146
  4903  0D8A  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4904  0D8F  087A               	movf	?_BMP280_Read16+1,w
  4905  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  4906  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  4907  0D92  00B7               	movwf	((_BMP280_calib+1)^(0+128)+10)
  4908  0D93  0879               	movf	?_BMP280_Read16,w
  4909  0D94  00B6               	movwf	(_BMP280_calib^(0+128)+10)
  4910                           
  4911                           ;BMP280.c: 180:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  4912  0D95  3094               	movlw	148
  4913  0D96  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4914  0D9B  087A               	movf	?_BMP280_Read16+1,w
  4915  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  4916  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  4917  0D9E  00B9               	movwf	((_BMP280_calib+1)^(0+128)+12)
  4918  0D9F  0879               	movf	?_BMP280_Read16,w
  4919  0DA0  00B8               	movwf	(_BMP280_calib^(0+128)+12)
  4920                           
  4921                           ;BMP280.c: 181:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  4922  0DA1  3096               	movlw	150
  4923  0DA2  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4924  0DA7  087A               	movf	?_BMP280_Read16+1,w
  4925  0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  4926  0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  4927  0DAA  00BB               	movwf	((_BMP280_calib+1)^(0+128)+14)
  4928  0DAB  0879               	movf	?_BMP280_Read16,w
  4929  0DAC  00BA               	movwf	(_BMP280_calib^(0+128)+14)
  4930                           
  4931                           ;BMP280.c: 182:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  4932  0DAD  3098               	movlw	152
  4933  0DAE  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4934  0DB3  087A               	movf	?_BMP280_Read16+1,w
  4935  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  4936  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  4937  0DB6  00BD               	movwf	((_BMP280_calib+1)^(0+128)+16)
  4938  0DB7  0879               	movf	?_BMP280_Read16,w
  4939  0DB8  00BC               	movwf	(_BMP280_calib^(0+128)+16)
  4940                           
  4941                           ;BMP280.c: 183:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  4942  0DB9  309A               	movlw	154
  4943  0DBA  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4944  0DBF  087A               	movf	?_BMP280_Read16+1,w
  4945  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  4946  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  4947  0DC2  00BF               	movwf	((_BMP280_calib+1)^(0+128)+18)
  4948  0DC3  0879               	movf	?_BMP280_Read16,w
  4949  0DC4  00BE               	movwf	(_BMP280_calib^(0+128)+18)
  4950                           
  4951                           ;BMP280.c: 184:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  4952  0DC5  309C               	movlw	156
  4953  0DC6  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4954  0DCB  087A               	movf	?_BMP280_Read16+1,w
  4955  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  4956  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  4957  0DCE  00C1               	movwf	((_BMP280_calib+1)^(0+128)+20)
  4958  0DCF  0879               	movf	?_BMP280_Read16,w
  4959  0DD0  00C0               	movwf	(_BMP280_calib^(0+128)+20)
  4960                           
  4961                           ;BMP280.c: 185:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  4962  0DD1  309E               	movlw	158
  4963  0DD2  120A  158A  239B  120A  158A  	fcall	_BMP280_Read16
  4964  0DD7  087A               	movf	?_BMP280_Read16+1,w
  4965  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  4966  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  4967  0DDA  00C3               	movwf	((_BMP280_calib+1)^(0+128)+22)
  4968  0DDB  0879               	movf	?_BMP280_Read16,w
  4969  0DDC  00C2               	movwf	(_BMP280_calib^(0+128)+22)
  4970                           
  4971                           ;BMP280.c: 187:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  4972  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  4973  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  4974  0DDF  082A               	movf	BMP280_begin@T_sampling,w
  4975  0DE0  00AE               	movwf	??_BMP280_begin
  4976  0DE1  082E               	movf	??_BMP280_begin,w
  4977  0DE2  00A0               	movwf	BMP280_Configure@T_sampling
  4978  0DE3  082B               	movf	BMP280_begin@P_sampling,w
  4979  0DE4  00AF               	movwf	??_BMP280_begin+1
  4980  0DE5  082F               	movf	??_BMP280_begin+1,w
  4981  0DE6  00A1               	movwf	BMP280_Configure@P_sampling
  4982  0DE7  082C               	movf	BMP280_begin@filter,w
  4983  0DE8  00B0               	movwf	??_BMP280_begin+2
  4984  0DE9  0830               	movf	??_BMP280_begin+2,w
  4985  0DEA  00A2               	movwf	BMP280_Configure@filter
  4986  0DEB  082D               	movf	BMP280_begin@standby,w
  4987  0DEC  00B1               	movwf	??_BMP280_begin+3
  4988  0DED  0831               	movf	??_BMP280_begin+3,w
  4989  0DEE  00A3               	movwf	BMP280_Configure@standby
  4990  0DEF  0832               	movf	BMP280_begin@mode,w
  4991  0DF0  120A  158A  230B  120A  158A  	fcall	_BMP280_Configure
  4992  0DF5                     l174:
  4993  0DF5  0008               	return
  4994  0DF6                     __end_of_BMP280_begin:
  4995                           
  4996                           	psect	text14
  4997  0AC7                     __ptext14:	
  4998 ;; *************** function _BMP280_Read8 *****************
  4999 ;; Defined at:
  5000 ;;		line 106 in file "BMP280.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  reg_addr        1    wreg     unsigned char 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  reg_addr        1    0[BANK0 ] unsigned char 
  5005 ;;  ret             1    1[BANK0 ] unsigned char 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      unsigned char 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0, pclath, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5015 ;;      Params:         0       0       0       0       0
  5016 ;;      Locals:         0       2       0       0       0
  5017 ;;      Temps:          2       0       0       0       0
  5018 ;;      Totals:         2       2       0       0       0
  5019 ;;Total ram usage:        4 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    4
  5022 ;; This function calls:
  5023 ;;		_I2C_Master_Read
  5024 ;;		_I2C_Master_Start
  5025 ;;		_I2C_Master_Stop
  5026 ;;		_I2C_Master_Write
  5027 ;; This function is called by:
  5028 ;;		_BMP280_begin
  5029 ;;		_BMP280_ForcedMeasurement
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _BMP280_Read8
  5035  0AC7                     _BMP280_Read8:
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  5039                           ;BMP280_Read8@reg_addr stored from wreg
  5040  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  5041  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  5042  0AC9  00A0               	movwf	BMP280_Read8@reg_addr
  5043  0ACA                     l1257:
  5044                           
  5045                           ;BMP280.c: 106: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 107: {;BMP280.c: 108:  
      +                           uint8_t ret;;BMP280.c: 110:   I2C_Master_Start();
  5046  0ACA  120A  158A  2188  120A  158A  	fcall	_I2C_Master_Start
  5047                           
  5048                           ;BMP280.c: 111:   I2C_Master_Write( 0xEE);
  5049  0ACF  30EE               	movlw	238
  5050  0AD0  00F3               	movwf	I2C_Master_Write@d
  5051  0AD1  3000               	movlw	0
  5052  0AD2  00F4               	movwf	I2C_Master_Write@d+1
  5053  0AD3  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5054                           
  5055                           ;BMP280.c: 112:   I2C_Master_Write(reg_addr);
  5056  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  5057  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  5058  0ADA  0820               	movf	BMP280_Read8@reg_addr,w
  5059  0ADB  00F9               	movwf	??_BMP280_Read8
  5060  0ADC  01FA               	clrf	??_BMP280_Read8+1
  5061  0ADD  0879               	movf	??_BMP280_Read8,w
  5062  0ADE  00F3               	movwf	I2C_Master_Write@d
  5063  0ADF  087A               	movf	??_BMP280_Read8+1,w
  5064  0AE0  00F4               	movwf	I2C_Master_Write@d+1
  5065  0AE1  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5066                           
  5067                           ;BMP280.c: 113:   I2C_Master_Start();
  5068  0AE6  120A  158A  2188  120A  158A  	fcall	_I2C_Master_Start
  5069                           
  5070                           ;BMP280.c: 114:   I2C_Master_Write( 0xEE | 1);
  5071  0AEB  30EF               	movlw	239
  5072  0AEC  00F3               	movwf	I2C_Master_Write@d
  5073  0AED  3000               	movlw	0
  5074  0AEE  00F4               	movwf	I2C_Master_Write@d+1
  5075  0AEF  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5076                           
  5077                           ;BMP280.c: 115:   ret = I2C_Master_Read(0);
  5078  0AF4  3000               	movlw	0
  5079  0AF5  00F3               	movwf	I2C_Master_Read@a
  5080  0AF6  00F4               	movwf	I2C_Master_Read@a+1
  5081  0AF7  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  5082  0AFC  0873               	movf	?_I2C_Master_Read,w
  5083  0AFD  00F9               	movwf	??_BMP280_Read8
  5084  0AFE  0879               	movf	??_BMP280_Read8,w
  5085  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0B01  00A1               	movwf	BMP280_Read8@ret
  5088                           
  5089                           ;BMP280.c: 116:   I2C_Master_Stop();
  5090  0B02  120A  158A  2191  120A  158A  	fcall	_I2C_Master_Stop
  5091  0B07                     l1259:
  5092                           
  5093                           ;BMP280.c: 118:   return ret;
  5094  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5095  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5096  0B09  0821               	movf	BMP280_Read8@ret,w
  5097  0B0A                     l164:
  5098  0B0A  0008               	return
  5099  0B0B                     __end_of_BMP280_Read8:
  5100                           
  5101                           	psect	text15
  5102  0B9B                     __ptext15:	
  5103 ;; *************** function _BMP280_Read16 *****************
  5104 ;; Defined at:
  5105 ;;		line 122 in file "BMP280.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  reg_addr        1    wreg     unsigned char 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  reg_addr        1    2[BANK0 ] unsigned char 
  5110 ;;  ret             2    3[BANK0 ] struct .
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  2    9[COMMON] unsigned int 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0, pclath, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5120 ;;      Params:         2       0       0       0       0
  5121 ;;      Locals:         0       3       0       0       0
  5122 ;;      Temps:          0       2       0       0       0
  5123 ;;      Totals:         2       5       0       0       0
  5124 ;;Total ram usage:        7 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    4
  5127 ;; This function calls:
  5128 ;;		_I2C_Master_Read
  5129 ;;		_I2C_Master_Start
  5130 ;;		_I2C_Master_Stop
  5131 ;;		_I2C_Master_Write
  5132 ;; This function is called by:
  5133 ;;		_BMP280_begin
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           
  5138                           ;psect for function _BMP280_Read16
  5139  0B9B                     _BMP280_Read16:
  5140                           
  5141                           ;incstack = 0
  5142                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  5143                           ;BMP280_Read16@reg_addr stored from wreg
  5144  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  5145  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  5146  0B9D  00A2               	movwf	BMP280_Read16@reg_addr
  5147  0B9E                     l1263:
  5148                           
  5149                           ;BMP280.c: 122: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 123: {;BMP280.c: 128:
      +                             } ret;;BMP280.c: 130:   I2C_Master_Start();
  5150  0B9E  120A  158A  2188  120A  158A  	fcall	_I2C_Master_Start
  5151                           
  5152                           ;BMP280.c: 131:   I2C_Master_Write( 0xEE);
  5153  0BA3  30EE               	movlw	238
  5154  0BA4  00F3               	movwf	I2C_Master_Write@d
  5155  0BA5  3000               	movlw	0
  5156  0BA6  00F4               	movwf	I2C_Master_Write@d+1
  5157  0BA7  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5158                           
  5159                           ;BMP280.c: 132:   I2C_Master_Write(reg_addr);
  5160  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0BAE  0822               	movf	BMP280_Read16@reg_addr,w
  5163  0BAF  00A0               	movwf	??_BMP280_Read16
  5164  0BB0  01A1               	clrf	??_BMP280_Read16+1
  5165  0BB1  0820               	movf	??_BMP280_Read16,w
  5166  0BB2  00F3               	movwf	I2C_Master_Write@d
  5167  0BB3  0821               	movf	??_BMP280_Read16+1,w
  5168  0BB4  00F4               	movwf	I2C_Master_Write@d+1
  5169  0BB5  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5170                           
  5171                           ;BMP280.c: 133:   I2C_Master_Start();
  5172  0BBA  120A  158A  2188  120A  158A  	fcall	_I2C_Master_Start
  5173                           
  5174                           ;BMP280.c: 134:   I2C_Master_Write(0xEE | 1);
  5175  0BBF  30EF               	movlw	239
  5176  0BC0  00F3               	movwf	I2C_Master_Write@d
  5177  0BC1  3000               	movlw	0
  5178  0BC2  00F4               	movwf	I2C_Master_Write@d+1
  5179  0BC3  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5180                           
  5181                           ;BMP280.c: 135:   ret.b[0] = I2C_Master_Read( 1);
  5182  0BC8  3001               	movlw	1
  5183  0BC9  00F3               	movwf	I2C_Master_Read@a
  5184  0BCA  3000               	movlw	0
  5185  0BCB  00F4               	movwf	I2C_Master_Read@a+1
  5186  0BCC  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  5187  0BD1  0873               	movf	?_I2C_Master_Read,w
  5188  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  5189  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  5190  0BD4  00A0               	movwf	??_BMP280_Read16
  5191  0BD5  0820               	movf	??_BMP280_Read16,w
  5192  0BD6  00A3               	movwf	BMP280_Read16@ret
  5193                           
  5194                           ;BMP280.c: 136:   ret.b[1] = I2C_Master_Read( 0);
  5195  0BD7  3000               	movlw	0
  5196  0BD8  00F3               	movwf	I2C_Master_Read@a
  5197  0BD9  00F4               	movwf	I2C_Master_Read@a+1
  5198  0BDA  120A  158A  2261  120A  158A  	fcall	_I2C_Master_Read
  5199  0BDF  0873               	movf	?_I2C_Master_Read,w
  5200  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  5201  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  5202  0BE2  00A0               	movwf	??_BMP280_Read16
  5203  0BE3  0820               	movf	??_BMP280_Read16,w
  5204  0BE4  00A4               	movwf	BMP280_Read16@ret+1
  5205                           
  5206                           ;BMP280.c: 137:   I2C_Master_Stop();
  5207  0BE5  120A  158A  2191  120A  158A  	fcall	_I2C_Master_Stop
  5208  0BEA                     l1265:
  5209                           
  5210                           ;BMP280.c: 139:   return(ret.w);
  5211  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  5212  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  5213  0BEC  0824               	movf	BMP280_Read16@ret+1,w
  5214  0BED  00FA               	movwf	?_BMP280_Read16+1
  5215  0BEE  0823               	movf	BMP280_Read16@ret,w
  5216  0BEF  00F9               	movwf	?_BMP280_Read16
  5217  0BF0                     l167:
  5218  0BF0  0008               	return
  5219  0BF1                     __end_of_BMP280_Read16:
  5220                           
  5221                           	psect	text16
  5222  0A61                     __ptext16:	
  5223 ;; *************** function _I2C_Master_Read *****************
  5224 ;; Defined at:
  5225 ;;		line 75 in file "I2C.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  a               2    3[COMMON] unsigned short 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  temp1           2    7[COMMON] unsigned short 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  2    3[COMMON] unsigned short 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, pclath, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5239 ;;      Params:         2       0       0       0       0
  5240 ;;      Locals:         2       0       0       0       0
  5241 ;;      Temps:          2       0       0       0       0
  5242 ;;      Totals:         6       0       0       0       0
  5243 ;;Total ram usage:        6 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    3
  5246 ;; This function calls:
  5247 ;;		_I2C_Master_Wait
  5248 ;; This function is called by:
  5249 ;;		_BMP280_Read8
  5250 ;;		_BMP280_Read16
  5251 ;;		_BMP280_Update
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _I2C_Master_Read
  5257  0A61                     _I2C_Master_Read:
  5258  0A61                     l1199:	
  5259                           ;incstack = 0
  5260                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5261                           
  5262                           
  5263                           ;I2C.c: 76:     unsigned short temp1;;I2C.c: 77:     I2C_Master_Wait();
  5264  0A61  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5265  0A66                     l1201:
  5266                           
  5267                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5268  0A66  1683               	bsf	3,5	;RP0=1, select bank1
  5269  0A67  1303               	bcf	3,6	;RP1=0, select bank1
  5270  0A68  1591               	bsf	17,3	;volatile
  5271                           
  5272                           ;I2C.c: 79:     I2C_Master_Wait();
  5273  0A69  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5274  0A6E                     l1203:
  5275                           
  5276                           ;I2C.c: 80:     temp1 = SSPBUF;
  5277  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  5278  0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  5279  0A70  0813               	movf	19,w	;volatile
  5280  0A71  00F5               	movwf	??_I2C_Master_Read
  5281  0A72  01F6               	clrf	??_I2C_Master_Read+1
  5282  0A73  0875               	movf	??_I2C_Master_Read,w
  5283  0A74  00F7               	movwf	I2C_Master_Read@temp1
  5284  0A75  0876               	movf	??_I2C_Master_Read+1,w
  5285  0A76  00F8               	movwf	I2C_Master_Read@temp1+1
  5286  0A77                     l1205:
  5287                           
  5288                           ;I2C.c: 81:     I2C_Master_Wait();
  5289  0A77  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5290  0A7C                     l1207:
  5291                           
  5292                           ;I2C.c: 82:     if (a == 1) {
  5293  0A7C  0373               	decf	I2C_Master_Read@a,w
  5294  0A7D  0474               	iorwf	I2C_Master_Read@a+1,w
  5295  0A7E  1D03               	btfss	3,2
  5296  0A7F  2A81               	goto	u721
  5297  0A80  2A82               	goto	u720
  5298  0A81                     u721:
  5299  0A81  2A86               	goto	l135
  5300  0A82                     u720:
  5301  0A82                     l1209:
  5302                           
  5303                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5304  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  5305  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  5306  0A84  1291               	bcf	17,5	;volatile
  5307                           
  5308                           ;I2C.c: 84:     } else {
  5309  0A85  2A89               	goto	l136
  5310  0A86                     l135:
  5311                           
  5312                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5313  0A86  1683               	bsf	3,5	;RP0=1, select bank1
  5314  0A87  1303               	bcf	3,6	;RP1=0, select bank1
  5315  0A88  1691               	bsf	17,5	;volatile
  5316  0A89                     l136:	
  5317                           ;I2C.c: 86:     }
  5318                           
  5319                           
  5320                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5321  0A89  1611               	bsf	17,4	;volatile
  5322  0A8A                     l1211:
  5323                           
  5324                           ;I2C.c: 88:     return temp1;
  5325  0A8A  0878               	movf	I2C_Master_Read@temp1+1,w
  5326  0A8B  00F4               	movwf	?_I2C_Master_Read+1
  5327  0A8C  0877               	movf	I2C_Master_Read@temp1,w
  5328  0A8D  00F3               	movwf	?_I2C_Master_Read
  5329  0A8E                     l137:
  5330  0A8E  0008               	return
  5331  0A8F                     __end_of_I2C_Master_Read:
  5332                           
  5333                           	psect	text17
  5334  0B0B                     __ptext17:	
  5335 ;; *************** function _BMP280_Configure *****************
  5336 ;; Defined at:
  5337 ;;		line 143 in file "BMP280.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  mode            1    wreg     enum E1304
  5340 ;;  T_sampling      1    0[BANK0 ] enum E1309
  5341 ;;  P_sampling      1    1[BANK0 ] enum E1309
  5342 ;;  filter          1    2[BANK0 ] enum E1317
  5343 ;;  standby         1    3[BANK0 ] enum E1324
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  mode            1    7[BANK0 ] enum E1304
  5346 ;;  _config         1    9[BANK0 ] unsigned char 
  5347 ;;  _ctrl_meas      1    8[BANK0 ] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, pclath, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5357 ;;      Params:         0       4       0       0       0
  5358 ;;      Locals:         0       3       0       0       0
  5359 ;;      Temps:          0       3       0       0       0
  5360 ;;      Totals:         0      10       0       0       0
  5361 ;;Total ram usage:       10 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    5
  5364 ;; This function calls:
  5365 ;;		_BMP280_Write
  5366 ;; This function is called by:
  5367 ;;		_BMP280_begin
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           
  5372                           ;psect for function _BMP280_Configure
  5373  0B0B                     _BMP280_Configure:
  5374                           
  5375                           ;incstack = 0
  5376                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  5377                           ;BMP280_Configure@mode stored from wreg
  5378  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  5379  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  5380  0B0D  00A7               	movwf	BMP280_Configure@mode
  5381  0B0E                     l1269:
  5382                           
  5383                           ;BMP280.c: 143: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 144:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 145: {;BMP280.c: 146:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 148:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  5384  0B0E  0822               	movf	BMP280_Configure@filter,w
  5385  0B0F  00A4               	movwf	??_BMP280_Configure
  5386  0B10  3002               	movlw	2
  5387  0B11                     u825:
  5388  0B11  1003               	clrc
  5389  0B12  0DA4               	rlf	??_BMP280_Configure,f
  5390  0B13  3EFF               	addlw	-1
  5391  0B14  1D03               	skipz
  5392  0B15  2B11               	goto	u825
  5393  0B16  0823               	movf	BMP280_Configure@standby,w
  5394  0B17  00A5               	movwf	??_BMP280_Configure+1
  5395  0B18  3004               	movlw	4
  5396  0B19                     u835:
  5397  0B19  1003               	clrc
  5398  0B1A  0DA5               	rlf	??_BMP280_Configure+1,f
  5399  0B1B  3EFF               	addlw	-1
  5400  0B1C  1D03               	skipz
  5401  0B1D  2B19               	goto	u835
  5402  0B1E  1003               	clrc
  5403  0B1F  0D25               	rlf	??_BMP280_Configure+1,w
  5404  0B20  0424               	iorwf	??_BMP280_Configure,w
  5405  0B21  39FC               	andlw	252
  5406  0B22  00A6               	movwf	??_BMP280_Configure+2
  5407  0B23  0826               	movf	??_BMP280_Configure+2,w
  5408  0B24  00A9               	movwf	BMP280_Configure@_config
  5409                           
  5410                           ;BMP280.c: 149:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  5411  0B25  0821               	movf	BMP280_Configure@P_sampling,w
  5412  0B26  00A4               	movwf	??_BMP280_Configure
  5413  0B27  3002               	movlw	2
  5414  0B28                     u845:
  5415  0B28  1003               	clrc
  5416  0B29  0DA4               	rlf	??_BMP280_Configure,f
  5417  0B2A  3EFF               	addlw	-1
  5418  0B2B  1D03               	skipz
  5419  0B2C  2B28               	goto	u845
  5420  0B2D  0820               	movf	BMP280_Configure@T_sampling,w
  5421  0B2E  00A5               	movwf	??_BMP280_Configure+1
  5422  0B2F  3004               	movlw	4
  5423  0B30                     u855:
  5424  0B30  1003               	clrc
  5425  0B31  0DA5               	rlf	??_BMP280_Configure+1,f
  5426  0B32  3EFF               	addlw	-1
  5427  0B33  1D03               	skipz
  5428  0B34  2B30               	goto	u855
  5429  0B35  1003               	clrc
  5430  0B36  0D25               	rlf	??_BMP280_Configure+1,w
  5431  0B37  0424               	iorwf	??_BMP280_Configure,w
  5432  0B38  0427               	iorwf	BMP280_Configure@mode,w
  5433  0B39  00A6               	movwf	??_BMP280_Configure+2
  5434  0B3A  0826               	movf	??_BMP280_Configure+2,w
  5435  0B3B  00A8               	movwf	BMP280_Configure@_ctrl_meas
  5436  0B3C                     l1271:
  5437                           
  5438                           ;BMP280.c: 151:   BMP280_Write(0xF5, _config);
  5439  0B3C  0829               	movf	BMP280_Configure@_config,w
  5440  0B3D  00A4               	movwf	??_BMP280_Configure
  5441  0B3E  0824               	movf	??_BMP280_Configure,w
  5442  0B3F  00F5               	movwf	BMP280_Write@_data
  5443  0B40  30F5               	movlw	245
  5444  0B41  120A  158A  2234  120A  158A  	fcall	_BMP280_Write
  5445  0B46                     l1273:
  5446                           
  5447                           ;BMP280.c: 152:   BMP280_Write(0xF4, _ctrl_meas);
  5448  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  5449  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  5450  0B48  0828               	movf	BMP280_Configure@_ctrl_meas,w
  5451  0B49  00A4               	movwf	??_BMP280_Configure
  5452  0B4A  0824               	movf	??_BMP280_Configure,w
  5453  0B4B  00F5               	movwf	BMP280_Write@_data
  5454  0B4C  30F4               	movlw	244
  5455  0B4D  120A  158A  2234  120A  158A  	fcall	_BMP280_Write
  5456  0B52                     l170:
  5457  0B52  0008               	return
  5458  0B53                     __end_of_BMP280_Configure:
  5459                           
  5460                           	psect	text18
  5461  0A34                     __ptext18:	
  5462 ;; *************** function _BMP280_Write *****************
  5463 ;; Defined at:
  5464 ;;		line 96 in file "BMP280.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  reg_addr        1    wreg     unsigned char 
  5467 ;;  _data           1    5[COMMON] unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  reg_addr        1    8[COMMON] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0, pclath, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5479 ;;      Params:         1       0       0       0       0
  5480 ;;      Locals:         1       0       0       0       0
  5481 ;;      Temps:          2       0       0       0       0
  5482 ;;      Totals:         4       0       0       0       0
  5483 ;;Total ram usage:        4 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    4
  5486 ;; This function calls:
  5487 ;;		_I2C_Master_Start
  5488 ;;		_I2C_Master_Stop
  5489 ;;		_I2C_Master_Write
  5490 ;; This function is called by:
  5491 ;;		_BMP280_Configure
  5492 ;;		_BMP280_begin
  5493 ;;		_BMP280_ForcedMeasurement
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _BMP280_Write
  5499  0A34                     _BMP280_Write:
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  5503                           ;BMP280_Write@reg_addr stored from wreg
  5504  0A34  00F8               	movwf	BMP280_Write@reg_addr
  5505  0A35                     l1215:
  5506                           
  5507                           ;BMP280.c: 96: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 97: {;BMP280
      +                          .c: 98:   I2C_Master_Start();
  5508  0A35  120A  158A  2188  120A  158A  	fcall	_I2C_Master_Start
  5509                           
  5510                           ;BMP280.c: 99:   I2C_Master_Write(0xEE);
  5511  0A3A  30EE               	movlw	238
  5512  0A3B  00F3               	movwf	I2C_Master_Write@d
  5513  0A3C  3000               	movlw	0
  5514  0A3D  00F4               	movwf	I2C_Master_Write@d+1
  5515  0A3E  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5516                           
  5517                           ;BMP280.c: 100:   I2C_Master_Write (reg_addr);
  5518  0A43  0878               	movf	BMP280_Write@reg_addr,w
  5519  0A44  00F6               	movwf	??_BMP280_Write
  5520  0A45  01F7               	clrf	??_BMP280_Write+1
  5521  0A46  0876               	movf	??_BMP280_Write,w
  5522  0A47  00F3               	movwf	I2C_Master_Write@d
  5523  0A48  0877               	movf	??_BMP280_Write+1,w
  5524  0A49  00F4               	movwf	I2C_Master_Write@d+1
  5525  0A4A  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5526                           
  5527                           ;BMP280.c: 101:   I2C_Master_Write( _data);
  5528  0A4F  0875               	movf	BMP280_Write@_data,w
  5529  0A50  00F6               	movwf	??_BMP280_Write
  5530  0A51  01F7               	clrf	??_BMP280_Write+1
  5531  0A52  0876               	movf	??_BMP280_Write,w
  5532  0A53  00F3               	movwf	I2C_Master_Write@d
  5533  0A54  0877               	movf	??_BMP280_Write+1,w
  5534  0A55  00F4               	movwf	I2C_Master_Write@d+1
  5535  0A56  120A  158A  21A4  120A  158A  	fcall	_I2C_Master_Write
  5536                           
  5537                           ;BMP280.c: 102:   I2C_Master_Stop();
  5538  0A5B  120A  158A  2191  120A  158A  	fcall	_I2C_Master_Stop
  5539  0A60                     l161:
  5540  0A60  0008               	return
  5541  0A61                     __end_of_BMP280_Write:
  5542                           
  5543                           	psect	text19
  5544  09A4                     __ptext19:	
  5545 ;; *************** function _I2C_Master_Write *****************
  5546 ;; Defined at:
  5547 ;;		line 66 in file "I2C.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  d               2    3[COMMON] unsigned int 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;		None
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1    wreg      void 
  5554 ;; Registers used:
  5555 ;;		wreg, status,2, status,0, pclath, cstack
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5561 ;;      Params:         2       0       0       0       0
  5562 ;;      Locals:         0       0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0
  5564 ;;      Totals:         2       0       0       0       0
  5565 ;;Total ram usage:        2 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    3
  5568 ;; This function calls:
  5569 ;;		_I2C_Master_Wait
  5570 ;; This function is called by:
  5571 ;;		_BMP280_Write
  5572 ;;		_BMP280_Read8
  5573 ;;		_BMP280_Read16
  5574 ;;		_BMP280_Update
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _I2C_Master_Write
  5580  09A4                     _I2C_Master_Write:
  5581  09A4                     l1195:	
  5582                           ;incstack = 0
  5583                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5584                           
  5585                           
  5586                           ;I2C.c: 67:     I2C_Master_Wait();
  5587  09A4  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5588  09A9                     l1197:
  5589                           
  5590                           ;I2C.c: 68:     SSPBUF = d;
  5591  09A9  0873               	movf	I2C_Master_Write@d,w
  5592  09AA  1283               	bcf	3,5	;RP0=0, select bank0
  5593  09AB  1303               	bcf	3,6	;RP1=0, select bank0
  5594  09AC  0093               	movwf	19	;volatile
  5595  09AD                     l132:
  5596  09AD  0008               	return
  5597  09AE                     __end_of_I2C_Master_Write:
  5598                           
  5599                           	psect	text20
  5600  0991                     __ptext20:	
  5601 ;; *************** function _I2C_Master_Stop *****************
  5602 ;; Defined at:
  5603 ;;		line 56 in file "I2C.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0, pclath, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5617 ;;      Params:         0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0
  5620 ;;      Totals:         0       0       0       0       0
  5621 ;;Total ram usage:        0 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    3
  5624 ;; This function calls:
  5625 ;;		_I2C_Master_Wait
  5626 ;; This function is called by:
  5627 ;;		_BMP280_Write
  5628 ;;		_BMP280_Read8
  5629 ;;		_BMP280_Read16
  5630 ;;		_BMP280_Update
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function _I2C_Master_Stop
  5636  0991                     _I2C_Master_Stop:
  5637  0991                     l1191:	
  5638                           ;incstack = 0
  5639                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5640                           
  5641                           
  5642                           ;I2C.c: 57:     I2C_Master_Wait();
  5643  0991  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5644  0996                     l1193:
  5645                           
  5646                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5647  0996  1683               	bsf	3,5	;RP0=1, select bank1
  5648  0997  1303               	bcf	3,6	;RP1=0, select bank1
  5649  0998  1511               	bsf	17,2	;volatile
  5650  0999                     l129:
  5651  0999  0008               	return
  5652  099A                     __end_of_I2C_Master_Stop:
  5653                           
  5654                           	psect	text21
  5655  0988                     __ptext21:	
  5656 ;; *************** function _I2C_Master_Start *****************
  5657 ;; Defined at:
  5658 ;;		line 40 in file "I2C.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      void 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0, pclath, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5672 ;;      Params:         0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0
  5675 ;;      Totals:         0       0       0       0       0
  5676 ;;Total ram usage:        0 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    3
  5679 ;; This function calls:
  5680 ;;		_I2C_Master_Wait
  5681 ;; This function is called by:
  5682 ;;		_BMP280_Write
  5683 ;;		_BMP280_Read8
  5684 ;;		_BMP280_Read16
  5685 ;;		_BMP280_Update
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           
  5690                           ;psect for function _I2C_Master_Start
  5691  0988                     _I2C_Master_Start:
  5692  0988                     l1187:	
  5693                           ;incstack = 0
  5694                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5695                           
  5696                           
  5697                           ;I2C.c: 41:     I2C_Master_Wait();
  5698  0988  120A  118A  27EC  120A  158A  	fcall	_I2C_Master_Wait
  5699  098D                     l1189:
  5700                           
  5701                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  5702  098D  1683               	bsf	3,5	;RP0=1, select bank1
  5703  098E  1303               	bcf	3,6	;RP1=0, select bank1
  5704  098F  1411               	bsf	17,0	;volatile
  5705  0990                     l123:
  5706  0990  0008               	return
  5707  0991                     __end_of_I2C_Master_Start:
  5708                           
  5709                           	psect	text22
  5710  07EC                     __ptext22:	
  5711 ;; *************** function _I2C_Master_Wait *****************
  5712 ;; Defined at:
  5713 ;;		line 33 in file "I2C.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5727 ;;      Params:         0       0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0
  5730 ;;      Totals:         0       0       0       0       0
  5731 ;;Total ram usage:        0 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    2
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_I2C_Master_Start
  5738 ;;		_I2C_Master_Stop
  5739 ;;		_I2C_Master_Write
  5740 ;;		_I2C_Master_Read
  5741 ;;		_I2C_Master_RepeatedStart
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           
  5746                           ;psect for function _I2C_Master_Wait
  5747  07EC                     _I2C_Master_Wait:
  5748  07EC                     l1183:	
  5749                           ;incstack = 0
  5750                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5751                           
  5752  07EC                     l117:	
  5753                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5754                           
  5755  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  5756  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  5757  07EE  1914               	btfsc	20,2	;volatile
  5758  07EF  2FF1               	goto	u701
  5759  07F0  2FF2               	goto	u700
  5760  07F1                     u701:
  5761  07F1  2FEC               	goto	l117
  5762  07F2                     u700:
  5763  07F2                     l1185:
  5764  07F2  0811               	movf	17,w	;volatile
  5765  07F3  391F               	andlw	31
  5766  07F4  1D03               	btfss	3,2
  5767  07F5  2FF7               	goto	u711
  5768  07F6  2FF8               	goto	u710
  5769  07F7                     u711:
  5770  07F7  2FEC               	goto	l117
  5771  07F8                     u710:
  5772  07F8                     l120:
  5773  07F8  0008               	return
  5774  07F9                     __end_of_I2C_Master_Wait:
  5775                           
  5776                           	psect	text23
  5777  09B8                     __ptext23:	
  5778 ;; *************** function _isr *****************
  5779 ;; Defined at:
  5780 ;;		line 200 in file "mainm2.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;		None
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;		None
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      void 
  5787 ;; Registers used:
  5788 ;;		wreg, pclath, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5794 ;;      Params:         0       0       0       0       0
  5795 ;;      Locals:         0       0       0       0       0
  5796 ;;      Temps:          3       0       0       0       0
  5797 ;;      Totals:         3       0       0       0       0
  5798 ;;Total ram usage:        3 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    1
  5801 ;; This function calls:
  5802 ;;		_Receive_Data
  5803 ;; This function is called by:
  5804 ;;		Interrupt level 1
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           
  5809                           ;psect for function _isr
  5810  09B8                     _isr:
  5811  09B8                     i1l1475:
  5812                           
  5813                           ;mainm2.c: 201:     if (PIR1bits.RCIF == 1) {
  5814  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  5815  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  5816  09BA  1E8C               	btfss	12,5	;volatile
  5817  09BB  29BD               	goto	u136_21
  5818  09BC  29BE               	goto	u136_20
  5819  09BD                     u136_21:
  5820  09BD  29C9               	goto	i1l85
  5821  09BE                     u136_20:
  5822  09BE                     i1l1477:
  5823                           
  5824                           ;mainm2.c: 202:         RX = Receive_Data();
  5825  09BE  120A  158A  219A  120A  158A  	fcall	_Receive_Data
  5826  09C3  00F0               	movwf	??_isr
  5827  09C4  0870               	movf	??_isr,w
  5828  09C5  1283               	bcf	3,5	;RP0=0, select bank0
  5829  09C6  1303               	bcf	3,6	;RP1=0, select bank0
  5830  09C7  00E8               	movwf	_RX
  5831  09C8                     i1l1479:
  5832                           
  5833                           ;mainm2.c: 203:         PIR1bits.RCIF = 0;
  5834  09C8  128C               	bcf	12,5	;volatile
  5835  09C9                     i1l85:
  5836  09C9  0872               	movf	??_isr+2,w
  5837  09CA  008A               	movwf	10
  5838  09CB  0E71               	swapf	??_isr+1,w
  5839  09CC  0083               	movwf	3
  5840  09CD  0EFE               	swapf	btemp,f
  5841  09CE  0E7E               	swapf	btemp,w
  5842  09CF  0009               	retfie
  5843  09D0                     __end_of_isr:
  5844                           
  5845                           	psect	intentry
  5846  0004                     __pintentry:	
  5847                           ;incstack = 0
  5848                           ; Regs used in _isr: [wreg+pclath+cstack]
  5849                           
  5850  0004                     interrupt_function:
  5851  007E                     saved_w	set	btemp
  5852  0004  00FE               	movwf	btemp
  5853  0005  0E03               	swapf	3,w
  5854  0006  00F1               	movwf	??_isr+1
  5855  0007  080A               	movf	10,w
  5856  0008  00F2               	movwf	??_isr+2
  5857  0009  120A  158A  29B8   	ljmp	_isr
  5858                           
  5859                           	psect	text24
  5860  099A                     __ptext24:	
  5861 ;; *************** function _Receive_Data *****************
  5862 ;; Defined at:
  5863 ;;		line 28 in file "UART.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      unsigned char 
  5870 ;; Registers used:
  5871 ;;		wreg
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5877 ;;      Params:         0       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0
  5880 ;;      Totals:         0       0       0       0       0
  5881 ;;Total ram usage:        0 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_isr
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function _Receive_Data
  5892  099A                     _Receive_Data:
  5893  099A                     i1l1441:	
  5894                           ;incstack = 0
  5895                           ; Regs used in _Receive_Data: [wreg]
  5896                           
  5897                           
  5898                           ;UART.c: 29:     if (RCSTAbits.OERR) {
  5899  099A  1283               	bcf	3,5	;RP0=0, select bank0
  5900  099B  1303               	bcf	3,6	;RP1=0, select bank0
  5901  099C  1C98               	btfss	24,1	;volatile
  5902  099D  299F               	goto	u135_21
  5903  099E  29A0               	goto	u135_20
  5904  099F                     u135_21:
  5905  099F  29A2               	goto	i1l1445
  5906  09A0                     u135_20:
  5907  09A0                     i1l1443:
  5908                           
  5909                           ;UART.c: 30:         RCSTAbits.CREN = 0;
  5910  09A0  1218               	bcf	24,4	;volatile
  5911                           
  5912                           ;UART.c: 31:         RCSTAbits.CREN = 1;
  5913  09A1  1618               	bsf	24,4	;volatile
  5914  09A2                     i1l1445:
  5915                           
  5916                           ;UART.c: 34:     return RCREG;
  5917  09A2  081A               	movf	26,w	;volatile
  5918  09A3                     i1l233:
  5919  09A3  0008               	return
  5920  09A4                     __end_of_Receive_Data:
  5921  007E                     btemp	set	126	;btemp
  5922  007E                     wtemp0	set	126
  5923                           
  5924                           	psect	config
  5925                           
  5926                           ;Config register CONFIG1 @ 0x2007
  5927                           ;	Oscillator Selection bits
  5928                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5929                           ;	Watchdog Timer Enable bit
  5930                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5931                           ;	Power-up Timer Enable bit
  5932                           ;	PWRTE = OFF, PWRT disabled
  5933                           ;	RE3/MCLR pin function select bit
  5934                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  5935                           ;	Code Protection bit
  5936                           ;	CP = OFF, Program memory code protection is disabled
  5937                           ;	Data Code Protection bit
  5938                           ;	CPD = OFF, Data memory code protection is disabled
  5939                           ;	Brown Out Reset Selection bits
  5940                           ;	BOREN = ON, BOR enabled
  5941                           ;	Internal External Switchover bit
  5942                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5943                           ;	Fail-Safe Clock Monitor Enabled bit
  5944                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5945                           ;	Low Voltage Programming Enable bit
  5946                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5947                           ;	In-Circuit Debugger Mode bit
  5948                           ;	DEBUG = 0x1, unprogrammed default
  5949  2007                     	org	8199
  5950  2007  23F4               	dw	9204
  5951                           
  5952                           ;Config register CONFIG2 @ 0x2008
  5953                           ;	Brown-out Reset Selection bit
  5954                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5955                           ;	Flash Program Memory Self Write Enable bits
  5956                           ;	WRT = OFF, Write protection off
  5957  2008                     	org	8200
  5958  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     68      77
    BANK1            80      0      44
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Send_String@X	PTR unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK1[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK1[4]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _Send_Temp->___lldiv
    _Send_String->_Send_Data
    _BMP280_readTemperature->___aldiv
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___aldiv
    _BMP280_readPressure->___lldiv
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Read16
    _BMP280_begin->_BMP280_Read8
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Send_Temp->___lldiv
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   25924
                                             65 BANK0      3     3      0
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                          _Send_Data
                        _Send_String
                          _Send_Temp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1172
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4    1172
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _Send_Temp                                           10    10      0    1622
                                              6 BANK0     10    10      0
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          2     2      0     133
                                              4 COMMON     2     2      0
                          _Send_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Data                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             20 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7930
                                             20 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              7 BANK0     13     5      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8    1074
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                             10 BANK0      9     5      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              9 COMMON     2     2      0
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              9 COMMON     2     0      2
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              0 BANK0     10     6      4
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              5 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                       _Receive_Data
 ---------------------------------------------------------------------------------
 (7) _Receive_Data                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _Send_Data
   _Send_String
     _Send_Data
   _Send_Temp
     ___lldiv
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)
   _Receive_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      84       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     44      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2C       7       55.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      84      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 12 17:23:23 2021

               _BMP280_Configure 0B0B                                pc 0002                               l70 0C5D  
                             l65 0C55                               l67 0C57                               l76 0A0E  
                             l68 0C59                               l69 0C5B                               l79 0FFF  
                             _RX 0068                               fsr 0004              ___wmul@multiplicand 0075  
                            l120 07F8                              l114 0AC6                              l123 0990  
                            l132 09AD                              l220 09AF                              l117 07EC  
                            l135 0A86                              l223 09B7                              l136 0A89  
                            l129 0999                              l161 0A60                              l137 0A8E  
                            l321 0A33                              l170 0B52                              l164 0B0A  
                            l333 0B9A                              l229 09EE                              l174 0DF5  
                            l190 0783                              l167 0BF0                              l319 0A1B  
                            l194 054B                              l355 07EB                              l187 0ED4  
                            l196 03DD                              l384 0C8F                              l394 0D17  
                            _GIE 005F          BMP280_Configure@_config 0029                              u700 07F2  
                            u701 07F1                              u710 07F8                              u711 07F7  
                            u720 0A82                              u800 09B5                              u721 0A81  
                            u801 09B4                              u730 0796                              u810 0AA6  
                            u731 0795                              u750 07AA                              u910 0A2F  
                            u751 07A9                              u911 0A2E                              u815 0AA1  
                            u920 0B61                              u825 0B11                              u745 079B  
                            u921 0B60                              u905 0A23                              u770 07C5  
                            u835 0B19                              u771 07C4                              u931 0B6A  
                            u932 0B71                              u860 0E59                              u845 0B28  
                            u765 07AC                              u933 0B78                              u790 07E3  
                            u870 0EB7                              u855 0B30                              u791 07E2  
                            u775 07C1                              u960 0B92                              u880 0A15  
                            u785 07D5                              u961 0B91                              u945 0B7A  
                            u865 0E54                              u881 0A14                              u970 0C82  
                            u971 0C81                              u955 0B82                              u875 0EB2  
                            u980 0C93                              u981 0C92                              u990 0CB2  
                            u991 0CB1                              u895 0A1C                              _dec 006C  
                            _isr 09B8                              fsr0 0004                              _uni 006B  
                            indf 0000     __size_of_BMP280_readPressure 0528           BMP280_begin@P_sampling 002B  
                           l1201 0A66                             l1211 0A8A                             l1203 0A6E  
                           l1205 0A77                             l1221 0799                             l1301 0EA2  
                           l1215 0A35                             l1207 0A7C                             l1231 07D3  
                           l1223 07A6                             l1303 0EA7                             l1311 0A22  
                           l1209 0A82                             l1233 07D4                             l1225 07AA  
                           l1217 0784                             l1321 0B5D                             l1401 0027  
                           l1241 09AF                             l1313 0A29                             l1305 0A0F  
                           l1235 07DD                             l1227 07B3                             l1219 0796  
                           l1323 0B61                             l1411 0398                             l1403 02FA  
                           l1243 09B5                             l1315 0A2F                             l1307 0A11  
                           l1251 0AC3                             l1341 0C9E                             l1333 0C7B  
                           l1229 07C5                             l1237 07E3                             l1325 0B78  
                           l1413 03BB                             l1309 0A15                             l1421 0EED  
                           l1253 0AC4                             l1245 0A8F                             l1183 07EC  
                           l1191 0991                             l1271 0B3C                             l1263 0B9E  
                           l1351 0CC2                             l1343 0CA2                             l1335 0C7E  
                           l1327 0B81                             l1319 0B53                             l1415 053D  
                           l1407 0303                             l1431 0FBC                             l1423 0F08  
                           l1255 0AC5                             l1247 0A93                             l1185 07F2  
                           l1193 0996                             l1273 0B46                             l1265 0BEA  
                           l1257 0ACA                             l1361 0CF0                             l1353 0CC6  
                           l1345 0CAA                             l1337 0C82                             l1329 0B92  
                           l1409 0384                             l1281 0E07                             l1433 09D1  
                           l1425 0F47                             l1249 0A96                             l1187 0988  
                           l1195 09A4                             l1259 0B07                             l1363 0CF9  
                           l1355 0CCF                             l1347 0CB2                             l1339 0C93  
                           l1291 0E3C                             l1283 0E10                             l1275 0DF6  
                           l1435 09D2                             l1427 0F62                             l1419 0ED5  
                           l1451 0C04                             l1189 098D                             l1197 09A9  
                           l1269 0B0E                             l1381 0D27                             l1357 0CE1  
                           l1349 0CB5                             l1365 0CFF                             l1293 0E4B  
                           l1285 0E15                             l1277 0DF9                             l1437 09DE  
                           l1429 0FA1                             l1373 09EF                             l1517 0C6A  
                           l1461 0C2E                             l1453 0C13                             l1199 0A61  
                           l1383 0D33                             l1367 0D04                             l1359 0CEF  
                           l1295 0E76                             l1287 0E1E                             l1279 0DFE  
                           l1439 09E2                             l1375 09FF                             l1463 0C36  
                           l1455 0C17                             l1377 0D1B                             l1369 0D0F  
                           l1297 0E85                             l1289 0E2D                             l1393 054F  
                           l1465 0C3E                             l1457 0C1D                             l1449 0BF1  
                           l1387 0D42                             l1299 0E94                             l1395 06EA  
                           l1459 0C28                             l1389 0D4D                             l1397 071B  
                           l1469 0C60                             ?_isr 0070                             STR_1 0808  
                           STR_2 0806                             u1010 0CC6                             u1011 0CC5  
                           u1005 0CB7                             u1101 0593                             u1030 0CE1  
                           u1102 0594                             u1031 0CE0                             u1111 061D  
                           u1103 0599                             u1200 02BB                             u1112 061E  
                           u1104 059A                             u1025 0CC8                             u1201 02BC  
                           u1121 0668                             u1113 0623                             u1105 059F  
                           u1050 0CFF                             u1210 0302                             u1202 02C1  
                           u1130 075B                             u1122 0669                             u1114 0624  
                           u1106 05A0                             u1051 0CFE                             u1035 0CDD  
                           u1211 0301                             u1203 02C2                             u1131 075C  
                           u1123 066E                             u1115 0629                             u1060 0D04  
                           u1300 0500                             u1140 004F                             u1132 0761  
                           u1124 066F                             u1116 062A                             u1061 0D03  
                           u1045 0CF1                             u1301 0501                             u1221 0346  
                           u1141 0050                             u1133 0762                             u1125 0674  
                           u1070 0D26                             u1302 0506                             u1230 035A  
                           u1222 0347                             u1150 0124                             u1142 0055  
                           u1126 0675                             u1071 0D25                             u1303 0507  
                           u1231 035B                             u1223 034C                             u1143 0056  
                           u1311 0F32                             u1080 0D4D                             u1240 0398  
                           u1232 0360                             u1224 034D                             u1160 012E  
                           u1312 0F33                             u1081 0D4C                             u1241 0397  
                           u1233 0361                             u1225 0352                             u1161 012F  
                           u1321 0F8C                             u1313 0F38                             u1250 03EB  
                           u1226 0353                             u1170 0155                             u1162 0134  
                           u1090 0568                             u1322 0F8D                             u1314 0F39  
                           u1243 0394                             u1163 0135                             u1155 011F  
                           u1331 0FE6                             u1323 0F92                             u1315 0F3E  
                           u1260 0404                             u1180 0176                             u1340 09EE  
                           u1332 0FE7                             u1324 0F93                             u1316 0F3F  
                           u1181 0177                             u1341 09ED                             u1333 0FEC  
                           u1325 0F98                             u1270 0424                             u1190 0272  
                           u1182 017C                             u1334 0FED                             u1326 0F99  
                           u1407 0D3B                             u1255 03E6                             u1191 0273  
                           u1183 017D                             u1175 0150                             u1095 0563  
                           u1335 0FF2                             u1280 0484                             u1192 0278  
                           u1336 0FF3                             u1265 03FF                             u1193 0279  
                           u1290 04EE                             u1291 04EF                             u1275 041F  
                           u1292 04F4                             u1293 04F5                             u1285 047F  
                           u1397 0C0C                             _PEIE 005E                             i1l85 09C9  
                           _TXIF 0064          BMP280_Configure@standby 0023                             _deci 006A  
                           _main 0BF1                             _temp 0064                             btemp 007E  
                           start 000C  __size_of_BMP280_readTemperature 0238           BMP280_begin@T_sampling 002A  
          __size_of_BMP280_Read8 0044                            ??_isr 0070                 ?_I2C_Master_Init 0026  
               ?_I2C_Master_Read 0073                 ?_I2C_Master_Wait 0070            __size_of_BMP280_Write 002D  
               ?_I2C_Master_Stop 0070            __size_of_BMP280_begin 00DE                  __end_of___aldiv 0D18  
                          ?_main 0070                            _ANSEL 0188                  __end_of___lldiv 07EC  
                          i1l233 09A3                            _RCREG 001A                  BMP280_Read8@ret 0021  
    _BMP280_readTemperature$1200 004C                            _SPBRG 0099      _BMP280_readTemperature$1199 0051  
                          _PORTA 0005                            _PORTB 0006                            _PORTD 0008  
                          _TRISA 0085                            _TRISB 0086                            _TRISD 0088  
                          _SSPIE 0463                            _SSPIF 0063                            _TXREG 0019  
            ___lmul@multiplicand 002B                            _adc_P 00A4                            _adc_T 00A8  
                          _centi 0069                            _setup 09EF                            pclath 000A  
                          status 0003                            wtemp0 007E                     _BMP280_Read8 0AC7  
                     Send_Data@X 0073                     _BMP280_Write 0A34                     _BMP280_calib 00AC  
                   _BMP280_begin 0D18                  __initialization 000F                     __end_of_main 0C7B  
         __size_of_BMP280_Read16 0056                           ??_main 0061                    ??_Send_String 0074  
         __size_of_BMP280_Update 00DF           _BMP280_readTemperature 054C                ?_I2C_Master_Start 0070  
                  ?_Receive_Data 0070                ?_I2C_Master_Write 0073                 BMP280_Read16@ret 0023  
             ??_I2C_Master_Start 0073               ??_I2C_Master_Write 0075                           ?_setup 0070  
                         _ANSELH 0189                           i1l1441 099A                           i1l1443 09A0  
                         i1l1445 09A2                           i1l1475 09B8                           i1l1477 09BE  
                         i1l1479 09C8                           u135_20 09A0                           u135_21 099F  
                         u136_20 09BE                           u136_21 09BD                           _SPBRGH 009A  
                         _SSPADD 0093                           _TRISC3 043B                           _TRISC4 043C  
                         _SSPCON 0014                           _SSPBUF 0013                           ___lmul 0B53  
             __size_of_Send_Data 000A                        ??___aldiv 0020                           ___wmul 0A0F  
             __size_of_Send_Temp 012B                        ??___lldiv 0020                           _t_fine 00A0  
     BMP280_Configure@P_sampling 0021                   ??_Receive_Data 0070                           saved_w 007E  
       __end_of_BMP280_Configure 0B53              __end_of_Send_String 09EF                    _BMP280_Read16 0B9B  
        __end_of__initialization 0020       BMP280_Configure@T_sampling 0020                    _BMP280_Update 0DF6  
                 __pcstackCOMMON 0070              _BMP280_readPressure 0024                    __end_of_setup 0A0F  
               BMP280_Update@ret 0024             ?_BMP280_readPressure 0070                __end_of_Send_Data 09B8  
              __end_of_Send_Temp 1000                          ??_setup 007B                       __pbssBANK0 0064  
                     __pbssBANK1 00A0                   ?_BMP280_Read16 0079                   ?_BMP280_Update 0070  
        BMP280_readPressure@var1 005D          BMP280_readPressure@var2 0055          BMP280_readPressure@pres 0050  
                     __pmaintext 0BF1                          ?___lmul 0027                          ?___wmul 0073  
                     __pintentry 0004                   ___lmul@product 0030                      _Send_String 09D0  
               BMP280_begin@mode 0032            ??_BMP280_readPressure 0034                          _SSPCON2 0091  
                        _SSPSTAT 0094                       __stringtab 0800       BMP280_Configure@_ctrl_meas 0028  
           __end_of_Receive_Data 09A4             BMP280_Write@reg_addr 0078                          ___aldiv 0C7B  
                __size_of___lmul 0048                          ___lldiv 0784                  __size_of___wmul 0025  
        ?_BMP280_readTemperature 0070                          __ptext1 09EF                          __ptext2 0A8F  
                        __ptext3 0ED5                          __ptext4 0A0F                          __ptext5 09D0  
                        __ptext6 09AE                          __ptext7 054C                          __ptext8 0DF6  
                        __ptext9 0024                     __size_of_isr 0018                 ___aldiv@dividend 0077  
       __size_of_I2C_Master_Init 0038         __size_of_I2C_Master_Read 002E         __size_of_I2C_Master_Wait 000D  
       __size_of_I2C_Master_Stop 0009                  ??_BMP280_Read16 0020                          clrloop0 0981  
           end_of_initialization 0020                  ??_BMP280_Update 0020            BMP280_Read16@reg_addr 0022  
             BMP280_begin@filter 002C        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0073                  ___lldiv@counter 0025                        _RCSTAbits 0018  
               ___aldiv@quotient 0023                 I2C_Master_Init@c 0026                 I2C_Master_Read@a 0073  
 __end_of_BMP280_readTemperature 0784                        _PORTBbits 0006                        _TRISCbits 0087  
              ?_BMP280_Configure 0020               ??_BMP280_Configure 0024           BMP280_Configure@filter 0022  
                      _TXSTAbits 0098                   __end_of___lmul 0B9B             I2C_Master_Read@temp1 0077  
                 __end_of___wmul 0A34                      _BAUDCTLbits 0187                     Send_String@X 0075  
            start_initialization 000F                      __end_of_isr 09D0            __size_of_Receive_Data 000A  
              ??_I2C_Master_Init 002A                ??_I2C_Master_Read 0075                ??_I2C_Master_Wait 0073  
              ??_I2C_Master_Stop 0073                        _Send_Data 09AE                        _Send_Temp 0ED5  
                       ??___lmul 002F                         ??___wmul 0077                     ?_Send_String 0070  
           BMP280_Configure@mode 0027                        ___latbits 0002                     _Receive_Data 099A  
                  __pcstackBANK0 0020                       ?_Send_Data 0070                       ?_Send_Temp 0070  
                  ?_BMP280_Read8 0070                 _I2C_Master_Start 0988                 _I2C_Master_Write 09A4  
                  ?_BMP280_Write 0075                    ?_BMP280_begin 002A             BMP280_readPressure@p 0059  
              BMP280_Write@_data 0075                         ?___aldiv 0073                         ?___lldiv 0073  
                      __pstrings 0800      __end_of_BMP280_readPressure 054C                   __size_of_setup 0020  
                ___aldiv@divisor 0073                interrupt_function 0004                  ___aldiv@counter 0021  
                 ___wmul@product 0077                   ??_BMP280_Read8 0079                        clear_ram0 0980  
                 ??_BMP280_Write 0076                         _PIE1bits 008C                   ??_BMP280_begin 002E  
                       _PIR1bits 000C         _BMP280_readPressure$1201 0051         _BMP280_readPressure$1202 0044  
       _BMP280_readPressure$1203 0048         _BMP280_readPressure$1204 004C                      __stringbase 0805  
              ___wmul@multiplier 0073                ___lmul@multiplier 0027            __end_of_BMP280_Read16 0BF1  
                    ??_Send_Data 0073                      ??_Send_Temp 0026            __end_of_BMP280_Update 0ED5  
      __size_of_BMP280_Configure 0048                 __size_of___aldiv 009D                 __size_of___lldiv 0068  
             __end_of__stringtab 0806                  _I2C_Master_Init 0A8F                  _I2C_Master_Read 0A61  
                _I2C_Master_Wait 07EC                  _I2C_Master_Stop 0991             __size_of_Send_String 001F  
                       __ptext10 0B53                         __ptext11 0784                         __ptext20 0991  
                       __ptext12 0C7B                         __ptext21 0988                         __ptext13 0D18  
                       __ptext22 07EC                         __ptext14 0AC7                         __ptext23 09B8  
                       __ptext15 0B9B                         __ptext24 099A                         __ptext16 0A61  
                       __ptext17 0B0B                         __ptext18 0A34                         __ptext19 09A4  
     BMP280_readTemperature@var1 0044       BMP280_readTemperature@var2 0048       BMP280_readTemperature@temp 0050  
                  __size_of_main 008A                         _pressure 00C4             __end_of_BMP280_Read8 0B0B  
       __end_of_I2C_Master_Start 0991         __end_of_I2C_Master_Write 09AE             __end_of_BMP280_Write 0A61  
           __end_of_BMP280_begin 0DF6                         intlevel1 0000             BMP280_Read8@reg_addr 0020  
               ___lldiv@dividend 0077              BMP280_begin@standby 002D         ??_BMP280_readTemperature 0034  
                      stringcode 0800          __end_of_I2C_Master_Init 0AC7          __end_of_I2C_Master_Read 0A8F  
        __end_of_I2C_Master_Wait 07F9          __end_of_I2C_Master_Stop 099A                      _temperature 00C8  
               ___lldiv@quotient 0021                I2C_Master_Write@d 0073                         stringdir 0800  
                       stringtab 0800                     ___aldiv@sign 0022                      _SSPCON2bits 0091  
