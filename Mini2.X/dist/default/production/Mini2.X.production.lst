

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 22:15:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0013                     _SSPBUF	set	19
   378  0014                     _SSPCON	set	20
   379  0008                     _PORTD	set	8
   380  0006                     _PORTB	set	6
   381  0005                     _PORTA	set	5
   382  0063                     _SSPIF	set	99
   383  005E                     _PEIE	set	94
   384  005F                     _GIE	set	95
   385  0091                     _SSPCON2bits	set	145
   386  0087                     _TRISCbits	set	135
   387  0094                     _SSPSTAT	set	148
   388  0093                     _SSPADD	set	147
   389  0091                     _SSPCON2	set	145
   390  0085                     _TRISA	set	133
   391  0088                     _TRISD	set	136
   392  0086                     _TRISB	set	134
   393  0463                     _SSPIE	set	1123
   394  043C                     _TRISC4	set	1084
   395  043B                     _TRISC3	set	1083
   396  0189                     _ANSELH	set	393
   397  0188                     _ANSEL	set	392
   398                           
   399                           	psect	cinit
   400  07EB                     start_initialization:	
   401                           ; #config settings
   402                           
   403  07EB                     __initialization:
   404                           
   405                           ; Clear objects allocated to BANK0
   406  07EB  1383               	bcf	3,7	;select IRP bank0
   407  07EC  305E               	movlw	low __pbssBANK0
   408  07ED  0084               	movwf	4
   409  07EE  306E               	movlw	low (__pbssBANK0+16)
   410  07EF  120A  158A  242D  120A  118A  	fcall	clear_ram0
   411                           
   412                           ; Clear objects allocated to BANK1
   413  07F4  30A0               	movlw	low __pbssBANK1
   414  07F5  0084               	movwf	4
   415  07F6  30BC               	movlw	low (__pbssBANK1+28)
   416  07F7  120A  158A  242D  120A  118A  	fcall	clear_ram0
   417  07FC                     end_of_initialization:	
   418                           ;End of C runtime variable initialization code
   419                           
   420  07FC                     __end_of__initialization:
   421  07FC  0183               	clrf	3
   422  07FD  120A  158A  2CB9   	ljmp	_main	;jump to C main() function
   423                           
   424                           	psect	bssBANK0
   425  005E                     __pbssBANK0:
   426  005E                     _t_fine:
   427  005E                     	ds	4
   428  0062                     _adc_T:
   429  0062                     	ds	4
   430  0066                     _pressure:
   431  0066                     	ds	4
   432  006A                     _temperature:
   433  006A                     	ds	4
   434                           
   435                           	psect	bssBANK1
   436  00A0                     __pbssBANK1:
   437  00A0                     _adc_P:
   438  00A0                     	ds	4
   439  00A4                     _BMP280_calib:
   440  00A4                     	ds	24
   441                           
   442                           	psect	clrtext
   443  0C2D                     clear_ram0:	
   444                           ;	Called with FSR containing the base address, and
   445                           ;	W with the last address+1
   446                           
   447  0C2D  0064               	clrwdt	;clear the watchdog before getting into this loop
   448  0C2E                     clrloop0:
   449  0C2E  0180               	clrf	0	;clear RAM location pointed to by FSR
   450  0C2F  0A84               	incf	4,f	;increment pointer
   451  0C30  0604               	xorwf	4,w	;XOR with final address
   452  0C31  1903               	btfsc	3,2	;have we reached the end yet?
   453  0C32  3400               	retlw	0	;all done for this memory range, return
   454  0C33  0604               	xorwf	4,w	;XOR again to restore value
   455  0C34  2C2E               	goto	clrloop0	;do the next byte
   456                           
   457                           	psect	cstackCOMMON
   458  0070                     __pcstackCOMMON:
   459  0070                     ?_setup:
   460  0070                     ??_setup:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_main:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_I2C_Master_Wait:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ??_I2C_Master_Wait:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_I2C_Master_Start:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ??_I2C_Master_Start:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_I2C_Master_Stop:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ??_I2C_Master_Stop:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_I2C_Master_Write:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_BMP280_Read8:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_BMP280_Update:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_BMP280_readTemperature:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_BMP280_readPressure:	
   497                           ; 2 bytes @ 0x0
   498                           
   499  0070                     ?_I2C_Master_Read:	
   500                           ; 2 bytes @ 0x0
   501                           
   502  0070                     ?___lldiv:	
   503                           ; 2 bytes @ 0x0
   504                           
   505  0070                     ?___aldiv:	
   506                           ; 4 bytes @ 0x0
   507                           
   508  0070                     I2C_Master_Write@d:	
   509                           ; 4 bytes @ 0x0
   510                           
   511  0070                     I2C_Master_Read@a:	
   512                           ; 2 bytes @ 0x0
   513                           
   514  0070                     ___lldiv@divisor:	
   515                           ; 2 bytes @ 0x0
   516                           
   517  0070                     ___aldiv@divisor:	
   518                           ; 4 bytes @ 0x0
   519                           
   520                           
   521                           ; 4 bytes @ 0x0
   522  0070                     	ds	2
   523  0072                     ??_I2C_Master_Write:
   524  0072                     ??_I2C_Master_Read:	
   525                           ; 1 bytes @ 0x2
   526                           
   527  0072                     ?_BMP280_Write:	
   528                           ; 1 bytes @ 0x2
   529                           
   530  0072                     BMP280_Write@_data:	
   531                           ; 1 bytes @ 0x2
   532                           
   533                           
   534                           ; 1 bytes @ 0x2
   535  0072                     	ds	1
   536  0073                     ??_BMP280_Write:
   537                           
   538                           ; 1 bytes @ 0x3
   539  0073                     	ds	1
   540  0074                     I2C_Master_Read@temp:
   541  0074                     ___lldiv@dividend:	
   542                           ; 2 bytes @ 0x4
   543                           
   544  0074                     ___aldiv@dividend:	
   545                           ; 4 bytes @ 0x4
   546                           
   547                           
   548                           ; 4 bytes @ 0x4
   549  0074                     	ds	1
   550  0075                     BMP280_Write@reg_addr:
   551                           
   552                           ; 1 bytes @ 0x5
   553  0075                     	ds	1
   554  0076                     ??_BMP280_Read8:
   555  0076                     ?_BMP280_Configure:	
   556                           ; 1 bytes @ 0x6
   557                           
   558  0076                     ??_BMP280_Update:	
   559                           ; 1 bytes @ 0x6
   560                           
   561  0076                     ?_BMP280_Read16:	
   562                           ; 1 bytes @ 0x6
   563                           
   564  0076                     BMP280_Configure@T_sampling:	
   565                           ; 2 bytes @ 0x6
   566                           
   567                           
   568                           ; 1 bytes @ 0x6
   569  0076                     	ds	1
   570  0077                     BMP280_Configure@P_sampling:
   571                           
   572                           ; 1 bytes @ 0x7
   573  0077                     	ds	1
   574  0078                     ??_BMP280_Read16:
   575  0078                     ??___lldiv:	
   576                           ; 1 bytes @ 0x8
   577                           
   578  0078                     ??___aldiv:	
   579                           ; 1 bytes @ 0x8
   580                           
   581  0078                     BMP280_Read8@reg_addr:	
   582                           ; 1 bytes @ 0x8
   583                           
   584  0078                     BMP280_Configure@filter:	
   585                           ; 1 bytes @ 0x8
   586                           
   587                           
   588                           ; 1 bytes @ 0x8
   589  0078                     	ds	1
   590  0079                     ??___lmul:
   591  0079                     BMP280_Read8@ret:	
   592                           ; 1 bytes @ 0x9
   593                           
   594  0079                     BMP280_Configure@standby:	
   595                           ; 1 bytes @ 0x9
   596                           
   597  0079                     ___lldiv@quotient:	
   598                           ; 1 bytes @ 0x9
   599                           
   600                           
   601                           ; 4 bytes @ 0x9
   602  0079                     	ds	1
   603  007A                     ??_BMP280_Configure:
   604  007A                     BMP280_Read16@reg_addr:	
   605                           ; 1 bytes @ 0xA
   606                           
   607  007A                     BMP280_Update@ret:	
   608                           ; 1 bytes @ 0xA
   609                           
   610  007A                     ___lmul@product:	
   611                           ; 4 bytes @ 0xA
   612                           
   613                           
   614                           ; 4 bytes @ 0xA
   615  007A                     	ds	1
   616  007B                     BMP280_Read16@ret:
   617                           
   618                           ; 2 bytes @ 0xB
   619  007B                     	ds	2
   620  007D                     BMP280_begin@mode:
   621  007D                     ___lldiv@counter:	
   622                           ; 1 bytes @ 0xD
   623                           
   624                           
   625                           ; 1 bytes @ 0xD
   626  007D                     	ds	1
   627                           
   628                           	psect	cstackBANK0
   629  0020                     __pcstackBANK0:
   630  0020                     BMP280_Configure@mode:
   631  0020                     ___aldiv@counter:	
   632                           ; 1 bytes @ 0x0
   633                           
   634                           
   635                           ; 1 bytes @ 0x0
   636  0020                     	ds	1
   637  0021                     BMP280_Configure@_ctrl_meas:
   638  0021                     ___aldiv@sign:	
   639                           ; 1 bytes @ 0x1
   640                           
   641                           
   642                           ; 1 bytes @ 0x1
   643  0021                     	ds	1
   644  0022                     BMP280_Configure@_config:
   645  0022                     ___aldiv@quotient:	
   646                           ; 1 bytes @ 0x2
   647                           
   648                           
   649                           ; 4 bytes @ 0x2
   650  0022                     	ds	1
   651  0023                     ?_BMP280_begin:
   652  0023                     BMP280_begin@T_sampling:	
   653                           ; 2 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657  0023                     	ds	1
   658  0024                     BMP280_begin@P_sampling:
   659                           
   660                           ; 1 bytes @ 0x4
   661  0024                     	ds	1
   662  0025                     BMP280_begin@filter:
   663                           
   664                           ; 1 bytes @ 0x5
   665  0025                     	ds	1
   666  0026                     ?___lmul:
   667  0026                     BMP280_begin@standby:	
   668                           ; 4 bytes @ 0x6
   669                           
   670  0026                     ___lmul@multiplier:	
   671                           ; 1 bytes @ 0x6
   672                           
   673                           
   674                           ; 4 bytes @ 0x6
   675  0026                     	ds	1
   676  0027                     ??_BMP280_begin:
   677                           
   678                           ; 1 bytes @ 0x7
   679  0027                     	ds	3
   680  002A                     ___lmul@multiplicand:
   681                           
   682                           ; 4 bytes @ 0xA
   683  002A                     	ds	4
   684  002E                     ??_BMP280_readTemperature:
   685  002E                     ??_BMP280_readPressure:	
   686                           ; 1 bytes @ 0xE
   687                           
   688                           
   689                           ; 1 bytes @ 0xE
   690  002E                     	ds	16
   691  003E                     BMP280_readTemperature@var1:
   692  003E                     _BMP280_readPressure$941:	
   693                           ; 4 bytes @ 0x1E
   694                           
   695                           
   696                           ; 4 bytes @ 0x1E
   697  003E                     	ds	4
   698  0042                     BMP280_readTemperature@var2:
   699  0042                     _BMP280_readPressure$942:	
   700                           ; 4 bytes @ 0x22
   701                           
   702                           
   703                           ; 4 bytes @ 0x22
   704  0042                     	ds	4
   705  0046                     _BMP280_readTemperature$939:
   706  0046                     _BMP280_readPressure$943:	
   707                           ; 4 bytes @ 0x26
   708                           
   709                           
   710                           ; 4 bytes @ 0x26
   711  0046                     	ds	4
   712  004A                     BMP280_readTemperature@temp:
   713  004A                     BMP280_readPressure@pres:	
   714                           ; 1 bytes @ 0x2A
   715                           
   716                           
   717                           ; 1 bytes @ 0x2A
   718  004A                     	ds	1
   719  004B                     _BMP280_readTemperature$938:
   720  004B                     _BMP280_readPressure$940:	
   721                           ; 4 bytes @ 0x2B
   722                           
   723                           
   724                           ; 4 bytes @ 0x2B
   725  004B                     	ds	4
   726  004F                     BMP280_readPressure@var2:
   727                           
   728                           ; 4 bytes @ 0x2F
   729  004F                     	ds	4
   730  0053                     BMP280_readPressure@p:
   731                           
   732                           ; 4 bytes @ 0x33
   733  0053                     	ds	4
   734  0057                     BMP280_readPressure@var1:
   735                           
   736                           ; 4 bytes @ 0x37
   737  0057                     	ds	4
   738  005B                     ??_main:
   739                           
   740                           ; 1 bytes @ 0x3B
   741  005B                     	ds	3
   742                           
   743                           	psect	maintext
   744  0CB9                     __pmaintext:	
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 57 in file "mainm2.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : B00/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   764 ;;      Params:         0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0
   766 ;;      Temps:          0       3       0       0       0
   767 ;;      Totals:         0       3       0       0       0
   768 ;;Total ram usage:        3 bytes
   769 ;; Hardware stack levels required when called:    5
   770 ;; This function calls:
   771 ;;		_BMP280_begin
   772 ;;		_BMP280_readPressure
   773 ;;		_BMP280_readTemperature
   774 ;;		_setup
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _main
   782  0CB9                     _main:
   783  0CB9                     l1204:	
   784                           ;incstack = 0
   785                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   786                           
   787                           
   788                           ;mainm2.c: 58:     setup();
   789  0CB9  120A  118A  2005  120A  158A  	fcall	_setup
   790  0CBE                     l1206:
   791                           
   792                           ;mainm2.c: 59:     BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, STAND
      +                          BY_0_5);
   793  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
   794  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
   795  0CC0  01A3               	clrf	BMP280_begin@T_sampling
   796  0CC1  0AA3               	incf	BMP280_begin@T_sampling,f
   797  0CC2  01A4               	clrf	BMP280_begin@P_sampling
   798  0CC3  0AA4               	incf	BMP280_begin@P_sampling,f
   799  0CC4  01A5               	clrf	BMP280_begin@filter
   800  0CC5  01A6               	clrf	BMP280_begin@standby
   801  0CC6  3003               	movlw	3
   802  0CC7  120A  158A  2724  120A  158A  	fcall	_BMP280_begin
   803  0CCC                     l37:	
   804                           ;mainm2.c: 60:     while (1) {
   805                           
   806                           
   807                           ;mainm2.c: 61:         _delay((unsigned long)((200)*(8000000/4000.0)));
   808  0CCC  3003               	movlw	3
   809  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
   810  0CCE  1303               	bcf	3,6	;RP1=0, select bank0
   811  0CCF  00DD               	movwf	??_main+2
   812  0CD0  3008               	movlw	8
   813  0CD1  00DC               	movwf	??_main+1
   814  0CD2  3076               	movlw	118
   815  0CD3  00DB               	movwf	??_main
   816  0CD4                     u1177:
   817  0CD4  0BDB               	decfsz	??_main,f
   818  0CD5  2CD4               	goto	u1177
   819  0CD6  0BDC               	decfsz	??_main+1,f
   820  0CD7  2CD4               	goto	u1177
   821  0CD8  0BDD               	decfsz	??_main+2,f
   822  0CD9  2CD4               	goto	u1177
   823  0CDA  0000               	nop
   824                           
   825                           ;mainm2.c: 62:         PORTA = 0b11111111;
   826  0CDB  30FF               	movlw	255
   827  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
   828  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
   829  0CDE  0085               	movwf	5	;volatile
   830  0CDF                     l1208:
   831                           
   832                           ;mainm2.c: 63:         BMP280_readTemperature(&temperature);
   833  0CDF  306A               	movlw	(low (_temperature| 0))& (0+255)
   834  0CE0  120A  118A  20B3  120A  158A  	fcall	_BMP280_readTemperature
   835  0CE5                     l1210:
   836                           
   837                           ;mainm2.c: 64:         BMP280_readPressure(&pressure);
   838  0CE5  3066               	movlw	(low (_pressure| 0))& (0+255)
   839  0CE6  120A  118A  22C5  120A  158A  	fcall	_BMP280_readPressure
   840  0CEB  2CCC               	goto	l37
   841  0CEC  120A  118A  2800   	ljmp	start
   842  0CEF                     __end_of_main:
   843                           
   844                           	psect	text1
   845  0005                     __ptext1:	
   846 ;; *************** function _setup *****************
   847 ;; Defined at:
   848 ;;		line 73 in file "mainm2.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		status,2
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         0       0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _setup
   877  0005                     _setup:
   878  0005                     l1160:	
   879                           ;incstack = 0
   880                           ; Regs used in _setup: [status,2]
   881                           
   882                           
   883                           ;mainm2.c: 74:     ANSEL = 0;
   884  0005  1683               	bsf	3,5	;RP0=1, select bank3
   885  0006  1703               	bsf	3,6	;RP1=1, select bank3
   886  0007  0188               	clrf	8	;volatile
   887                           
   888                           ;mainm2.c: 75:     ANSELH = 0;
   889  0008  0189               	clrf	9	;volatile
   890                           
   891                           ;mainm2.c: 76:     TRISB = 0;
   892  0009  1683               	bsf	3,5	;RP0=1, select bank1
   893  000A  1303               	bcf	3,6	;RP1=0, select bank1
   894  000B  0186               	clrf	6	;volatile
   895                           
   896                           ;mainm2.c: 77:     TRISD = 0;
   897  000C  0188               	clrf	8	;volatile
   898                           
   899                           ;mainm2.c: 78:     PORTB = 0;
   900  000D  1283               	bcf	3,5	;RP0=0, select bank0
   901  000E  1303               	bcf	3,6	;RP1=0, select bank0
   902  000F  0186               	clrf	6	;volatile
   903                           
   904                           ;mainm2.c: 79:     PORTD = 0;
   905  0010  0188               	clrf	8	;volatile
   906                           
   907                           ;mainm2.c: 80:     PORTA = 0;
   908  0011  0185               	clrf	5	;volatile
   909                           
   910                           ;mainm2.c: 81:     TRISA = 0;
   911  0012  1683               	bsf	3,5	;RP0=1, select bank1
   912  0013  1303               	bcf	3,6	;RP1=0, select bank1
   913  0014  0185               	clrf	5	;volatile
   914  0015                     l43:
   915  0015  0008               	return
   916  0016                     __end_of_setup:
   917                           
   918                           	psect	text2
   919  00B3                     __ptext2:	
   920 ;; *************** function _BMP280_readTemperature *****************
   921 ;; Defined at:
   922 ;;		line 242 in file "BMP280.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  temp            1    wreg     PTR long 
   925 ;;		 -> temperature(4), 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  temp            1   42[BANK0 ] PTR long 
   928 ;;		 -> temperature(4), 
   929 ;;  var2            4   34[BANK0 ] long 
   930 ;;  var1            4   30[BANK0 ] long 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  2   10[None  ] int 
   933 ;; Registers used:
   934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       0       0       0       0
   941 ;;      Locals:         0      17       0       0       0
   942 ;;      Temps:          0      16       0       0       0
   943 ;;      Totals:         0      33       0       0       0
   944 ;;Total ram usage:       33 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    3
   947 ;; This function calls:
   948 ;;		_BMP280_Update
   949 ;;		___aldiv
   950 ;;		___lmul
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _BMP280_readTemperature
   958  00B3                     _BMP280_readTemperature:
   959                           
   960                           ;incstack = 0
   961                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   962                           ;BMP280_readTemperature@temp stored from wreg
   963  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   964  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   965  00B5  00CA               	movwf	BMP280_readTemperature@temp
   966  00B6                     l1178:
   967                           
   968                           ;BMP280.c: 242: int BMP280_readTemperature(int32_t *temp);BMP280.c: 243: {;BMP280.c: 244
      +                          :   int32_t var1, var2;;BMP280.c: 246:   BMP280_Update();
   969  00B6  120A  158A  266D  120A  118A  	fcall	_BMP280_Update
   970                           
   971                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
   972  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   973  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   974  00BD  0824               	movf	_BMP280_calib^(0+128),w
   975  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   976  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   977  00C0  00AE               	movwf	??_BMP280_readTemperature
   978  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   979  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   980  00C3  0825               	movf	(_BMP280_calib+1)^(0+128),w
   981  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   982  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   983  00C6  00AF               	movwf	??_BMP280_readTemperature+1
   984  00C7  01B0               	clrf	??_BMP280_readTemperature+2
   985  00C8  01B1               	clrf	??_BMP280_readTemperature+3
   986  00C9  3001               	movlw	1
   987  00CA                     u925:
   988  00CA  1003               	clrc
   989  00CB  0DAE               	rlf	??_BMP280_readTemperature,f
   990  00CC  0DAF               	rlf	??_BMP280_readTemperature+1,f
   991  00CD  0DB0               	rlf	??_BMP280_readTemperature+2,f
   992  00CE  0DB1               	rlf	??_BMP280_readTemperature+3,f
   993  00CF                     u920:
   994  00CF  3EFF               	addlw	-1
   995  00D0  1D03               	skipz
   996  00D1  28CA               	goto	u925
   997  00D2  3000               	movlw	0
   998  00D3  00F3               	movwf	___aldiv@divisor+3
   999  00D4  3000               	movlw	0
  1000  00D5  00F2               	movwf	___aldiv@divisor+2
  1001  00D6  3000               	movlw	0
  1002  00D7  00F1               	movwf	___aldiv@divisor+1
  1003  00D8  3008               	movlw	8
  1004  00D9  00F0               	movwf	___aldiv@divisor
  1005  00DA  0865               	movf	_adc_T+3,w
  1006  00DB  00F7               	movwf	___aldiv@dividend+3
  1007  00DC  0864               	movf	_adc_T+2,w
  1008  00DD  00F6               	movwf	___aldiv@dividend+2
  1009  00DE  0863               	movf	_adc_T+1,w
  1010  00DF  00F5               	movwf	___aldiv@dividend+1
  1011  00E0  0862               	movf	_adc_T,w
  1012  00E1  00F4               	movwf	___aldiv@dividend
  1013  00E2  120A  118A  2016  120A  118A  	fcall	___aldiv
  1014  00E7  0870               	movf	?___aldiv,w
  1015  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1016  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1017  00EA  00B2               	movwf	??_BMP280_readTemperature+4
  1018  00EB  0871               	movf	?___aldiv+1,w
  1019  00EC  00B3               	movwf	??_BMP280_readTemperature+5
  1020  00ED  0872               	movf	?___aldiv+2,w
  1021  00EE  00B4               	movwf	??_BMP280_readTemperature+6
  1022  00EF  0873               	movf	?___aldiv+3,w
  1023  00F0  00B5               	movwf	??_BMP280_readTemperature+7
  1024  00F1  082E               	movf	??_BMP280_readTemperature,w
  1025  00F2  02B2               	subwf	??_BMP280_readTemperature+4,f
  1026  00F3  082F               	movf	??_BMP280_readTemperature+1,w
  1027  00F4  1C03               	skipc
  1028  00F5  0F2F               	incfsz	??_BMP280_readTemperature+1,w
  1029  00F6  28F8               	goto	u931
  1030  00F7  28F9               	goto	u932
  1031  00F8                     u931:
  1032  00F8  02B3               	subwf	??_BMP280_readTemperature+5,f
  1033  00F9                     u932:
  1034  00F9  0830               	movf	??_BMP280_readTemperature+2,w
  1035  00FA  1C03               	skipc
  1036  00FB  0F30               	incfsz	??_BMP280_readTemperature+2,w
  1037  00FC  28FE               	goto	u933
  1038  00FD  28FF               	goto	u934
  1039  00FE                     u933:
  1040  00FE  02B4               	subwf	??_BMP280_readTemperature+6,f
  1041  00FF                     u934:
  1042  00FF  0831               	movf	??_BMP280_readTemperature+3,w
  1043  0100  1C03               	skipc
  1044  0101  0F31               	incfsz	??_BMP280_readTemperature+3,w
  1045  0102  2904               	goto	u935
  1046  0103  2905               	goto	u936
  1047  0104                     u935:
  1048  0104  02B5               	subwf	??_BMP280_readTemperature+7,f
  1049  0105                     u936:
  1050  0105  0835               	movf	??_BMP280_readTemperature+7,w
  1051  0106  00A9               	movwf	___lmul@multiplier+3
  1052  0107  0834               	movf	??_BMP280_readTemperature+6,w
  1053  0108  00A8               	movwf	___lmul@multiplier+2
  1054  0109  0833               	movf	??_BMP280_readTemperature+5,w
  1055  010A  00A7               	movwf	___lmul@multiplier+1
  1056  010B  0832               	movf	??_BMP280_readTemperature+4,w
  1057  010C  00A6               	movwf	___lmul@multiplier
  1058  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1059  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1060  010F  0826               	movf	(_BMP280_calib^(0+128)+2),w
  1061  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0112  00AA               	movwf	___lmul@multiplicand
  1064  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1065  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1066  0115  0827               	movf	((_BMP280_calib+1)^(0+128)+2),w
  1067  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0118  00AB               	movwf	___lmul@multiplicand+1
  1070  0119  3000               	movlw	0
  1071  011A  1BAB               	btfsc	___lmul@multiplicand+1,7
  1072  011B  30FF               	movlw	255
  1073  011C  00AC               	movwf	___lmul@multiplicand+2
  1074  011D  00AD               	movwf	___lmul@multiplicand+3
  1075  011E  120A  158A  2573  120A  118A  	fcall	___lmul
  1076  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0125  0829               	movf	?___lmul+3,w
  1079  0126  00CE               	movwf	_BMP280_readTemperature$938+3
  1080  0127  0828               	movf	?___lmul+2,w
  1081  0128  00CD               	movwf	_BMP280_readTemperature$938+2
  1082  0129  0827               	movf	?___lmul+1,w
  1083  012A  00CC               	movwf	_BMP280_readTemperature$938+1
  1084  012B  0826               	movf	?___lmul,w
  1085  012C  00CB               	movwf	_BMP280_readTemperature$938
  1086                           
  1087                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1088  012D  3000               	movlw	0
  1089  012E  00F3               	movwf	___aldiv@divisor+3
  1090  012F  3000               	movlw	0
  1091  0130  00F2               	movwf	___aldiv@divisor+2
  1092  0131  3008               	movlw	8
  1093  0132  00F1               	movwf	___aldiv@divisor+1
  1094  0133  3000               	movlw	0
  1095  0134  00F0               	movwf	___aldiv@divisor
  1096  0135  084E               	movf	_BMP280_readTemperature$938+3,w
  1097  0136  00F7               	movwf	___aldiv@dividend+3
  1098  0137  084D               	movf	_BMP280_readTemperature$938+2,w
  1099  0138  00F6               	movwf	___aldiv@dividend+2
  1100  0139  084C               	movf	_BMP280_readTemperature$938+1,w
  1101  013A  00F5               	movwf	___aldiv@dividend+1
  1102  013B  084B               	movf	_BMP280_readTemperature$938,w
  1103  013C  00F4               	movwf	___aldiv@dividend
  1104  013D  120A  118A  2016  120A  118A  	fcall	___aldiv
  1105  0142  0873               	movf	?___aldiv+3,w
  1106  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0145  00C1               	movwf	BMP280_readTemperature@var1+3
  1109  0146  0872               	movf	?___aldiv+2,w
  1110  0147  00C0               	movwf	BMP280_readTemperature@var1+2
  1111  0148  0871               	movf	?___aldiv+1,w
  1112  0149  00BF               	movwf	BMP280_readTemperature@var1+1
  1113  014A  0870               	movf	?___aldiv,w
  1114  014B  00BE               	movwf	BMP280_readTemperature@var1
  1115                           
  1116                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1117  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1118  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1119  014E  0824               	movf	_BMP280_calib^(0+128),w
  1120  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0151  00AE               	movwf	??_BMP280_readTemperature
  1123  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1124  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1125  0154  0825               	movf	(_BMP280_calib+1)^(0+128),w
  1126  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0157  00AF               	movwf	??_BMP280_readTemperature+1
  1129  0158  01B0               	clrf	??_BMP280_readTemperature+2
  1130  0159  01B1               	clrf	??_BMP280_readTemperature+3
  1131  015A  3000               	movlw	0
  1132  015B  00F3               	movwf	___aldiv@divisor+3
  1133  015C  3000               	movlw	0
  1134  015D  00F2               	movwf	___aldiv@divisor+2
  1135  015E  3000               	movlw	0
  1136  015F  00F1               	movwf	___aldiv@divisor+1
  1137  0160  3010               	movlw	16
  1138  0161  00F0               	movwf	___aldiv@divisor
  1139  0162  0865               	movf	_adc_T+3,w
  1140  0163  00F7               	movwf	___aldiv@dividend+3
  1141  0164  0864               	movf	_adc_T+2,w
  1142  0165  00F6               	movwf	___aldiv@dividend+2
  1143  0166  0863               	movf	_adc_T+1,w
  1144  0167  00F5               	movwf	___aldiv@dividend+1
  1145  0168  0862               	movf	_adc_T,w
  1146  0169  00F4               	movwf	___aldiv@dividend
  1147  016A  120A  118A  2016  120A  118A  	fcall	___aldiv
  1148  016F  0870               	movf	?___aldiv,w
  1149  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0172  00B2               	movwf	??_BMP280_readTemperature+4
  1152  0173  0871               	movf	?___aldiv+1,w
  1153  0174  00B3               	movwf	??_BMP280_readTemperature+5
  1154  0175  0872               	movf	?___aldiv+2,w
  1155  0176  00B4               	movwf	??_BMP280_readTemperature+6
  1156  0177  0873               	movf	?___aldiv+3,w
  1157  0178  00B5               	movwf	??_BMP280_readTemperature+7
  1158  0179  082E               	movf	??_BMP280_readTemperature,w
  1159  017A  02B2               	subwf	??_BMP280_readTemperature+4,f
  1160  017B  082F               	movf	??_BMP280_readTemperature+1,w
  1161  017C  1C03               	skipc
  1162  017D  0F2F               	incfsz	??_BMP280_readTemperature+1,w
  1163  017E  2980               	goto	u941
  1164  017F  2981               	goto	u942
  1165  0180                     u941:
  1166  0180  02B3               	subwf	??_BMP280_readTemperature+5,f
  1167  0181                     u942:
  1168  0181  0830               	movf	??_BMP280_readTemperature+2,w
  1169  0182  1C03               	skipc
  1170  0183  0F30               	incfsz	??_BMP280_readTemperature+2,w
  1171  0184  2986               	goto	u943
  1172  0185  2987               	goto	u944
  1173  0186                     u943:
  1174  0186  02B4               	subwf	??_BMP280_readTemperature+6,f
  1175  0187                     u944:
  1176  0187  0831               	movf	??_BMP280_readTemperature+3,w
  1177  0188  1C03               	skipc
  1178  0189  0F31               	incfsz	??_BMP280_readTemperature+3,w
  1179  018A  298C               	goto	u945
  1180  018B  298D               	goto	u946
  1181  018C                     u945:
  1182  018C  02B5               	subwf	??_BMP280_readTemperature+7,f
  1183  018D                     u946:
  1184  018D  0835               	movf	??_BMP280_readTemperature+7,w
  1185  018E  00A9               	movwf	___lmul@multiplier+3
  1186  018F  0834               	movf	??_BMP280_readTemperature+6,w
  1187  0190  00A8               	movwf	___lmul@multiplier+2
  1188  0191  0833               	movf	??_BMP280_readTemperature+5,w
  1189  0192  00A7               	movwf	___lmul@multiplier+1
  1190  0193  0832               	movf	??_BMP280_readTemperature+4,w
  1191  0194  00A6               	movwf	___lmul@multiplier
  1192  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1193  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1194  0197  0824               	movf	_BMP280_calib^(0+128),w
  1195  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1197  019A  00B6               	movwf	??_BMP280_readTemperature+8
  1198  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1199  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1200  019D  0825               	movf	(_BMP280_calib+1)^(0+128),w
  1201  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1202  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1203  01A0  00B7               	movwf	??_BMP280_readTemperature+9
  1204  01A1  01B8               	clrf	??_BMP280_readTemperature+10
  1205  01A2  01B9               	clrf	??_BMP280_readTemperature+11
  1206  01A3  3000               	movlw	0
  1207  01A4  00F3               	movwf	___aldiv@divisor+3
  1208  01A5  3000               	movlw	0
  1209  01A6  00F2               	movwf	___aldiv@divisor+2
  1210  01A7  3000               	movlw	0
  1211  01A8  00F1               	movwf	___aldiv@divisor+1
  1212  01A9  3010               	movlw	16
  1213  01AA  00F0               	movwf	___aldiv@divisor
  1214  01AB  0865               	movf	_adc_T+3,w
  1215  01AC  00F7               	movwf	___aldiv@dividend+3
  1216  01AD  0864               	movf	_adc_T+2,w
  1217  01AE  00F6               	movwf	___aldiv@dividend+2
  1218  01AF  0863               	movf	_adc_T+1,w
  1219  01B0  00F5               	movwf	___aldiv@dividend+1
  1220  01B1  0862               	movf	_adc_T,w
  1221  01B2  00F4               	movwf	___aldiv@dividend
  1222  01B3  120A  118A  2016  120A  118A  	fcall	___aldiv
  1223  01B8  0870               	movf	?___aldiv,w
  1224  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1225  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1226  01BB  00BA               	movwf	??_BMP280_readTemperature+12
  1227  01BC  0871               	movf	?___aldiv+1,w
  1228  01BD  00BB               	movwf	??_BMP280_readTemperature+13
  1229  01BE  0872               	movf	?___aldiv+2,w
  1230  01BF  00BC               	movwf	??_BMP280_readTemperature+14
  1231  01C0  0873               	movf	?___aldiv+3,w
  1232  01C1  00BD               	movwf	??_BMP280_readTemperature+15
  1233  01C2  0836               	movf	??_BMP280_readTemperature+8,w
  1234  01C3  02BA               	subwf	??_BMP280_readTemperature+12,f
  1235  01C4  0837               	movf	??_BMP280_readTemperature+9,w
  1236  01C5  1C03               	skipc
  1237  01C6  0F37               	incfsz	??_BMP280_readTemperature+9,w
  1238  01C7  29C9               	goto	u951
  1239  01C8  29CA               	goto	u952
  1240  01C9                     u951:
  1241  01C9  02BB               	subwf	??_BMP280_readTemperature+13,f
  1242  01CA                     u952:
  1243  01CA  0838               	movf	??_BMP280_readTemperature+10,w
  1244  01CB  1C03               	skipc
  1245  01CC  0F38               	incfsz	??_BMP280_readTemperature+10,w
  1246  01CD  29CF               	goto	u953
  1247  01CE  29D0               	goto	u954
  1248  01CF                     u953:
  1249  01CF  02BC               	subwf	??_BMP280_readTemperature+14,f
  1250  01D0                     u954:
  1251  01D0  0839               	movf	??_BMP280_readTemperature+11,w
  1252  01D1  1C03               	skipc
  1253  01D2  0F39               	incfsz	??_BMP280_readTemperature+11,w
  1254  01D3  29D5               	goto	u955
  1255  01D4  29D6               	goto	u956
  1256  01D5                     u955:
  1257  01D5  02BD               	subwf	??_BMP280_readTemperature+15,f
  1258  01D6                     u956:
  1259  01D6  083D               	movf	??_BMP280_readTemperature+15,w
  1260  01D7  00AD               	movwf	___lmul@multiplicand+3
  1261  01D8  083C               	movf	??_BMP280_readTemperature+14,w
  1262  01D9  00AC               	movwf	___lmul@multiplicand+2
  1263  01DA  083B               	movf	??_BMP280_readTemperature+13,w
  1264  01DB  00AB               	movwf	___lmul@multiplicand+1
  1265  01DC  083A               	movf	??_BMP280_readTemperature+12,w
  1266  01DD  00AA               	movwf	___lmul@multiplicand
  1267  01DE  120A  158A  2573  120A  118A  	fcall	___lmul
  1268  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1269  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1270  01E5  0829               	movf	?___lmul+3,w
  1271  01E6  00CE               	movwf	_BMP280_readTemperature$938+3
  1272  01E7  0828               	movf	?___lmul+2,w
  1273  01E8  00CD               	movwf	_BMP280_readTemperature$938+2
  1274  01E9  0827               	movf	?___lmul+1,w
  1275  01EA  00CC               	movwf	_BMP280_readTemperature$938+1
  1276  01EB  0826               	movf	?___lmul,w
  1277  01EC  00CB               	movwf	_BMP280_readTemperature$938
  1278                           
  1279                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1280  01ED  3000               	movlw	0
  1281  01EE  00F3               	movwf	___aldiv@divisor+3
  1282  01EF  3000               	movlw	0
  1283  01F0  00F2               	movwf	___aldiv@divisor+2
  1284  01F1  3010               	movlw	16
  1285  01F2  00F1               	movwf	___aldiv@divisor+1
  1286  01F3  3000               	movlw	0
  1287  01F4  00F0               	movwf	___aldiv@divisor
  1288  01F5  084E               	movf	_BMP280_readTemperature$938+3,w
  1289  01F6  00F7               	movwf	___aldiv@dividend+3
  1290  01F7  084D               	movf	_BMP280_readTemperature$938+2,w
  1291  01F8  00F6               	movwf	___aldiv@dividend+2
  1292  01F9  084C               	movf	_BMP280_readTemperature$938+1,w
  1293  01FA  00F5               	movwf	___aldiv@dividend+1
  1294  01FB  084B               	movf	_BMP280_readTemperature$938,w
  1295  01FC  00F4               	movwf	___aldiv@dividend
  1296  01FD  120A  118A  2016  120A  118A  	fcall	___aldiv
  1297  0202  0873               	movf	?___aldiv+3,w
  1298  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0205  00A9               	movwf	___lmul@multiplier+3
  1301  0206  0872               	movf	?___aldiv+2,w
  1302  0207  00A8               	movwf	___lmul@multiplier+2
  1303  0208  0871               	movf	?___aldiv+1,w
  1304  0209  00A7               	movwf	___lmul@multiplier+1
  1305  020A  0870               	movf	?___aldiv,w
  1306  020B  00A6               	movwf	___lmul@multiplier
  1307  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1308  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1309  020E  0828               	movf	(_BMP280_calib^(0+128)+4),w
  1310  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0211  00AA               	movwf	___lmul@multiplicand
  1313  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1314  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1315  0214  0829               	movf	((_BMP280_calib+1)^(0+128)+4),w
  1316  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0217  00AB               	movwf	___lmul@multiplicand+1
  1319  0218  3000               	movlw	0
  1320  0219  1BAB               	btfsc	___lmul@multiplicand+1,7
  1321  021A  30FF               	movlw	255
  1322  021B  00AC               	movwf	___lmul@multiplicand+2
  1323  021C  00AD               	movwf	___lmul@multiplicand+3
  1324  021D  120A  158A  2573  120A  118A  	fcall	___lmul
  1325  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0224  0829               	movf	?___lmul+3,w
  1328  0225  00C9               	movwf	_BMP280_readTemperature$939+3
  1329  0226  0828               	movf	?___lmul+2,w
  1330  0227  00C8               	movwf	_BMP280_readTemperature$939+2
  1331  0228  0827               	movf	?___lmul+1,w
  1332  0229  00C7               	movwf	_BMP280_readTemperature$939+1
  1333  022A  0826               	movf	?___lmul,w
  1334  022B  00C6               	movwf	_BMP280_readTemperature$939
  1335                           
  1336                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1337  022C  3000               	movlw	0
  1338  022D  00F3               	movwf	___aldiv@divisor+3
  1339  022E  3000               	movlw	0
  1340  022F  00F2               	movwf	___aldiv@divisor+2
  1341  0230  3040               	movlw	64
  1342  0231  00F1               	movwf	___aldiv@divisor+1
  1343  0232  3000               	movlw	0
  1344  0233  00F0               	movwf	___aldiv@divisor
  1345  0234  0849               	movf	_BMP280_readTemperature$939+3,w
  1346  0235  00F7               	movwf	___aldiv@dividend+3
  1347  0236  0848               	movf	_BMP280_readTemperature$939+2,w
  1348  0237  00F6               	movwf	___aldiv@dividend+2
  1349  0238  0847               	movf	_BMP280_readTemperature$939+1,w
  1350  0239  00F5               	movwf	___aldiv@dividend+1
  1351  023A  0846               	movf	_BMP280_readTemperature$939,w
  1352  023B  00F4               	movwf	___aldiv@dividend
  1353  023C  120A  118A  2016  120A  118A  	fcall	___aldiv
  1354  0241  0873               	movf	?___aldiv+3,w
  1355  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0244  00C5               	movwf	BMP280_readTemperature@var2+3
  1358  0245  0872               	movf	?___aldiv+2,w
  1359  0246  00C4               	movwf	BMP280_readTemperature@var2+2
  1360  0247  0871               	movf	?___aldiv+1,w
  1361  0248  00C3               	movwf	BMP280_readTemperature@var2+1
  1362  0249  0870               	movf	?___aldiv,w
  1363  024A  00C2               	movwf	BMP280_readTemperature@var2
  1364  024B                     l1180:
  1365                           
  1366                           ;BMP280.c: 256:   t_fine = var1 + var2;
  1367  024B  083E               	movf	BMP280_readTemperature@var1,w
  1368  024C  0742               	addwf	BMP280_readTemperature@var2,w
  1369  024D  00AE               	movwf	??_BMP280_readTemperature
  1370  024E  3000               	movlw	0
  1371  024F  1803               	skipnc
  1372  0250  3001               	movlw	1
  1373  0251  073F               	addwf	BMP280_readTemperature@var1+1,w
  1374  0252  01B0               	clrf	??_BMP280_readTemperature+2
  1375  0253  1803               	skipnc
  1376  0254  0AB0               	incf	??_BMP280_readTemperature+2,f
  1377  0255  0743               	addwf	BMP280_readTemperature@var2+1,w
  1378  0256  00AF               	movwf	??_BMP280_readTemperature+1
  1379  0257  1803               	skipnc
  1380  0258  0AB0               	incf	??_BMP280_readTemperature+2,f
  1381  0259  0840               	movf	BMP280_readTemperature@var1+2,w
  1382  025A  0730               	addwf	??_BMP280_readTemperature+2,w
  1383  025B  01B1               	clrf	??_BMP280_readTemperature+3
  1384  025C  1803               	skipnc
  1385  025D  0AB1               	incf	??_BMP280_readTemperature+3,f
  1386  025E  0744               	addwf	BMP280_readTemperature@var2+2,w
  1387  025F  00B0               	movwf	??_BMP280_readTemperature+2
  1388  0260  1803               	skipnc
  1389  0261  0AB1               	incf	??_BMP280_readTemperature+3,f
  1390  0262  0841               	movf	BMP280_readTemperature@var1+3,w
  1391  0263  0731               	addwf	??_BMP280_readTemperature+3,w
  1392  0264  0745               	addwf	BMP280_readTemperature@var2+3,w
  1393  0265  00B1               	movwf	??_BMP280_readTemperature+3
  1394  0266  0831               	movf	??_BMP280_readTemperature+3,w
  1395  0267  00E1               	movwf	_t_fine+3
  1396  0268  0830               	movf	??_BMP280_readTemperature+2,w
  1397  0269  00E0               	movwf	_t_fine+2
  1398  026A  082F               	movf	??_BMP280_readTemperature+1,w
  1399  026B  00DF               	movwf	_t_fine+1
  1400  026C  082E               	movf	??_BMP280_readTemperature,w
  1401  026D  00DE               	movwf	_t_fine
  1402  026E                     l1182:
  1403                           
  1404                           ;BMP280.c: 258:   *temp = (t_fine * 5 + 128) / 256;
  1405  026E  3000               	movlw	0
  1406  026F  00F3               	movwf	___aldiv@divisor+3
  1407  0270  3000               	movlw	0
  1408  0271  00F2               	movwf	___aldiv@divisor+2
  1409  0272  3001               	movlw	1
  1410  0273  00F1               	movwf	___aldiv@divisor+1
  1411  0274  3000               	movlw	0
  1412  0275  00F0               	movwf	___aldiv@divisor
  1413  0276  3080               	movlw	128
  1414  0277  00AE               	movwf	??_BMP280_readTemperature
  1415  0278  3000               	movlw	0
  1416  0279  00AF               	movwf	??_BMP280_readTemperature+1
  1417  027A  3000               	movlw	0
  1418  027B  00B0               	movwf	??_BMP280_readTemperature+2
  1419  027C  3000               	movlw	0
  1420  027D  00B1               	movwf	??_BMP280_readTemperature+3
  1421  027E  0861               	movf	_t_fine+3,w
  1422  027F  00A9               	movwf	___lmul@multiplier+3
  1423  0280  0860               	movf	_t_fine+2,w
  1424  0281  00A8               	movwf	___lmul@multiplier+2
  1425  0282  085F               	movf	_t_fine+1,w
  1426  0283  00A7               	movwf	___lmul@multiplier+1
  1427  0284  085E               	movf	_t_fine,w
  1428  0285  00A6               	movwf	___lmul@multiplier
  1429  0286  3000               	movlw	0
  1430  0287  00AD               	movwf	___lmul@multiplicand+3
  1431  0288  3000               	movlw	0
  1432  0289  00AC               	movwf	___lmul@multiplicand+2
  1433  028A  3000               	movlw	0
  1434  028B  00AB               	movwf	___lmul@multiplicand+1
  1435  028C  3005               	movlw	5
  1436  028D  00AA               	movwf	___lmul@multiplicand
  1437  028E  120A  158A  2573  120A  118A  	fcall	___lmul
  1438  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0295  0826               	movf	?___lmul,w
  1441  0296  07AE               	addwf	??_BMP280_readTemperature,f
  1442  0297  0827               	movf	?___lmul+1,w
  1443  0298  1803               	skipnc
  1444  0299  0F27               	incfsz	?___lmul+1,w
  1445  029A  2A9C               	goto	u960
  1446  029B  2A9D               	goto	u961
  1447  029C                     u960:
  1448  029C  07AF               	addwf	??_BMP280_readTemperature+1,f
  1449  029D                     u961:
  1450  029D  0828               	movf	?___lmul+2,w
  1451  029E  1803               	skipnc
  1452  029F  0F28               	incfsz	?___lmul+2,w
  1453  02A0  2AA2               	goto	u962
  1454  02A1  2AA3               	goto	u963
  1455  02A2                     u962:
  1456  02A2  07B0               	addwf	??_BMP280_readTemperature+2,f
  1457  02A3                     u963:
  1458  02A3  0829               	movf	?___lmul+3,w
  1459  02A4  1803               	skipnc
  1460  02A5  0A29               	incf	?___lmul+3,w
  1461  02A6  07B1               	addwf	??_BMP280_readTemperature+3,f
  1462  02A7  0831               	movf	??_BMP280_readTemperature+3,w
  1463  02A8  00F7               	movwf	___aldiv@dividend+3
  1464  02A9  0830               	movf	??_BMP280_readTemperature+2,w
  1465  02AA  00F6               	movwf	___aldiv@dividend+2
  1466  02AB  082F               	movf	??_BMP280_readTemperature+1,w
  1467  02AC  00F5               	movwf	___aldiv@dividend+1
  1468  02AD  082E               	movf	??_BMP280_readTemperature,w
  1469  02AE  00F4               	movwf	___aldiv@dividend
  1470  02AF  120A  118A  2016  120A  118A  	fcall	___aldiv
  1471  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1472  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1473  02B6  084A               	movf	BMP280_readTemperature@temp,w
  1474  02B7  0084               	movwf	4
  1475  02B8  0870               	movf	?___aldiv,w
  1476  02B9  1383               	bcf	3,7	;select IRP bank0
  1477  02BA  0080               	movwf	0
  1478  02BB  0A84               	incf	4,f
  1479  02BC  0871               	movf	?___aldiv+1,w
  1480  02BD  0080               	movwf	0
  1481  02BE  0A84               	incf	4,f
  1482  02BF  0872               	movf	?___aldiv+2,w
  1483  02C0  0080               	movwf	0
  1484  02C1  0A84               	incf	4,f
  1485  02C2  0873               	movf	?___aldiv+3,w
  1486  02C3  0080               	movwf	0
  1487  02C4                     l148:
  1488  02C4  0008               	return
  1489  02C5                     __end_of_BMP280_readTemperature:
  1490                           
  1491                           	psect	text3
  1492  0E6D                     __ptext3:	
  1493 ;; *************** function _BMP280_Update *****************
  1494 ;; Defined at:
  1495 ;;		line 211 in file "BMP280.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  ret             4   10[COMMON] struct .
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         4       0       0       0       0
  1511 ;;      Temps:          4       0       0       0       0
  1512 ;;      Totals:         8       0       0       0       0
  1513 ;;Total ram usage:        8 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    2
  1516 ;; This function calls:
  1517 ;;		_I2C_Master_Read
  1518 ;;		_I2C_Master_Start
  1519 ;;		_I2C_Master_Stop
  1520 ;;		_I2C_Master_Write
  1521 ;; This function is called by:
  1522 ;;		_BMP280_readTemperature
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _BMP280_Update
  1528  0E6D                     _BMP280_Update:
  1529  0E6D                     l1052:	
  1530                           ;incstack = 0
  1531                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  1532                           
  1533                           
  1534                           ;BMP280.c: 217:   } ret;;BMP280.c: 218:   ret.b[3] = 0x00;
  1535  0E6D  01FD               	clrf	BMP280_Update@ret+3
  1536  0E6E                     l1054:
  1537                           
  1538                           ;BMP280.c: 220:   I2C_Master_Start();
  1539  0E6E  120A  158A  2435  120A  158A  	fcall	_I2C_Master_Start
  1540  0E73                     l1056:
  1541                           
  1542                           ;BMP280.c: 221:   I2C_Master_Write( 0xEE);
  1543  0E73  30EE               	movlw	238
  1544  0E74  00F0               	movwf	I2C_Master_Write@d
  1545  0E75  3000               	movlw	0
  1546  0E76  00F1               	movwf	I2C_Master_Write@d+1
  1547  0E77  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  1548  0E7C                     l1058:
  1549                           
  1550                           ;BMP280.c: 222:   I2C_Master_Write( 0xF7);
  1551  0E7C  30F7               	movlw	247
  1552  0E7D  00F0               	movwf	I2C_Master_Write@d
  1553  0E7E  3000               	movlw	0
  1554  0E7F  00F1               	movwf	I2C_Master_Write@d+1
  1555  0E80  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  1556  0E85                     l1060:
  1557                           
  1558                           ;BMP280.c: 223:   I2C_Master_Start();
  1559  0E85  120A  158A  2435  120A  158A  	fcall	_I2C_Master_Start
  1560  0E8A                     l1062:
  1561                           
  1562                           ;BMP280.c: 224:   I2C_Master_Write( 0xEE | 1);
  1563  0E8A  30EF               	movlw	239
  1564  0E8B  00F0               	movwf	I2C_Master_Write@d
  1565  0E8C  3000               	movlw	0
  1566  0E8D  00F1               	movwf	I2C_Master_Write@d+1
  1567  0E8E  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  1568  0E93                     l1064:
  1569                           
  1570                           ;BMP280.c: 225:   ret.b[2] = I2C_Master_Read( 1);
  1571  0E93  3001               	movlw	1
  1572  0E94  00F0               	movwf	I2C_Master_Read@a
  1573  0E95  3000               	movlw	0
  1574  0E96  00F1               	movwf	I2C_Master_Read@a+1
  1575  0E97  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  1576  0E9C  0870               	movf	?_I2C_Master_Read,w
  1577  0E9D  00F6               	movwf	??_BMP280_Update
  1578  0E9E  0876               	movf	??_BMP280_Update,w
  1579  0E9F  00FC               	movwf	BMP280_Update@ret+2
  1580  0EA0                     l1066:
  1581                           
  1582                           ;BMP280.c: 226:   ret.b[1] = I2C_Master_Read( 1);
  1583  0EA0  3001               	movlw	1
  1584  0EA1  00F0               	movwf	I2C_Master_Read@a
  1585  0EA2  3000               	movlw	0
  1586  0EA3  00F1               	movwf	I2C_Master_Read@a+1
  1587  0EA4  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  1588  0EA9  0870               	movf	?_I2C_Master_Read,w
  1589  0EAA  00F6               	movwf	??_BMP280_Update
  1590  0EAB  0876               	movf	??_BMP280_Update,w
  1591  0EAC  00FB               	movwf	BMP280_Update@ret+1
  1592  0EAD                     l1068:
  1593                           
  1594                           ;BMP280.c: 227:   ret.b[0] = I2C_Master_Read( 1);
  1595  0EAD  3001               	movlw	1
  1596  0EAE  00F0               	movwf	I2C_Master_Read@a
  1597  0EAF  3000               	movlw	0
  1598  0EB0  00F1               	movwf	I2C_Master_Read@a+1
  1599  0EB1  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  1600  0EB6  0870               	movf	?_I2C_Master_Read,w
  1601  0EB7  00F6               	movwf	??_BMP280_Update
  1602  0EB8  0876               	movf	??_BMP280_Update,w
  1603  0EB9  00FA               	movwf	BMP280_Update@ret
  1604  0EBA                     l1070:
  1605                           
  1606                           ;BMP280.c: 229:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  1607  0EBA  087A               	movf	BMP280_Update@ret,w
  1608  0EBB  00F6               	movwf	??_BMP280_Update
  1609  0EBC  087B               	movf	BMP280_Update@ret+1,w
  1610  0EBD  00F7               	movwf	??_BMP280_Update+1
  1611  0EBE  087C               	movf	BMP280_Update@ret+2,w
  1612  0EBF  00F8               	movwf	??_BMP280_Update+2
  1613  0EC0  087D               	movf	BMP280_Update@ret+3,w
  1614  0EC1  00F9               	movwf	??_BMP280_Update+3
  1615  0EC2  3004               	movlw	4
  1616  0EC3                     u665:
  1617  0EC3  1003               	clrc
  1618  0EC4  0CF9               	rrf	??_BMP280_Update+3,f
  1619  0EC5  0CF8               	rrf	??_BMP280_Update+2,f
  1620  0EC6  0CF7               	rrf	??_BMP280_Update+1,f
  1621  0EC7  0CF6               	rrf	??_BMP280_Update,f
  1622  0EC8                     u660:
  1623  0EC8  3EFF               	addlw	-1
  1624  0EC9  1D03               	skipz
  1625  0ECA  2EC3               	goto	u665
  1626  0ECB  30FF               	movlw	255
  1627  0ECC  0576               	andwf	??_BMP280_Update,w
  1628  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  1629  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  1630  0ECF  00A0               	movwf	_adc_P^(0+128)
  1631  0ED0  30FF               	movlw	255
  1632  0ED1  0577               	andwf	??_BMP280_Update+1,w
  1633  0ED2  00A1               	movwf	(_adc_P+1)^(0+128)
  1634  0ED3  300F               	movlw	15
  1635  0ED4  0578               	andwf	??_BMP280_Update+2,w
  1636  0ED5  00A2               	movwf	(_adc_P+2)^(0+128)
  1637  0ED6  3000               	movlw	0
  1638  0ED7  0579               	andwf	??_BMP280_Update+3,w
  1639  0ED8  00A3               	movwf	(_adc_P+3)^(0+128)
  1640  0ED9                     l1072:
  1641                           
  1642                           ;BMP280.c: 231:   ret.b[2] = I2C_Master_Read(1);
  1643  0ED9  3001               	movlw	1
  1644  0EDA  00F0               	movwf	I2C_Master_Read@a
  1645  0EDB  3000               	movlw	0
  1646  0EDC  00F1               	movwf	I2C_Master_Read@a+1
  1647  0EDD  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  1648  0EE2  0870               	movf	?_I2C_Master_Read,w
  1649  0EE3  00F6               	movwf	??_BMP280_Update
  1650  0EE4  0876               	movf	??_BMP280_Update,w
  1651  0EE5  00FC               	movwf	BMP280_Update@ret+2
  1652  0EE6                     l1074:
  1653                           
  1654                           ;BMP280.c: 232:   ret.b[1] = I2C_Master_Read(1);
  1655  0EE6  3001               	movlw	1
  1656  0EE7  00F0               	movwf	I2C_Master_Read@a
  1657  0EE8  3000               	movlw	0
  1658  0EE9  00F1               	movwf	I2C_Master_Read@a+1
  1659  0EEA  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  1660  0EEF  0870               	movf	?_I2C_Master_Read,w
  1661  0EF0  00F6               	movwf	??_BMP280_Update
  1662  0EF1  0876               	movf	??_BMP280_Update,w
  1663  0EF2  00FB               	movwf	BMP280_Update@ret+1
  1664  0EF3                     l1076:
  1665                           
  1666                           ;BMP280.c: 233:   ret.b[0] = I2C_Master_Read(0);
  1667  0EF3  3000               	movlw	0
  1668  0EF4  00F0               	movwf	I2C_Master_Read@a
  1669  0EF5  00F1               	movwf	I2C_Master_Read@a+1
  1670  0EF6  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  1671  0EFB  0870               	movf	?_I2C_Master_Read,w
  1672  0EFC  00F6               	movwf	??_BMP280_Update
  1673  0EFD  0876               	movf	??_BMP280_Update,w
  1674  0EFE  00FA               	movwf	BMP280_Update@ret
  1675  0EFF                     l1078:
  1676                           
  1677                           ;BMP280.c: 234:   I2C_Master_Stop();
  1678  0EFF  120A  158A  243E  120A  158A  	fcall	_I2C_Master_Stop
  1679  0F04                     l1080:
  1680                           
  1681                           ;BMP280.c: 236:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  1682  0F04  087A               	movf	BMP280_Update@ret,w
  1683  0F05  00F6               	movwf	??_BMP280_Update
  1684  0F06  087B               	movf	BMP280_Update@ret+1,w
  1685  0F07  00F7               	movwf	??_BMP280_Update+1
  1686  0F08  087C               	movf	BMP280_Update@ret+2,w
  1687  0F09  00F8               	movwf	??_BMP280_Update+2
  1688  0F0A  087D               	movf	BMP280_Update@ret+3,w
  1689  0F0B  00F9               	movwf	??_BMP280_Update+3
  1690  0F0C  3004               	movlw	4
  1691  0F0D                     u675:
  1692  0F0D  1003               	clrc
  1693  0F0E  0CF9               	rrf	??_BMP280_Update+3,f
  1694  0F0F  0CF8               	rrf	??_BMP280_Update+2,f
  1695  0F10  0CF7               	rrf	??_BMP280_Update+1,f
  1696  0F11  0CF6               	rrf	??_BMP280_Update,f
  1697  0F12                     u670:
  1698  0F12  3EFF               	addlw	-1
  1699  0F13  1D03               	skipz
  1700  0F14  2F0D               	goto	u675
  1701  0F15  30FF               	movlw	255
  1702  0F16  0576               	andwf	??_BMP280_Update,w
  1703  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0F19  00E2               	movwf	_adc_T
  1706  0F1A  30FF               	movlw	255
  1707  0F1B  0577               	andwf	??_BMP280_Update+1,w
  1708  0F1C  00E3               	movwf	_adc_T+1
  1709  0F1D  300F               	movlw	15
  1710  0F1E  0578               	andwf	??_BMP280_Update+2,w
  1711  0F1F  00E4               	movwf	_adc_T+2
  1712  0F20  3000               	movlw	0
  1713  0F21  0579               	andwf	??_BMP280_Update+3,w
  1714  0F22  00E5               	movwf	_adc_T+3
  1715  0F23                     l145:
  1716  0F23  0008               	return
  1717  0F24                     __end_of_BMP280_Update:
  1718                           
  1719                           	psect	text4
  1720  02C5                     __ptext4:	
  1721 ;; *************** function _BMP280_readPressure *****************
  1722 ;; Defined at:
  1723 ;;		line 266 in file "BMP280.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  pres            1    wreg     PTR unsigned long 
  1726 ;;		 -> pressure(4), 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  pres            1   42[BANK0 ] PTR unsigned long 
  1729 ;;		 -> pressure(4), 
  1730 ;;  var1            4   55[BANK0 ] long 
  1731 ;;  p               4   51[BANK0 ] unsigned long 
  1732 ;;  var2            4   47[BANK0 ] long 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  2   12[None  ] int 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0      29       0       0       0
  1744 ;;      Temps:          0      16       0       0       0
  1745 ;;      Totals:         0      45       0       0       0
  1746 ;;Total ram usage:       45 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		___aldiv
  1751 ;;		___lldiv
  1752 ;;		___lmul
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _BMP280_readPressure
  1760  02C5                     _BMP280_readPressure:
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1764                           ;BMP280_readPressure@pres stored from wreg
  1765  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1766  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1767  02C7  00CA               	movwf	BMP280_readPressure@pres
  1768  02C8                     l1186:
  1769                           
  1770                           ;BMP280.c: 266: int BMP280_readPressure(uint32_t *pres);BMP280.c: 267: {;BMP280.c: 268: 
      +                            int32_t var1, var2;;BMP280.c: 269:   uint32_t p;;BMP280.c: 272:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  1771  02C8  3000               	movlw	0
  1772  02C9  00AE               	movwf	??_BMP280_readPressure
  1773  02CA  3006               	movlw	6
  1774  02CB  00AF               	movwf	??_BMP280_readPressure+1
  1775  02CC  30FF               	movlw	255
  1776  02CD  00B0               	movwf	??_BMP280_readPressure+2
  1777  02CE  30FF               	movlw	255
  1778  02CF  00B1               	movwf	??_BMP280_readPressure+3
  1779  02D0  3000               	movlw	0
  1780  02D1  00F3               	movwf	___aldiv@divisor+3
  1781  02D2  3000               	movlw	0
  1782  02D3  00F2               	movwf	___aldiv@divisor+2
  1783  02D4  3000               	movlw	0
  1784  02D5  00F1               	movwf	___aldiv@divisor+1
  1785  02D6  3002               	movlw	2
  1786  02D7  00F0               	movwf	___aldiv@divisor
  1787  02D8  0861               	movf	_t_fine+3,w
  1788  02D9  00F7               	movwf	___aldiv@dividend+3
  1789  02DA  0860               	movf	_t_fine+2,w
  1790  02DB  00F6               	movwf	___aldiv@dividend+2
  1791  02DC  085F               	movf	_t_fine+1,w
  1792  02DD  00F5               	movwf	___aldiv@dividend+1
  1793  02DE  085E               	movf	_t_fine,w
  1794  02DF  00F4               	movwf	___aldiv@dividend
  1795  02E0  120A  118A  2016  120A  118A  	fcall	___aldiv
  1796  02E5  0870               	movf	?___aldiv,w
  1797  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1798  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1799  02E8  07AE               	addwf	??_BMP280_readPressure,f
  1800  02E9  0871               	movf	?___aldiv+1,w
  1801  02EA  1803               	skipnc
  1802  02EB  0F71               	incfsz	?___aldiv+1,w
  1803  02EC  2AEE               	goto	u970
  1804  02ED  2AEF               	goto	u971
  1805  02EE                     u970:
  1806  02EE  07AF               	addwf	??_BMP280_readPressure+1,f
  1807  02EF                     u971:
  1808  02EF  0872               	movf	?___aldiv+2,w
  1809  02F0  1803               	skipnc
  1810  02F1  0F72               	incfsz	?___aldiv+2,w
  1811  02F2  2AF4               	goto	u972
  1812  02F3  2AF5               	goto	u973
  1813  02F4                     u972:
  1814  02F4  07B0               	addwf	??_BMP280_readPressure+2,f
  1815  02F5                     u973:
  1816  02F5  0873               	movf	?___aldiv+3,w
  1817  02F6  1803               	skipnc
  1818  02F7  0A73               	incf	?___aldiv+3,w
  1819  02F8  07B1               	addwf	??_BMP280_readPressure+3,f
  1820  02F9  0831               	movf	??_BMP280_readPressure+3,w
  1821  02FA  00DA               	movwf	BMP280_readPressure@var1+3
  1822  02FB  0830               	movf	??_BMP280_readPressure+2,w
  1823  02FC  00D9               	movwf	BMP280_readPressure@var1+2
  1824  02FD  082F               	movf	??_BMP280_readPressure+1,w
  1825  02FE  00D8               	movwf	BMP280_readPressure@var1+1
  1826  02FF  082E               	movf	??_BMP280_readPressure,w
  1827  0300  00D7               	movwf	BMP280_readPressure@var1
  1828                           
  1829                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1830  0301  3000               	movlw	0
  1831  0302  00F3               	movwf	___aldiv@divisor+3
  1832  0303  3000               	movlw	0
  1833  0304  00F2               	movwf	___aldiv@divisor+2
  1834  0305  3000               	movlw	0
  1835  0306  00F1               	movwf	___aldiv@divisor+1
  1836  0307  3004               	movlw	4
  1837  0308  00F0               	movwf	___aldiv@divisor
  1838  0309  085A               	movf	BMP280_readPressure@var1+3,w
  1839  030A  00F7               	movwf	___aldiv@dividend+3
  1840  030B  0859               	movf	BMP280_readPressure@var1+2,w
  1841  030C  00F6               	movwf	___aldiv@dividend+2
  1842  030D  0858               	movf	BMP280_readPressure@var1+1,w
  1843  030E  00F5               	movwf	___aldiv@dividend+1
  1844  030F  0857               	movf	BMP280_readPressure@var1,w
  1845  0310  00F4               	movwf	___aldiv@dividend
  1846  0311  120A  118A  2016  120A  118A  	fcall	___aldiv
  1847  0316  0873               	movf	?___aldiv+3,w
  1848  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1849  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1850  0319  00A9               	movwf	___lmul@multiplier+3
  1851  031A  0872               	movf	?___aldiv+2,w
  1852  031B  00A8               	movwf	___lmul@multiplier+2
  1853  031C  0871               	movf	?___aldiv+1,w
  1854  031D  00A7               	movwf	___lmul@multiplier+1
  1855  031E  0870               	movf	?___aldiv,w
  1856  031F  00A6               	movwf	___lmul@multiplier
  1857  0320  3000               	movlw	0
  1858  0321  00F3               	movwf	___aldiv@divisor+3
  1859  0322  3000               	movlw	0
  1860  0323  00F2               	movwf	___aldiv@divisor+2
  1861  0324  3000               	movlw	0
  1862  0325  00F1               	movwf	___aldiv@divisor+1
  1863  0326  3004               	movlw	4
  1864  0327  00F0               	movwf	___aldiv@divisor
  1865  0328  085A               	movf	BMP280_readPressure@var1+3,w
  1866  0329  00F7               	movwf	___aldiv@dividend+3
  1867  032A  0859               	movf	BMP280_readPressure@var1+2,w
  1868  032B  00F6               	movwf	___aldiv@dividend+2
  1869  032C  0858               	movf	BMP280_readPressure@var1+1,w
  1870  032D  00F5               	movwf	___aldiv@dividend+1
  1871  032E  0857               	movf	BMP280_readPressure@var1,w
  1872  032F  00F4               	movwf	___aldiv@dividend
  1873  0330  120A  118A  2016  120A  118A  	fcall	___aldiv
  1874  0335  0873               	movf	?___aldiv+3,w
  1875  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0338  00AD               	movwf	___lmul@multiplicand+3
  1878  0339  0872               	movf	?___aldiv+2,w
  1879  033A  00AC               	movwf	___lmul@multiplicand+2
  1880  033B  0871               	movf	?___aldiv+1,w
  1881  033C  00AB               	movwf	___lmul@multiplicand+1
  1882  033D  0870               	movf	?___aldiv,w
  1883  033E  00AA               	movwf	___lmul@multiplicand
  1884  033F  120A  158A  2573  120A  118A  	fcall	___lmul
  1885  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0346  0829               	movf	?___lmul+3,w
  1888  0347  00CE               	movwf	_BMP280_readPressure$940+3
  1889  0348  0828               	movf	?___lmul+2,w
  1890  0349  00CD               	movwf	_BMP280_readPressure$940+2
  1891  034A  0827               	movf	?___lmul+1,w
  1892  034B  00CC               	movwf	_BMP280_readPressure$940+1
  1893  034C  0826               	movf	?___lmul,w
  1894  034D  00CB               	movwf	_BMP280_readPressure$940
  1895                           
  1896                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1897  034E  3000               	movlw	0
  1898  034F  00F3               	movwf	___aldiv@divisor+3
  1899  0350  3000               	movlw	0
  1900  0351  00F2               	movwf	___aldiv@divisor+2
  1901  0352  3008               	movlw	8
  1902  0353  00F1               	movwf	___aldiv@divisor+1
  1903  0354  3000               	movlw	0
  1904  0355  00F0               	movwf	___aldiv@divisor
  1905  0356  084E               	movf	_BMP280_readPressure$940+3,w
  1906  0357  00F7               	movwf	___aldiv@dividend+3
  1907  0358  084D               	movf	_BMP280_readPressure$940+2,w
  1908  0359  00F6               	movwf	___aldiv@dividend+2
  1909  035A  084C               	movf	_BMP280_readPressure$940+1,w
  1910  035B  00F5               	movwf	___aldiv@dividend+1
  1911  035C  084B               	movf	_BMP280_readPressure$940,w
  1912  035D  00F4               	movwf	___aldiv@dividend
  1913  035E  120A  118A  2016  120A  118A  	fcall	___aldiv
  1914  0363  0873               	movf	?___aldiv+3,w
  1915  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0366  00A9               	movwf	___lmul@multiplier+3
  1918  0367  0872               	movf	?___aldiv+2,w
  1919  0368  00A8               	movwf	___lmul@multiplier+2
  1920  0369  0871               	movf	?___aldiv+1,w
  1921  036A  00A7               	movwf	___lmul@multiplier+1
  1922  036B  0870               	movf	?___aldiv,w
  1923  036C  00A6               	movwf	___lmul@multiplier
  1924  036D  1683               	bsf	3,5	;RP0=1, select bank1
  1925  036E  1303               	bcf	3,6	;RP1=0, select bank1
  1926  036F  0834               	movf	(_BMP280_calib^(0+128)+16),w
  1927  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0372  00AA               	movwf	___lmul@multiplicand
  1930  0373  1683               	bsf	3,5	;RP0=1, select bank1
  1931  0374  1303               	bcf	3,6	;RP1=0, select bank1
  1932  0375  0835               	movf	((_BMP280_calib+1)^(0+128)+16),w
  1933  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0378  00AB               	movwf	___lmul@multiplicand+1
  1936  0379  3000               	movlw	0
  1937  037A  1BAB               	btfsc	___lmul@multiplicand+1,7
  1938  037B  30FF               	movlw	255
  1939  037C  00AC               	movwf	___lmul@multiplicand+2
  1940  037D  00AD               	movwf	___lmul@multiplicand+3
  1941  037E  120A  158A  2573  120A  118A  	fcall	___lmul
  1942  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0385  0829               	movf	?___lmul+3,w
  1945  0386  00D2               	movwf	BMP280_readPressure@var2+3
  1946  0387  0828               	movf	?___lmul+2,w
  1947  0388  00D1               	movwf	BMP280_readPressure@var2+2
  1948  0389  0827               	movf	?___lmul+1,w
  1949  038A  00D0               	movwf	BMP280_readPressure@var2+1
  1950  038B  0826               	movf	?___lmul,w
  1951  038C  00CF               	movwf	BMP280_readPressure@var2
  1952                           
  1953                           ;BMP280.c: 275:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  1954  038D  084F               	movf	BMP280_readPressure@var2,w
  1955  038E  00AE               	movwf	??_BMP280_readPressure
  1956  038F  0850               	movf	BMP280_readPressure@var2+1,w
  1957  0390  00AF               	movwf	??_BMP280_readPressure+1
  1958  0391  0851               	movf	BMP280_readPressure@var2+2,w
  1959  0392  00B0               	movwf	??_BMP280_readPressure+2
  1960  0393  0852               	movf	BMP280_readPressure@var2+3,w
  1961  0394  00B1               	movwf	??_BMP280_readPressure+3
  1962  0395  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0396  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0397  0832               	movf	(_BMP280_calib^(0+128)+14),w
  1965  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1967  039A  00A6               	movwf	___lmul@multiplier
  1968  039B  1683               	bsf	3,5	;RP0=1, select bank1
  1969  039C  1303               	bcf	3,6	;RP1=0, select bank1
  1970  039D  0833               	movf	((_BMP280_calib+1)^(0+128)+14),w
  1971  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1972  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1973  03A0  00A7               	movwf	___lmul@multiplier+1
  1974  03A1  3000               	movlw	0
  1975  03A2  1BA7               	btfsc	___lmul@multiplier+1,7
  1976  03A3  30FF               	movlw	255
  1977  03A4  00A8               	movwf	___lmul@multiplier+2
  1978  03A5  00A9               	movwf	___lmul@multiplier+3
  1979  03A6  085A               	movf	BMP280_readPressure@var1+3,w
  1980  03A7  00AD               	movwf	___lmul@multiplicand+3
  1981  03A8  0859               	movf	BMP280_readPressure@var1+2,w
  1982  03A9  00AC               	movwf	___lmul@multiplicand+2
  1983  03AA  0858               	movf	BMP280_readPressure@var1+1,w
  1984  03AB  00AB               	movwf	___lmul@multiplicand+1
  1985  03AC  0857               	movf	BMP280_readPressure@var1,w
  1986  03AD  00AA               	movwf	___lmul@multiplicand
  1987  03AE  120A  158A  2573  120A  118A  	fcall	___lmul
  1988  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1989  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1990  03B5  0826               	movf	?___lmul,w
  1991  03B6  00B2               	movwf	??_BMP280_readPressure+4
  1992  03B7  0827               	movf	?___lmul+1,w
  1993  03B8  00B3               	movwf	??_BMP280_readPressure+5
  1994  03B9  0828               	movf	?___lmul+2,w
  1995  03BA  00B4               	movwf	??_BMP280_readPressure+6
  1996  03BB  0829               	movf	?___lmul+3,w
  1997  03BC  00B5               	movwf	??_BMP280_readPressure+7
  1998  03BD  3001               	movlw	1
  1999  03BE                     u985:
  2000  03BE  1003               	clrc
  2001  03BF  0DB2               	rlf	??_BMP280_readPressure+4,f
  2002  03C0  0DB3               	rlf	??_BMP280_readPressure+5,f
  2003  03C1  0DB4               	rlf	??_BMP280_readPressure+6,f
  2004  03C2  0DB5               	rlf	??_BMP280_readPressure+7,f
  2005  03C3                     u980:
  2006  03C3  3EFF               	addlw	-1
  2007  03C4  1D03               	skipz
  2008  03C5  2BBE               	goto	u985
  2009  03C6  0832               	movf	??_BMP280_readPressure+4,w
  2010  03C7  07AE               	addwf	??_BMP280_readPressure,f
  2011  03C8  0833               	movf	??_BMP280_readPressure+5,w
  2012  03C9  1803               	skipnc
  2013  03CA  0F33               	incfsz	??_BMP280_readPressure+5,w
  2014  03CB  2BCD               	goto	u990
  2015  03CC  2BCE               	goto	u991
  2016  03CD                     u990:
  2017  03CD  07AF               	addwf	??_BMP280_readPressure+1,f
  2018  03CE                     u991:
  2019  03CE  0834               	movf	??_BMP280_readPressure+6,w
  2020  03CF  1803               	skipnc
  2021  03D0  0F34               	incfsz	??_BMP280_readPressure+6,w
  2022  03D1  2BD3               	goto	u992
  2023  03D2  2BD4               	goto	u993
  2024  03D3                     u992:
  2025  03D3  07B0               	addwf	??_BMP280_readPressure+2,f
  2026  03D4                     u993:
  2027  03D4  0835               	movf	??_BMP280_readPressure+7,w
  2028  03D5  1803               	skipnc
  2029  03D6  0A35               	incf	??_BMP280_readPressure+7,w
  2030  03D7  07B1               	addwf	??_BMP280_readPressure+3,f
  2031  03D8  0831               	movf	??_BMP280_readPressure+3,w
  2032  03D9  00D2               	movwf	BMP280_readPressure@var2+3
  2033  03DA  0830               	movf	??_BMP280_readPressure+2,w
  2034  03DB  00D1               	movwf	BMP280_readPressure@var2+2
  2035  03DC  082F               	movf	??_BMP280_readPressure+1,w
  2036  03DD  00D0               	movwf	BMP280_readPressure@var2+1
  2037  03DE  082E               	movf	??_BMP280_readPressure,w
  2038  03DF  00CF               	movwf	BMP280_readPressure@var2
  2039                           
  2040                           ;BMP280.c: 276:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  2041  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2042  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2043  03E2  0830               	movf	(_BMP280_calib^(0+128)+12),w
  2044  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2045  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2046  03E5  00AE               	movwf	??_BMP280_readPressure
  2047  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2048  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2049  03E8  0831               	movf	((_BMP280_calib+1)^(0+128)+12),w
  2050  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2051  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2052  03EB  00AF               	movwf	??_BMP280_readPressure+1
  2053  03EC  01B0               	clrf	??_BMP280_readPressure+2
  2054  03ED  01B1               	clrf	??_BMP280_readPressure+3
  2055  03EE  3010               	movlw	16
  2056  03EF                     u1005:
  2057  03EF  1003               	clrc
  2058  03F0  0DAE               	rlf	??_BMP280_readPressure,f
  2059  03F1  0DAF               	rlf	??_BMP280_readPressure+1,f
  2060  03F2  0DB0               	rlf	??_BMP280_readPressure+2,f
  2061  03F3  0DB1               	rlf	??_BMP280_readPressure+3,f
  2062  03F4                     u1000:
  2063  03F4  3EFF               	addlw	-1
  2064  03F5  1D03               	skipz
  2065  03F6  2BEF               	goto	u1005
  2066  03F7  3000               	movlw	0
  2067  03F8  00F3               	movwf	___aldiv@divisor+3
  2068  03F9  3000               	movlw	0
  2069  03FA  00F2               	movwf	___aldiv@divisor+2
  2070  03FB  3000               	movlw	0
  2071  03FC  00F1               	movwf	___aldiv@divisor+1
  2072  03FD  3004               	movlw	4
  2073  03FE  00F0               	movwf	___aldiv@divisor
  2074  03FF  0852               	movf	BMP280_readPressure@var2+3,w
  2075  0400  00F7               	movwf	___aldiv@dividend+3
  2076  0401  0851               	movf	BMP280_readPressure@var2+2,w
  2077  0402  00F6               	movwf	___aldiv@dividend+2
  2078  0403  0850               	movf	BMP280_readPressure@var2+1,w
  2079  0404  00F5               	movwf	___aldiv@dividend+1
  2080  0405  084F               	movf	BMP280_readPressure@var2,w
  2081  0406  00F4               	movwf	___aldiv@dividend
  2082  0407  120A  118A  2016  120A  118A  	fcall	___aldiv
  2083  040C  0870               	movf	?___aldiv,w
  2084  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2085  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2086  040F  07AE               	addwf	??_BMP280_readPressure,f
  2087  0410  0871               	movf	?___aldiv+1,w
  2088  0411  1803               	skipnc
  2089  0412  0F71               	incfsz	?___aldiv+1,w
  2090  0413  2C15               	goto	u1010
  2091  0414  2C16               	goto	u1011
  2092  0415                     u1010:
  2093  0415  07AF               	addwf	??_BMP280_readPressure+1,f
  2094  0416                     u1011:
  2095  0416  0872               	movf	?___aldiv+2,w
  2096  0417  1803               	skipnc
  2097  0418  0F72               	incfsz	?___aldiv+2,w
  2098  0419  2C1B               	goto	u1012
  2099  041A  2C1C               	goto	u1013
  2100  041B                     u1012:
  2101  041B  07B0               	addwf	??_BMP280_readPressure+2,f
  2102  041C                     u1013:
  2103  041C  0873               	movf	?___aldiv+3,w
  2104  041D  1803               	skipnc
  2105  041E  0A73               	incf	?___aldiv+3,w
  2106  041F  07B1               	addwf	??_BMP280_readPressure+3,f
  2107  0420  0831               	movf	??_BMP280_readPressure+3,w
  2108  0421  00D2               	movwf	BMP280_readPressure@var2+3
  2109  0422  0830               	movf	??_BMP280_readPressure+2,w
  2110  0423  00D1               	movwf	BMP280_readPressure@var2+2
  2111  0424  082F               	movf	??_BMP280_readPressure+1,w
  2112  0425  00D0               	movwf	BMP280_readPressure@var2+1
  2113  0426  082E               	movf	??_BMP280_readPressure,w
  2114  0427  00CF               	movwf	BMP280_readPressure@var2
  2115                           
  2116                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2117  0428  3000               	movlw	0
  2118  0429  00F3               	movwf	___aldiv@divisor+3
  2119  042A  3000               	movlw	0
  2120  042B  00F2               	movwf	___aldiv@divisor+2
  2121  042C  3000               	movlw	0
  2122  042D  00F1               	movwf	___aldiv@divisor+1
  2123  042E  3004               	movlw	4
  2124  042F  00F0               	movwf	___aldiv@divisor
  2125  0430  085A               	movf	BMP280_readPressure@var1+3,w
  2126  0431  00F7               	movwf	___aldiv@dividend+3
  2127  0432  0859               	movf	BMP280_readPressure@var1+2,w
  2128  0433  00F6               	movwf	___aldiv@dividend+2
  2129  0434  0858               	movf	BMP280_readPressure@var1+1,w
  2130  0435  00F5               	movwf	___aldiv@dividend+1
  2131  0436  0857               	movf	BMP280_readPressure@var1,w
  2132  0437  00F4               	movwf	___aldiv@dividend
  2133  0438  120A  118A  2016  120A  118A  	fcall	___aldiv
  2134  043D  0873               	movf	?___aldiv+3,w
  2135  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2136  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0440  00A9               	movwf	___lmul@multiplier+3
  2138  0441  0872               	movf	?___aldiv+2,w
  2139  0442  00A8               	movwf	___lmul@multiplier+2
  2140  0443  0871               	movf	?___aldiv+1,w
  2141  0444  00A7               	movwf	___lmul@multiplier+1
  2142  0445  0870               	movf	?___aldiv,w
  2143  0446  00A6               	movwf	___lmul@multiplier
  2144  0447  3000               	movlw	0
  2145  0448  00F3               	movwf	___aldiv@divisor+3
  2146  0449  3000               	movlw	0
  2147  044A  00F2               	movwf	___aldiv@divisor+2
  2148  044B  3000               	movlw	0
  2149  044C  00F1               	movwf	___aldiv@divisor+1
  2150  044D  3004               	movlw	4
  2151  044E  00F0               	movwf	___aldiv@divisor
  2152  044F  085A               	movf	BMP280_readPressure@var1+3,w
  2153  0450  00F7               	movwf	___aldiv@dividend+3
  2154  0451  0859               	movf	BMP280_readPressure@var1+2,w
  2155  0452  00F6               	movwf	___aldiv@dividend+2
  2156  0453  0858               	movf	BMP280_readPressure@var1+1,w
  2157  0454  00F5               	movwf	___aldiv@dividend+1
  2158  0455  0857               	movf	BMP280_readPressure@var1,w
  2159  0456  00F4               	movwf	___aldiv@dividend
  2160  0457  120A  118A  2016  120A  118A  	fcall	___aldiv
  2161  045C  0873               	movf	?___aldiv+3,w
  2162  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2163  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2164  045F  00AD               	movwf	___lmul@multiplicand+3
  2165  0460  0872               	movf	?___aldiv+2,w
  2166  0461  00AC               	movwf	___lmul@multiplicand+2
  2167  0462  0871               	movf	?___aldiv+1,w
  2168  0463  00AB               	movwf	___lmul@multiplicand+1
  2169  0464  0870               	movf	?___aldiv,w
  2170  0465  00AA               	movwf	___lmul@multiplicand
  2171  0466  120A  158A  2573  120A  118A  	fcall	___lmul
  2172  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2173  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2174  046D  0829               	movf	?___lmul+3,w
  2175  046E  00CE               	movwf	_BMP280_readPressure$940+3
  2176  046F  0828               	movf	?___lmul+2,w
  2177  0470  00CD               	movwf	_BMP280_readPressure$940+2
  2178  0471  0827               	movf	?___lmul+1,w
  2179  0472  00CC               	movwf	_BMP280_readPressure$940+1
  2180  0473  0826               	movf	?___lmul,w
  2181  0474  00CB               	movwf	_BMP280_readPressure$940
  2182                           
  2183                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2184  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0477  082E               	movf	(_BMP280_calib^(0+128)+10),w
  2187  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2189  047A  00A6               	movwf	___lmul@multiplier
  2190  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2191  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2192  047D  082F               	movf	((_BMP280_calib+1)^(0+128)+10),w
  2193  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2194  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0480  00A7               	movwf	___lmul@multiplier+1
  2196  0481  3000               	movlw	0
  2197  0482  1BA7               	btfsc	___lmul@multiplier+1,7
  2198  0483  30FF               	movlw	255
  2199  0484  00A8               	movwf	___lmul@multiplier+2
  2200  0485  00A9               	movwf	___lmul@multiplier+3
  2201  0486  3000               	movlw	0
  2202  0487  00F3               	movwf	___aldiv@divisor+3
  2203  0488  3000               	movlw	0
  2204  0489  00F2               	movwf	___aldiv@divisor+2
  2205  048A  3020               	movlw	32
  2206  048B  00F1               	movwf	___aldiv@divisor+1
  2207  048C  3000               	movlw	0
  2208  048D  00F0               	movwf	___aldiv@divisor
  2209  048E  084E               	movf	_BMP280_readPressure$940+3,w
  2210  048F  00F7               	movwf	___aldiv@dividend+3
  2211  0490  084D               	movf	_BMP280_readPressure$940+2,w
  2212  0491  00F6               	movwf	___aldiv@dividend+2
  2213  0492  084C               	movf	_BMP280_readPressure$940+1,w
  2214  0493  00F5               	movwf	___aldiv@dividend+1
  2215  0494  084B               	movf	_BMP280_readPressure$940,w
  2216  0495  00F4               	movwf	___aldiv@dividend
  2217  0496  120A  118A  2016  120A  118A  	fcall	___aldiv
  2218  049B  0873               	movf	?___aldiv+3,w
  2219  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2220  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2221  049E  00AD               	movwf	___lmul@multiplicand+3
  2222  049F  0872               	movf	?___aldiv+2,w
  2223  04A0  00AC               	movwf	___lmul@multiplicand+2
  2224  04A1  0871               	movf	?___aldiv+1,w
  2225  04A2  00AB               	movwf	___lmul@multiplicand+1
  2226  04A3  0870               	movf	?___aldiv,w
  2227  04A4  00AA               	movwf	___lmul@multiplicand
  2228  04A5  120A  158A  2573  120A  118A  	fcall	___lmul
  2229  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2230  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2231  04AC  0829               	movf	?___lmul+3,w
  2232  04AD  00C1               	movwf	_BMP280_readPressure$941+3
  2233  04AE  0828               	movf	?___lmul+2,w
  2234  04AF  00C0               	movwf	_BMP280_readPressure$941+2
  2235  04B0  0827               	movf	?___lmul+1,w
  2236  04B1  00BF               	movwf	_BMP280_readPressure$941+1
  2237  04B2  0826               	movf	?___lmul,w
  2238  04B3  00BE               	movwf	_BMP280_readPressure$941
  2239                           
  2240                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2241  04B4  3000               	movlw	0
  2242  04B5  00F3               	movwf	___aldiv@divisor+3
  2243  04B6  3000               	movlw	0
  2244  04B7  00F2               	movwf	___aldiv@divisor+2
  2245  04B8  3000               	movlw	0
  2246  04B9  00F1               	movwf	___aldiv@divisor+1
  2247  04BA  3002               	movlw	2
  2248  04BB  00F0               	movwf	___aldiv@divisor
  2249  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2250  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2251  04BE  082C               	movf	(_BMP280_calib^(0+128)+8),w
  2252  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2253  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2254  04C1  00A6               	movwf	___lmul@multiplier
  2255  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2256  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2257  04C4  082D               	movf	((_BMP280_calib+1)^(0+128)+8),w
  2258  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2259  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2260  04C7  00A7               	movwf	___lmul@multiplier+1
  2261  04C8  3000               	movlw	0
  2262  04C9  1BA7               	btfsc	___lmul@multiplier+1,7
  2263  04CA  30FF               	movlw	255
  2264  04CB  00A8               	movwf	___lmul@multiplier+2
  2265  04CC  00A9               	movwf	___lmul@multiplier+3
  2266  04CD  085A               	movf	BMP280_readPressure@var1+3,w
  2267  04CE  00AD               	movwf	___lmul@multiplicand+3
  2268  04CF  0859               	movf	BMP280_readPressure@var1+2,w
  2269  04D0  00AC               	movwf	___lmul@multiplicand+2
  2270  04D1  0858               	movf	BMP280_readPressure@var1+1,w
  2271  04D2  00AB               	movwf	___lmul@multiplicand+1
  2272  04D3  0857               	movf	BMP280_readPressure@var1,w
  2273  04D4  00AA               	movwf	___lmul@multiplicand
  2274  04D5  120A  158A  2573  120A  118A  	fcall	___lmul
  2275  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2276  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2277  04DC  0829               	movf	?___lmul+3,w
  2278  04DD  00F7               	movwf	___aldiv@dividend+3
  2279  04DE  0828               	movf	?___lmul+2,w
  2280  04DF  00F6               	movwf	___aldiv@dividend+2
  2281  04E0  0827               	movf	?___lmul+1,w
  2282  04E1  00F5               	movwf	___aldiv@dividend+1
  2283  04E2  0826               	movf	?___lmul,w
  2284  04E3  00F4               	movwf	___aldiv@dividend
  2285  04E4  120A  118A  2016  120A  118A  	fcall	___aldiv
  2286  04E9  0870               	movf	?___aldiv,w
  2287  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2288  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2289  04EC  00AE               	movwf	??_BMP280_readPressure
  2290  04ED  0871               	movf	?___aldiv+1,w
  2291  04EE  00AF               	movwf	??_BMP280_readPressure+1
  2292  04EF  0872               	movf	?___aldiv+2,w
  2293  04F0  00B0               	movwf	??_BMP280_readPressure+2
  2294  04F1  0873               	movf	?___aldiv+3,w
  2295  04F2  00B1               	movwf	??_BMP280_readPressure+3
  2296  04F3  3000               	movlw	0
  2297  04F4  00F3               	movwf	___aldiv@divisor+3
  2298  04F5  3000               	movlw	0
  2299  04F6  00F2               	movwf	___aldiv@divisor+2
  2300  04F7  3000               	movlw	0
  2301  04F8  00F1               	movwf	___aldiv@divisor+1
  2302  04F9  3008               	movlw	8
  2303  04FA  00F0               	movwf	___aldiv@divisor
  2304  04FB  0841               	movf	_BMP280_readPressure$941+3,w
  2305  04FC  00F7               	movwf	___aldiv@dividend+3
  2306  04FD  0840               	movf	_BMP280_readPressure$941+2,w
  2307  04FE  00F6               	movwf	___aldiv@dividend+2
  2308  04FF  083F               	movf	_BMP280_readPressure$941+1,w
  2309  0500  00F5               	movwf	___aldiv@dividend+1
  2310  0501  083E               	movf	_BMP280_readPressure$941,w
  2311  0502  00F4               	movwf	___aldiv@dividend
  2312  0503  120A  118A  2016  120A  118A  	fcall	___aldiv
  2313  0508  0870               	movf	?___aldiv,w
  2314  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2315  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2316  050B  07AE               	addwf	??_BMP280_readPressure,f
  2317  050C  0871               	movf	?___aldiv+1,w
  2318  050D  1803               	skipnc
  2319  050E  0F71               	incfsz	?___aldiv+1,w
  2320  050F  2D11               	goto	u1020
  2321  0510  2D12               	goto	u1021
  2322  0511                     u1020:
  2323  0511  07AF               	addwf	??_BMP280_readPressure+1,f
  2324  0512                     u1021:
  2325  0512  0872               	movf	?___aldiv+2,w
  2326  0513  1803               	skipnc
  2327  0514  0F72               	incfsz	?___aldiv+2,w
  2328  0515  2D17               	goto	u1022
  2329  0516  2D18               	goto	u1023
  2330  0517                     u1022:
  2331  0517  07B0               	addwf	??_BMP280_readPressure+2,f
  2332  0518                     u1023:
  2333  0518  0873               	movf	?___aldiv+3,w
  2334  0519  1803               	skipnc
  2335  051A  0A73               	incf	?___aldiv+3,w
  2336  051B  07B1               	addwf	??_BMP280_readPressure+3,f
  2337  051C  0831               	movf	??_BMP280_readPressure+3,w
  2338  051D  00C5               	movwf	_BMP280_readPressure$942+3
  2339  051E  0830               	movf	??_BMP280_readPressure+2,w
  2340  051F  00C4               	movwf	_BMP280_readPressure$942+2
  2341  0520  082F               	movf	??_BMP280_readPressure+1,w
  2342  0521  00C3               	movwf	_BMP280_readPressure$942+1
  2343  0522  082E               	movf	??_BMP280_readPressure,w
  2344  0523  00C2               	movwf	_BMP280_readPressure$942
  2345                           
  2346                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2347  0524  3000               	movlw	0
  2348  0525  00F3               	movwf	___aldiv@divisor+3
  2349  0526  3004               	movlw	4
  2350  0527  00F2               	movwf	___aldiv@divisor+2
  2351  0528  3000               	movlw	0
  2352  0529  00F1               	movwf	___aldiv@divisor+1
  2353  052A  3000               	movlw	0
  2354  052B  00F0               	movwf	___aldiv@divisor
  2355  052C  0845               	movf	_BMP280_readPressure$942+3,w
  2356  052D  00F7               	movwf	___aldiv@dividend+3
  2357  052E  0844               	movf	_BMP280_readPressure$942+2,w
  2358  052F  00F6               	movwf	___aldiv@dividend+2
  2359  0530  0843               	movf	_BMP280_readPressure$942+1,w
  2360  0531  00F5               	movwf	___aldiv@dividend+1
  2361  0532  0842               	movf	_BMP280_readPressure$942,w
  2362  0533  00F4               	movwf	___aldiv@dividend
  2363  0534  120A  118A  2016  120A  118A  	fcall	___aldiv
  2364  0539  0873               	movf	?___aldiv+3,w
  2365  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2366  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2367  053C  00DA               	movwf	BMP280_readPressure@var1+3
  2368  053D  0872               	movf	?___aldiv+2,w
  2369  053E  00D9               	movwf	BMP280_readPressure@var1+2
  2370  053F  0871               	movf	?___aldiv+1,w
  2371  0540  00D8               	movwf	BMP280_readPressure@var1+1
  2372  0541  0870               	movf	?___aldiv,w
  2373  0542  00D7               	movwf	BMP280_readPressure@var1
  2374                           
  2375                           ;BMP280.c: 281:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  2376  0543  3000               	movlw	0
  2377  0544  00F3               	movwf	___aldiv@divisor+3
  2378  0545  3000               	movlw	0
  2379  0546  00F2               	movwf	___aldiv@divisor+2
  2380  0547  3080               	movlw	128
  2381  0548  00F1               	movwf	___aldiv@divisor+1
  2382  0549  3000               	movlw	0
  2383  054A  00F0               	movwf	___aldiv@divisor
  2384  054B  3000               	movlw	0
  2385  054C  00AE               	movwf	??_BMP280_readPressure
  2386  054D  3080               	movlw	128
  2387  054E  00AF               	movwf	??_BMP280_readPressure+1
  2388  054F  3000               	movlw	0
  2389  0550  00B0               	movwf	??_BMP280_readPressure+2
  2390  0551  3000               	movlw	0
  2391  0552  00B1               	movwf	??_BMP280_readPressure+3
  2392  0553  0857               	movf	BMP280_readPressure@var1,w
  2393  0554  07AE               	addwf	??_BMP280_readPressure,f
  2394  0555  0858               	movf	BMP280_readPressure@var1+1,w
  2395  0556  1803               	skipnc
  2396  0557  0F58               	incfsz	BMP280_readPressure@var1+1,w
  2397  0558  2D5A               	goto	u1030
  2398  0559  2D5B               	goto	u1031
  2399  055A                     u1030:
  2400  055A  07AF               	addwf	??_BMP280_readPressure+1,f
  2401  055B                     u1031:
  2402  055B  0859               	movf	BMP280_readPressure@var1+2,w
  2403  055C  1803               	skipnc
  2404  055D  0F59               	incfsz	BMP280_readPressure@var1+2,w
  2405  055E  2D60               	goto	u1032
  2406  055F  2D61               	goto	u1033
  2407  0560                     u1032:
  2408  0560  07B0               	addwf	??_BMP280_readPressure+2,f
  2409  0561                     u1033:
  2410  0561  085A               	movf	BMP280_readPressure@var1+3,w
  2411  0562  1803               	skipnc
  2412  0563  0A5A               	incf	BMP280_readPressure@var1+3,w
  2413  0564  07B1               	addwf	??_BMP280_readPressure+3,f
  2414  0565  0831               	movf	??_BMP280_readPressure+3,w
  2415  0566  00A9               	movwf	___lmul@multiplier+3
  2416  0567  0830               	movf	??_BMP280_readPressure+2,w
  2417  0568  00A8               	movwf	___lmul@multiplier+2
  2418  0569  082F               	movf	??_BMP280_readPressure+1,w
  2419  056A  00A7               	movwf	___lmul@multiplier+1
  2420  056B  082E               	movf	??_BMP280_readPressure,w
  2421  056C  00A6               	movwf	___lmul@multiplier
  2422  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2423  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2424  056F  082A               	movf	(_BMP280_calib^(0+128)+6),w
  2425  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0572  00AA               	movwf	___lmul@multiplicand
  2428  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0575  082B               	movf	((_BMP280_calib+1)^(0+128)+6),w
  2431  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0578  00AB               	movwf	___lmul@multiplicand+1
  2434  0579  01AC               	clrf	___lmul@multiplicand+2
  2435  057A  01AD               	clrf	___lmul@multiplicand+3
  2436  057B  120A  158A  2573  120A  118A  	fcall	___lmul
  2437  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0582  0829               	movf	?___lmul+3,w
  2440  0583  00F7               	movwf	___aldiv@dividend+3
  2441  0584  0828               	movf	?___lmul+2,w
  2442  0585  00F6               	movwf	___aldiv@dividend+2
  2443  0586  0827               	movf	?___lmul+1,w
  2444  0587  00F5               	movwf	___aldiv@dividend+1
  2445  0588  0826               	movf	?___lmul,w
  2446  0589  00F4               	movwf	___aldiv@dividend
  2447  058A  120A  118A  2016  120A  118A  	fcall	___aldiv
  2448  058F  0873               	movf	?___aldiv+3,w
  2449  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0592  00DA               	movwf	BMP280_readPressure@var1+3
  2452  0593  0872               	movf	?___aldiv+2,w
  2453  0594  00D9               	movwf	BMP280_readPressure@var1+2
  2454  0595  0871               	movf	?___aldiv+1,w
  2455  0596  00D8               	movwf	BMP280_readPressure@var1+1
  2456  0597  0870               	movf	?___aldiv,w
  2457  0598  00D7               	movwf	BMP280_readPressure@var1
  2458  0599                     l1188:
  2459                           
  2460                           ;BMP280.c: 283:   if (var1 == 0)
  2461  0599  085A               	movf	BMP280_readPressure@var1+3,w
  2462  059A  0459               	iorwf	BMP280_readPressure@var1+2,w
  2463  059B  0458               	iorwf	BMP280_readPressure@var1+1,w
  2464  059C  0457               	iorwf	BMP280_readPressure@var1,w
  2465  059D  1D03               	skipz
  2466  059E  2DA0               	goto	u1041
  2467  059F  2DA1               	goto	u1040
  2468  05A0                     u1041:
  2469  05A0  2DA2               	goto	l1192
  2470  05A1                     u1040:
  2471  05A1  2FEA               	goto	l152
  2472  05A2                     l1192:
  2473                           
  2474                           ;BMP280.c: 286:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  2475  05A2  3000               	movlw	0
  2476  05A3  00AE               	movwf	??_BMP280_readPressure
  2477  05A4  3000               	movlw	0
  2478  05A5  00AF               	movwf	??_BMP280_readPressure+1
  2479  05A6  3010               	movlw	16
  2480  05A7  00B0               	movwf	??_BMP280_readPressure+2
  2481  05A8  3000               	movlw	0
  2482  05A9  00B1               	movwf	??_BMP280_readPressure+3
  2483  05AA  3000               	movlw	0
  2484  05AB  00F3               	movwf	___aldiv@divisor+3
  2485  05AC  3000               	movlw	0
  2486  05AD  00F2               	movwf	___aldiv@divisor+2
  2487  05AE  3010               	movlw	16
  2488  05AF  00F1               	movwf	___aldiv@divisor+1
  2489  05B0  3000               	movlw	0
  2490  05B1  00F0               	movwf	___aldiv@divisor
  2491  05B2  0852               	movf	BMP280_readPressure@var2+3,w
  2492  05B3  00F7               	movwf	___aldiv@dividend+3
  2493  05B4  0851               	movf	BMP280_readPressure@var2+2,w
  2494  05B5  00F6               	movwf	___aldiv@dividend+2
  2495  05B6  0850               	movf	BMP280_readPressure@var2+1,w
  2496  05B7  00F5               	movwf	___aldiv@dividend+1
  2497  05B8  084F               	movf	BMP280_readPressure@var2,w
  2498  05B9  00F4               	movwf	___aldiv@dividend
  2499  05BA  120A  118A  2016  120A  118A  	fcall	___aldiv
  2500  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2501  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2502  05C1  0920               	comf	_adc_P^(0+128),w
  2503  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2504  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2505  05C4  00B2               	movwf	??_BMP280_readPressure+4
  2506  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2507  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2508  05C7  0921               	comf	(_adc_P+1)^(0+128),w
  2509  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2510  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2511  05CA  00B3               	movwf	??_BMP280_readPressure+5
  2512  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  2513  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  2514  05CD  0922               	comf	(_adc_P+2)^(0+128),w
  2515  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2516  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2517  05D0  00B4               	movwf	??_BMP280_readPressure+6
  2518  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  2519  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  2520  05D3  0923               	comf	(_adc_P+3)^(0+128),w
  2521  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2522  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2523  05D6  00B5               	movwf	??_BMP280_readPressure+7
  2524  05D7  0AB2               	incf	??_BMP280_readPressure+4,f
  2525  05D8  1903               	skipnz
  2526  05D9  0AB3               	incf	??_BMP280_readPressure+5,f
  2527  05DA  1903               	skipnz
  2528  05DB  0AB4               	incf	??_BMP280_readPressure+6,f
  2529  05DC  1903               	skipnz
  2530  05DD  0AB5               	incf	??_BMP280_readPressure+7,f
  2531  05DE  0870               	movf	?___aldiv,w
  2532  05DF  02B2               	subwf	??_BMP280_readPressure+4,f
  2533  05E0  0871               	movf	?___aldiv+1,w
  2534  05E1  1C03               	skipc
  2535  05E2  0F71               	incfsz	?___aldiv+1,w
  2536  05E3  2DE5               	goto	u1051
  2537  05E4  2DE6               	goto	u1052
  2538  05E5                     u1051:
  2539  05E5  02B3               	subwf	??_BMP280_readPressure+5,f
  2540  05E6                     u1052:
  2541  05E6  0872               	movf	?___aldiv+2,w
  2542  05E7  1C03               	skipc
  2543  05E8  0F72               	incfsz	?___aldiv+2,w
  2544  05E9  2DEB               	goto	u1053
  2545  05EA  2DEC               	goto	u1054
  2546  05EB                     u1053:
  2547  05EB  02B4               	subwf	??_BMP280_readPressure+6,f
  2548  05EC                     u1054:
  2549  05EC  0873               	movf	?___aldiv+3,w
  2550  05ED  1C03               	skipc
  2551  05EE  0F73               	incfsz	?___aldiv+3,w
  2552  05EF  2DF1               	goto	u1055
  2553  05F0  2DF2               	goto	u1056
  2554  05F1                     u1055:
  2555  05F1  02B5               	subwf	??_BMP280_readPressure+7,f
  2556  05F2                     u1056:
  2557  05F2  0832               	movf	??_BMP280_readPressure+4,w
  2558  05F3  07AE               	addwf	??_BMP280_readPressure,f
  2559  05F4  0833               	movf	??_BMP280_readPressure+5,w
  2560  05F5  1803               	skipnc
  2561  05F6  0F33               	incfsz	??_BMP280_readPressure+5,w
  2562  05F7  2DF9               	goto	u1060
  2563  05F8  2DFA               	goto	u1061
  2564  05F9                     u1060:
  2565  05F9  07AF               	addwf	??_BMP280_readPressure+1,f
  2566  05FA                     u1061:
  2567  05FA  0834               	movf	??_BMP280_readPressure+6,w
  2568  05FB  1803               	skipnc
  2569  05FC  0F34               	incfsz	??_BMP280_readPressure+6,w
  2570  05FD  2DFF               	goto	u1062
  2571  05FE  2E00               	goto	u1063
  2572  05FF                     u1062:
  2573  05FF  07B0               	addwf	??_BMP280_readPressure+2,f
  2574  0600                     u1063:
  2575  0600  0835               	movf	??_BMP280_readPressure+7,w
  2576  0601  1803               	skipnc
  2577  0602  0A35               	incf	??_BMP280_readPressure+7,w
  2578  0603  07B1               	addwf	??_BMP280_readPressure+3,f
  2579  0604  0831               	movf	??_BMP280_readPressure+3,w
  2580  0605  00A9               	movwf	___lmul@multiplier+3
  2581  0606  0830               	movf	??_BMP280_readPressure+2,w
  2582  0607  00A8               	movwf	___lmul@multiplier+2
  2583  0608  082F               	movf	??_BMP280_readPressure+1,w
  2584  0609  00A7               	movwf	___lmul@multiplier+1
  2585  060A  082E               	movf	??_BMP280_readPressure,w
  2586  060B  00A6               	movwf	___lmul@multiplier
  2587  060C  3000               	movlw	0
  2588  060D  00AD               	movwf	___lmul@multiplicand+3
  2589  060E  3000               	movlw	0
  2590  060F  00AC               	movwf	___lmul@multiplicand+2
  2591  0610  300C               	movlw	12
  2592  0611  00AB               	movwf	___lmul@multiplicand+1
  2593  0612  3035               	movlw	53
  2594  0613  00AA               	movwf	___lmul@multiplicand
  2595  0614  120A  158A  2573  120A  118A  	fcall	___lmul
  2596  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2597  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2598  061B  0829               	movf	?___lmul+3,w
  2599  061C  00D6               	movwf	BMP280_readPressure@p+3
  2600  061D  0828               	movf	?___lmul+2,w
  2601  061E  00D5               	movwf	BMP280_readPressure@p+2
  2602  061F  0827               	movf	?___lmul+1,w
  2603  0620  00D4               	movwf	BMP280_readPressure@p+1
  2604  0621  0826               	movf	?___lmul,w
  2605  0622  00D3               	movwf	BMP280_readPressure@p
  2606  0623                     l1194:
  2607                           
  2608                           ;BMP280.c: 288:   if (p < 0x80000000)
  2609  0623  3080               	movlw	128
  2610  0624  0256               	subwf	BMP280_readPressure@p+3,w
  2611  0625  1D03               	skipz
  2612  0626  2E33               	goto	u1073
  2613  0627  3000               	movlw	0
  2614  0628  0255               	subwf	BMP280_readPressure@p+2,w
  2615  0629  1D03               	skipz
  2616  062A  2E33               	goto	u1073
  2617  062B  3000               	movlw	0
  2618  062C  0254               	subwf	BMP280_readPressure@p+1,w
  2619  062D  1D03               	skipz
  2620  062E  2E33               	goto	u1073
  2621  062F  3000               	movlw	0
  2622  0630  0253               	subwf	BMP280_readPressure@p,w
  2623  0631  1D03               	skipz
  2624  0632  2E33               	goto	u1073
  2625  0633                     u1073:
  2626  0633  1803               	btfsc	3,0
  2627  0634  2E36               	goto	u1071
  2628  0635  2E37               	goto	u1070
  2629  0636                     u1071:
  2630  0636  2E5A               	goto	l1198
  2631  0637                     u1070:
  2632  0637                     l1196:
  2633                           
  2634                           ;BMP280.c: 289:     p = (p * 2) / ((uint32_t)var1);
  2635  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0639  085A               	movf	BMP280_readPressure@var1+3,w
  2638  063A  00F3               	movwf	___lldiv@divisor+3
  2639  063B  0859               	movf	BMP280_readPressure@var1+2,w
  2640  063C  00F2               	movwf	___lldiv@divisor+2
  2641  063D  0858               	movf	BMP280_readPressure@var1+1,w
  2642  063E  00F1               	movwf	___lldiv@divisor+1
  2643  063F  0857               	movf	BMP280_readPressure@var1,w
  2644  0640  00F0               	movwf	___lldiv@divisor
  2645  0641  1003               	clrc
  2646  0642  0D53               	rlf	BMP280_readPressure@p,w
  2647  0643  00F4               	movwf	___lldiv@dividend
  2648  0644  0D54               	rlf	BMP280_readPressure@p+1,w
  2649  0645  00F5               	movwf	___lldiv@dividend+1
  2650  0646  0D55               	rlf	BMP280_readPressure@p+2,w
  2651  0647  00F6               	movwf	___lldiv@dividend+2
  2652  0648  0D56               	rlf	BMP280_readPressure@p+3,w
  2653  0649  00F7               	movwf	___lldiv@dividend+3
  2654  064A  120A  158A  2607  120A  118A  	fcall	___lldiv
  2655  064F  0873               	movf	?___lldiv+3,w
  2656  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0652  00D6               	movwf	BMP280_readPressure@p+3
  2659  0653  0872               	movf	?___lldiv+2,w
  2660  0654  00D5               	movwf	BMP280_readPressure@p+2
  2661  0655  0871               	movf	?___lldiv+1,w
  2662  0656  00D4               	movwf	BMP280_readPressure@p+1
  2663  0657  0870               	movf	?___lldiv,w
  2664  0658  00D3               	movwf	BMP280_readPressure@p
  2665  0659  2E7C               	goto	l154
  2666  065A                     l1198:
  2667                           
  2668                           ;BMP280.c: 292:     p = (p / (uint32_t)var1) * 2;
  2669  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2670  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2671  065C  085A               	movf	BMP280_readPressure@var1+3,w
  2672  065D  00F3               	movwf	___lldiv@divisor+3
  2673  065E  0859               	movf	BMP280_readPressure@var1+2,w
  2674  065F  00F2               	movwf	___lldiv@divisor+2
  2675  0660  0858               	movf	BMP280_readPressure@var1+1,w
  2676  0661  00F1               	movwf	___lldiv@divisor+1
  2677  0662  0857               	movf	BMP280_readPressure@var1,w
  2678  0663  00F0               	movwf	___lldiv@divisor
  2679  0664  0856               	movf	BMP280_readPressure@p+3,w
  2680  0665  00F7               	movwf	___lldiv@dividend+3
  2681  0666  0855               	movf	BMP280_readPressure@p+2,w
  2682  0667  00F6               	movwf	___lldiv@dividend+2
  2683  0668  0854               	movf	BMP280_readPressure@p+1,w
  2684  0669  00F5               	movwf	___lldiv@dividend+1
  2685  066A  0853               	movf	BMP280_readPressure@p,w
  2686  066B  00F4               	movwf	___lldiv@dividend
  2687  066C  120A  158A  2607  120A  118A  	fcall	___lldiv
  2688  0671  1003               	clrc
  2689  0672  0D70               	rlf	?___lldiv,w
  2690  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0675  00D3               	movwf	BMP280_readPressure@p
  2693  0676  0D71               	rlf	?___lldiv+1,w
  2694  0677  00D4               	movwf	BMP280_readPressure@p+1
  2695  0678  0D72               	rlf	?___lldiv+2,w
  2696  0679  00D5               	movwf	BMP280_readPressure@p+2
  2697  067A  0D73               	rlf	?___lldiv+3,w
  2698  067B  00D6               	movwf	BMP280_readPressure@p+3
  2699  067C                     l154:
  2700                           
  2701                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2702  067C  0853               	movf	BMP280_readPressure@p,w
  2703  067D  00AE               	movwf	??_BMP280_readPressure
  2704  067E  0854               	movf	BMP280_readPressure@p+1,w
  2705  067F  00AF               	movwf	??_BMP280_readPressure+1
  2706  0680  0855               	movf	BMP280_readPressure@p+2,w
  2707  0681  00B0               	movwf	??_BMP280_readPressure+2
  2708  0682  0856               	movf	BMP280_readPressure@p+3,w
  2709  0683  00B1               	movwf	??_BMP280_readPressure+3
  2710  0684  3003               	movlw	3
  2711  0685                     u1085:
  2712  0685  1003               	clrc
  2713  0686  0CB1               	rrf	??_BMP280_readPressure+3,f
  2714  0687  0CB0               	rrf	??_BMP280_readPressure+2,f
  2715  0688  0CAF               	rrf	??_BMP280_readPressure+1,f
  2716  0689  0CAE               	rrf	??_BMP280_readPressure,f
  2717  068A                     u1080:
  2718  068A  3EFF               	addlw	-1
  2719  068B  1D03               	skipz
  2720  068C  2E85               	goto	u1085
  2721  068D  0831               	movf	??_BMP280_readPressure+3,w
  2722  068E  00AD               	movwf	___lmul@multiplicand+3
  2723  068F  0830               	movf	??_BMP280_readPressure+2,w
  2724  0690  00AC               	movwf	___lmul@multiplicand+2
  2725  0691  082F               	movf	??_BMP280_readPressure+1,w
  2726  0692  00AB               	movwf	___lmul@multiplicand+1
  2727  0693  082E               	movf	??_BMP280_readPressure,w
  2728  0694  00AA               	movwf	___lmul@multiplicand
  2729  0695  0853               	movf	BMP280_readPressure@p,w
  2730  0696  00B2               	movwf	??_BMP280_readPressure+4
  2731  0697  0854               	movf	BMP280_readPressure@p+1,w
  2732  0698  00B3               	movwf	??_BMP280_readPressure+5
  2733  0699  0855               	movf	BMP280_readPressure@p+2,w
  2734  069A  00B4               	movwf	??_BMP280_readPressure+6
  2735  069B  0856               	movf	BMP280_readPressure@p+3,w
  2736  069C  00B5               	movwf	??_BMP280_readPressure+7
  2737  069D  3003               	movlw	3
  2738  069E                     u1095:
  2739  069E  1003               	clrc
  2740  069F  0CB5               	rrf	??_BMP280_readPressure+7,f
  2741  06A0  0CB4               	rrf	??_BMP280_readPressure+6,f
  2742  06A1  0CB3               	rrf	??_BMP280_readPressure+5,f
  2743  06A2  0CB2               	rrf	??_BMP280_readPressure+4,f
  2744  06A3                     u1090:
  2745  06A3  3EFF               	addlw	-1
  2746  06A4  1D03               	skipz
  2747  06A5  2E9E               	goto	u1095
  2748  06A6  0835               	movf	??_BMP280_readPressure+7,w
  2749  06A7  00A9               	movwf	___lmul@multiplier+3
  2750  06A8  0834               	movf	??_BMP280_readPressure+6,w
  2751  06A9  00A8               	movwf	___lmul@multiplier+2
  2752  06AA  0833               	movf	??_BMP280_readPressure+5,w
  2753  06AB  00A7               	movwf	___lmul@multiplier+1
  2754  06AC  0832               	movf	??_BMP280_readPressure+4,w
  2755  06AD  00A6               	movwf	___lmul@multiplier
  2756  06AE  120A  158A  2573  120A  118A  	fcall	___lmul
  2757  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2758  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2759  06B5  0826               	movf	?___lmul,w
  2760  06B6  00B6               	movwf	??_BMP280_readPressure+8
  2761  06B7  0827               	movf	?___lmul+1,w
  2762  06B8  00B7               	movwf	??_BMP280_readPressure+9
  2763  06B9  0828               	movf	?___lmul+2,w
  2764  06BA  00B8               	movwf	??_BMP280_readPressure+10
  2765  06BB  0829               	movf	?___lmul+3,w
  2766  06BC  00B9               	movwf	??_BMP280_readPressure+11
  2767  06BD  300D               	movlw	13
  2768  06BE                     u1105:
  2769  06BE  1003               	clrc
  2770  06BF  0CB9               	rrf	??_BMP280_readPressure+11,f
  2771  06C0  0CB8               	rrf	??_BMP280_readPressure+10,f
  2772  06C1  0CB7               	rrf	??_BMP280_readPressure+9,f
  2773  06C2  0CB6               	rrf	??_BMP280_readPressure+8,f
  2774  06C3                     u1100:
  2775  06C3  3EFF               	addlw	-1
  2776  06C4  1D03               	skipz
  2777  06C5  2EBE               	goto	u1105
  2778  06C6  0839               	movf	??_BMP280_readPressure+11,w
  2779  06C7  00C9               	movwf	_BMP280_readPressure$943+3
  2780  06C8  0838               	movf	??_BMP280_readPressure+10,w
  2781  06C9  00C8               	movwf	_BMP280_readPressure$943+2
  2782  06CA  0837               	movf	??_BMP280_readPressure+9,w
  2783  06CB  00C7               	movwf	_BMP280_readPressure$943+1
  2784  06CC  0836               	movf	??_BMP280_readPressure+8,w
  2785  06CD  00C6               	movwf	_BMP280_readPressure$943
  2786                           
  2787                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2788  06CE  3000               	movlw	0
  2789  06CF  00F3               	movwf	___aldiv@divisor+3
  2790  06D0  3000               	movlw	0
  2791  06D1  00F2               	movwf	___aldiv@divisor+2
  2792  06D2  3010               	movlw	16
  2793  06D3  00F1               	movwf	___aldiv@divisor+1
  2794  06D4  3000               	movlw	0
  2795  06D5  00F0               	movwf	___aldiv@divisor
  2796  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  2797  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  2798  06D8  083A               	movf	(_BMP280_calib^(0+128)+22),w
  2799  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2800  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2801  06DB  00A6               	movwf	___lmul@multiplier
  2802  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  2803  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  2804  06DE  083B               	movf	((_BMP280_calib+1)^(0+128)+22),w
  2805  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2806  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2807  06E1  00A7               	movwf	___lmul@multiplier+1
  2808  06E2  3000               	movlw	0
  2809  06E3  1BA7               	btfsc	___lmul@multiplier+1,7
  2810  06E4  30FF               	movlw	255
  2811  06E5  00A8               	movwf	___lmul@multiplier+2
  2812  06E6  00A9               	movwf	___lmul@multiplier+3
  2813  06E7  0849               	movf	_BMP280_readPressure$943+3,w
  2814  06E8  00AD               	movwf	___lmul@multiplicand+3
  2815  06E9  0848               	movf	_BMP280_readPressure$943+2,w
  2816  06EA  00AC               	movwf	___lmul@multiplicand+2
  2817  06EB  0847               	movf	_BMP280_readPressure$943+1,w
  2818  06EC  00AB               	movwf	___lmul@multiplicand+1
  2819  06ED  0846               	movf	_BMP280_readPressure$943,w
  2820  06EE  00AA               	movwf	___lmul@multiplicand
  2821  06EF  120A  158A  2573  120A  118A  	fcall	___lmul
  2822  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2823  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2824  06F6  0829               	movf	?___lmul+3,w
  2825  06F7  00F7               	movwf	___aldiv@dividend+3
  2826  06F8  0828               	movf	?___lmul+2,w
  2827  06F9  00F6               	movwf	___aldiv@dividend+2
  2828  06FA  0827               	movf	?___lmul+1,w
  2829  06FB  00F5               	movwf	___aldiv@dividend+1
  2830  06FC  0826               	movf	?___lmul,w
  2831  06FD  00F4               	movwf	___aldiv@dividend
  2832  06FE  120A  118A  2016  120A  118A  	fcall	___aldiv
  2833  0703  0873               	movf	?___aldiv+3,w
  2834  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0706  00DA               	movwf	BMP280_readPressure@var1+3
  2837  0707  0872               	movf	?___aldiv+2,w
  2838  0708  00D9               	movwf	BMP280_readPressure@var1+2
  2839  0709  0871               	movf	?___aldiv+1,w
  2840  070A  00D8               	movwf	BMP280_readPressure@var1+1
  2841  070B  0870               	movf	?___aldiv,w
  2842  070C  00D7               	movwf	BMP280_readPressure@var1
  2843                           
  2844                           ;BMP280.c: 295:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  2845  070D  3000               	movlw	0
  2846  070E  00F3               	movwf	___aldiv@divisor+3
  2847  070F  3000               	movlw	0
  2848  0710  00F2               	movwf	___aldiv@divisor+2
  2849  0711  3020               	movlw	32
  2850  0712  00F1               	movwf	___aldiv@divisor+1
  2851  0713  3000               	movlw	0
  2852  0714  00F0               	movwf	___aldiv@divisor
  2853  0715  0853               	movf	BMP280_readPressure@p,w
  2854  0716  00AE               	movwf	??_BMP280_readPressure
  2855  0717  0854               	movf	BMP280_readPressure@p+1,w
  2856  0718  00AF               	movwf	??_BMP280_readPressure+1
  2857  0719  0855               	movf	BMP280_readPressure@p+2,w
  2858  071A  00B0               	movwf	??_BMP280_readPressure+2
  2859  071B  0856               	movf	BMP280_readPressure@p+3,w
  2860  071C  00B1               	movwf	??_BMP280_readPressure+3
  2861  071D  3002               	movlw	2
  2862  071E                     u1115:
  2863  071E  1003               	clrc
  2864  071F  0CB1               	rrf	??_BMP280_readPressure+3,f
  2865  0720  0CB0               	rrf	??_BMP280_readPressure+2,f
  2866  0721  0CAF               	rrf	??_BMP280_readPressure+1,f
  2867  0722  0CAE               	rrf	??_BMP280_readPressure,f
  2868  0723                     u1110:
  2869  0723  3EFF               	addlw	-1
  2870  0724  1D03               	skipz
  2871  0725  2F1E               	goto	u1115
  2872  0726  0831               	movf	??_BMP280_readPressure+3,w
  2873  0727  00A9               	movwf	___lmul@multiplier+3
  2874  0728  0830               	movf	??_BMP280_readPressure+2,w
  2875  0729  00A8               	movwf	___lmul@multiplier+2
  2876  072A  082F               	movf	??_BMP280_readPressure+1,w
  2877  072B  00A7               	movwf	___lmul@multiplier+1
  2878  072C  082E               	movf	??_BMP280_readPressure,w
  2879  072D  00A6               	movwf	___lmul@multiplier
  2880  072E  1683               	bsf	3,5	;RP0=1, select bank1
  2881  072F  1303               	bcf	3,6	;RP1=0, select bank1
  2882  0730  0838               	movf	(_BMP280_calib^(0+128)+20),w
  2883  0731  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0732  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0733  00AA               	movwf	___lmul@multiplicand
  2886  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2887  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2888  0736  0839               	movf	((_BMP280_calib+1)^(0+128)+20),w
  2889  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0739  00AB               	movwf	___lmul@multiplicand+1
  2892  073A  3000               	movlw	0
  2893  073B  1BAB               	btfsc	___lmul@multiplicand+1,7
  2894  073C  30FF               	movlw	255
  2895  073D  00AC               	movwf	___lmul@multiplicand+2
  2896  073E  00AD               	movwf	___lmul@multiplicand+3
  2897  073F  120A  158A  2573  120A  118A  	fcall	___lmul
  2898  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0746  0829               	movf	?___lmul+3,w
  2901  0747  00F7               	movwf	___aldiv@dividend+3
  2902  0748  0828               	movf	?___lmul+2,w
  2903  0749  00F6               	movwf	___aldiv@dividend+2
  2904  074A  0827               	movf	?___lmul+1,w
  2905  074B  00F5               	movwf	___aldiv@dividend+1
  2906  074C  0826               	movf	?___lmul,w
  2907  074D  00F4               	movwf	___aldiv@dividend
  2908  074E  120A  118A  2016  120A  118A  	fcall	___aldiv
  2909  0753  0873               	movf	?___aldiv+3,w
  2910  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0756  00D2               	movwf	BMP280_readPressure@var2+3
  2913  0757  0872               	movf	?___aldiv+2,w
  2914  0758  00D1               	movwf	BMP280_readPressure@var2+2
  2915  0759  0871               	movf	?___aldiv+1,w
  2916  075A  00D0               	movwf	BMP280_readPressure@var2+1
  2917  075B  0870               	movf	?___aldiv,w
  2918  075C  00CF               	movwf	BMP280_readPressure@var2
  2919                           
  2920                           ;BMP280.c: 297:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  2921  075D  3000               	movlw	0
  2922  075E  00F3               	movwf	___aldiv@divisor+3
  2923  075F  3000               	movlw	0
  2924  0760  00F2               	movwf	___aldiv@divisor+2
  2925  0761  3000               	movlw	0
  2926  0762  00F1               	movwf	___aldiv@divisor+1
  2927  0763  3010               	movlw	16
  2928  0764  00F0               	movwf	___aldiv@divisor
  2929  0765  084F               	movf	BMP280_readPressure@var2,w
  2930  0766  00AE               	movwf	??_BMP280_readPressure
  2931  0767  0850               	movf	BMP280_readPressure@var2+1,w
  2932  0768  00AF               	movwf	??_BMP280_readPressure+1
  2933  0769  0851               	movf	BMP280_readPressure@var2+2,w
  2934  076A  00B0               	movwf	??_BMP280_readPressure+2
  2935  076B  0852               	movf	BMP280_readPressure@var2+3,w
  2936  076C  00B1               	movwf	??_BMP280_readPressure+3
  2937  076D  0857               	movf	BMP280_readPressure@var1,w
  2938  076E  00B2               	movwf	??_BMP280_readPressure+4
  2939  076F  0858               	movf	BMP280_readPressure@var1+1,w
  2940  0770  00B3               	movwf	??_BMP280_readPressure+5
  2941  0771  0859               	movf	BMP280_readPressure@var1+2,w
  2942  0772  00B4               	movwf	??_BMP280_readPressure+6
  2943  0773  085A               	movf	BMP280_readPressure@var1+3,w
  2944  0774  00B5               	movwf	??_BMP280_readPressure+7
  2945  0775  1683               	bsf	3,5	;RP0=1, select bank1
  2946  0776  1303               	bcf	3,6	;RP1=0, select bank1
  2947  0777  0836               	movf	(_BMP280_calib^(0+128)+18),w
  2948  0778  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0779  1303               	bcf	3,6	;RP1=0, select bank0
  2950  077A  00B6               	movwf	??_BMP280_readPressure+8
  2951  077B  1683               	bsf	3,5	;RP0=1, select bank1
  2952  077C  1303               	bcf	3,6	;RP1=0, select bank1
  2953  077D  0837               	movf	((_BMP280_calib+1)^(0+128)+18),w
  2954  077E  1283               	bcf	3,5	;RP0=0, select bank0
  2955  077F  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0780  00B7               	movwf	??_BMP280_readPressure+9
  2957  0781  3000               	movlw	0
  2958  0782  1BB7               	btfsc	??_BMP280_readPressure+9,7
  2959  0783  30FF               	movlw	255
  2960  0784  00B8               	movwf	??_BMP280_readPressure+10
  2961  0785  00B9               	movwf	??_BMP280_readPressure+11
  2962  0786  0836               	movf	??_BMP280_readPressure+8,w
  2963  0787  07B2               	addwf	??_BMP280_readPressure+4,f
  2964  0788  0837               	movf	??_BMP280_readPressure+9,w
  2965  0789  1803               	skipnc
  2966  078A  0F37               	incfsz	??_BMP280_readPressure+9,w
  2967  078B  2F8D               	goto	u1120
  2968  078C  2F8E               	goto	u1121
  2969  078D                     u1120:
  2970  078D  07B3               	addwf	??_BMP280_readPressure+5,f
  2971  078E                     u1121:
  2972  078E  0838               	movf	??_BMP280_readPressure+10,w
  2973  078F  1803               	skipnc
  2974  0790  0F38               	incfsz	??_BMP280_readPressure+10,w
  2975  0791  2F93               	goto	u1122
  2976  0792  2F94               	goto	u1123
  2977  0793                     u1122:
  2978  0793  07B4               	addwf	??_BMP280_readPressure+6,f
  2979  0794                     u1123:
  2980  0794  0839               	movf	??_BMP280_readPressure+11,w
  2981  0795  1803               	skipnc
  2982  0796  0A39               	incf	??_BMP280_readPressure+11,w
  2983  0797  07B5               	addwf	??_BMP280_readPressure+7,f
  2984  0798  0832               	movf	??_BMP280_readPressure+4,w
  2985  0799  07AE               	addwf	??_BMP280_readPressure,f
  2986  079A  0833               	movf	??_BMP280_readPressure+5,w
  2987  079B  1803               	skipnc
  2988  079C  0F33               	incfsz	??_BMP280_readPressure+5,w
  2989  079D  2F9F               	goto	u1130
  2990  079E  2FA0               	goto	u1131
  2991  079F                     u1130:
  2992  079F  07AF               	addwf	??_BMP280_readPressure+1,f
  2993  07A0                     u1131:
  2994  07A0  0834               	movf	??_BMP280_readPressure+6,w
  2995  07A1  1803               	skipnc
  2996  07A2  0F34               	incfsz	??_BMP280_readPressure+6,w
  2997  07A3  2FA5               	goto	u1132
  2998  07A4  2FA6               	goto	u1133
  2999  07A5                     u1132:
  3000  07A5  07B0               	addwf	??_BMP280_readPressure+2,f
  3001  07A6                     u1133:
  3002  07A6  0835               	movf	??_BMP280_readPressure+7,w
  3003  07A7  1803               	skipnc
  3004  07A8  0A35               	incf	??_BMP280_readPressure+7,w
  3005  07A9  07B1               	addwf	??_BMP280_readPressure+3,f
  3006  07AA  0831               	movf	??_BMP280_readPressure+3,w
  3007  07AB  00F7               	movwf	___aldiv@dividend+3
  3008  07AC  0830               	movf	??_BMP280_readPressure+2,w
  3009  07AD  00F6               	movwf	___aldiv@dividend+2
  3010  07AE  082F               	movf	??_BMP280_readPressure+1,w
  3011  07AF  00F5               	movwf	___aldiv@dividend+1
  3012  07B0  082E               	movf	??_BMP280_readPressure,w
  3013  07B1  00F4               	movwf	___aldiv@dividend
  3014  07B2  120A  118A  2016  120A  118A  	fcall	___aldiv
  3015  07B7  0870               	movf	?___aldiv,w
  3016  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3017  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3018  07BA  0753               	addwf	BMP280_readPressure@p,w
  3019  07BB  00BA               	movwf	??_BMP280_readPressure+12
  3020  07BC  3000               	movlw	0
  3021  07BD  1803               	skipnc
  3022  07BE  3001               	movlw	1
  3023  07BF  0771               	addwf	?___aldiv+1,w
  3024  07C0  01BC               	clrf	??_BMP280_readPressure+14
  3025  07C1  1803               	skipnc
  3026  07C2  0ABC               	incf	??_BMP280_readPressure+14,f
  3027  07C3  0754               	addwf	BMP280_readPressure@p+1,w
  3028  07C4  00BB               	movwf	??_BMP280_readPressure+13
  3029  07C5  1803               	skipnc
  3030  07C6  0ABC               	incf	??_BMP280_readPressure+14,f
  3031  07C7  0872               	movf	?___aldiv+2,w
  3032  07C8  073C               	addwf	??_BMP280_readPressure+14,w
  3033  07C9  01BD               	clrf	??_BMP280_readPressure+15
  3034  07CA  1803               	skipnc
  3035  07CB  0ABD               	incf	??_BMP280_readPressure+15,f
  3036  07CC  0755               	addwf	BMP280_readPressure@p+2,w
  3037  07CD  00BC               	movwf	??_BMP280_readPressure+14
  3038  07CE  1803               	skipnc
  3039  07CF  0ABD               	incf	??_BMP280_readPressure+15,f
  3040  07D0  0873               	movf	?___aldiv+3,w
  3041  07D1  073D               	addwf	??_BMP280_readPressure+15,w
  3042  07D2  0756               	addwf	BMP280_readPressure@p+3,w
  3043  07D3  00BD               	movwf	??_BMP280_readPressure+15
  3044  07D4  083D               	movf	??_BMP280_readPressure+15,w
  3045  07D5  00D6               	movwf	BMP280_readPressure@p+3
  3046  07D6  083C               	movf	??_BMP280_readPressure+14,w
  3047  07D7  00D5               	movwf	BMP280_readPressure@p+2
  3048  07D8  083B               	movf	??_BMP280_readPressure+13,w
  3049  07D9  00D4               	movwf	BMP280_readPressure@p+1
  3050  07DA  083A               	movf	??_BMP280_readPressure+12,w
  3051  07DB  00D3               	movwf	BMP280_readPressure@p
  3052  07DC                     l1200:
  3053                           
  3054                           ;BMP280.c: 299:   *pres = p;
  3055  07DC  084A               	movf	BMP280_readPressure@pres,w
  3056  07DD  0084               	movwf	4
  3057  07DE  0853               	movf	BMP280_readPressure@p,w
  3058  07DF  1383               	bcf	3,7	;select IRP bank0
  3059  07E0  0080               	movwf	0
  3060  07E1  0A84               	incf	4,f
  3061  07E2  0854               	movf	BMP280_readPressure@p+1,w
  3062  07E3  0080               	movwf	0
  3063  07E4  0A84               	incf	4,f
  3064  07E5  0855               	movf	BMP280_readPressure@p+2,w
  3065  07E6  0080               	movwf	0
  3066  07E7  0A84               	incf	4,f
  3067  07E8  0856               	movf	BMP280_readPressure@p+3,w
  3068  07E9  0080               	movwf	0
  3069  07EA                     l152:
  3070  07EA  0008               	return
  3071  07EB                     __end_of_BMP280_readPressure:
  3072                           
  3073                           	psect	text5
  3074  0D73                     __ptext5:	
  3075 ;; *************** function ___lmul *****************
  3076 ;; Defined at:
  3077 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  multiplier      4    6[BANK0 ] unsigned long 
  3080 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  product         4   10[COMMON] unsigned long 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  4    6[BANK0 ] unsigned long 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       8       0       0       0
  3093 ;;      Locals:         4       0       0       0       0
  3094 ;;      Temps:          1       0       0       0       0
  3095 ;;      Totals:         5       8       0       0       0
  3096 ;;Total ram usage:       13 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_BMP280_readTemperature
  3102 ;;		_BMP280_readPressure
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function ___lmul
  3108  0D73                     ___lmul:
  3109  0D73                     l1082:	
  3110                           ;incstack = 0
  3111                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3112                           
  3113  0D73  3000               	movlw	0
  3114  0D74  00FD               	movwf	___lmul@product+3
  3115  0D75  3000               	movlw	0
  3116  0D76  00FC               	movwf	___lmul@product+2
  3117  0D77  3000               	movlw	0
  3118  0D78  00FB               	movwf	___lmul@product+1
  3119  0D79  3000               	movlw	0
  3120  0D7A  00FA               	movwf	___lmul@product
  3121  0D7B                     l1084:
  3122  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0D7D  1C26               	btfss	___lmul@multiplier,0
  3125  0D7E  2D80               	goto	u681
  3126  0D7F  2D81               	goto	u680
  3127  0D80                     u681:
  3128  0D80  2D98               	goto	l1088
  3129  0D81                     u680:
  3130  0D81                     l1086:
  3131  0D81  082A               	movf	___lmul@multiplicand,w
  3132  0D82  07FA               	addwf	___lmul@product,f
  3133  0D83  082B               	movf	___lmul@multiplicand+1,w
  3134  0D84  1103               	clrz
  3135  0D85  1803               	skipnc
  3136  0D86  3E01               	addlw	1
  3137  0D87  1903               	skipnz
  3138  0D88  2D8A               	goto	u691
  3139  0D89  07FB               	addwf	___lmul@product+1,f
  3140  0D8A                     u691:
  3141  0D8A  082C               	movf	___lmul@multiplicand+2,w
  3142  0D8B  1103               	clrz
  3143  0D8C  1803               	skipnc
  3144  0D8D  3E01               	addlw	1
  3145  0D8E  1903               	skipnz
  3146  0D8F  2D91               	goto	u692
  3147  0D90  07FC               	addwf	___lmul@product+2,f
  3148  0D91                     u692:
  3149  0D91  082D               	movf	___lmul@multiplicand+3,w
  3150  0D92  1103               	clrz
  3151  0D93  1803               	skipnc
  3152  0D94  3E01               	addlw	1
  3153  0D95  1903               	skipnz
  3154  0D96  2D98               	goto	u693
  3155  0D97  07FD               	addwf	___lmul@product+3,f
  3156  0D98                     u693:
  3157  0D98                     l1088:
  3158  0D98  3001               	movlw	1
  3159  0D99  00F9               	movwf	??___lmul
  3160  0D9A                     u705:
  3161  0D9A  1003               	clrc
  3162  0D9B  0DAA               	rlf	___lmul@multiplicand,f
  3163  0D9C  0DAB               	rlf	___lmul@multiplicand+1,f
  3164  0D9D  0DAC               	rlf	___lmul@multiplicand+2,f
  3165  0D9E  0DAD               	rlf	___lmul@multiplicand+3,f
  3166  0D9F  0BF9               	decfsz	??___lmul,f
  3167  0DA0  2D9A               	goto	u705
  3168  0DA1                     l1090:
  3169  0DA1  3001               	movlw	1
  3170  0DA2                     u715:
  3171  0DA2  1003               	clrc
  3172  0DA3  0CA9               	rrf	___lmul@multiplier+3,f
  3173  0DA4  0CA8               	rrf	___lmul@multiplier+2,f
  3174  0DA5  0CA7               	rrf	___lmul@multiplier+1,f
  3175  0DA6  0CA6               	rrf	___lmul@multiplier,f
  3176  0DA7  3EFF               	addlw	-1
  3177  0DA8  1D03               	skipz
  3178  0DA9  2DA2               	goto	u715
  3179  0DAA  0829               	movf	___lmul@multiplier+3,w
  3180  0DAB  0428               	iorwf	___lmul@multiplier+2,w
  3181  0DAC  0427               	iorwf	___lmul@multiplier+1,w
  3182  0DAD  0426               	iorwf	___lmul@multiplier,w
  3183  0DAE  1D03               	skipz
  3184  0DAF  2DB1               	goto	u721
  3185  0DB0  2DB2               	goto	u720
  3186  0DB1                     u721:
  3187  0DB1  2D7B               	goto	l1084
  3188  0DB2                     u720:
  3189  0DB2                     l1092:
  3190  0DB2  087D               	movf	___lmul@product+3,w
  3191  0DB3  00A9               	movwf	?___lmul+3
  3192  0DB4  087C               	movf	___lmul@product+2,w
  3193  0DB5  00A8               	movwf	?___lmul+2
  3194  0DB6  087B               	movf	___lmul@product+1,w
  3195  0DB7  00A7               	movwf	?___lmul+1
  3196  0DB8  087A               	movf	___lmul@product,w
  3197  0DB9  00A6               	movwf	?___lmul
  3198  0DBA                     l254:
  3199  0DBA  0008               	return
  3200  0DBB                     __end_of___lmul:
  3201                           
  3202                           	psect	text6
  3203  0E07                     __ptext6:	
  3204 ;; *************** function ___lldiv *****************
  3205 ;; Defined at:
  3206 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  divisor         4    0[COMMON] unsigned long 
  3209 ;;  dividend        4    4[COMMON] unsigned long 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  quotient        4    9[COMMON] unsigned long 
  3212 ;;  counter         1   13[COMMON] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  4    0[COMMON] unsigned long 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         8       0       0       0       0
  3223 ;;      Locals:         5       0       0       0       0
  3224 ;;      Temps:          1       0       0       0       0
  3225 ;;      Totals:        14       0       0       0       0
  3226 ;;Total ram usage:       14 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_BMP280_readPressure
  3232 ;;		_I2C_Master_Init
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function ___lldiv
  3238  0E07                     ___lldiv:
  3239  0E07                     l1096:	
  3240                           ;incstack = 0
  3241                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3242                           
  3243  0E07  3000               	movlw	0
  3244  0E08  00FC               	movwf	___lldiv@quotient+3
  3245  0E09  3000               	movlw	0
  3246  0E0A  00FB               	movwf	___lldiv@quotient+2
  3247  0E0B  3000               	movlw	0
  3248  0E0C  00FA               	movwf	___lldiv@quotient+1
  3249  0E0D  3000               	movlw	0
  3250  0E0E  00F9               	movwf	___lldiv@quotient
  3251  0E0F  0873               	movf	___lldiv@divisor+3,w
  3252  0E10  0472               	iorwf	___lldiv@divisor+2,w
  3253  0E11  0471               	iorwf	___lldiv@divisor+1,w
  3254  0E12  0470               	iorwf	___lldiv@divisor,w
  3255  0E13  1903               	skipnz
  3256  0E14  2E16               	goto	u731
  3257  0E15  2E17               	goto	u730
  3258  0E16                     u731:
  3259  0E16  2E64               	goto	l1116
  3260  0E17                     u730:
  3261  0E17                     l1098:
  3262  0E17  01FD               	clrf	___lldiv@counter
  3263  0E18  0AFD               	incf	___lldiv@counter,f
  3264  0E19  2E27               	goto	l1102
  3265  0E1A                     l1100:
  3266  0E1A  3001               	movlw	1
  3267  0E1B  00F8               	movwf	??___lldiv
  3268  0E1C                     u745:
  3269  0E1C  1003               	clrc
  3270  0E1D  0DF0               	rlf	___lldiv@divisor,f
  3271  0E1E  0DF1               	rlf	___lldiv@divisor+1,f
  3272  0E1F  0DF2               	rlf	___lldiv@divisor+2,f
  3273  0E20  0DF3               	rlf	___lldiv@divisor+3,f
  3274  0E21  0BF8               	decfsz	??___lldiv,f
  3275  0E22  2E1C               	goto	u745
  3276  0E23  3001               	movlw	1
  3277  0E24  00F8               	movwf	??___lldiv
  3278  0E25  0878               	movf	??___lldiv,w
  3279  0E26  07FD               	addwf	___lldiv@counter,f
  3280  0E27                     l1102:
  3281  0E27  1FF3               	btfss	___lldiv@divisor+3,7
  3282  0E28  2E2A               	goto	u751
  3283  0E29  2E2B               	goto	u750
  3284  0E2A                     u751:
  3285  0E2A  2E1A               	goto	l1100
  3286  0E2B                     u750:
  3287  0E2B                     l1104:
  3288  0E2B  3001               	movlw	1
  3289  0E2C  00F8               	movwf	??___lldiv
  3290  0E2D                     u765:
  3291  0E2D  1003               	clrc
  3292  0E2E  0DF9               	rlf	___lldiv@quotient,f
  3293  0E2F  0DFA               	rlf	___lldiv@quotient+1,f
  3294  0E30  0DFB               	rlf	___lldiv@quotient+2,f
  3295  0E31  0DFC               	rlf	___lldiv@quotient+3,f
  3296  0E32  0BF8               	decfsz	??___lldiv,f
  3297  0E33  2E2D               	goto	u765
  3298  0E34                     l1106:
  3299  0E34  0873               	movf	___lldiv@divisor+3,w
  3300  0E35  0277               	subwf	___lldiv@dividend+3,w
  3301  0E36  1D03               	skipz
  3302  0E37  2E42               	goto	u775
  3303  0E38  0872               	movf	___lldiv@divisor+2,w
  3304  0E39  0276               	subwf	___lldiv@dividend+2,w
  3305  0E3A  1D03               	skipz
  3306  0E3B  2E42               	goto	u775
  3307  0E3C  0871               	movf	___lldiv@divisor+1,w
  3308  0E3D  0275               	subwf	___lldiv@dividend+1,w
  3309  0E3E  1D03               	skipz
  3310  0E3F  2E42               	goto	u775
  3311  0E40  0870               	movf	___lldiv@divisor,w
  3312  0E41  0274               	subwf	___lldiv@dividend,w
  3313  0E42                     u775:
  3314  0E42  1C03               	skipc
  3315  0E43  2E45               	goto	u771
  3316  0E44  2E46               	goto	u770
  3317  0E45                     u771:
  3318  0E45  2E55               	goto	l1112
  3319  0E46                     u770:
  3320  0E46                     l1108:
  3321  0E46  0870               	movf	___lldiv@divisor,w
  3322  0E47  02F4               	subwf	___lldiv@dividend,f
  3323  0E48  0871               	movf	___lldiv@divisor+1,w
  3324  0E49  1C03               	skipc
  3325  0E4A  0F71               	incfsz	___lldiv@divisor+1,w
  3326  0E4B  02F5               	subwf	___lldiv@dividend+1,f
  3327  0E4C  0872               	movf	___lldiv@divisor+2,w
  3328  0E4D  1C03               	skipc
  3329  0E4E  0F72               	incfsz	___lldiv@divisor+2,w
  3330  0E4F  02F6               	subwf	___lldiv@dividend+2,f
  3331  0E50  0873               	movf	___lldiv@divisor+3,w
  3332  0E51  1C03               	skipc
  3333  0E52  0F73               	incfsz	___lldiv@divisor+3,w
  3334  0E53  02F7               	subwf	___lldiv@dividend+3,f
  3335  0E54                     l1110:
  3336  0E54  1479               	bsf	___lldiv@quotient,0
  3337  0E55                     l1112:
  3338  0E55  3001               	movlw	1
  3339  0E56                     u785:
  3340  0E56  1003               	clrc
  3341  0E57  0CF3               	rrf	___lldiv@divisor+3,f
  3342  0E58  0CF2               	rrf	___lldiv@divisor+2,f
  3343  0E59  0CF1               	rrf	___lldiv@divisor+1,f
  3344  0E5A  0CF0               	rrf	___lldiv@divisor,f
  3345  0E5B  3EFF               	addlw	-1
  3346  0E5C  1D03               	skipz
  3347  0E5D  2E56               	goto	u785
  3348  0E5E                     l1114:
  3349  0E5E  3001               	movlw	1
  3350  0E5F  02FD               	subwf	___lldiv@counter,f
  3351  0E60  1D03               	btfss	3,2
  3352  0E61  2E63               	goto	u791
  3353  0E62  2E64               	goto	u790
  3354  0E63                     u791:
  3355  0E63  2E2B               	goto	l1104
  3356  0E64                     u790:
  3357  0E64                     l1116:
  3358  0E64  087C               	movf	___lldiv@quotient+3,w
  3359  0E65  00F3               	movwf	?___lldiv+3
  3360  0E66  087B               	movf	___lldiv@quotient+2,w
  3361  0E67  00F2               	movwf	?___lldiv+2
  3362  0E68  087A               	movf	___lldiv@quotient+1,w
  3363  0E69  00F1               	movwf	?___lldiv+1
  3364  0E6A  0879               	movf	___lldiv@quotient,w
  3365  0E6B  00F0               	movwf	?___lldiv
  3366  0E6C                     l276:
  3367  0E6C  0008               	return
  3368  0E6D                     __end_of___lldiv:
  3369                           
  3370                           	psect	text7
  3371  0016                     __ptext7:	
  3372 ;; *************** function ___aldiv *****************
  3373 ;; Defined at:
  3374 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  divisor         4    0[COMMON] long 
  3377 ;;  dividend        4    4[COMMON] long 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  quotient        4    2[BANK0 ] long 
  3380 ;;  sign            1    1[BANK0 ] unsigned char 
  3381 ;;  counter         1    0[BANK0 ] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  4    0[COMMON] long 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         8       0       0       0       0
  3392 ;;      Locals:         0       6       0       0       0
  3393 ;;      Temps:          1       0       0       0       0
  3394 ;;      Totals:         9       6       0       0       0
  3395 ;;Total ram usage:       15 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_BMP280_readTemperature
  3401 ;;		_BMP280_readPressure
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           
  3406                           ;psect for function ___aldiv
  3407  0016                     ___aldiv:
  3408  0016                     l1120:	
  3409                           ;incstack = 0
  3410                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3411                           
  3412  0016  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0017  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0018  01A1               	clrf	___aldiv@sign
  3415  0019                     l1122:
  3416  0019  1FF3               	btfss	___aldiv@divisor+3,7
  3417  001A  281C               	goto	u801
  3418  001B  281D               	goto	u800
  3419  001C                     u801:
  3420  001C  282A               	goto	l305
  3421  001D                     u800:
  3422  001D                     l1124:
  3423  001D  09F0               	comf	___aldiv@divisor,f
  3424  001E  09F1               	comf	___aldiv@divisor+1,f
  3425  001F  09F2               	comf	___aldiv@divisor+2,f
  3426  0020  09F3               	comf	___aldiv@divisor+3,f
  3427  0021  0AF0               	incf	___aldiv@divisor,f
  3428  0022  1903               	skipnz
  3429  0023  0AF1               	incf	___aldiv@divisor+1,f
  3430  0024  1903               	skipnz
  3431  0025  0AF2               	incf	___aldiv@divisor+2,f
  3432  0026  1903               	skipnz
  3433  0027  0AF3               	incf	___aldiv@divisor+3,f
  3434  0028  01A1               	clrf	___aldiv@sign
  3435  0029  0AA1               	incf	___aldiv@sign,f
  3436  002A                     l305:
  3437  002A  1FF7               	btfss	___aldiv@dividend+3,7
  3438  002B  282D               	goto	u811
  3439  002C  282E               	goto	u810
  3440  002D                     u811:
  3441  002D  283D               	goto	l1130
  3442  002E                     u810:
  3443  002E                     l1126:
  3444  002E  09F4               	comf	___aldiv@dividend,f
  3445  002F  09F5               	comf	___aldiv@dividend+1,f
  3446  0030  09F6               	comf	___aldiv@dividend+2,f
  3447  0031  09F7               	comf	___aldiv@dividend+3,f
  3448  0032  0AF4               	incf	___aldiv@dividend,f
  3449  0033  1903               	skipnz
  3450  0034  0AF5               	incf	___aldiv@dividend+1,f
  3451  0035  1903               	skipnz
  3452  0036  0AF6               	incf	___aldiv@dividend+2,f
  3453  0037  1903               	skipnz
  3454  0038  0AF7               	incf	___aldiv@dividend+3,f
  3455  0039                     l1128:
  3456  0039  3001               	movlw	1
  3457  003A  00F8               	movwf	??___aldiv
  3458  003B  0878               	movf	??___aldiv,w
  3459  003C  06A1               	xorwf	___aldiv@sign,f
  3460  003D                     l1130:
  3461  003D  3000               	movlw	0
  3462  003E  00A5               	movwf	___aldiv@quotient+3
  3463  003F  3000               	movlw	0
  3464  0040  00A4               	movwf	___aldiv@quotient+2
  3465  0041  3000               	movlw	0
  3466  0042  00A3               	movwf	___aldiv@quotient+1
  3467  0043  3000               	movlw	0
  3468  0044  00A2               	movwf	___aldiv@quotient
  3469  0045                     l1132:
  3470  0045  0873               	movf	___aldiv@divisor+3,w
  3471  0046  0472               	iorwf	___aldiv@divisor+2,w
  3472  0047  0471               	iorwf	___aldiv@divisor+1,w
  3473  0048  0470               	iorwf	___aldiv@divisor,w
  3474  0049  1903               	skipnz
  3475  004A  284C               	goto	u821
  3476  004B  284D               	goto	u820
  3477  004C                     u821:
  3478  004C  289A               	goto	l1152
  3479  004D                     u820:
  3480  004D                     l1134:
  3481  004D  01A0               	clrf	___aldiv@counter
  3482  004E  0AA0               	incf	___aldiv@counter,f
  3483  004F  285D               	goto	l1138
  3484  0050                     l1136:
  3485  0050  3001               	movlw	1
  3486  0051  00F8               	movwf	??___aldiv
  3487  0052                     u835:
  3488  0052  1003               	clrc
  3489  0053  0DF0               	rlf	___aldiv@divisor,f
  3490  0054  0DF1               	rlf	___aldiv@divisor+1,f
  3491  0055  0DF2               	rlf	___aldiv@divisor+2,f
  3492  0056  0DF3               	rlf	___aldiv@divisor+3,f
  3493  0057  0BF8               	decfsz	??___aldiv,f
  3494  0058  2852               	goto	u835
  3495  0059  3001               	movlw	1
  3496  005A  00F8               	movwf	??___aldiv
  3497  005B  0878               	movf	??___aldiv,w
  3498  005C  07A0               	addwf	___aldiv@counter,f
  3499  005D                     l1138:
  3500  005D  1FF3               	btfss	___aldiv@divisor+3,7
  3501  005E  2860               	goto	u841
  3502  005F  2861               	goto	u840
  3503  0060                     u841:
  3504  0060  2850               	goto	l1136
  3505  0061                     u840:
  3506  0061                     l1140:
  3507  0061  3001               	movlw	1
  3508  0062  00F8               	movwf	??___aldiv
  3509  0063                     u855:
  3510  0063  1003               	clrc
  3511  0064  0DA2               	rlf	___aldiv@quotient,f
  3512  0065  0DA3               	rlf	___aldiv@quotient+1,f
  3513  0066  0DA4               	rlf	___aldiv@quotient+2,f
  3514  0067  0DA5               	rlf	___aldiv@quotient+3,f
  3515  0068  0BF8               	decfsz	??___aldiv,f
  3516  0069  2863               	goto	u855
  3517  006A                     l1142:
  3518  006A  0873               	movf	___aldiv@divisor+3,w
  3519  006B  0277               	subwf	___aldiv@dividend+3,w
  3520  006C  1D03               	skipz
  3521  006D  2878               	goto	u865
  3522  006E  0872               	movf	___aldiv@divisor+2,w
  3523  006F  0276               	subwf	___aldiv@dividend+2,w
  3524  0070  1D03               	skipz
  3525  0071  2878               	goto	u865
  3526  0072  0871               	movf	___aldiv@divisor+1,w
  3527  0073  0275               	subwf	___aldiv@dividend+1,w
  3528  0074  1D03               	skipz
  3529  0075  2878               	goto	u865
  3530  0076  0870               	movf	___aldiv@divisor,w
  3531  0077  0274               	subwf	___aldiv@dividend,w
  3532  0078                     u865:
  3533  0078  1C03               	skipc
  3534  0079  287B               	goto	u861
  3535  007A  287C               	goto	u860
  3536  007B                     u861:
  3537  007B  288B               	goto	l1148
  3538  007C                     u860:
  3539  007C                     l1144:
  3540  007C  0870               	movf	___aldiv@divisor,w
  3541  007D  02F4               	subwf	___aldiv@dividend,f
  3542  007E  0871               	movf	___aldiv@divisor+1,w
  3543  007F  1C03               	skipc
  3544  0080  0F71               	incfsz	___aldiv@divisor+1,w
  3545  0081  02F5               	subwf	___aldiv@dividend+1,f
  3546  0082  0872               	movf	___aldiv@divisor+2,w
  3547  0083  1C03               	skipc
  3548  0084  0F72               	incfsz	___aldiv@divisor+2,w
  3549  0085  02F6               	subwf	___aldiv@dividend+2,f
  3550  0086  0873               	movf	___aldiv@divisor+3,w
  3551  0087  1C03               	skipc
  3552  0088  0F73               	incfsz	___aldiv@divisor+3,w
  3553  0089  02F7               	subwf	___aldiv@dividend+3,f
  3554  008A                     l1146:
  3555  008A  1422               	bsf	___aldiv@quotient,0
  3556  008B                     l1148:
  3557  008B  3001               	movlw	1
  3558  008C                     u875:
  3559  008C  1003               	clrc
  3560  008D  0CF3               	rrf	___aldiv@divisor+3,f
  3561  008E  0CF2               	rrf	___aldiv@divisor+2,f
  3562  008F  0CF1               	rrf	___aldiv@divisor+1,f
  3563  0090  0CF0               	rrf	___aldiv@divisor,f
  3564  0091  3EFF               	addlw	-1
  3565  0092  1D03               	skipz
  3566  0093  288C               	goto	u875
  3567  0094                     l1150:
  3568  0094  3001               	movlw	1
  3569  0095  02A0               	subwf	___aldiv@counter,f
  3570  0096  1D03               	btfss	3,2
  3571  0097  2899               	goto	u881
  3572  0098  289A               	goto	u880
  3573  0099                     u881:
  3574  0099  2861               	goto	l1140
  3575  009A                     u880:
  3576  009A                     l1152:
  3577  009A  0821               	movf	___aldiv@sign,w
  3578  009B  1903               	btfsc	3,2
  3579  009C  289E               	goto	u891
  3580  009D  289F               	goto	u890
  3581  009E                     u891:
  3582  009E  28AA               	goto	l1156
  3583  009F                     u890:
  3584  009F                     l1154:
  3585  009F  09A2               	comf	___aldiv@quotient,f
  3586  00A0  09A3               	comf	___aldiv@quotient+1,f
  3587  00A1  09A4               	comf	___aldiv@quotient+2,f
  3588  00A2  09A5               	comf	___aldiv@quotient+3,f
  3589  00A3  0AA2               	incf	___aldiv@quotient,f
  3590  00A4  1903               	skipnz
  3591  00A5  0AA3               	incf	___aldiv@quotient+1,f
  3592  00A6  1903               	skipnz
  3593  00A7  0AA4               	incf	___aldiv@quotient+2,f
  3594  00A8  1903               	skipnz
  3595  00A9  0AA5               	incf	___aldiv@quotient+3,f
  3596  00AA                     l1156:
  3597  00AA  0825               	movf	___aldiv@quotient+3,w
  3598  00AB  00F3               	movwf	?___aldiv+3
  3599  00AC  0824               	movf	___aldiv@quotient+2,w
  3600  00AD  00F2               	movwf	?___aldiv+2
  3601  00AE  0823               	movf	___aldiv@quotient+1,w
  3602  00AF  00F1               	movwf	?___aldiv+1
  3603  00B0  0822               	movf	___aldiv@quotient,w
  3604  00B1  00F0               	movwf	?___aldiv
  3605  00B2                     l315:
  3606  00B2  0008               	return
  3607  00B3                     __end_of___aldiv:
  3608                           
  3609                           	psect	text8
  3610  0F24                     __ptext8:	
  3611 ;; *************** function _BMP280_begin *****************
  3612 ;; Defined at:
  3613 ;;		line 156 in file "BMP280.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  mode            1    wreg     enum E1304
  3616 ;;  T_sampling      1    3[BANK0 ] enum E1309
  3617 ;;  P_sampling      1    4[BANK0 ] enum E1309
  3618 ;;  filter          1    5[BANK0 ] enum E1317
  3619 ;;  standby         1    6[BANK0 ] enum E1324
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  mode            1   13[COMMON] enum E1304
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  2    3[BANK0 ] int 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0, pclath, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3631 ;;      Params:         0       4       0       0       0
  3632 ;;      Locals:         1       0       0       0       0
  3633 ;;      Temps:          0       4       0       0       0
  3634 ;;      Totals:         1       8       0       0       0
  3635 ;;Total ram usage:        9 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    4
  3638 ;; This function calls:
  3639 ;;		_BMP280_Configure
  3640 ;;		_BMP280_Read16
  3641 ;;		_BMP280_Read8
  3642 ;;		_BMP280_Write
  3643 ;; This function is called by:
  3644 ;;		_main
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           
  3649                           ;psect for function _BMP280_begin
  3650  0F24                     _BMP280_begin:
  3651                           
  3652                           ;incstack = 0
  3653                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  3654                           ;BMP280_begin@mode stored from wreg
  3655  0F24  00FD               	movwf	BMP280_begin@mode
  3656  0F25                     l1162:
  3657                           
  3658                           ;BMP280.c: 156: int BMP280_begin(BMP280_mode mode,;BMP280.c: 157:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 158:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 159:                   BMP280_filter filter ,;BMP280.c: 160:                   
      +                          standby_time standby );BMP280.c: 161: {;BMP280.c: 162:   if(BMP280_Read8(0xD0) != 0x58)
  3659  0F25  30D0               	movlw	208
  3660  0F26  120A  158A  24EF  120A  158A  	fcall	_BMP280_Read8
  3661  0F2B  3A58               	xorlw	88
  3662  0F2C  1903               	skipnz
  3663  0F2D  2F2F               	goto	u901
  3664  0F2E  2F30               	goto	u900
  3665  0F2F                     u901:
  3666  0F2F  2F31               	goto	l1166
  3667  0F30                     u900:
  3668  0F30  2FFF               	goto	l132
  3669  0F31                     l1166:
  3670                           
  3671                           ;BMP280.c: 166:   BMP280_Write(0xE0, 0xB6);
  3672  0F31  30B6               	movlw	182
  3673  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  3674  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  3675  0F34  00A7               	movwf	??_BMP280_begin
  3676  0F35  0827               	movf	??_BMP280_begin,w
  3677  0F36  00F2               	movwf	BMP280_Write@_data
  3678  0F37  30E0               	movlw	224
  3679  0F38  120A  158A  245E  120A  158A  	fcall	_BMP280_Write
  3680  0F3D                     l1168:
  3681                           
  3682                           ;BMP280.c: 167:   _delay((unsigned long)((100)*(8000000/4000.0)));
  3683  0F3D  3002               	movlw	2
  3684  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  3686  0F40  00A9               	movwf	??_BMP280_begin+2
  3687  0F41  3004               	movlw	4
  3688  0F42  00A8               	movwf	??_BMP280_begin+1
  3689  0F43  30B9               	movlw	185
  3690  0F44  00A7               	movwf	??_BMP280_begin
  3691  0F45                     u1187:
  3692  0F45  0BA7               	decfsz	??_BMP280_begin,f
  3693  0F46  2F45               	goto	u1187
  3694  0F47  0BA8               	decfsz	??_BMP280_begin+1,f
  3695  0F48  2F45               	goto	u1187
  3696  0F49  0BA9               	decfsz	??_BMP280_begin+2,f
  3697  0F4A  2F45               	goto	u1187
  3698  0F4B  2F4C               	nop2
  3699  0F4C                     l1172:	
  3700                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3701                           
  3702                           
  3703                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3704  0F4C  30F3               	movlw	243
  3705  0F4D  120A  158A  24EF  120A  158A  	fcall	_BMP280_Read8
  3706  0F52  3901               	andlw	1
  3707  0F53  1D03               	btfss	3,2
  3708  0F54  2F56               	goto	u911
  3709  0F55  2F57               	goto	u910
  3710  0F56                     u911:
  3711  0F56  2F3D               	goto	l1168
  3712  0F57                     u910:
  3713  0F57                     l1174:
  3714                           
  3715                           ;BMP280.c: 173:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  3716  0F57  3088               	movlw	136
  3717  0F58  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3718  0F5D  0877               	movf	?_BMP280_Read16+1,w
  3719  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  3720  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  3721  0F60  00A5               	movwf	(_BMP280_calib+1)^(0+128)
  3722  0F61  0876               	movf	?_BMP280_Read16,w
  3723  0F62  00A4               	movwf	_BMP280_calib^(0+128)
  3724                           
  3725                           ;BMP280.c: 174:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  3726  0F63  308A               	movlw	138
  3727  0F64  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3728  0F69  0877               	movf	?_BMP280_Read16+1,w
  3729  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3730  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  3731  0F6C  00A7               	movwf	((_BMP280_calib+1)^(0+128)+2)
  3732  0F6D  0876               	movf	?_BMP280_Read16,w
  3733  0F6E  00A6               	movwf	(_BMP280_calib^(0+128)+2)
  3734                           
  3735                           ;BMP280.c: 175:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  3736  0F6F  308C               	movlw	140
  3737  0F70  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3738  0F75  0877               	movf	?_BMP280_Read16+1,w
  3739  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  3741  0F78  00A9               	movwf	((_BMP280_calib+1)^(0+128)+4)
  3742  0F79  0876               	movf	?_BMP280_Read16,w
  3743  0F7A  00A8               	movwf	(_BMP280_calib^(0+128)+4)
  3744                           
  3745                           ;BMP280.c: 177:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  3746  0F7B  308E               	movlw	142
  3747  0F7C  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3748  0F81  0877               	movf	?_BMP280_Read16+1,w
  3749  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  3750  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  3751  0F84  00AB               	movwf	((_BMP280_calib+1)^(0+128)+6)
  3752  0F85  0876               	movf	?_BMP280_Read16,w
  3753  0F86  00AA               	movwf	(_BMP280_calib^(0+128)+6)
  3754                           
  3755                           ;BMP280.c: 178:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  3756  0F87  3090               	movlw	144
  3757  0F88  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3758  0F8D  0877               	movf	?_BMP280_Read16+1,w
  3759  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  3760  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  3761  0F90  00AD               	movwf	((_BMP280_calib+1)^(0+128)+8)
  3762  0F91  0876               	movf	?_BMP280_Read16,w
  3763  0F92  00AC               	movwf	(_BMP280_calib^(0+128)+8)
  3764                           
  3765                           ;BMP280.c: 179:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  3766  0F93  3092               	movlw	146
  3767  0F94  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3768  0F99  0877               	movf	?_BMP280_Read16+1,w
  3769  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  3770  0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  3771  0F9C  00AF               	movwf	((_BMP280_calib+1)^(0+128)+10)
  3772  0F9D  0876               	movf	?_BMP280_Read16,w
  3773  0F9E  00AE               	movwf	(_BMP280_calib^(0+128)+10)
  3774                           
  3775                           ;BMP280.c: 180:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  3776  0F9F  3094               	movlw	148
  3777  0FA0  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3778  0FA5  0877               	movf	?_BMP280_Read16+1,w
  3779  0FA6  1683               	bsf	3,5	;RP0=1, select bank1
  3780  0FA7  1303               	bcf	3,6	;RP1=0, select bank1
  3781  0FA8  00B1               	movwf	((_BMP280_calib+1)^(0+128)+12)
  3782  0FA9  0876               	movf	?_BMP280_Read16,w
  3783  0FAA  00B0               	movwf	(_BMP280_calib^(0+128)+12)
  3784                           
  3785                           ;BMP280.c: 181:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  3786  0FAB  3096               	movlw	150
  3787  0FAC  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3788  0FB1  0877               	movf	?_BMP280_Read16+1,w
  3789  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  3790  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  3791  0FB4  00B3               	movwf	((_BMP280_calib+1)^(0+128)+14)
  3792  0FB5  0876               	movf	?_BMP280_Read16,w
  3793  0FB6  00B2               	movwf	(_BMP280_calib^(0+128)+14)
  3794                           
  3795                           ;BMP280.c: 182:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  3796  0FB7  3098               	movlw	152
  3797  0FB8  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3798  0FBD  0877               	movf	?_BMP280_Read16+1,w
  3799  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  3800  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  3801  0FC0  00B5               	movwf	((_BMP280_calib+1)^(0+128)+16)
  3802  0FC1  0876               	movf	?_BMP280_Read16,w
  3803  0FC2  00B4               	movwf	(_BMP280_calib^(0+128)+16)
  3804                           
  3805                           ;BMP280.c: 183:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  3806  0FC3  309A               	movlw	154
  3807  0FC4  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3808  0FC9  0877               	movf	?_BMP280_Read16+1,w
  3809  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3810  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  3811  0FCC  00B7               	movwf	((_BMP280_calib+1)^(0+128)+18)
  3812  0FCD  0876               	movf	?_BMP280_Read16,w
  3813  0FCE  00B6               	movwf	(_BMP280_calib^(0+128)+18)
  3814                           
  3815                           ;BMP280.c: 184:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  3816  0FCF  309C               	movlw	156
  3817  0FD0  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3818  0FD5  0877               	movf	?_BMP280_Read16+1,w
  3819  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3820  0FD7  1303               	bcf	3,6	;RP1=0, select bank1
  3821  0FD8  00B9               	movwf	((_BMP280_calib+1)^(0+128)+20)
  3822  0FD9  0876               	movf	?_BMP280_Read16,w
  3823  0FDA  00B8               	movwf	(_BMP280_calib^(0+128)+20)
  3824                           
  3825                           ;BMP280.c: 185:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  3826  0FDB  309E               	movlw	158
  3827  0FDC  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3828  0FE1  0877               	movf	?_BMP280_Read16+1,w
  3829  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  3830  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  3831  0FE4  00BB               	movwf	((_BMP280_calib+1)^(0+128)+22)
  3832  0FE5  0876               	movf	?_BMP280_Read16,w
  3833  0FE6  00BA               	movwf	(_BMP280_calib^(0+128)+22)
  3834                           
  3835                           ;BMP280.c: 187:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  3836  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  3838  0FE9  0823               	movf	BMP280_begin@T_sampling,w
  3839  0FEA  00A7               	movwf	??_BMP280_begin
  3840  0FEB  0827               	movf	??_BMP280_begin,w
  3841  0FEC  00F6               	movwf	BMP280_Configure@T_sampling
  3842  0FED  0824               	movf	BMP280_begin@P_sampling,w
  3843  0FEE  00A8               	movwf	??_BMP280_begin+1
  3844  0FEF  0828               	movf	??_BMP280_begin+1,w
  3845  0FF0  00F7               	movwf	BMP280_Configure@P_sampling
  3846  0FF1  0825               	movf	BMP280_begin@filter,w
  3847  0FF2  00A9               	movwf	??_BMP280_begin+2
  3848  0FF3  0829               	movf	??_BMP280_begin+2,w
  3849  0FF4  00F8               	movwf	BMP280_Configure@filter
  3850  0FF5  0826               	movf	BMP280_begin@standby,w
  3851  0FF6  00AA               	movwf	??_BMP280_begin+3
  3852  0FF7  082A               	movf	??_BMP280_begin+3,w
  3853  0FF8  00F9               	movwf	BMP280_Configure@standby
  3854  0FF9  087D               	movf	BMP280_begin@mode,w
  3855  0FFA  120A  158A  252B  120A  158A  	fcall	_BMP280_Configure
  3856  0FFF                     l132:
  3857  0FFF  0008               	return
  3858  1000                     __end_of_BMP280_begin:
  3859                           
  3860                           	psect	text9
  3861  0CEF                     __ptext9:	
  3862 ;; *************** function _BMP280_Read8 *****************
  3863 ;; Defined at:
  3864 ;;		line 106 in file "BMP280.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  reg_addr        1    wreg     unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  reg_addr        1    8[COMMON] unsigned char 
  3869 ;;  ret             1    9[COMMON] unsigned char 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      unsigned char 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3879 ;;      Params:         0       0       0       0       0
  3880 ;;      Locals:         2       0       0       0       0
  3881 ;;      Temps:          2       0       0       0       0
  3882 ;;      Totals:         4       0       0       0       0
  3883 ;;Total ram usage:        4 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    2
  3886 ;; This function calls:
  3887 ;;		_I2C_Master_Read
  3888 ;;		_I2C_Master_Start
  3889 ;;		_I2C_Master_Stop
  3890 ;;		_I2C_Master_Write
  3891 ;; This function is called by:
  3892 ;;		_BMP280_begin
  3893 ;;		_BMP280_ForcedMeasurement
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function _BMP280_Read8
  3899  0CEF                     _BMP280_Read8:
  3900                           
  3901                           ;incstack = 0
  3902                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  3903                           ;BMP280_Read8@reg_addr stored from wreg
  3904  0CEF  00F8               	movwf	BMP280_Read8@reg_addr
  3905  0CF0                     l1034:
  3906                           
  3907                           ;BMP280.c: 106: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 107: {;BMP280.c: 108:  
      +                           uint8_t ret;;BMP280.c: 110:   I2C_Master_Start();
  3908  0CF0  120A  158A  2435  120A  158A  	fcall	_I2C_Master_Start
  3909                           
  3910                           ;BMP280.c: 111:   I2C_Master_Write( 0xEE);
  3911  0CF5  30EE               	movlw	238
  3912  0CF6  00F0               	movwf	I2C_Master_Write@d
  3913  0CF7  3000               	movlw	0
  3914  0CF8  00F1               	movwf	I2C_Master_Write@d+1
  3915  0CF9  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  3916                           
  3917                           ;BMP280.c: 112:   I2C_Master_Write(reg_addr);
  3918  0CFE  0878               	movf	BMP280_Read8@reg_addr,w
  3919  0CFF  00F6               	movwf	??_BMP280_Read8
  3920  0D00  01F7               	clrf	??_BMP280_Read8+1
  3921  0D01  0876               	movf	??_BMP280_Read8,w
  3922  0D02  00F0               	movwf	I2C_Master_Write@d
  3923  0D03  0877               	movf	??_BMP280_Read8+1,w
  3924  0D04  00F1               	movwf	I2C_Master_Write@d+1
  3925  0D05  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  3926                           
  3927                           ;BMP280.c: 113:   I2C_Master_Start();
  3928  0D0A  120A  158A  2435  120A  158A  	fcall	_I2C_Master_Start
  3929                           
  3930                           ;BMP280.c: 114:   I2C_Master_Write( 0xEE | 1);
  3931  0D0F  30EF               	movlw	239
  3932  0D10  00F0               	movwf	I2C_Master_Write@d
  3933  0D11  3000               	movlw	0
  3934  0D12  00F1               	movwf	I2C_Master_Write@d+1
  3935  0D13  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  3936                           
  3937                           ;BMP280.c: 115:   ret = I2C_Master_Read(0);
  3938  0D18  3000               	movlw	0
  3939  0D19  00F0               	movwf	I2C_Master_Read@a
  3940  0D1A  00F1               	movwf	I2C_Master_Read@a+1
  3941  0D1B  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  3942  0D20  0870               	movf	?_I2C_Master_Read,w
  3943  0D21  00F6               	movwf	??_BMP280_Read8
  3944  0D22  0876               	movf	??_BMP280_Read8,w
  3945  0D23  00F9               	movwf	BMP280_Read8@ret
  3946                           
  3947                           ;BMP280.c: 116:   I2C_Master_Stop();
  3948  0D24  120A  158A  243E  120A  158A  	fcall	_I2C_Master_Stop
  3949  0D29                     l1036:
  3950                           
  3951                           ;BMP280.c: 118:   return ret;
  3952  0D29  0879               	movf	BMP280_Read8@ret,w
  3953  0D2A                     l122:
  3954  0D2A  0008               	return
  3955  0D2B                     __end_of_BMP280_Read8:
  3956                           
  3957                           	psect	text10
  3958  0DBB                     __ptext10:	
  3959 ;; *************** function _BMP280_Read16 *****************
  3960 ;; Defined at:
  3961 ;;		line 122 in file "BMP280.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  reg_addr        1    wreg     unsigned char 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  reg_addr        1   10[COMMON] unsigned char 
  3966 ;;  ret             2   11[COMMON] struct .
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  2    6[COMMON] unsigned int 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         2       0       0       0       0
  3977 ;;      Locals:         3       0       0       0       0
  3978 ;;      Temps:          2       0       0       0       0
  3979 ;;      Totals:         7       0       0       0       0
  3980 ;;Total ram usage:        7 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		_I2C_Master_Read
  3985 ;;		_I2C_Master_Start
  3986 ;;		_I2C_Master_Stop
  3987 ;;		_I2C_Master_Write
  3988 ;; This function is called by:
  3989 ;;		_BMP280_begin
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function _BMP280_Read16
  3995  0DBB                     _BMP280_Read16:
  3996                           
  3997                           ;incstack = 0
  3998                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  3999                           ;BMP280_Read16@reg_addr stored from wreg
  4000  0DBB  00FA               	movwf	BMP280_Read16@reg_addr
  4001  0DBC                     l1040:
  4002                           
  4003                           ;BMP280.c: 122: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 123: {;BMP280.c: 128:
      +                             } ret;;BMP280.c: 130:   I2C_Master_Start();
  4004  0DBC  120A  158A  2435  120A  158A  	fcall	_I2C_Master_Start
  4005                           
  4006                           ;BMP280.c: 131:   I2C_Master_Write( 0xEE);
  4007  0DC1  30EE               	movlw	238
  4008  0DC2  00F0               	movwf	I2C_Master_Write@d
  4009  0DC3  3000               	movlw	0
  4010  0DC4  00F1               	movwf	I2C_Master_Write@d+1
  4011  0DC5  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  4012                           
  4013                           ;BMP280.c: 132:   I2C_Master_Write(reg_addr);
  4014  0DCA  087A               	movf	BMP280_Read16@reg_addr,w
  4015  0DCB  00F8               	movwf	??_BMP280_Read16
  4016  0DCC  01F9               	clrf	??_BMP280_Read16+1
  4017  0DCD  0878               	movf	??_BMP280_Read16,w
  4018  0DCE  00F0               	movwf	I2C_Master_Write@d
  4019  0DCF  0879               	movf	??_BMP280_Read16+1,w
  4020  0DD0  00F1               	movwf	I2C_Master_Write@d+1
  4021  0DD1  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  4022                           
  4023                           ;BMP280.c: 133:   I2C_Master_Start();
  4024  0DD6  120A  158A  2435  120A  158A  	fcall	_I2C_Master_Start
  4025                           
  4026                           ;BMP280.c: 134:   I2C_Master_Write(0xEE | 1);
  4027  0DDB  30EF               	movlw	239
  4028  0DDC  00F0               	movwf	I2C_Master_Write@d
  4029  0DDD  3000               	movlw	0
  4030  0DDE  00F1               	movwf	I2C_Master_Write@d+1
  4031  0DDF  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  4032                           
  4033                           ;BMP280.c: 135:   ret.b[0] = I2C_Master_Read( 1);
  4034  0DE4  3001               	movlw	1
  4035  0DE5  00F0               	movwf	I2C_Master_Read@a
  4036  0DE6  3000               	movlw	0
  4037  0DE7  00F1               	movwf	I2C_Master_Read@a+1
  4038  0DE8  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  4039  0DED  0870               	movf	?_I2C_Master_Read,w
  4040  0DEE  00F8               	movwf	??_BMP280_Read16
  4041  0DEF  0878               	movf	??_BMP280_Read16,w
  4042  0DF0  00FB               	movwf	BMP280_Read16@ret
  4043                           
  4044                           ;BMP280.c: 136:   ret.b[1] = I2C_Master_Read( 0);
  4045  0DF1  3000               	movlw	0
  4046  0DF2  00F0               	movwf	I2C_Master_Read@a
  4047  0DF3  00F1               	movwf	I2C_Master_Read@a+1
  4048  0DF4  120A  158A  248B  120A  158A  	fcall	_I2C_Master_Read
  4049  0DF9  0870               	movf	?_I2C_Master_Read,w
  4050  0DFA  00F8               	movwf	??_BMP280_Read16
  4051  0DFB  0878               	movf	??_BMP280_Read16,w
  4052  0DFC  00FC               	movwf	BMP280_Read16@ret+1
  4053                           
  4054                           ;BMP280.c: 137:   I2C_Master_Stop();
  4055  0DFD  120A  158A  243E  120A  158A  	fcall	_I2C_Master_Stop
  4056  0E02                     l1042:
  4057                           
  4058                           ;BMP280.c: 139:   return(ret.w);
  4059  0E02  087C               	movf	BMP280_Read16@ret+1,w
  4060  0E03  00F7               	movwf	?_BMP280_Read16+1
  4061  0E04  087B               	movf	BMP280_Read16@ret,w
  4062  0E05  00F6               	movwf	?_BMP280_Read16
  4063  0E06                     l125:
  4064  0E06  0008               	return
  4065  0E07                     __end_of_BMP280_Read16:
  4066                           
  4067                           	psect	text11
  4068  0C8B                     __ptext11:	
  4069 ;; *************** function _I2C_Master_Read *****************
  4070 ;; Defined at:
  4071 ;;		line 74 in file "I2C.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  a               2    0[COMMON] unsigned short 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  temp            2    4[COMMON] unsigned short 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    0[COMMON] unsigned short 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0, pclath, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4085 ;;      Params:         2       0       0       0       0
  4086 ;;      Locals:         2       0       0       0       0
  4087 ;;      Temps:          2       0       0       0       0
  4088 ;;      Totals:         6       0       0       0       0
  4089 ;;Total ram usage:        6 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    1
  4092 ;; This function calls:
  4093 ;;		_I2C_Master_Wait
  4094 ;; This function is called by:
  4095 ;;		_BMP280_Read8
  4096 ;;		_BMP280_Read16
  4097 ;;		_BMP280_Update
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           
  4102                           ;psect for function _I2C_Master_Read
  4103  0C8B                     _I2C_Master_Read:
  4104  0C8B                     l1016:	
  4105                           ;incstack = 0
  4106                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4107                           
  4108                           
  4109                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4110  0C8B  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Wait
  4111  0C90                     l1018:
  4112                           
  4113                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4114  0C90  1683               	bsf	3,5	;RP0=1, select bank1
  4115  0C91  1303               	bcf	3,6	;RP1=0, select bank1
  4116  0C92  1591               	bsf	17,3	;volatile
  4117                           
  4118                           ;I2C.c: 79:     I2C_Master_Wait();
  4119  0C93  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Wait
  4120  0C98                     l1020:
  4121                           
  4122                           ;I2C.c: 80:     temp = SSPBUF;
  4123  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  4124  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  4125  0C9A  0813               	movf	19,w	;volatile
  4126  0C9B  00F2               	movwf	??_I2C_Master_Read
  4127  0C9C  01F3               	clrf	??_I2C_Master_Read+1
  4128  0C9D  0872               	movf	??_I2C_Master_Read,w
  4129  0C9E  00F4               	movwf	I2C_Master_Read@temp
  4130  0C9F  0873               	movf	??_I2C_Master_Read+1,w
  4131  0CA0  00F5               	movwf	I2C_Master_Read@temp+1
  4132  0CA1                     l1022:
  4133                           
  4134                           ;I2C.c: 81:     I2C_Master_Wait();
  4135  0CA1  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Wait
  4136  0CA6                     l1024:
  4137                           
  4138                           ;I2C.c: 82:     if(a == 1){
  4139  0CA6  0370               	decf	I2C_Master_Read@a,w
  4140  0CA7  0471               	iorwf	I2C_Master_Read@a+1,w
  4141  0CA8  1D03               	btfss	3,2
  4142  0CA9  2CAB               	goto	u611
  4143  0CAA  2CAC               	goto	u610
  4144  0CAB                     u611:
  4145  0CAB  2CB0               	goto	l93
  4146  0CAC                     u610:
  4147  0CAC                     l1026:
  4148                           
  4149                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4150  0CAC  1683               	bsf	3,5	;RP0=1, select bank1
  4151  0CAD  1303               	bcf	3,6	;RP1=0, select bank1
  4152  0CAE  1291               	bcf	17,5	;volatile
  4153                           
  4154                           ;I2C.c: 84:     }else{
  4155  0CAF  2CB3               	goto	l94
  4156  0CB0                     l93:
  4157                           
  4158                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4159  0CB0  1683               	bsf	3,5	;RP0=1, select bank1
  4160  0CB1  1303               	bcf	3,6	;RP1=0, select bank1
  4161  0CB2  1691               	bsf	17,5	;volatile
  4162  0CB3                     l94:	
  4163                           ;I2C.c: 86:     }
  4164                           
  4165                           
  4166                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4167  0CB3  1611               	bsf	17,4	;volatile
  4168  0CB4                     l1028:
  4169                           
  4170                           ;I2C.c: 88:     return temp;
  4171  0CB4  0875               	movf	I2C_Master_Read@temp+1,w
  4172  0CB5  00F1               	movwf	?_I2C_Master_Read+1
  4173  0CB6  0874               	movf	I2C_Master_Read@temp,w
  4174  0CB7  00F0               	movwf	?_I2C_Master_Read
  4175  0CB8                     l95:
  4176  0CB8  0008               	return
  4177  0CB9                     __end_of_I2C_Master_Read:
  4178                           
  4179                           	psect	text12
  4180  0D2B                     __ptext12:	
  4181 ;; *************** function _BMP280_Configure *****************
  4182 ;; Defined at:
  4183 ;;		line 143 in file "BMP280.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  mode            1    wreg     enum E1304
  4186 ;;  T_sampling      1    6[COMMON] enum E1309
  4187 ;;  P_sampling      1    7[COMMON] enum E1309
  4188 ;;  filter          1    8[COMMON] enum E1317
  4189 ;;  standby         1    9[COMMON] enum E1324
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  mode            1    0[BANK0 ] enum E1304
  4192 ;;  _config         1    2[BANK0 ] unsigned char 
  4193 ;;  _ctrl_meas      1    1[BANK0 ] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4203 ;;      Params:         4       0       0       0       0
  4204 ;;      Locals:         0       3       0       0       0
  4205 ;;      Temps:          3       0       0       0       0
  4206 ;;      Totals:         7       3       0       0       0
  4207 ;;Total ram usage:       10 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    3
  4210 ;; This function calls:
  4211 ;;		_BMP280_Write
  4212 ;; This function is called by:
  4213 ;;		_BMP280_begin
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           
  4218                           ;psect for function _BMP280_Configure
  4219  0D2B                     _BMP280_Configure:
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  4223                           ;BMP280_Configure@mode stored from wreg
  4224  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  4225  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  4226  0D2D  00A0               	movwf	BMP280_Configure@mode
  4227  0D2E                     l1046:
  4228                           
  4229                           ;BMP280.c: 143: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 144:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 145: {;BMP280.c: 146:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 148:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  4230  0D2E  0878               	movf	BMP280_Configure@filter,w
  4231  0D2F  00FA               	movwf	??_BMP280_Configure
  4232  0D30  3002               	movlw	2
  4233  0D31                     u625:
  4234  0D31  1003               	clrc
  4235  0D32  0DFA               	rlf	??_BMP280_Configure,f
  4236  0D33  3EFF               	addlw	-1
  4237  0D34  1D03               	skipz
  4238  0D35  2D31               	goto	u625
  4239  0D36  0879               	movf	BMP280_Configure@standby,w
  4240  0D37  00FB               	movwf	??_BMP280_Configure+1
  4241  0D38  3004               	movlw	4
  4242  0D39                     u635:
  4243  0D39  1003               	clrc
  4244  0D3A  0DFB               	rlf	??_BMP280_Configure+1,f
  4245  0D3B  3EFF               	addlw	-1
  4246  0D3C  1D03               	skipz
  4247  0D3D  2D39               	goto	u635
  4248  0D3E  1003               	clrc
  4249  0D3F  0D7B               	rlf	??_BMP280_Configure+1,w
  4250  0D40  047A               	iorwf	??_BMP280_Configure,w
  4251  0D41  39FC               	andlw	252
  4252  0D42  00FC               	movwf	??_BMP280_Configure+2
  4253  0D43  087C               	movf	??_BMP280_Configure+2,w
  4254  0D44  00A2               	movwf	BMP280_Configure@_config
  4255                           
  4256                           ;BMP280.c: 149:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  4257  0D45  0877               	movf	BMP280_Configure@P_sampling,w
  4258  0D46  00FA               	movwf	??_BMP280_Configure
  4259  0D47  3002               	movlw	2
  4260  0D48                     u645:
  4261  0D48  1003               	clrc
  4262  0D49  0DFA               	rlf	??_BMP280_Configure,f
  4263  0D4A  3EFF               	addlw	-1
  4264  0D4B  1D03               	skipz
  4265  0D4C  2D48               	goto	u645
  4266  0D4D  0876               	movf	BMP280_Configure@T_sampling,w
  4267  0D4E  00FB               	movwf	??_BMP280_Configure+1
  4268  0D4F  3004               	movlw	4
  4269  0D50                     u655:
  4270  0D50  1003               	clrc
  4271  0D51  0DFB               	rlf	??_BMP280_Configure+1,f
  4272  0D52  3EFF               	addlw	-1
  4273  0D53  1D03               	skipz
  4274  0D54  2D50               	goto	u655
  4275  0D55  1003               	clrc
  4276  0D56  0D7B               	rlf	??_BMP280_Configure+1,w
  4277  0D57  047A               	iorwf	??_BMP280_Configure,w
  4278  0D58  0420               	iorwf	BMP280_Configure@mode,w
  4279  0D59  00FC               	movwf	??_BMP280_Configure+2
  4280  0D5A  087C               	movf	??_BMP280_Configure+2,w
  4281  0D5B  00A1               	movwf	BMP280_Configure@_ctrl_meas
  4282  0D5C                     l1048:
  4283                           
  4284                           ;BMP280.c: 151:   BMP280_Write(0xF5, _config);
  4285  0D5C  0822               	movf	BMP280_Configure@_config,w
  4286  0D5D  00FA               	movwf	??_BMP280_Configure
  4287  0D5E  087A               	movf	??_BMP280_Configure,w
  4288  0D5F  00F2               	movwf	BMP280_Write@_data
  4289  0D60  30F5               	movlw	245
  4290  0D61  120A  158A  245E  120A  158A  	fcall	_BMP280_Write
  4291  0D66                     l1050:
  4292                           
  4293                           ;BMP280.c: 152:   BMP280_Write(0xF4, _ctrl_meas);
  4294  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0D68  0821               	movf	BMP280_Configure@_ctrl_meas,w
  4297  0D69  00FA               	movwf	??_BMP280_Configure
  4298  0D6A  087A               	movf	??_BMP280_Configure,w
  4299  0D6B  00F2               	movwf	BMP280_Write@_data
  4300  0D6C  30F4               	movlw	244
  4301  0D6D  120A  158A  245E  120A  158A  	fcall	_BMP280_Write
  4302  0D72                     l128:
  4303  0D72  0008               	return
  4304  0D73                     __end_of_BMP280_Configure:
  4305                           
  4306                           	psect	text13
  4307  0C5E                     __ptext13:	
  4308 ;; *************** function _BMP280_Write *****************
  4309 ;; Defined at:
  4310 ;;		line 96 in file "BMP280.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  reg_addr        1    wreg     unsigned char 
  4313 ;;  _data           1    2[COMMON] unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  reg_addr        1    5[COMMON] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0, pclath, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4325 ;;      Params:         1       0       0       0       0
  4326 ;;      Locals:         1       0       0       0       0
  4327 ;;      Temps:          2       0       0       0       0
  4328 ;;      Totals:         4       0       0       0       0
  4329 ;;Total ram usage:        4 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    2
  4332 ;; This function calls:
  4333 ;;		_I2C_Master_Start
  4334 ;;		_I2C_Master_Stop
  4335 ;;		_I2C_Master_Write
  4336 ;; This function is called by:
  4337 ;;		_BMP280_Configure
  4338 ;;		_BMP280_begin
  4339 ;;		_BMP280_ForcedMeasurement
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function _BMP280_Write
  4345  0C5E                     _BMP280_Write:
  4346                           
  4347                           ;incstack = 0
  4348                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  4349                           ;BMP280_Write@reg_addr stored from wreg
  4350  0C5E  00F5               	movwf	BMP280_Write@reg_addr
  4351  0C5F                     l1032:
  4352                           
  4353                           ;BMP280.c: 96: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 97: {;BMP280
      +                          .c: 98:   I2C_Master_Start();
  4354  0C5F  120A  158A  2435  120A  158A  	fcall	_I2C_Master_Start
  4355                           
  4356                           ;BMP280.c: 99:   I2C_Master_Write(0xEE);
  4357  0C64  30EE               	movlw	238
  4358  0C65  00F0               	movwf	I2C_Master_Write@d
  4359  0C66  3000               	movlw	0
  4360  0C67  00F1               	movwf	I2C_Master_Write@d+1
  4361  0C68  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  4362                           
  4363                           ;BMP280.c: 100:   I2C_Master_Write (reg_addr);
  4364  0C6D  0875               	movf	BMP280_Write@reg_addr,w
  4365  0C6E  00F3               	movwf	??_BMP280_Write
  4366  0C6F  01F4               	clrf	??_BMP280_Write+1
  4367  0C70  0873               	movf	??_BMP280_Write,w
  4368  0C71  00F0               	movwf	I2C_Master_Write@d
  4369  0C72  0874               	movf	??_BMP280_Write+1,w
  4370  0C73  00F1               	movwf	I2C_Master_Write@d+1
  4371  0C74  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  4372                           
  4373                           ;BMP280.c: 101:   I2C_Master_Write( _data);
  4374  0C79  0872               	movf	BMP280_Write@_data,w
  4375  0C7A  00F3               	movwf	??_BMP280_Write
  4376  0C7B  01F4               	clrf	??_BMP280_Write+1
  4377  0C7C  0873               	movf	??_BMP280_Write,w
  4378  0C7D  00F0               	movwf	I2C_Master_Write@d
  4379  0C7E  0874               	movf	??_BMP280_Write+1,w
  4380  0C7F  00F1               	movwf	I2C_Master_Write@d+1
  4381  0C80  120A  158A  2447  120A  158A  	fcall	_I2C_Master_Write
  4382                           
  4383                           ;BMP280.c: 102:   I2C_Master_Stop();
  4384  0C85  120A  158A  243E  120A  158A  	fcall	_I2C_Master_Stop
  4385  0C8A                     l119:
  4386  0C8A  0008               	return
  4387  0C8B                     __end_of_BMP280_Write:
  4388                           
  4389                           	psect	text14
  4390  0C47                     __ptext14:	
  4391 ;; *************** function _I2C_Master_Write *****************
  4392 ;; Defined at:
  4393 ;;		line 65 in file "I2C.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  d               2    0[COMMON] unsigned int 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0, pclath, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4407 ;;      Params:         2       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0
  4410 ;;      Totals:         2       0       0       0       0
  4411 ;;Total ram usage:        2 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    1
  4414 ;; This function calls:
  4415 ;;		_I2C_Master_Wait
  4416 ;; This function is called by:
  4417 ;;		_BMP280_Write
  4418 ;;		_BMP280_Read8
  4419 ;;		_BMP280_Read16
  4420 ;;		_BMP280_Update
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function _I2C_Master_Write
  4426  0C47                     _I2C_Master_Write:
  4427  0C47                     l1012:	
  4428                           ;incstack = 0
  4429                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4430                           
  4431                           
  4432                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4433  0C47  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Wait
  4434  0C4C                     l1014:
  4435                           
  4436                           ;I2C.c: 68:     SSPBUF = d;
  4437  0C4C  0870               	movf	I2C_Master_Write@d,w
  4438  0C4D  1283               	bcf	3,5	;RP0=0, select bank0
  4439  0C4E  1303               	bcf	3,6	;RP1=0, select bank0
  4440  0C4F  0093               	movwf	19	;volatile
  4441  0C50                     l90:
  4442  0C50  0008               	return
  4443  0C51                     __end_of_I2C_Master_Write:
  4444                           
  4445                           	psect	text15
  4446  0C3E                     __ptext15:	
  4447 ;; *************** function _I2C_Master_Stop *****************
  4448 ;; Defined at:
  4449 ;;		line 55 in file "I2C.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, pclath, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4463 ;;      Params:         0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0
  4466 ;;      Totals:         0       0       0       0       0
  4467 ;;Total ram usage:        0 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    1
  4470 ;; This function calls:
  4471 ;;		_I2C_Master_Wait
  4472 ;; This function is called by:
  4473 ;;		_BMP280_Write
  4474 ;;		_BMP280_Read8
  4475 ;;		_BMP280_Read16
  4476 ;;		_BMP280_Update
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           
  4481                           ;psect for function _I2C_Master_Stop
  4482  0C3E                     _I2C_Master_Stop:
  4483  0C3E                     l1008:	
  4484                           ;incstack = 0
  4485                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4486                           
  4487                           
  4488                           ;I2C.c: 57:     I2C_Master_Wait();
  4489  0C3E  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Wait
  4490  0C43                     l1010:
  4491                           
  4492                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4493  0C43  1683               	bsf	3,5	;RP0=1, select bank1
  4494  0C44  1303               	bcf	3,6	;RP1=0, select bank1
  4495  0C45  1511               	bsf	17,2	;volatile
  4496  0C46                     l87:
  4497  0C46  0008               	return
  4498  0C47                     __end_of_I2C_Master_Stop:
  4499                           
  4500                           	psect	text16
  4501  0C35                     __ptext16:	
  4502 ;; *************** function _I2C_Master_Start *****************
  4503 ;; Defined at:
  4504 ;;		line 39 in file "I2C.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, pclath, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4518 ;;      Params:         0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    1
  4525 ;; This function calls:
  4526 ;;		_I2C_Master_Wait
  4527 ;; This function is called by:
  4528 ;;		_BMP280_Write
  4529 ;;		_BMP280_Read8
  4530 ;;		_BMP280_Read16
  4531 ;;		_BMP280_Update
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _I2C_Master_Start
  4537  0C35                     _I2C_Master_Start:
  4538  0C35                     l1004:	
  4539                           ;incstack = 0
  4540                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4541                           
  4542                           
  4543                           ;I2C.c: 41:     I2C_Master_Wait();
  4544  0C35  120A  158A  2451  120A  158A  	fcall	_I2C_Master_Wait
  4545  0C3A                     l1006:
  4546                           
  4547                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4548  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  4549  0C3B  1303               	bcf	3,6	;RP1=0, select bank1
  4550  0C3C  1411               	bsf	17,0	;volatile
  4551  0C3D                     l81:
  4552  0C3D  0008               	return
  4553  0C3E                     __end_of_I2C_Master_Start:
  4554                           
  4555                           	psect	text17
  4556  0C51                     __ptext17:	
  4557 ;; *************** function _I2C_Master_Wait *****************
  4558 ;; Defined at:
  4559 ;;		line 32 in file "I2C.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4573 ;;      Params:         0       0       0       0       0
  4574 ;;      Locals:         0       0       0       0       0
  4575 ;;      Temps:          0       0       0       0       0
  4576 ;;      Totals:         0       0       0       0       0
  4577 ;;Total ram usage:        0 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_I2C_Master_Start
  4583 ;;		_I2C_Master_Stop
  4584 ;;		_I2C_Master_Write
  4585 ;;		_I2C_Master_Read
  4586 ;;		_I2C_Master_RepeatedStart
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _I2C_Master_Wait
  4592  0C51                     _I2C_Master_Wait:
  4593  0C51                     l1000:	
  4594                           ;incstack = 0
  4595                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4596                           
  4597  0C51                     l75:	
  4598                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4599                           
  4600  0C51  1683               	bsf	3,5	;RP0=1, select bank1
  4601  0C52  1303               	bcf	3,6	;RP1=0, select bank1
  4602  0C53  1914               	btfsc	20,2	;volatile
  4603  0C54  2C56               	goto	u591
  4604  0C55  2C57               	goto	u590
  4605  0C56                     u591:
  4606  0C56  2C51               	goto	l75
  4607  0C57                     u590:
  4608  0C57                     l1002:
  4609  0C57  0811               	movf	17,w	;volatile
  4610  0C58  391F               	andlw	31
  4611  0C59  1D03               	btfss	3,2
  4612  0C5A  2C5C               	goto	u601
  4613  0C5B  2C5D               	goto	u600
  4614  0C5C                     u601:
  4615  0C5C  2C51               	goto	l75
  4616  0C5D                     u600:
  4617  0C5D                     l78:
  4618  0C5D  0008               	return
  4619  0C5E                     __end_of_I2C_Master_Wait:
  4620  007E                     btemp	set	126	;btemp
  4621  007E                     wtemp0	set	126
  4622                           
  4623                           	psect	config
  4624                           
  4625                           ;Config register CONFIG1 @ 0x2007
  4626                           ;	Oscillator Selection bits
  4627                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4628                           ;	Watchdog Timer Enable bit
  4629                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4630                           ;	Power-up Timer Enable bit
  4631                           ;	PWRTE = OFF, PWRT disabled
  4632                           ;	RE3/MCLR pin function select bit
  4633                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4634                           ;	Code Protection bit
  4635                           ;	CP = OFF, Program memory code protection is disabled
  4636                           ;	Data Code Protection bit
  4637                           ;	CPD = OFF, Data memory code protection is disabled
  4638                           ;	Brown Out Reset Selection bits
  4639                           ;	BOREN = ON, BOR enabled
  4640                           ;	Internal External Switchover bit
  4641                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4642                           ;	Fail-Safe Clock Monitor Enabled bit
  4643                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4644                           ;	Low Voltage Programming Enable bit
  4645                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4646                           ;	In-Circuit Debugger Mode bit
  4647                           ;	DEBUG = 0x1, unprogrammed default
  4648  2007                     	org	8199
  4649  2007  23F4               	dw	9204
  4650                           
  4651                           ;Config register CONFIG2 @ 0x2008
  4652                           ;	Brown-out Reset Selection bit
  4653                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4654                           ;	Flash Program Memory Self Write Enable bits
  4655                           ;	WRT = OFF, Write protection off
  4656  2008                     	org	8200
  4657  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      78
    BANK1            80      0      28
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK0[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_BMP280_begin
    _BMP280_readTemperature->_BMP280_Update
    _BMP280_readTemperature->___lmul
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___lldiv
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure
    _BMP280_begin->_BMP280_Read16
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   22519
                                             59 BANK0      3     3      0
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             14 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              6 COMMON     8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7474
                                             14 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              9 COMMON     5     5      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                             13 COMMON     1     1      0
                                              3 BANK0      8     4      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              6 COMMON     7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              6 COMMON     7     3      4
                                              0 BANK0      3     3      0
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      78       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      1C       7       35.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      78      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 22:15:48 2021

               _BMP280_Configure 0D2B                               l43 0015                               l37 0CCC  
                             l81 0C3D                               l90 0C50                               l75 0C51  
                             l93 0CB0                               l78 0C5D                               l94 0CB3  
                             l87 0C46                               l95 0CB8                               fsr 0004  
                            l122 0D2A                              l132 0FFF                              l125 0E06  
                            l119 0C8A                              l128 0D72                              l152 07EA  
                            l305 002A                              l145 0F23                              l154 067C  
                            l315 00B2                              l148 02C4                              l254 0DBA  
                            l276 0E6C                              _GIE 005F          BMP280_Configure@_config 0022  
                            u600 0C5D                              u601 0C5C                              u610 0CAC  
                            u611 0CAB                              u800 001D                              u720 0DB2  
                            u625 0D31                              u801 001C                              u721 0DB1  
                            u705 0D9A                              u810 002E                              u730 0E17  
                            u635 0D39                              u811 002D                              u731 0E16  
                            u715 0DA2                              u900 0F30                              u820 004D  
                            u660 0EC8                              u645 0D48                              u901 0F2F  
                            u821 004C                              u590 0C57                              u910 0F57  
                            u750 0E2B                              u670 0F12                              u591 0C56  
                            u655 0D50                              u911 0F56                              u751 0E2A  
                            u840 0061                              u680 0D81                              u920 00CF  
                            u841 0060                              u745 0E1C                              u681 0D80  
                            u665 0EC3                              u770 0E46                              u835 0052  
                            u771 0E45                              u691 0D8A                              u675 0F0D  
                            u931 00F8                              u860 007C                              u692 0D91  
                            u932 00F9                              u861 007B                              u765 0E2D  
                            u693 0D98                              u941 0180                              u933 00FE  
                            u925 00CA                              u790 0E64                              u942 0181  
                            u934 00FF                              u855 0063                              u791 0E63  
                            u775 0E42                              u951 01C9                              u943 0186  
                            u935 0104                              u880 009A                              u960 029C  
                            u952 01CA                              u944 0187                              u936 0105  
                            u881 0099                              u865 0078                              u785 0E56  
                            u961 029D                              u953 01CF                              u945 018C  
                            u890 009F                              u970 02EE                              u962 02A2  
                            u954 01D0                              u946 018D                              u891 009E  
                            u875 008C                              u971 02EF                              u963 02A3  
                            u955 01D5                              u980 03C3                              u972 02F4  
                            u956 01D6                              u973 02F5                              u990 03CD  
                            u991 03CE                              u992 03D3                              u993 03D4  
                            u985 03BE                              fsr0 0004                              indf 0000  
   __size_of_BMP280_readPressure 0526           BMP280_begin@P_sampling 0024                             l1000 0C51  
                           l1002 0C57                             l1010 0C43                             l1004 0C35  
                           l1012 0C47                             l1020 0C98                             l1100 0E1A  
                           l1006 0C3A                             l1014 0C4C                             l1022 0CA1  
                           l1110 0E54                             l1102 0E27                             l1008 0C3E  
                           l1032 0C5F                             l1024 0CA6                             l1016 0C8B  
                           l1040 0DBC                             l1120 0016                             l1112 0E55  
                           l1104 0E2B                             l1200 07DC                             l1050 0D66  
                           l1026 0CAC                             l1018 0C90                             l1042 0E02  
                           l1034 0CF0                             l1130 003D                             l1122 0019  
                           l1114 0E5E                             l1106 0E34                             l1210 0CE5  
                           l1028 0CB4                             l1036 0D29                             l1140 0061  
                           l1132 0045                             l1124 001D                             l1108 0E46  
                           l1116 0E64                             l1060 0E85                             l1052 0E6D  
                           l1204 0CB9                             l1046 0D2E                             l1150 0094  
                           l1142 006A                             l1134 004D                             l1126 002E  
                           l1070 0EBA                             l1062 0E8A                             l1054 0E6E  
                           l1206 0CBE                             l1048 0D5C                             l1144 007C  
                           l1136 0050                             l1152 009A                             l1128 0039  
                           l1080 0F04                             l1072 0ED9                             l1064 0E93  
                           l1056 0E73                             l1160 0005                             l1208 0CDF  
                           l1162 0F25                             l1154 009F                             l1146 008A  
                           l1138 005D                             l1090 0DA1                             l1082 0D73  
                           l1074 0EE6                             l1066 0EA0                             l1058 0E7C  
                           l1172 0F4C                             l1156 00AA                             l1148 008B  
                           l1092 0DB2                             l1084 0D7B                             l1076 0EF3  
                           l1068 0EAD                             l1180 024B                             l1174 0F57  
                           l1166 0F31                             l1086 0D81                             l1078 0EFF  
                           l1182 026E                             l1168 0F3D                             l1096 0E07  
                           l1088 0D98                             l1192 05A2                             l1098 0E17  
                           l1194 0623                             l1186 02C8                             l1178 00B6  
                           l1196 0637                             l1188 0599                             l1198 065A  
                           u1000 03F4                             u1010 0415                             u1011 0416  
                           u1100 06C3                             u1020 0511                             u1012 041B  
                           u1021 0512                             u1013 041C                             u1005 03EF  
                           u1110 0723                             u1030 055A                             u1022 0517  
                           u1031 055B                             u1023 0518                             u1120 078D  
                           u1040 05A1                             u1032 0560                             u1121 078E  
                           u1105 06BE                             u1041 05A0                             u1033 0561  
                           u1130 079F                             u1122 0793                             u1131 07A0  
                           u1123 0794                             u1115 071E                             u1051 05E5  
                           u1132 07A5                             u1060 05F9                             u1052 05E6  
                           u1133 07A6                             u1061 05FA                             u1053 05EB  
                           u1070 0637                             u1062 05FF                             u1054 05EC  
                           u1071 0636                             u1063 0600                             u1055 05F1  
                           u1080 068A                             u1056 05F2                             u1073 0633  
                           u1090 06A3                             u1085 0685                             u1095 069E  
                           u1177 0CD4                             u1187 0F45                             _PEIE 005E  
        BMP280_Configure@standby 0079                             _main 0CB9                             btemp 007E  
                           start 0000  __size_of_BMP280_readTemperature 0212           BMP280_begin@T_sampling 0023  
          __size_of_BMP280_Read8 003C                 ?_I2C_Master_Read 0070                 ?_I2C_Master_Wait 0070  
          __size_of_BMP280_Write 002D                 ?_I2C_Master_Stop 0070            __size_of_BMP280_begin 00DC  
                __end_of___aldiv 00B3                            ?_main 0070                            _ANSEL 0188  
                __end_of___lldiv 0E6D                  BMP280_Read8@ret 0079                            _PORTA 0005  
                          _PORTB 0006                            _PORTD 0008                            _TRISA 0085  
                          _TRISB 0086                            _TRISD 0088                            _SSPIE 0463  
                          _SSPIF 0063              ___lmul@multiplicand 002A                            _adc_P 00A0  
                          _adc_T 0062                            _setup 0005                            status 0003  
                          wtemp0 007E                     _BMP280_Read8 0CEF                     _BMP280_Write 0C5E  
                   _BMP280_calib 00A4                     _BMP280_begin 0F24                  __initialization 07EB  
                   __end_of_main 0CEF           __size_of_BMP280_Read16 004C                           ??_main 005B  
         __size_of_BMP280_Update 00B7           _BMP280_readTemperature 00B3                ?_I2C_Master_Start 0070  
              ?_I2C_Master_Write 0070                 BMP280_Read16@ret 007B               ??_I2C_Master_Start 0070  
             ??_I2C_Master_Write 0072                           ?_setup 0070                           _ANSELH 0189  
                         _SSPADD 0093                           _TRISC3 043B                           _TRISC4 043C  
                         _SSPCON 0014                           _SSPBUF 0013                           ___lmul 0D73  
                      ??___aldiv 0078                        ??___lldiv 0078                           _t_fine 005E  
     BMP280_Configure@P_sampling 0077         __end_of_BMP280_Configure 0D73                    _BMP280_Read16 0DBB  
        __end_of__initialization 07FC       BMP280_Configure@T_sampling 0076                    _BMP280_Update 0E6D  
                 __pcstackCOMMON 0070              _BMP280_readPressure 02C5                    __end_of_setup 0016  
               BMP280_Update@ret 007A             ?_BMP280_readPressure 0070                          ??_setup 0070  
                     __pbssBANK0 005E                       __pbssBANK1 00A0                   ?_BMP280_Read16 0076  
                 ?_BMP280_Update 0070          BMP280_readPressure@var1 0057          BMP280_readPressure@var2 004F  
        BMP280_readPressure@pres 004A                       __pmaintext 0CB9                          ?___lmul 0026  
                 ___lmul@product 007A                 BMP280_begin@mode 007D            ??_BMP280_readPressure 002E  
                        _SSPCON2 0091          _BMP280_readPressure$940 004B          _BMP280_readPressure$941 003E  
        _BMP280_readPressure$942 0042          _BMP280_readPressure$943 0046                          _SSPSTAT 0094  
     BMP280_Configure@_ctrl_meas 0021             BMP280_Write@reg_addr 0075                          ___aldiv 0016  
                __size_of___lmul 0048                          ___lldiv 0E07          ?_BMP280_readTemperature 0070  
                        __ptext1 0005                          __ptext2 00B3                          __ptext3 0E6D  
                        __ptext4 02C5                          __ptext5 0D73                          __ptext6 0E07  
                        __ptext7 0016                          __ptext8 0F24                          __ptext9 0CEF  
               ___aldiv@dividend 0074         __size_of_I2C_Master_Read 002E         __size_of_I2C_Master_Wait 000D  
       __size_of_I2C_Master_Stop 0009                  ??_BMP280_Read16 0078                          clrloop0 0C2E  
           end_of_initialization 07FC                  ??_BMP280_Update 0076            BMP280_Read16@reg_addr 007A  
             BMP280_begin@filter 0025        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0070                  ___lldiv@counter 007D                 ___aldiv@quotient 0022  
               I2C_Master_Read@a 0070   __end_of_BMP280_readTemperature 02C5                        _TRISCbits 0087  
              ?_BMP280_Configure 0076               ??_BMP280_Configure 007A           BMP280_Configure@filter 0078  
                 __end_of___lmul 0DBB              start_initialization 07EB                ??_I2C_Master_Read 0072  
              ??_I2C_Master_Wait 0070                ??_I2C_Master_Stop 0070                         ??___lmul 0079  
           BMP280_Configure@mode 0020                        ___latbits 0002                    __pcstackBANK0 0020  
                  ?_BMP280_Read8 0070                 _I2C_Master_Start 0C35                 _I2C_Master_Write 0C47  
                  ?_BMP280_Write 0072                    ?_BMP280_begin 0023             BMP280_readPressure@p 0053  
              BMP280_Write@_data 0072                         ?___aldiv 0070                         ?___lldiv 0070  
    __end_of_BMP280_readPressure 07EB                   __size_of_setup 0011                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                   ??_BMP280_Read8 0076                        clear_ram0 0C2D  
                 ??_BMP280_Write 0073                   ??_BMP280_begin 0027       _BMP280_readTemperature$938 004B  
     _BMP280_readTemperature$939 0046              I2C_Master_Read@temp 0074                ___lmul@multiplier 0026  
          __end_of_BMP280_Read16 0E07            __end_of_BMP280_Update 0F24        __size_of_BMP280_Configure 0048  
               __size_of___aldiv 009D                 __size_of___lldiv 0066                  _I2C_Master_Read 0C8B  
                _I2C_Master_Wait 0C51                  _I2C_Master_Stop 0C3E                         __ptext10 0DBB  
                       __ptext11 0C8B                         __ptext12 0D2B                         __ptext13 0C5E  
                       __ptext14 0C47                         __ptext15 0C3E                         __ptext16 0C35  
                       __ptext17 0C51       BMP280_readTemperature@var1 003E       BMP280_readTemperature@var2 0042  
     BMP280_readTemperature@temp 004A                    __size_of_main 0036                         _pressure 0066  
           __end_of_BMP280_Read8 0D2B         __end_of_I2C_Master_Start 0C3E         __end_of_I2C_Master_Write 0C51  
           __end_of_BMP280_Write 0C8B             __end_of_BMP280_begin 1000             BMP280_Read8@reg_addr 0078  
               ___lldiv@dividend 0074              BMP280_begin@standby 0026         ??_BMP280_readTemperature 002E  
        __end_of_I2C_Master_Read 0CB9          __end_of_I2C_Master_Wait 0C5E          __end_of_I2C_Master_Stop 0C47  
                    _temperature 006A                 ___lldiv@quotient 0079                I2C_Master_Write@d 0070  
                   ___aldiv@sign 0021                      _SSPCON2bits 0091  
