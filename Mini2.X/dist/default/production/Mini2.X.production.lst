

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 12 01:26:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  001A                     _RCREG	set	26
   457  0019                     _TXREG	set	25
   458  0018                     _RCSTAbits	set	24
   459  0013                     _SSPBUF	set	19
   460  0014                     _SSPCON	set	20
   461  0008                     _PORTD	set	8
   462  0006                     _PORTB	set	6
   463  0005                     _PORTA	set	5
   464  0064                     _TXIF	set	100
   465  0063                     _SSPIF	set	99
   466  005E                     _PEIE	set	94
   467  005F                     _GIE	set	95
   468  009A                     _SPBRGH	set	154
   469  0099                     _SPBRG	set	153
   470  008C                     _PIE1bits	set	140
   471  0098                     _TXSTAbits	set	152
   472  0091                     _SSPCON2bits	set	145
   473  0087                     _TRISCbits	set	135
   474  0094                     _SSPSTAT	set	148
   475  0093                     _SSPADD	set	147
   476  0091                     _SSPCON2	set	145
   477  0085                     _TRISA	set	133
   478  0088                     _TRISD	set	136
   479  0086                     _TRISB	set	134
   480  0463                     _SSPIE	set	1123
   481  043C                     _TRISC4	set	1084
   482  043B                     _TRISC3	set	1083
   483  0187                     _BAUDCTLbits	set	391
   484  0189                     _ANSELH	set	393
   485  0188                     _ANSEL	set	392
   486                           
   487                           	psect	cinit
   488  07EB                     start_initialization:	
   489                           ; #config settings
   490                           
   491  07EB                     __initialization:
   492                           
   493                           ; Clear objects allocated to BANK0
   494  07EB  1383               	bcf	3,7	;select IRP bank0
   495  07EC  305E               	movlw	low __pbssBANK0
   496  07ED  0084               	movwf	4
   497  07EE  306E               	movlw	low (__pbssBANK0+16)
   498  07EF  120A  158A  23E2  120A  118A  	fcall	clear_ram0
   499                           
   500                           ; Clear objects allocated to BANK1
   501  07F4  30A0               	movlw	low __pbssBANK1
   502  07F5  0084               	movwf	4
   503  07F6  30BC               	movlw	low (__pbssBANK1+28)
   504  07F7  120A  158A  23E2  120A  118A  	fcall	clear_ram0
   505  07FC                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  07FC                     __end_of__initialization:
   509  07FC  0183               	clrf	3
   510  07FD  120A  158A  2C81   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssBANK0
   513  005E                     __pbssBANK0:
   514  005E                     _t_fine:
   515  005E                     	ds	4
   516  0062                     _adc_T:
   517  0062                     	ds	4
   518  0066                     _pressure:
   519  0066                     	ds	4
   520  006A                     _temperature:
   521  006A                     	ds	4
   522                           
   523                           	psect	bssBANK1
   524  00A0                     __pbssBANK1:
   525  00A0                     _adc_P:
   526  00A0                     	ds	4
   527  00A4                     _BMP280_calib:
   528  00A4                     	ds	24
   529                           
   530                           	psect	clrtext
   531  0BE2                     clear_ram0:	
   532                           ;	Called with FSR containing the base address, and
   533                           ;	W with the last address+1
   534                           
   535  0BE2  0064               	clrwdt	;clear the watchdog before getting into this loop
   536  0BE3                     clrloop0:
   537  0BE3  0180               	clrf	0	;clear RAM location pointed to by FSR
   538  0BE4  0A84               	incf	4,f	;increment pointer
   539  0BE5  0604               	xorwf	4,w	;XOR with final address
   540  0BE6  1903               	btfsc	3,2	;have we reached the end yet?
   541  0BE7  3400               	retlw	0	;all done for this memory range, return
   542  0BE8  0604               	xorwf	4,w	;XOR again to restore value
   543  0BE9  2BE3               	goto	clrloop0	;do the next byte
   544                           
   545                           	psect	cstackCOMMON
   546  0070                     __pcstackCOMMON:
   547  0070                     ?_setup:
   548  0070                     ?_main:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_I2C_Master_Wait:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_I2C_Master_Wait:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_I2C_Master_Start:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ??_I2C_Master_Start:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_I2C_Master_Stop:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ??_I2C_Master_Stop:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_I2C_Master_Write:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_BMP280_Read8:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_BMP280_Update:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_BMP280_readTemperature:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_BMP280_readPressure:	
   582                           ; 2 bytes @ 0x0
   583                           
   584  0070                     ?_I2C_Master_Read:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  0070                     ?___lldiv:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  0070                     ?___aldiv:	
   591                           ; 4 bytes @ 0x0
   592                           
   593  0070                     I2C_Master_Write@d:	
   594                           ; 4 bytes @ 0x0
   595                           
   596  0070                     I2C_Master_Read@a:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ___lldiv@divisor:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ___aldiv@divisor:	
   603                           ; 4 bytes @ 0x0
   604                           
   605                           
   606                           ; 4 bytes @ 0x0
   607  0070                     	ds	2
   608  0072                     ??_I2C_Master_Write:
   609  0072                     ??_I2C_Master_Read:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0072                     ?_BMP280_Write:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0072                     BMP280_Write@_data:	
   616                           ; 1 bytes @ 0x2
   617                           
   618                           
   619                           ; 1 bytes @ 0x2
   620  0072                     	ds	1
   621  0073                     ??_BMP280_Write:
   622                           
   623                           ; 1 bytes @ 0x3
   624  0073                     	ds	1
   625  0074                     I2C_Master_Read@temp:
   626  0074                     ___lldiv@dividend:	
   627                           ; 2 bytes @ 0x4
   628                           
   629  0074                     ___aldiv@dividend:	
   630                           ; 4 bytes @ 0x4
   631                           
   632                           
   633                           ; 4 bytes @ 0x4
   634  0074                     	ds	1
   635  0075                     BMP280_Write@reg_addr:
   636                           
   637                           ; 1 bytes @ 0x5
   638  0075                     	ds	1
   639  0076                     ??_BMP280_Read8:
   640  0076                     ?_BMP280_Configure:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0076                     ??_BMP280_Update:	
   644                           ; 1 bytes @ 0x6
   645                           
   646  0076                     ?_BMP280_Read16:	
   647                           ; 1 bytes @ 0x6
   648                           
   649  0076                     BMP280_Configure@T_sampling:	
   650                           ; 2 bytes @ 0x6
   651                           
   652                           
   653                           ; 1 bytes @ 0x6
   654  0076                     	ds	1
   655  0077                     BMP280_Configure@P_sampling:
   656                           
   657                           ; 1 bytes @ 0x7
   658  0077                     	ds	1
   659  0078                     ??_BMP280_Read16:
   660  0078                     ??___lldiv:	
   661                           ; 1 bytes @ 0x8
   662                           
   663  0078                     ??___aldiv:	
   664                           ; 1 bytes @ 0x8
   665                           
   666  0078                     BMP280_Read8@reg_addr:	
   667                           ; 1 bytes @ 0x8
   668                           
   669  0078                     BMP280_Configure@filter:	
   670                           ; 1 bytes @ 0x8
   671                           
   672                           
   673                           ; 1 bytes @ 0x8
   674  0078                     	ds	1
   675  0079                     ??___lmul:
   676  0079                     BMP280_Read8@ret:	
   677                           ; 1 bytes @ 0x9
   678                           
   679  0079                     BMP280_Configure@standby:	
   680                           ; 1 bytes @ 0x9
   681                           
   682  0079                     ___lldiv@quotient:	
   683                           ; 1 bytes @ 0x9
   684                           
   685                           
   686                           ; 4 bytes @ 0x9
   687  0079                     	ds	1
   688  007A                     ??_BMP280_Configure:
   689  007A                     BMP280_Read16@reg_addr:	
   690                           ; 1 bytes @ 0xA
   691                           
   692  007A                     BMP280_Update@ret:	
   693                           ; 1 bytes @ 0xA
   694                           
   695  007A                     ___lmul@product:	
   696                           ; 4 bytes @ 0xA
   697                           
   698                           
   699                           ; 4 bytes @ 0xA
   700  007A                     	ds	1
   701  007B                     BMP280_Read16@ret:
   702                           
   703                           ; 2 bytes @ 0xB
   704  007B                     	ds	2
   705  007D                     BMP280_begin@mode:
   706  007D                     ___lldiv@counter:	
   707                           ; 1 bytes @ 0xD
   708                           
   709                           
   710                           ; 1 bytes @ 0xD
   711  007D                     	ds	1
   712  007E                     ??_setup:
   713                           
   714                           	psect	cstackBANK0
   715  0020                     __pcstackBANK0:	
   716                           ; 1 bytes @ 0xE
   717                           
   718  0020                     ?_I2C_Master_Init:
   719  0020                     BMP280_Configure@mode:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0020                     ___aldiv@counter:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0020                     I2C_Master_Init@c:	
   726                           ; 1 bytes @ 0x0
   727                           
   728                           
   729                           ; 4 bytes @ 0x0
   730  0020                     	ds	1
   731  0021                     BMP280_Configure@_ctrl_meas:
   732  0021                     ___aldiv@sign:	
   733                           ; 1 bytes @ 0x1
   734                           
   735                           
   736                           ; 1 bytes @ 0x1
   737  0021                     	ds	1
   738  0022                     BMP280_Configure@_config:
   739  0022                     ___aldiv@quotient:	
   740                           ; 1 bytes @ 0x2
   741                           
   742                           
   743                           ; 4 bytes @ 0x2
   744  0022                     	ds	1
   745  0023                     ?_BMP280_begin:
   746  0023                     BMP280_begin@T_sampling:	
   747                           ; 2 bytes @ 0x3
   748                           
   749                           
   750                           ; 1 bytes @ 0x3
   751  0023                     	ds	1
   752  0024                     ??_I2C_Master_Init:
   753  0024                     BMP280_begin@P_sampling:	
   754                           ; 1 bytes @ 0x4
   755                           
   756                           
   757                           ; 1 bytes @ 0x4
   758  0024                     	ds	1
   759  0025                     BMP280_begin@filter:
   760                           
   761                           ; 1 bytes @ 0x5
   762  0025                     	ds	1
   763  0026                     ?___lmul:
   764  0026                     BMP280_begin@standby:	
   765                           ; 4 bytes @ 0x6
   766                           
   767  0026                     ___lmul@multiplier:	
   768                           ; 1 bytes @ 0x6
   769                           
   770                           
   771                           ; 4 bytes @ 0x6
   772  0026                     	ds	1
   773  0027                     ??_BMP280_begin:
   774                           
   775                           ; 1 bytes @ 0x7
   776  0027                     	ds	3
   777  002A                     ___lmul@multiplicand:
   778                           
   779                           ; 4 bytes @ 0xA
   780  002A                     	ds	4
   781  002E                     ??_BMP280_readTemperature:
   782  002E                     ??_BMP280_readPressure:	
   783                           ; 1 bytes @ 0xE
   784                           
   785                           
   786                           ; 1 bytes @ 0xE
   787  002E                     	ds	16
   788  003E                     BMP280_readTemperature@var1:
   789  003E                     _BMP280_readPressure$1121:	
   790                           ; 4 bytes @ 0x1E
   791                           
   792                           
   793                           ; 4 bytes @ 0x1E
   794  003E                     	ds	4
   795  0042                     BMP280_readTemperature@var2:
   796  0042                     _BMP280_readPressure$1122:	
   797                           ; 4 bytes @ 0x22
   798                           
   799                           
   800                           ; 4 bytes @ 0x22
   801  0042                     	ds	4
   802  0046                     _BMP280_readTemperature$1119:
   803  0046                     _BMP280_readPressure$1123:	
   804                           ; 4 bytes @ 0x26
   805                           
   806                           
   807                           ; 4 bytes @ 0x26
   808  0046                     	ds	4
   809  004A                     BMP280_readTemperature@temp:
   810  004A                     BMP280_readPressure@pres:	
   811                           ; 1 bytes @ 0x2A
   812                           
   813                           
   814                           ; 1 bytes @ 0x2A
   815  004A                     	ds	1
   816  004B                     _BMP280_readTemperature$1118:
   817  004B                     _BMP280_readPressure$1120:	
   818                           ; 4 bytes @ 0x2B
   819                           
   820                           
   821                           ; 4 bytes @ 0x2B
   822  004B                     	ds	4
   823  004F                     BMP280_readPressure@var2:
   824                           
   825                           ; 4 bytes @ 0x2F
   826  004F                     	ds	4
   827  0053                     BMP280_readPressure@p:
   828                           
   829                           ; 4 bytes @ 0x33
   830  0053                     	ds	4
   831  0057                     BMP280_readPressure@var1:
   832                           
   833                           ; 4 bytes @ 0x37
   834  0057                     	ds	4
   835  005B                     ??_main:
   836                           
   837                           ; 1 bytes @ 0x3B
   838  005B                     	ds	3
   839                           
   840                           	psect	maintext
   841  0C81                     __pmaintext:	
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 59 in file "mainm2.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : B00/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       3       0       0       0
   864 ;;      Totals:         0       3       0       0       0
   865 ;;Total ram usage:        3 bytes
   866 ;; Hardware stack levels required when called:    5
   867 ;; This function calls:
   868 ;;		_BMP280_begin
   869 ;;		_BMP280_readPressure
   870 ;;		_BMP280_readTemperature
   871 ;;		_setup
   872 ;; This function is called by:
   873 ;;		Startup code after reset
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _main
   879  0C81                     _main:
   880  0C81                     l1291:	
   881                           ;incstack = 0
   882                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   883                           
   884                           
   885                           ;mainm2.c: 60:     setup();
   886  0C81  120A  158A  2406  120A  158A  	fcall	_setup
   887                           
   888                           ;mainm2.c: 61:     BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, STAND
      +                          BY_0_5);
   889  0C86  1283               	bcf	3,5	;RP0=0, select bank0
   890  0C87  1303               	bcf	3,6	;RP1=0, select bank0
   891  0C88  01A3               	clrf	BMP280_begin@T_sampling
   892  0C89  0AA3               	incf	BMP280_begin@T_sampling,f
   893  0C8A  01A4               	clrf	BMP280_begin@P_sampling
   894  0C8B  0AA4               	incf	BMP280_begin@P_sampling,f
   895  0C8C  01A5               	clrf	BMP280_begin@filter
   896  0C8D  01A6               	clrf	BMP280_begin@standby
   897  0C8E  3003               	movlw	3
   898  0C8F  120A  158A  2724  120A  158A  	fcall	_BMP280_begin
   899  0C94                     l1293:
   900                           
   901                           ;mainm2.c: 63:         _delay((unsigned long)((200)*(8000000/4000.0)));
   902  0C94  3003               	movlw	3
   903  0C95  1283               	bcf	3,5	;RP0=0, select bank0
   904  0C96  1303               	bcf	3,6	;RP1=0, select bank0
   905  0C97  00DD               	movwf	??_main+2
   906  0C98  3008               	movlw	8
   907  0C99  00DC               	movwf	??_main+1
   908  0C9A  3076               	movlw	118
   909  0C9B  00DB               	movwf	??_main
   910  0C9C                     u1207:
   911  0C9C  0BDB               	decfsz	??_main,f
   912  0C9D  2C9C               	goto	u1207
   913  0C9E  0BDC               	decfsz	??_main+1,f
   914  0C9F  2C9C               	goto	u1207
   915  0CA0  0BDD               	decfsz	??_main+2,f
   916  0CA1  2C9C               	goto	u1207
   917  0CA2  0000               	nop
   918  0CA3                     l1295:
   919                           
   920                           ;mainm2.c: 64:         PORTA = 0b11111111;
   921  0CA3  30FF               	movlw	255
   922  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
   923  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
   924  0CA6  0085               	movwf	5	;volatile
   925  0CA7                     l1297:
   926                           
   927                           ;mainm2.c: 65:         BMP280_readTemperature(&temperature);
   928  0CA7  306A               	movlw	(low (_temperature| 0))& (0+255)
   929  0CA8  120A  118A  20B3  120A  158A  	fcall	_BMP280_readTemperature
   930  0CAD                     l1299:
   931                           
   932                           ;mainm2.c: 66:         BMP280_readPressure(&pressure);
   933  0CAD  3066               	movlw	(low (_pressure| 0))& (0+255)
   934  0CAE  120A  118A  22C5  120A  158A  	fcall	_BMP280_readPressure
   935  0CB3  2C94               	goto	l1293
   936  0CB4  120A  118A  2800   	ljmp	start
   937  0CB7                     __end_of_main:
   938                           
   939                           	psect	text1
   940  0C06                     __ptext1:	
   941 ;; *************** function _setup *****************
   942 ;; Defined at:
   943 ;;		line 75 in file "mainm2.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, pclath, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    2
   964 ;; This function calls:
   965 ;;		_I2C_Master_Init
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _setup
   973  0C06                     _setup:
   974  0C06                     l1245:	
   975                           ;incstack = 0
   976                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   977                           
   978                           
   979                           ;mainm2.c: 76:     ANSEL = 0;
   980  0C06  1683               	bsf	3,5	;RP0=1, select bank3
   981  0C07  1703               	bsf	3,6	;RP1=1, select bank3
   982  0C08  0188               	clrf	8	;volatile
   983                           
   984                           ;mainm2.c: 77:     ANSELH = 0;
   985  0C09  0189               	clrf	9	;volatile
   986                           
   987                           ;mainm2.c: 78:     TRISB = 0;
   988  0C0A  1683               	bsf	3,5	;RP0=1, select bank1
   989  0C0B  1303               	bcf	3,6	;RP1=0, select bank1
   990  0C0C  0186               	clrf	6	;volatile
   991                           
   992                           ;mainm2.c: 79:     TRISD = 0;
   993  0C0D  0188               	clrf	8	;volatile
   994                           
   995                           ;mainm2.c: 80:     PORTB = 0;
   996  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
   997  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
   998  0C10  0186               	clrf	6	;volatile
   999                           
  1000                           ;mainm2.c: 81:     PORTD = 0;
  1001  0C11  0188               	clrf	8	;volatile
  1002                           
  1003                           ;mainm2.c: 82:     PORTA = 0;
  1004  0C12  0185               	clrf	5	;volatile
  1005                           
  1006                           ;mainm2.c: 83:     TRISA = 0;
  1007  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  1008  0C14  1303               	bcf	3,6	;RP1=0, select bank1
  1009  0C15  0185               	clrf	5	;volatile
  1010  0C16                     l1247:
  1011                           
  1012                           ;mainm2.c: 84:     I2C_Master_Init(100000);
  1013  0C16  3000               	movlw	0
  1014  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0C19  00A3               	movwf	I2C_Master_Init@c+3
  1017  0C1A  3001               	movlw	1
  1018  0C1B  00A2               	movwf	I2C_Master_Init@c+2
  1019  0C1C  3086               	movlw	134
  1020  0C1D  00A1               	movwf	I2C_Master_Init@c+1
  1021  0C1E  30A0               	movlw	160
  1022  0C1F  00A0               	movwf	I2C_Master_Init@c
  1023  0C20  120A  158A  24B7  120A  158A  	fcall	_I2C_Master_Init
  1024  0C25                     l45:
  1025  0C25  0008               	return
  1026  0C26                     __end_of_setup:
  1027                           
  1028                           	psect	text2
  1029  0CB7                     __ptext2:	
  1030 ;; *************** function _I2C_Master_Init *****************
  1031 ;; Defined at:
  1032 ;;		line 16 in file "I2C.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  c               4    0[BANK0 ] const unsigned long 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       4       0       0       0
  1047 ;;      Locals:         0       0       0       0       0
  1048 ;;      Temps:          0       4       0       0       0
  1049 ;;      Totals:         0       8       0       0       0
  1050 ;;Total ram usage:        8 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    1
  1053 ;; This function calls:
  1054 ;;		___lldiv
  1055 ;; This function is called by:
  1056 ;;		_setup
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _I2C_Master_Init
  1062  0CB7                     _I2C_Master_Init:
  1063  0CB7                     l1131:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1066                           
  1067                           
  1068                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1069  0CB7  3028               	movlw	40
  1070  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0CBA  0094               	movwf	20	;volatile
  1073  0CBB                     l1133:
  1074                           
  1075                           ;I2C.c: 19:     SSPCON2 = 0;
  1076  0CBB  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0CBC  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0CBD  0191               	clrf	17	;volatile
  1079  0CBE                     l1135:
  1080                           
  1081                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1082  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0CC0  0820               	movf	I2C_Master_Init@c,w
  1085  0CC1  00A4               	movwf	??_I2C_Master_Init
  1086  0CC2  0821               	movf	I2C_Master_Init@c+1,w
  1087  0CC3  00A5               	movwf	??_I2C_Master_Init+1
  1088  0CC4  0822               	movf	I2C_Master_Init@c+2,w
  1089  0CC5  00A6               	movwf	??_I2C_Master_Init+2
  1090  0CC6  0823               	movf	I2C_Master_Init@c+3,w
  1091  0CC7  00A7               	movwf	??_I2C_Master_Init+3
  1092  0CC8  3002               	movlw	2
  1093  0CC9                     u725:
  1094  0CC9  1003               	clrc
  1095  0CCA  0DA4               	rlf	??_I2C_Master_Init,f
  1096  0CCB  0DA5               	rlf	??_I2C_Master_Init+1,f
  1097  0CCC  0DA6               	rlf	??_I2C_Master_Init+2,f
  1098  0CCD  0DA7               	rlf	??_I2C_Master_Init+3,f
  1099  0CCE                     u720:
  1100  0CCE  3EFF               	addlw	-1
  1101  0CCF  1D03               	skipz
  1102  0CD0  2CC9               	goto	u725
  1103  0CD1  0827               	movf	??_I2C_Master_Init+3,w
  1104  0CD2  00F3               	movwf	___lldiv@divisor+3
  1105  0CD3  0826               	movf	??_I2C_Master_Init+2,w
  1106  0CD4  00F2               	movwf	___lldiv@divisor+2
  1107  0CD5  0825               	movf	??_I2C_Master_Init+1,w
  1108  0CD6  00F1               	movwf	___lldiv@divisor+1
  1109  0CD7  0824               	movf	??_I2C_Master_Init,w
  1110  0CD8  00F0               	movwf	___lldiv@divisor
  1111  0CD9  3000               	movlw	0
  1112  0CDA  00F7               	movwf	___lldiv@dividend+3
  1113  0CDB  307A               	movlw	122
  1114  0CDC  00F6               	movwf	___lldiv@dividend+2
  1115  0CDD  3012               	movlw	18
  1116  0CDE  00F5               	movwf	___lldiv@dividend+1
  1117  0CDF  3000               	movlw	0
  1118  0CE0  00F4               	movwf	___lldiv@dividend
  1119  0CE1  120A  158A  2607  120A  158A  	fcall	___lldiv
  1120  0CE6  0870               	movf	?___lldiv,w
  1121  0CE7  3EFF               	addlw	255
  1122  0CE8  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0CE9  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0CEA  0093               	movwf	19	;volatile
  1125  0CEB                     l1137:
  1126                           
  1127                           ;I2C.c: 21:     SSPSTAT = 0;
  1128  0CEB  0194               	clrf	20	;volatile
  1129  0CEC                     l1139:
  1130                           
  1131                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1132  0CEC  1587               	bsf	7,3	;volatile
  1133  0CED                     l1141:
  1134                           
  1135                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1136  0CED  1607               	bsf	7,4	;volatile
  1137  0CEE                     l74:
  1138  0CEE  0008               	return
  1139  0CEF                     __end_of_I2C_Master_Init:
  1140                           
  1141                           	psect	text3
  1142  00B3                     __ptext3:	
  1143 ;; *************** function _BMP280_readTemperature *****************
  1144 ;; Defined at:
  1145 ;;		line 242 in file "BMP280.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  temp            1    wreg     PTR long 
  1148 ;;		 -> temperature(4), 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  temp            1   42[BANK0 ] PTR long 
  1151 ;;		 -> temperature(4), 
  1152 ;;  var2            4   34[BANK0 ] long 
  1153 ;;  var1            4   30[BANK0 ] long 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2   10[None  ] int 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       0       0       0       0
  1164 ;;      Locals:         0      17       0       0       0
  1165 ;;      Temps:          0      16       0       0       0
  1166 ;;      Totals:         0      33       0       0       0
  1167 ;;Total ram usage:       33 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    3
  1170 ;; This function calls:
  1171 ;;		_BMP280_Update
  1172 ;;		___aldiv
  1173 ;;		___lmul
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _BMP280_readTemperature
  1181  00B3                     _BMP280_readTemperature:
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1185                           ;BMP280_readTemperature@temp stored from wreg
  1186  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1187  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1188  00B5  00CA               	movwf	BMP280_readTemperature@temp
  1189  00B6                     l1265:
  1190                           
  1191                           ;BMP280.c: 242: int BMP280_readTemperature(int32_t *temp);BMP280.c: 243: {;BMP280.c: 244
      +                          :   int32_t var1, var2;;BMP280.c: 246:   BMP280_Update();
  1192  00B6  120A  158A  266D  120A  118A  	fcall	_BMP280_Update
  1193                           
  1194                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1195  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1196  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1197  00BD  0824               	movf	_BMP280_calib^(0+128),w
  1198  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1199  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1200  00C0  00AE               	movwf	??_BMP280_readTemperature
  1201  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1202  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1203  00C3  0825               	movf	(_BMP280_calib+1)^(0+128),w
  1204  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1205  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1206  00C6  00AF               	movwf	??_BMP280_readTemperature+1
  1207  00C7  01B0               	clrf	??_BMP280_readTemperature+2
  1208  00C8  01B1               	clrf	??_BMP280_readTemperature+3
  1209  00C9  3001               	movlw	1
  1210  00CA                     u965:
  1211  00CA  1003               	clrc
  1212  00CB  0DAE               	rlf	??_BMP280_readTemperature,f
  1213  00CC  0DAF               	rlf	??_BMP280_readTemperature+1,f
  1214  00CD  0DB0               	rlf	??_BMP280_readTemperature+2,f
  1215  00CE  0DB1               	rlf	??_BMP280_readTemperature+3,f
  1216  00CF                     u960:
  1217  00CF  3EFF               	addlw	-1
  1218  00D0  1D03               	skipz
  1219  00D1  28CA               	goto	u965
  1220  00D2  3000               	movlw	0
  1221  00D3  00F3               	movwf	___aldiv@divisor+3
  1222  00D4  3000               	movlw	0
  1223  00D5  00F2               	movwf	___aldiv@divisor+2
  1224  00D6  3000               	movlw	0
  1225  00D7  00F1               	movwf	___aldiv@divisor+1
  1226  00D8  3008               	movlw	8
  1227  00D9  00F0               	movwf	___aldiv@divisor
  1228  00DA  0865               	movf	_adc_T+3,w
  1229  00DB  00F7               	movwf	___aldiv@dividend+3
  1230  00DC  0864               	movf	_adc_T+2,w
  1231  00DD  00F6               	movwf	___aldiv@dividend+2
  1232  00DE  0863               	movf	_adc_T+1,w
  1233  00DF  00F5               	movwf	___aldiv@dividend+1
  1234  00E0  0862               	movf	_adc_T,w
  1235  00E1  00F4               	movwf	___aldiv@dividend
  1236  00E2  120A  118A  2016  120A  118A  	fcall	___aldiv
  1237  00E7  0870               	movf	?___aldiv,w
  1238  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1239  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1240  00EA  00B2               	movwf	??_BMP280_readTemperature+4
  1241  00EB  0871               	movf	?___aldiv+1,w
  1242  00EC  00B3               	movwf	??_BMP280_readTemperature+5
  1243  00ED  0872               	movf	?___aldiv+2,w
  1244  00EE  00B4               	movwf	??_BMP280_readTemperature+6
  1245  00EF  0873               	movf	?___aldiv+3,w
  1246  00F0  00B5               	movwf	??_BMP280_readTemperature+7
  1247  00F1  082E               	movf	??_BMP280_readTemperature,w
  1248  00F2  02B2               	subwf	??_BMP280_readTemperature+4,f
  1249  00F3  082F               	movf	??_BMP280_readTemperature+1,w
  1250  00F4  1C03               	skipc
  1251  00F5  0F2F               	incfsz	??_BMP280_readTemperature+1,w
  1252  00F6  28F8               	goto	u971
  1253  00F7  28F9               	goto	u972
  1254  00F8                     u971:
  1255  00F8  02B3               	subwf	??_BMP280_readTemperature+5,f
  1256  00F9                     u972:
  1257  00F9  0830               	movf	??_BMP280_readTemperature+2,w
  1258  00FA  1C03               	skipc
  1259  00FB  0F30               	incfsz	??_BMP280_readTemperature+2,w
  1260  00FC  28FE               	goto	u973
  1261  00FD  28FF               	goto	u974
  1262  00FE                     u973:
  1263  00FE  02B4               	subwf	??_BMP280_readTemperature+6,f
  1264  00FF                     u974:
  1265  00FF  0831               	movf	??_BMP280_readTemperature+3,w
  1266  0100  1C03               	skipc
  1267  0101  0F31               	incfsz	??_BMP280_readTemperature+3,w
  1268  0102  2904               	goto	u975
  1269  0103  2905               	goto	u976
  1270  0104                     u975:
  1271  0104  02B5               	subwf	??_BMP280_readTemperature+7,f
  1272  0105                     u976:
  1273  0105  0835               	movf	??_BMP280_readTemperature+7,w
  1274  0106  00A9               	movwf	___lmul@multiplier+3
  1275  0107  0834               	movf	??_BMP280_readTemperature+6,w
  1276  0108  00A8               	movwf	___lmul@multiplier+2
  1277  0109  0833               	movf	??_BMP280_readTemperature+5,w
  1278  010A  00A7               	movwf	___lmul@multiplier+1
  1279  010B  0832               	movf	??_BMP280_readTemperature+4,w
  1280  010C  00A6               	movwf	___lmul@multiplier
  1281  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1282  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1283  010F  0826               	movf	(_BMP280_calib^(0+128)+2),w
  1284  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0112  00AA               	movwf	___lmul@multiplicand
  1287  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0115  0827               	movf	((_BMP280_calib+1)^(0+128)+2),w
  1290  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0118  00AB               	movwf	___lmul@multiplicand+1
  1293  0119  3000               	movlw	0
  1294  011A  1BAB               	btfsc	___lmul@multiplicand+1,7
  1295  011B  30FF               	movlw	255
  1296  011C  00AC               	movwf	___lmul@multiplicand+2
  1297  011D  00AD               	movwf	___lmul@multiplicand+3
  1298  011E  120A  158A  2573  120A  118A  	fcall	___lmul
  1299  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0125  0829               	movf	?___lmul+3,w
  1302  0126  00CE               	movwf	_BMP280_readTemperature$1118+3
  1303  0127  0828               	movf	?___lmul+2,w
  1304  0128  00CD               	movwf	_BMP280_readTemperature$1118+2
  1305  0129  0827               	movf	?___lmul+1,w
  1306  012A  00CC               	movwf	_BMP280_readTemperature$1118+1
  1307  012B  0826               	movf	?___lmul,w
  1308  012C  00CB               	movwf	_BMP280_readTemperature$1118
  1309                           
  1310                           ;BMP280.c: 249:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1311  012D  3000               	movlw	0
  1312  012E  00F3               	movwf	___aldiv@divisor+3
  1313  012F  3000               	movlw	0
  1314  0130  00F2               	movwf	___aldiv@divisor+2
  1315  0131  3008               	movlw	8
  1316  0132  00F1               	movwf	___aldiv@divisor+1
  1317  0133  3000               	movlw	0
  1318  0134  00F0               	movwf	___aldiv@divisor
  1319  0135  084E               	movf	_BMP280_readTemperature$1118+3,w
  1320  0136  00F7               	movwf	___aldiv@dividend+3
  1321  0137  084D               	movf	_BMP280_readTemperature$1118+2,w
  1322  0138  00F6               	movwf	___aldiv@dividend+2
  1323  0139  084C               	movf	_BMP280_readTemperature$1118+1,w
  1324  013A  00F5               	movwf	___aldiv@dividend+1
  1325  013B  084B               	movf	_BMP280_readTemperature$1118,w
  1326  013C  00F4               	movwf	___aldiv@dividend
  1327  013D  120A  118A  2016  120A  118A  	fcall	___aldiv
  1328  0142  0873               	movf	?___aldiv+3,w
  1329  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0145  00C1               	movwf	BMP280_readTemperature@var1+3
  1332  0146  0872               	movf	?___aldiv+2,w
  1333  0147  00C0               	movwf	BMP280_readTemperature@var1+2
  1334  0148  0871               	movf	?___aldiv+1,w
  1335  0149  00BF               	movwf	BMP280_readTemperature@var1+1
  1336  014A  0870               	movf	?___aldiv,w
  1337  014B  00BE               	movwf	BMP280_readTemperature@var1
  1338                           
  1339                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1340  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1341  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1342  014E  0824               	movf	_BMP280_calib^(0+128),w
  1343  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0151  00AE               	movwf	??_BMP280_readTemperature
  1346  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1347  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0154  0825               	movf	(_BMP280_calib+1)^(0+128),w
  1349  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0157  00AF               	movwf	??_BMP280_readTemperature+1
  1352  0158  01B0               	clrf	??_BMP280_readTemperature+2
  1353  0159  01B1               	clrf	??_BMP280_readTemperature+3
  1354  015A  3000               	movlw	0
  1355  015B  00F3               	movwf	___aldiv@divisor+3
  1356  015C  3000               	movlw	0
  1357  015D  00F2               	movwf	___aldiv@divisor+2
  1358  015E  3000               	movlw	0
  1359  015F  00F1               	movwf	___aldiv@divisor+1
  1360  0160  3010               	movlw	16
  1361  0161  00F0               	movwf	___aldiv@divisor
  1362  0162  0865               	movf	_adc_T+3,w
  1363  0163  00F7               	movwf	___aldiv@dividend+3
  1364  0164  0864               	movf	_adc_T+2,w
  1365  0165  00F6               	movwf	___aldiv@dividend+2
  1366  0166  0863               	movf	_adc_T+1,w
  1367  0167  00F5               	movwf	___aldiv@dividend+1
  1368  0168  0862               	movf	_adc_T,w
  1369  0169  00F4               	movwf	___aldiv@dividend
  1370  016A  120A  118A  2016  120A  118A  	fcall	___aldiv
  1371  016F  0870               	movf	?___aldiv,w
  1372  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0172  00B2               	movwf	??_BMP280_readTemperature+4
  1375  0173  0871               	movf	?___aldiv+1,w
  1376  0174  00B3               	movwf	??_BMP280_readTemperature+5
  1377  0175  0872               	movf	?___aldiv+2,w
  1378  0176  00B4               	movwf	??_BMP280_readTemperature+6
  1379  0177  0873               	movf	?___aldiv+3,w
  1380  0178  00B5               	movwf	??_BMP280_readTemperature+7
  1381  0179  082E               	movf	??_BMP280_readTemperature,w
  1382  017A  02B2               	subwf	??_BMP280_readTemperature+4,f
  1383  017B  082F               	movf	??_BMP280_readTemperature+1,w
  1384  017C  1C03               	skipc
  1385  017D  0F2F               	incfsz	??_BMP280_readTemperature+1,w
  1386  017E  2980               	goto	u981
  1387  017F  2981               	goto	u982
  1388  0180                     u981:
  1389  0180  02B3               	subwf	??_BMP280_readTemperature+5,f
  1390  0181                     u982:
  1391  0181  0830               	movf	??_BMP280_readTemperature+2,w
  1392  0182  1C03               	skipc
  1393  0183  0F30               	incfsz	??_BMP280_readTemperature+2,w
  1394  0184  2986               	goto	u983
  1395  0185  2987               	goto	u984
  1396  0186                     u983:
  1397  0186  02B4               	subwf	??_BMP280_readTemperature+6,f
  1398  0187                     u984:
  1399  0187  0831               	movf	??_BMP280_readTemperature+3,w
  1400  0188  1C03               	skipc
  1401  0189  0F31               	incfsz	??_BMP280_readTemperature+3,w
  1402  018A  298C               	goto	u985
  1403  018B  298D               	goto	u986
  1404  018C                     u985:
  1405  018C  02B5               	subwf	??_BMP280_readTemperature+7,f
  1406  018D                     u986:
  1407  018D  0835               	movf	??_BMP280_readTemperature+7,w
  1408  018E  00A9               	movwf	___lmul@multiplier+3
  1409  018F  0834               	movf	??_BMP280_readTemperature+6,w
  1410  0190  00A8               	movwf	___lmul@multiplier+2
  1411  0191  0833               	movf	??_BMP280_readTemperature+5,w
  1412  0192  00A7               	movwf	___lmul@multiplier+1
  1413  0193  0832               	movf	??_BMP280_readTemperature+4,w
  1414  0194  00A6               	movwf	___lmul@multiplier
  1415  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0197  0824               	movf	_BMP280_calib^(0+128),w
  1418  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1420  019A  00B6               	movwf	??_BMP280_readTemperature+8
  1421  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1422  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1423  019D  0825               	movf	(_BMP280_calib+1)^(0+128),w
  1424  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1425  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1426  01A0  00B7               	movwf	??_BMP280_readTemperature+9
  1427  01A1  01B8               	clrf	??_BMP280_readTemperature+10
  1428  01A2  01B9               	clrf	??_BMP280_readTemperature+11
  1429  01A3  3000               	movlw	0
  1430  01A4  00F3               	movwf	___aldiv@divisor+3
  1431  01A5  3000               	movlw	0
  1432  01A6  00F2               	movwf	___aldiv@divisor+2
  1433  01A7  3000               	movlw	0
  1434  01A8  00F1               	movwf	___aldiv@divisor+1
  1435  01A9  3010               	movlw	16
  1436  01AA  00F0               	movwf	___aldiv@divisor
  1437  01AB  0865               	movf	_adc_T+3,w
  1438  01AC  00F7               	movwf	___aldiv@dividend+3
  1439  01AD  0864               	movf	_adc_T+2,w
  1440  01AE  00F6               	movwf	___aldiv@dividend+2
  1441  01AF  0863               	movf	_adc_T+1,w
  1442  01B0  00F5               	movwf	___aldiv@dividend+1
  1443  01B1  0862               	movf	_adc_T,w
  1444  01B2  00F4               	movwf	___aldiv@dividend
  1445  01B3  120A  118A  2016  120A  118A  	fcall	___aldiv
  1446  01B8  0870               	movf	?___aldiv,w
  1447  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1448  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1449  01BB  00BA               	movwf	??_BMP280_readTemperature+12
  1450  01BC  0871               	movf	?___aldiv+1,w
  1451  01BD  00BB               	movwf	??_BMP280_readTemperature+13
  1452  01BE  0872               	movf	?___aldiv+2,w
  1453  01BF  00BC               	movwf	??_BMP280_readTemperature+14
  1454  01C0  0873               	movf	?___aldiv+3,w
  1455  01C1  00BD               	movwf	??_BMP280_readTemperature+15
  1456  01C2  0836               	movf	??_BMP280_readTemperature+8,w
  1457  01C3  02BA               	subwf	??_BMP280_readTemperature+12,f
  1458  01C4  0837               	movf	??_BMP280_readTemperature+9,w
  1459  01C5  1C03               	skipc
  1460  01C6  0F37               	incfsz	??_BMP280_readTemperature+9,w
  1461  01C7  29C9               	goto	u991
  1462  01C8  29CA               	goto	u992
  1463  01C9                     u991:
  1464  01C9  02BB               	subwf	??_BMP280_readTemperature+13,f
  1465  01CA                     u992:
  1466  01CA  0838               	movf	??_BMP280_readTemperature+10,w
  1467  01CB  1C03               	skipc
  1468  01CC  0F38               	incfsz	??_BMP280_readTemperature+10,w
  1469  01CD  29CF               	goto	u993
  1470  01CE  29D0               	goto	u994
  1471  01CF                     u993:
  1472  01CF  02BC               	subwf	??_BMP280_readTemperature+14,f
  1473  01D0                     u994:
  1474  01D0  0839               	movf	??_BMP280_readTemperature+11,w
  1475  01D1  1C03               	skipc
  1476  01D2  0F39               	incfsz	??_BMP280_readTemperature+11,w
  1477  01D3  29D5               	goto	u995
  1478  01D4  29D6               	goto	u996
  1479  01D5                     u995:
  1480  01D5  02BD               	subwf	??_BMP280_readTemperature+15,f
  1481  01D6                     u996:
  1482  01D6  083D               	movf	??_BMP280_readTemperature+15,w
  1483  01D7  00AD               	movwf	___lmul@multiplicand+3
  1484  01D8  083C               	movf	??_BMP280_readTemperature+14,w
  1485  01D9  00AC               	movwf	___lmul@multiplicand+2
  1486  01DA  083B               	movf	??_BMP280_readTemperature+13,w
  1487  01DB  00AB               	movwf	___lmul@multiplicand+1
  1488  01DC  083A               	movf	??_BMP280_readTemperature+12,w
  1489  01DD  00AA               	movwf	___lmul@multiplicand
  1490  01DE  120A  158A  2573  120A  118A  	fcall	___lmul
  1491  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1492  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1493  01E5  0829               	movf	?___lmul+3,w
  1494  01E6  00CE               	movwf	_BMP280_readTemperature$1118+3
  1495  01E7  0828               	movf	?___lmul+2,w
  1496  01E8  00CD               	movwf	_BMP280_readTemperature$1118+2
  1497  01E9  0827               	movf	?___lmul+1,w
  1498  01EA  00CC               	movwf	_BMP280_readTemperature$1118+1
  1499  01EB  0826               	movf	?___lmul,w
  1500  01EC  00CB               	movwf	_BMP280_readTemperature$1118
  1501                           
  1502                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1503  01ED  3000               	movlw	0
  1504  01EE  00F3               	movwf	___aldiv@divisor+3
  1505  01EF  3000               	movlw	0
  1506  01F0  00F2               	movwf	___aldiv@divisor+2
  1507  01F1  3010               	movlw	16
  1508  01F2  00F1               	movwf	___aldiv@divisor+1
  1509  01F3  3000               	movlw	0
  1510  01F4  00F0               	movwf	___aldiv@divisor
  1511  01F5  084E               	movf	_BMP280_readTemperature$1118+3,w
  1512  01F6  00F7               	movwf	___aldiv@dividend+3
  1513  01F7  084D               	movf	_BMP280_readTemperature$1118+2,w
  1514  01F8  00F6               	movwf	___aldiv@dividend+2
  1515  01F9  084C               	movf	_BMP280_readTemperature$1118+1,w
  1516  01FA  00F5               	movwf	___aldiv@dividend+1
  1517  01FB  084B               	movf	_BMP280_readTemperature$1118,w
  1518  01FC  00F4               	movwf	___aldiv@dividend
  1519  01FD  120A  118A  2016  120A  118A  	fcall	___aldiv
  1520  0202  0873               	movf	?___aldiv+3,w
  1521  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0205  00A9               	movwf	___lmul@multiplier+3
  1524  0206  0872               	movf	?___aldiv+2,w
  1525  0207  00A8               	movwf	___lmul@multiplier+2
  1526  0208  0871               	movf	?___aldiv+1,w
  1527  0209  00A7               	movwf	___lmul@multiplier+1
  1528  020A  0870               	movf	?___aldiv,w
  1529  020B  00A6               	movwf	___lmul@multiplier
  1530  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1531  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1532  020E  0828               	movf	(_BMP280_calib^(0+128)+4),w
  1533  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0211  00AA               	movwf	___lmul@multiplicand
  1536  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0214  0829               	movf	((_BMP280_calib+1)^(0+128)+4),w
  1539  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0217  00AB               	movwf	___lmul@multiplicand+1
  1542  0218  3000               	movlw	0
  1543  0219  1BAB               	btfsc	___lmul@multiplicand+1,7
  1544  021A  30FF               	movlw	255
  1545  021B  00AC               	movwf	___lmul@multiplicand+2
  1546  021C  00AD               	movwf	___lmul@multiplicand+3
  1547  021D  120A  158A  2573  120A  118A  	fcall	___lmul
  1548  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0224  0829               	movf	?___lmul+3,w
  1551  0225  00C9               	movwf	_BMP280_readTemperature$1119+3
  1552  0226  0828               	movf	?___lmul+2,w
  1553  0227  00C8               	movwf	_BMP280_readTemperature$1119+2
  1554  0228  0827               	movf	?___lmul+1,w
  1555  0229  00C7               	movwf	_BMP280_readTemperature$1119+1
  1556  022A  0826               	movf	?___lmul,w
  1557  022B  00C6               	movwf	_BMP280_readTemperature$1119
  1558                           
  1559                           ;BMP280.c: 252:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1560  022C  3000               	movlw	0
  1561  022D  00F3               	movwf	___aldiv@divisor+3
  1562  022E  3000               	movlw	0
  1563  022F  00F2               	movwf	___aldiv@divisor+2
  1564  0230  3040               	movlw	64
  1565  0231  00F1               	movwf	___aldiv@divisor+1
  1566  0232  3000               	movlw	0
  1567  0233  00F0               	movwf	___aldiv@divisor
  1568  0234  0849               	movf	_BMP280_readTemperature$1119+3,w
  1569  0235  00F7               	movwf	___aldiv@dividend+3
  1570  0236  0848               	movf	_BMP280_readTemperature$1119+2,w
  1571  0237  00F6               	movwf	___aldiv@dividend+2
  1572  0238  0847               	movf	_BMP280_readTemperature$1119+1,w
  1573  0239  00F5               	movwf	___aldiv@dividend+1
  1574  023A  0846               	movf	_BMP280_readTemperature$1119,w
  1575  023B  00F4               	movwf	___aldiv@dividend
  1576  023C  120A  118A  2016  120A  118A  	fcall	___aldiv
  1577  0241  0873               	movf	?___aldiv+3,w
  1578  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0244  00C5               	movwf	BMP280_readTemperature@var2+3
  1581  0245  0872               	movf	?___aldiv+2,w
  1582  0246  00C4               	movwf	BMP280_readTemperature@var2+2
  1583  0247  0871               	movf	?___aldiv+1,w
  1584  0248  00C3               	movwf	BMP280_readTemperature@var2+1
  1585  0249  0870               	movf	?___aldiv,w
  1586  024A  00C2               	movwf	BMP280_readTemperature@var2
  1587  024B                     l1267:
  1588                           
  1589                           ;BMP280.c: 256:   t_fine = var1 + var2;
  1590  024B  083E               	movf	BMP280_readTemperature@var1,w
  1591  024C  0742               	addwf	BMP280_readTemperature@var2,w
  1592  024D  00AE               	movwf	??_BMP280_readTemperature
  1593  024E  3000               	movlw	0
  1594  024F  1803               	skipnc
  1595  0250  3001               	movlw	1
  1596  0251  073F               	addwf	BMP280_readTemperature@var1+1,w
  1597  0252  01B0               	clrf	??_BMP280_readTemperature+2
  1598  0253  1803               	skipnc
  1599  0254  0AB0               	incf	??_BMP280_readTemperature+2,f
  1600  0255  0743               	addwf	BMP280_readTemperature@var2+1,w
  1601  0256  00AF               	movwf	??_BMP280_readTemperature+1
  1602  0257  1803               	skipnc
  1603  0258  0AB0               	incf	??_BMP280_readTemperature+2,f
  1604  0259  0840               	movf	BMP280_readTemperature@var1+2,w
  1605  025A  0730               	addwf	??_BMP280_readTemperature+2,w
  1606  025B  01B1               	clrf	??_BMP280_readTemperature+3
  1607  025C  1803               	skipnc
  1608  025D  0AB1               	incf	??_BMP280_readTemperature+3,f
  1609  025E  0744               	addwf	BMP280_readTemperature@var2+2,w
  1610  025F  00B0               	movwf	??_BMP280_readTemperature+2
  1611  0260  1803               	skipnc
  1612  0261  0AB1               	incf	??_BMP280_readTemperature+3,f
  1613  0262  0841               	movf	BMP280_readTemperature@var1+3,w
  1614  0263  0731               	addwf	??_BMP280_readTemperature+3,w
  1615  0264  0745               	addwf	BMP280_readTemperature@var2+3,w
  1616  0265  00B1               	movwf	??_BMP280_readTemperature+3
  1617  0266  0831               	movf	??_BMP280_readTemperature+3,w
  1618  0267  00E1               	movwf	_t_fine+3
  1619  0268  0830               	movf	??_BMP280_readTemperature+2,w
  1620  0269  00E0               	movwf	_t_fine+2
  1621  026A  082F               	movf	??_BMP280_readTemperature+1,w
  1622  026B  00DF               	movwf	_t_fine+1
  1623  026C  082E               	movf	??_BMP280_readTemperature,w
  1624  026D  00DE               	movwf	_t_fine
  1625  026E                     l1269:
  1626                           
  1627                           ;BMP280.c: 258:   *temp = (t_fine * 5 + 128) / 256;
  1628  026E  3000               	movlw	0
  1629  026F  00F3               	movwf	___aldiv@divisor+3
  1630  0270  3000               	movlw	0
  1631  0271  00F2               	movwf	___aldiv@divisor+2
  1632  0272  3001               	movlw	1
  1633  0273  00F1               	movwf	___aldiv@divisor+1
  1634  0274  3000               	movlw	0
  1635  0275  00F0               	movwf	___aldiv@divisor
  1636  0276  3080               	movlw	128
  1637  0277  00AE               	movwf	??_BMP280_readTemperature
  1638  0278  3000               	movlw	0
  1639  0279  00AF               	movwf	??_BMP280_readTemperature+1
  1640  027A  3000               	movlw	0
  1641  027B  00B0               	movwf	??_BMP280_readTemperature+2
  1642  027C  3000               	movlw	0
  1643  027D  00B1               	movwf	??_BMP280_readTemperature+3
  1644  027E  0861               	movf	_t_fine+3,w
  1645  027F  00A9               	movwf	___lmul@multiplier+3
  1646  0280  0860               	movf	_t_fine+2,w
  1647  0281  00A8               	movwf	___lmul@multiplier+2
  1648  0282  085F               	movf	_t_fine+1,w
  1649  0283  00A7               	movwf	___lmul@multiplier+1
  1650  0284  085E               	movf	_t_fine,w
  1651  0285  00A6               	movwf	___lmul@multiplier
  1652  0286  3000               	movlw	0
  1653  0287  00AD               	movwf	___lmul@multiplicand+3
  1654  0288  3000               	movlw	0
  1655  0289  00AC               	movwf	___lmul@multiplicand+2
  1656  028A  3000               	movlw	0
  1657  028B  00AB               	movwf	___lmul@multiplicand+1
  1658  028C  3005               	movlw	5
  1659  028D  00AA               	movwf	___lmul@multiplicand
  1660  028E  120A  158A  2573  120A  118A  	fcall	___lmul
  1661  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0295  0826               	movf	?___lmul,w
  1664  0296  07AE               	addwf	??_BMP280_readTemperature,f
  1665  0297  0827               	movf	?___lmul+1,w
  1666  0298  1803               	skipnc
  1667  0299  0F27               	incfsz	?___lmul+1,w
  1668  029A  2A9C               	goto	u1000
  1669  029B  2A9D               	goto	u1001
  1670  029C                     u1000:
  1671  029C  07AF               	addwf	??_BMP280_readTemperature+1,f
  1672  029D                     u1001:
  1673  029D  0828               	movf	?___lmul+2,w
  1674  029E  1803               	skipnc
  1675  029F  0F28               	incfsz	?___lmul+2,w
  1676  02A0  2AA2               	goto	u1002
  1677  02A1  2AA3               	goto	u1003
  1678  02A2                     u1002:
  1679  02A2  07B0               	addwf	??_BMP280_readTemperature+2,f
  1680  02A3                     u1003:
  1681  02A3  0829               	movf	?___lmul+3,w
  1682  02A4  1803               	skipnc
  1683  02A5  0A29               	incf	?___lmul+3,w
  1684  02A6  07B1               	addwf	??_BMP280_readTemperature+3,f
  1685  02A7  0831               	movf	??_BMP280_readTemperature+3,w
  1686  02A8  00F7               	movwf	___aldiv@dividend+3
  1687  02A9  0830               	movf	??_BMP280_readTemperature+2,w
  1688  02AA  00F6               	movwf	___aldiv@dividend+2
  1689  02AB  082F               	movf	??_BMP280_readTemperature+1,w
  1690  02AC  00F5               	movwf	___aldiv@dividend+1
  1691  02AD  082E               	movf	??_BMP280_readTemperature,w
  1692  02AE  00F4               	movwf	___aldiv@dividend
  1693  02AF  120A  118A  2016  120A  118A  	fcall	___aldiv
  1694  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1695  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1696  02B6  084A               	movf	BMP280_readTemperature@temp,w
  1697  02B7  0084               	movwf	4
  1698  02B8  0870               	movf	?___aldiv,w
  1699  02B9  1383               	bcf	3,7	;select IRP bank0
  1700  02BA  0080               	movwf	0
  1701  02BB  0A84               	incf	4,f
  1702  02BC  0871               	movf	?___aldiv+1,w
  1703  02BD  0080               	movwf	0
  1704  02BE  0A84               	incf	4,f
  1705  02BF  0872               	movf	?___aldiv+2,w
  1706  02C0  0080               	movwf	0
  1707  02C1  0A84               	incf	4,f
  1708  02C2  0873               	movf	?___aldiv+3,w
  1709  02C3  0080               	movwf	0
  1710  02C4                     l150:
  1711  02C4  0008               	return
  1712  02C5                     __end_of_BMP280_readTemperature:
  1713                           
  1714                           	psect	text4
  1715  0E6D                     __ptext4:	
  1716 ;; *************** function _BMP280_Update *****************
  1717 ;; Defined at:
  1718 ;;		line 211 in file "BMP280.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  ret             4   10[COMMON] struct .
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, pclath, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1732 ;;      Params:         0       0       0       0       0
  1733 ;;      Locals:         4       0       0       0       0
  1734 ;;      Temps:          4       0       0       0       0
  1735 ;;      Totals:         8       0       0       0       0
  1736 ;;Total ram usage:        8 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    2
  1739 ;; This function calls:
  1740 ;;		_I2C_Master_Read
  1741 ;;		_I2C_Master_Start
  1742 ;;		_I2C_Master_Stop
  1743 ;;		_I2C_Master_Write
  1744 ;; This function is called by:
  1745 ;;		_BMP280_readTemperature
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _BMP280_Update
  1751  0E6D                     _BMP280_Update:
  1752  0E6D                     l1161:	
  1753                           ;incstack = 0
  1754                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  1755                           
  1756                           
  1757                           ;BMP280.c: 217:   } ret;;BMP280.c: 218:   ret.b[3] = 0x00;
  1758  0E6D  01FD               	clrf	BMP280_Update@ret+3
  1759  0E6E                     l1163:
  1760                           
  1761                           ;BMP280.c: 220:   I2C_Master_Start();
  1762  0E6E  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Start
  1763  0E73                     l1165:
  1764                           
  1765                           ;BMP280.c: 221:   I2C_Master_Write( 0xEE);
  1766  0E73  30EE               	movlw	238
  1767  0E74  00F0               	movwf	I2C_Master_Write@d
  1768  0E75  3000               	movlw	0
  1769  0E76  00F1               	movwf	I2C_Master_Write@d+1
  1770  0E77  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  1771  0E7C                     l1167:
  1772                           
  1773                           ;BMP280.c: 222:   I2C_Master_Write( 0xF7);
  1774  0E7C  30F7               	movlw	247
  1775  0E7D  00F0               	movwf	I2C_Master_Write@d
  1776  0E7E  3000               	movlw	0
  1777  0E7F  00F1               	movwf	I2C_Master_Write@d+1
  1778  0E80  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  1779  0E85                     l1169:
  1780                           
  1781                           ;BMP280.c: 223:   I2C_Master_Start();
  1782  0E85  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Start
  1783  0E8A                     l1171:
  1784                           
  1785                           ;BMP280.c: 224:   I2C_Master_Write( 0xEE | 1);
  1786  0E8A  30EF               	movlw	239
  1787  0E8B  00F0               	movwf	I2C_Master_Write@d
  1788  0E8C  3000               	movlw	0
  1789  0E8D  00F1               	movwf	I2C_Master_Write@d+1
  1790  0E8E  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  1791  0E93                     l1173:
  1792                           
  1793                           ;BMP280.c: 225:   ret.b[2] = I2C_Master_Read( 1);
  1794  0E93  3001               	movlw	1
  1795  0E94  00F0               	movwf	I2C_Master_Read@a
  1796  0E95  3000               	movlw	0
  1797  0E96  00F1               	movwf	I2C_Master_Read@a+1
  1798  0E97  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  1799  0E9C  0870               	movf	?_I2C_Master_Read,w
  1800  0E9D  00F6               	movwf	??_BMP280_Update
  1801  0E9E  0876               	movf	??_BMP280_Update,w
  1802  0E9F  00FC               	movwf	BMP280_Update@ret+2
  1803  0EA0                     l1175:
  1804                           
  1805                           ;BMP280.c: 226:   ret.b[1] = I2C_Master_Read( 1);
  1806  0EA0  3001               	movlw	1
  1807  0EA1  00F0               	movwf	I2C_Master_Read@a
  1808  0EA2  3000               	movlw	0
  1809  0EA3  00F1               	movwf	I2C_Master_Read@a+1
  1810  0EA4  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  1811  0EA9  0870               	movf	?_I2C_Master_Read,w
  1812  0EAA  00F6               	movwf	??_BMP280_Update
  1813  0EAB  0876               	movf	??_BMP280_Update,w
  1814  0EAC  00FB               	movwf	BMP280_Update@ret+1
  1815  0EAD                     l1177:
  1816                           
  1817                           ;BMP280.c: 227:   ret.b[0] = I2C_Master_Read( 1);
  1818  0EAD  3001               	movlw	1
  1819  0EAE  00F0               	movwf	I2C_Master_Read@a
  1820  0EAF  3000               	movlw	0
  1821  0EB0  00F1               	movwf	I2C_Master_Read@a+1
  1822  0EB1  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  1823  0EB6  0870               	movf	?_I2C_Master_Read,w
  1824  0EB7  00F6               	movwf	??_BMP280_Update
  1825  0EB8  0876               	movf	??_BMP280_Update,w
  1826  0EB9  00FA               	movwf	BMP280_Update@ret
  1827  0EBA                     l1179:
  1828                           
  1829                           ;BMP280.c: 229:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  1830  0EBA  087A               	movf	BMP280_Update@ret,w
  1831  0EBB  00F6               	movwf	??_BMP280_Update
  1832  0EBC  087B               	movf	BMP280_Update@ret+1,w
  1833  0EBD  00F7               	movwf	??_BMP280_Update+1
  1834  0EBE  087C               	movf	BMP280_Update@ret+2,w
  1835  0EBF  00F8               	movwf	??_BMP280_Update+2
  1836  0EC0  087D               	movf	BMP280_Update@ret+3,w
  1837  0EC1  00F9               	movwf	??_BMP280_Update+3
  1838  0EC2  3004               	movlw	4
  1839  0EC3                     u775:
  1840  0EC3  1003               	clrc
  1841  0EC4  0CF9               	rrf	??_BMP280_Update+3,f
  1842  0EC5  0CF8               	rrf	??_BMP280_Update+2,f
  1843  0EC6  0CF7               	rrf	??_BMP280_Update+1,f
  1844  0EC7  0CF6               	rrf	??_BMP280_Update,f
  1845  0EC8                     u770:
  1846  0EC8  3EFF               	addlw	-1
  1847  0EC9  1D03               	skipz
  1848  0ECA  2EC3               	goto	u775
  1849  0ECB  30FF               	movlw	255
  1850  0ECC  0576               	andwf	??_BMP280_Update,w
  1851  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0ECF  00A0               	movwf	_adc_P^(0+128)
  1854  0ED0  30FF               	movlw	255
  1855  0ED1  0577               	andwf	??_BMP280_Update+1,w
  1856  0ED2  00A1               	movwf	(_adc_P+1)^(0+128)
  1857  0ED3  300F               	movlw	15
  1858  0ED4  0578               	andwf	??_BMP280_Update+2,w
  1859  0ED5  00A2               	movwf	(_adc_P+2)^(0+128)
  1860  0ED6  3000               	movlw	0
  1861  0ED7  0579               	andwf	??_BMP280_Update+3,w
  1862  0ED8  00A3               	movwf	(_adc_P+3)^(0+128)
  1863  0ED9                     l1181:
  1864                           
  1865                           ;BMP280.c: 231:   ret.b[2] = I2C_Master_Read(1);
  1866  0ED9  3001               	movlw	1
  1867  0EDA  00F0               	movwf	I2C_Master_Read@a
  1868  0EDB  3000               	movlw	0
  1869  0EDC  00F1               	movwf	I2C_Master_Read@a+1
  1870  0EDD  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  1871  0EE2  0870               	movf	?_I2C_Master_Read,w
  1872  0EE3  00F6               	movwf	??_BMP280_Update
  1873  0EE4  0876               	movf	??_BMP280_Update,w
  1874  0EE5  00FC               	movwf	BMP280_Update@ret+2
  1875  0EE6                     l1183:
  1876                           
  1877                           ;BMP280.c: 232:   ret.b[1] = I2C_Master_Read(1);
  1878  0EE6  3001               	movlw	1
  1879  0EE7  00F0               	movwf	I2C_Master_Read@a
  1880  0EE8  3000               	movlw	0
  1881  0EE9  00F1               	movwf	I2C_Master_Read@a+1
  1882  0EEA  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  1883  0EEF  0870               	movf	?_I2C_Master_Read,w
  1884  0EF0  00F6               	movwf	??_BMP280_Update
  1885  0EF1  0876               	movf	??_BMP280_Update,w
  1886  0EF2  00FB               	movwf	BMP280_Update@ret+1
  1887  0EF3                     l1185:
  1888                           
  1889                           ;BMP280.c: 233:   ret.b[0] = I2C_Master_Read(0);
  1890  0EF3  3000               	movlw	0
  1891  0EF4  00F0               	movwf	I2C_Master_Read@a
  1892  0EF5  00F1               	movwf	I2C_Master_Read@a+1
  1893  0EF6  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  1894  0EFB  0870               	movf	?_I2C_Master_Read,w
  1895  0EFC  00F6               	movwf	??_BMP280_Update
  1896  0EFD  0876               	movf	??_BMP280_Update,w
  1897  0EFE  00FA               	movwf	BMP280_Update@ret
  1898  0EFF                     l1187:
  1899                           
  1900                           ;BMP280.c: 234:   I2C_Master_Stop();
  1901  0EFF  120A  158A  23F3  120A  158A  	fcall	_I2C_Master_Stop
  1902  0F04                     l1189:
  1903                           
  1904                           ;BMP280.c: 236:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  1905  0F04  087A               	movf	BMP280_Update@ret,w
  1906  0F05  00F6               	movwf	??_BMP280_Update
  1907  0F06  087B               	movf	BMP280_Update@ret+1,w
  1908  0F07  00F7               	movwf	??_BMP280_Update+1
  1909  0F08  087C               	movf	BMP280_Update@ret+2,w
  1910  0F09  00F8               	movwf	??_BMP280_Update+2
  1911  0F0A  087D               	movf	BMP280_Update@ret+3,w
  1912  0F0B  00F9               	movwf	??_BMP280_Update+3
  1913  0F0C  3004               	movlw	4
  1914  0F0D                     u785:
  1915  0F0D  1003               	clrc
  1916  0F0E  0CF9               	rrf	??_BMP280_Update+3,f
  1917  0F0F  0CF8               	rrf	??_BMP280_Update+2,f
  1918  0F10  0CF7               	rrf	??_BMP280_Update+1,f
  1919  0F11  0CF6               	rrf	??_BMP280_Update,f
  1920  0F12                     u780:
  1921  0F12  3EFF               	addlw	-1
  1922  0F13  1D03               	skipz
  1923  0F14  2F0D               	goto	u785
  1924  0F15  30FF               	movlw	255
  1925  0F16  0576               	andwf	??_BMP280_Update,w
  1926  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0F19  00E2               	movwf	_adc_T
  1929  0F1A  30FF               	movlw	255
  1930  0F1B  0577               	andwf	??_BMP280_Update+1,w
  1931  0F1C  00E3               	movwf	_adc_T+1
  1932  0F1D  300F               	movlw	15
  1933  0F1E  0578               	andwf	??_BMP280_Update+2,w
  1934  0F1F  00E4               	movwf	_adc_T+2
  1935  0F20  3000               	movlw	0
  1936  0F21  0579               	andwf	??_BMP280_Update+3,w
  1937  0F22  00E5               	movwf	_adc_T+3
  1938  0F23                     l147:
  1939  0F23  0008               	return
  1940  0F24                     __end_of_BMP280_Update:
  1941                           
  1942                           	psect	text5
  1943  02C5                     __ptext5:	
  1944 ;; *************** function _BMP280_readPressure *****************
  1945 ;; Defined at:
  1946 ;;		line 266 in file "BMP280.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  pres            1    wreg     PTR unsigned long 
  1949 ;;		 -> pressure(4), 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  pres            1   42[BANK0 ] PTR unsigned long 
  1952 ;;		 -> pressure(4), 
  1953 ;;  var1            4   55[BANK0 ] long 
  1954 ;;  p               4   51[BANK0 ] unsigned long 
  1955 ;;  var2            4   47[BANK0 ] long 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2   12[None  ] int 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         0       0       0       0       0
  1966 ;;      Locals:         0      29       0       0       0
  1967 ;;      Temps:          0      16       0       0       0
  1968 ;;      Totals:         0      45       0       0       0
  1969 ;;Total ram usage:       45 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    1
  1972 ;; This function calls:
  1973 ;;		___aldiv
  1974 ;;		___lldiv
  1975 ;;		___lmul
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function _BMP280_readPressure
  1983  02C5                     _BMP280_readPressure:
  1984                           
  1985                           ;incstack = 0
  1986                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1987                           ;BMP280_readPressure@pres stored from wreg
  1988  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1989  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1990  02C7  00CA               	movwf	BMP280_readPressure@pres
  1991  02C8                     l1273:
  1992                           
  1993                           ;BMP280.c: 266: int BMP280_readPressure(uint32_t *pres);BMP280.c: 267: {;BMP280.c: 268: 
      +                            int32_t var1, var2;;BMP280.c: 269:   uint32_t p;;BMP280.c: 272:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  1994  02C8  3000               	movlw	0
  1995  02C9  00AE               	movwf	??_BMP280_readPressure
  1996  02CA  3006               	movlw	6
  1997  02CB  00AF               	movwf	??_BMP280_readPressure+1
  1998  02CC  30FF               	movlw	255
  1999  02CD  00B0               	movwf	??_BMP280_readPressure+2
  2000  02CE  30FF               	movlw	255
  2001  02CF  00B1               	movwf	??_BMP280_readPressure+3
  2002  02D0  3000               	movlw	0
  2003  02D1  00F3               	movwf	___aldiv@divisor+3
  2004  02D2  3000               	movlw	0
  2005  02D3  00F2               	movwf	___aldiv@divisor+2
  2006  02D4  3000               	movlw	0
  2007  02D5  00F1               	movwf	___aldiv@divisor+1
  2008  02D6  3002               	movlw	2
  2009  02D7  00F0               	movwf	___aldiv@divisor
  2010  02D8  0861               	movf	_t_fine+3,w
  2011  02D9  00F7               	movwf	___aldiv@dividend+3
  2012  02DA  0860               	movf	_t_fine+2,w
  2013  02DB  00F6               	movwf	___aldiv@dividend+2
  2014  02DC  085F               	movf	_t_fine+1,w
  2015  02DD  00F5               	movwf	___aldiv@dividend+1
  2016  02DE  085E               	movf	_t_fine,w
  2017  02DF  00F4               	movwf	___aldiv@dividend
  2018  02E0  120A  118A  2016  120A  118A  	fcall	___aldiv
  2019  02E5  0870               	movf	?___aldiv,w
  2020  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2021  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2022  02E8  07AE               	addwf	??_BMP280_readPressure,f
  2023  02E9  0871               	movf	?___aldiv+1,w
  2024  02EA  1803               	skipnc
  2025  02EB  0F71               	incfsz	?___aldiv+1,w
  2026  02EC  2AEE               	goto	u1010
  2027  02ED  2AEF               	goto	u1011
  2028  02EE                     u1010:
  2029  02EE  07AF               	addwf	??_BMP280_readPressure+1,f
  2030  02EF                     u1011:
  2031  02EF  0872               	movf	?___aldiv+2,w
  2032  02F0  1803               	skipnc
  2033  02F1  0F72               	incfsz	?___aldiv+2,w
  2034  02F2  2AF4               	goto	u1012
  2035  02F3  2AF5               	goto	u1013
  2036  02F4                     u1012:
  2037  02F4  07B0               	addwf	??_BMP280_readPressure+2,f
  2038  02F5                     u1013:
  2039  02F5  0873               	movf	?___aldiv+3,w
  2040  02F6  1803               	skipnc
  2041  02F7  0A73               	incf	?___aldiv+3,w
  2042  02F8  07B1               	addwf	??_BMP280_readPressure+3,f
  2043  02F9  0831               	movf	??_BMP280_readPressure+3,w
  2044  02FA  00DA               	movwf	BMP280_readPressure@var1+3
  2045  02FB  0830               	movf	??_BMP280_readPressure+2,w
  2046  02FC  00D9               	movwf	BMP280_readPressure@var1+2
  2047  02FD  082F               	movf	??_BMP280_readPressure+1,w
  2048  02FE  00D8               	movwf	BMP280_readPressure@var1+1
  2049  02FF  082E               	movf	??_BMP280_readPressure,w
  2050  0300  00D7               	movwf	BMP280_readPressure@var1
  2051                           
  2052                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2053  0301  3000               	movlw	0
  2054  0302  00F3               	movwf	___aldiv@divisor+3
  2055  0303  3000               	movlw	0
  2056  0304  00F2               	movwf	___aldiv@divisor+2
  2057  0305  3000               	movlw	0
  2058  0306  00F1               	movwf	___aldiv@divisor+1
  2059  0307  3004               	movlw	4
  2060  0308  00F0               	movwf	___aldiv@divisor
  2061  0309  085A               	movf	BMP280_readPressure@var1+3,w
  2062  030A  00F7               	movwf	___aldiv@dividend+3
  2063  030B  0859               	movf	BMP280_readPressure@var1+2,w
  2064  030C  00F6               	movwf	___aldiv@dividend+2
  2065  030D  0858               	movf	BMP280_readPressure@var1+1,w
  2066  030E  00F5               	movwf	___aldiv@dividend+1
  2067  030F  0857               	movf	BMP280_readPressure@var1,w
  2068  0310  00F4               	movwf	___aldiv@dividend
  2069  0311  120A  118A  2016  120A  118A  	fcall	___aldiv
  2070  0316  0873               	movf	?___aldiv+3,w
  2071  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0319  00A9               	movwf	___lmul@multiplier+3
  2074  031A  0872               	movf	?___aldiv+2,w
  2075  031B  00A8               	movwf	___lmul@multiplier+2
  2076  031C  0871               	movf	?___aldiv+1,w
  2077  031D  00A7               	movwf	___lmul@multiplier+1
  2078  031E  0870               	movf	?___aldiv,w
  2079  031F  00A6               	movwf	___lmul@multiplier
  2080  0320  3000               	movlw	0
  2081  0321  00F3               	movwf	___aldiv@divisor+3
  2082  0322  3000               	movlw	0
  2083  0323  00F2               	movwf	___aldiv@divisor+2
  2084  0324  3000               	movlw	0
  2085  0325  00F1               	movwf	___aldiv@divisor+1
  2086  0326  3004               	movlw	4
  2087  0327  00F0               	movwf	___aldiv@divisor
  2088  0328  085A               	movf	BMP280_readPressure@var1+3,w
  2089  0329  00F7               	movwf	___aldiv@dividend+3
  2090  032A  0859               	movf	BMP280_readPressure@var1+2,w
  2091  032B  00F6               	movwf	___aldiv@dividend+2
  2092  032C  0858               	movf	BMP280_readPressure@var1+1,w
  2093  032D  00F5               	movwf	___aldiv@dividend+1
  2094  032E  0857               	movf	BMP280_readPressure@var1,w
  2095  032F  00F4               	movwf	___aldiv@dividend
  2096  0330  120A  118A  2016  120A  118A  	fcall	___aldiv
  2097  0335  0873               	movf	?___aldiv+3,w
  2098  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0338  00AD               	movwf	___lmul@multiplicand+3
  2101  0339  0872               	movf	?___aldiv+2,w
  2102  033A  00AC               	movwf	___lmul@multiplicand+2
  2103  033B  0871               	movf	?___aldiv+1,w
  2104  033C  00AB               	movwf	___lmul@multiplicand+1
  2105  033D  0870               	movf	?___aldiv,w
  2106  033E  00AA               	movwf	___lmul@multiplicand
  2107  033F  120A  158A  2573  120A  118A  	fcall	___lmul
  2108  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0346  0829               	movf	?___lmul+3,w
  2111  0347  00CE               	movwf	_BMP280_readPressure$1120+3
  2112  0348  0828               	movf	?___lmul+2,w
  2113  0349  00CD               	movwf	_BMP280_readPressure$1120+2
  2114  034A  0827               	movf	?___lmul+1,w
  2115  034B  00CC               	movwf	_BMP280_readPressure$1120+1
  2116  034C  0826               	movf	?___lmul,w
  2117  034D  00CB               	movwf	_BMP280_readPressure$1120
  2118                           
  2119                           ;BMP280.c: 273:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2120  034E  3000               	movlw	0
  2121  034F  00F3               	movwf	___aldiv@divisor+3
  2122  0350  3000               	movlw	0
  2123  0351  00F2               	movwf	___aldiv@divisor+2
  2124  0352  3008               	movlw	8
  2125  0353  00F1               	movwf	___aldiv@divisor+1
  2126  0354  3000               	movlw	0
  2127  0355  00F0               	movwf	___aldiv@divisor
  2128  0356  084E               	movf	_BMP280_readPressure$1120+3,w
  2129  0357  00F7               	movwf	___aldiv@dividend+3
  2130  0358  084D               	movf	_BMP280_readPressure$1120+2,w
  2131  0359  00F6               	movwf	___aldiv@dividend+2
  2132  035A  084C               	movf	_BMP280_readPressure$1120+1,w
  2133  035B  00F5               	movwf	___aldiv@dividend+1
  2134  035C  084B               	movf	_BMP280_readPressure$1120,w
  2135  035D  00F4               	movwf	___aldiv@dividend
  2136  035E  120A  118A  2016  120A  118A  	fcall	___aldiv
  2137  0363  0873               	movf	?___aldiv+3,w
  2138  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0366  00A9               	movwf	___lmul@multiplier+3
  2141  0367  0872               	movf	?___aldiv+2,w
  2142  0368  00A8               	movwf	___lmul@multiplier+2
  2143  0369  0871               	movf	?___aldiv+1,w
  2144  036A  00A7               	movwf	___lmul@multiplier+1
  2145  036B  0870               	movf	?___aldiv,w
  2146  036C  00A6               	movwf	___lmul@multiplier
  2147  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2148  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2149  036F  0834               	movf	(_BMP280_calib^(0+128)+16),w
  2150  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0372  00AA               	movwf	___lmul@multiplicand
  2153  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2154  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2155  0375  0835               	movf	((_BMP280_calib+1)^(0+128)+16),w
  2156  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0378  00AB               	movwf	___lmul@multiplicand+1
  2159  0379  3000               	movlw	0
  2160  037A  1BAB               	btfsc	___lmul@multiplicand+1,7
  2161  037B  30FF               	movlw	255
  2162  037C  00AC               	movwf	___lmul@multiplicand+2
  2163  037D  00AD               	movwf	___lmul@multiplicand+3
  2164  037E  120A  158A  2573  120A  118A  	fcall	___lmul
  2165  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0385  0829               	movf	?___lmul+3,w
  2168  0386  00D2               	movwf	BMP280_readPressure@var2+3
  2169  0387  0828               	movf	?___lmul+2,w
  2170  0388  00D1               	movwf	BMP280_readPressure@var2+2
  2171  0389  0827               	movf	?___lmul+1,w
  2172  038A  00D0               	movwf	BMP280_readPressure@var2+1
  2173  038B  0826               	movf	?___lmul,w
  2174  038C  00CF               	movwf	BMP280_readPressure@var2
  2175                           
  2176                           ;BMP280.c: 275:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  2177  038D  084F               	movf	BMP280_readPressure@var2,w
  2178  038E  00AE               	movwf	??_BMP280_readPressure
  2179  038F  0850               	movf	BMP280_readPressure@var2+1,w
  2180  0390  00AF               	movwf	??_BMP280_readPressure+1
  2181  0391  0851               	movf	BMP280_readPressure@var2+2,w
  2182  0392  00B0               	movwf	??_BMP280_readPressure+2
  2183  0393  0852               	movf	BMP280_readPressure@var2+3,w
  2184  0394  00B1               	movwf	??_BMP280_readPressure+3
  2185  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2186  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2187  0397  0832               	movf	(_BMP280_calib^(0+128)+14),w
  2188  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2190  039A  00A6               	movwf	___lmul@multiplier
  2191  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2192  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2193  039D  0833               	movf	((_BMP280_calib+1)^(0+128)+14),w
  2194  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2195  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2196  03A0  00A7               	movwf	___lmul@multiplier+1
  2197  03A1  3000               	movlw	0
  2198  03A2  1BA7               	btfsc	___lmul@multiplier+1,7
  2199  03A3  30FF               	movlw	255
  2200  03A4  00A8               	movwf	___lmul@multiplier+2
  2201  03A5  00A9               	movwf	___lmul@multiplier+3
  2202  03A6  085A               	movf	BMP280_readPressure@var1+3,w
  2203  03A7  00AD               	movwf	___lmul@multiplicand+3
  2204  03A8  0859               	movf	BMP280_readPressure@var1+2,w
  2205  03A9  00AC               	movwf	___lmul@multiplicand+2
  2206  03AA  0858               	movf	BMP280_readPressure@var1+1,w
  2207  03AB  00AB               	movwf	___lmul@multiplicand+1
  2208  03AC  0857               	movf	BMP280_readPressure@var1,w
  2209  03AD  00AA               	movwf	___lmul@multiplicand
  2210  03AE  120A  158A  2573  120A  118A  	fcall	___lmul
  2211  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2212  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2213  03B5  0826               	movf	?___lmul,w
  2214  03B6  00B2               	movwf	??_BMP280_readPressure+4
  2215  03B7  0827               	movf	?___lmul+1,w
  2216  03B8  00B3               	movwf	??_BMP280_readPressure+5
  2217  03B9  0828               	movf	?___lmul+2,w
  2218  03BA  00B4               	movwf	??_BMP280_readPressure+6
  2219  03BB  0829               	movf	?___lmul+3,w
  2220  03BC  00B5               	movwf	??_BMP280_readPressure+7
  2221  03BD  3001               	movlw	1
  2222  03BE                     u1025:
  2223  03BE  1003               	clrc
  2224  03BF  0DB2               	rlf	??_BMP280_readPressure+4,f
  2225  03C0  0DB3               	rlf	??_BMP280_readPressure+5,f
  2226  03C1  0DB4               	rlf	??_BMP280_readPressure+6,f
  2227  03C2  0DB5               	rlf	??_BMP280_readPressure+7,f
  2228  03C3                     u1020:
  2229  03C3  3EFF               	addlw	-1
  2230  03C4  1D03               	skipz
  2231  03C5  2BBE               	goto	u1025
  2232  03C6  0832               	movf	??_BMP280_readPressure+4,w
  2233  03C7  07AE               	addwf	??_BMP280_readPressure,f
  2234  03C8  0833               	movf	??_BMP280_readPressure+5,w
  2235  03C9  1803               	skipnc
  2236  03CA  0F33               	incfsz	??_BMP280_readPressure+5,w
  2237  03CB  2BCD               	goto	u1030
  2238  03CC  2BCE               	goto	u1031
  2239  03CD                     u1030:
  2240  03CD  07AF               	addwf	??_BMP280_readPressure+1,f
  2241  03CE                     u1031:
  2242  03CE  0834               	movf	??_BMP280_readPressure+6,w
  2243  03CF  1803               	skipnc
  2244  03D0  0F34               	incfsz	??_BMP280_readPressure+6,w
  2245  03D1  2BD3               	goto	u1032
  2246  03D2  2BD4               	goto	u1033
  2247  03D3                     u1032:
  2248  03D3  07B0               	addwf	??_BMP280_readPressure+2,f
  2249  03D4                     u1033:
  2250  03D4  0835               	movf	??_BMP280_readPressure+7,w
  2251  03D5  1803               	skipnc
  2252  03D6  0A35               	incf	??_BMP280_readPressure+7,w
  2253  03D7  07B1               	addwf	??_BMP280_readPressure+3,f
  2254  03D8  0831               	movf	??_BMP280_readPressure+3,w
  2255  03D9  00D2               	movwf	BMP280_readPressure@var2+3
  2256  03DA  0830               	movf	??_BMP280_readPressure+2,w
  2257  03DB  00D1               	movwf	BMP280_readPressure@var2+2
  2258  03DC  082F               	movf	??_BMP280_readPressure+1,w
  2259  03DD  00D0               	movwf	BMP280_readPressure@var2+1
  2260  03DE  082E               	movf	??_BMP280_readPressure,w
  2261  03DF  00CF               	movwf	BMP280_readPressure@var2
  2262                           
  2263                           ;BMP280.c: 276:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  2264  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2265  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2266  03E2  0830               	movf	(_BMP280_calib^(0+128)+12),w
  2267  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2268  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2269  03E5  00AE               	movwf	??_BMP280_readPressure
  2270  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2271  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2272  03E8  0831               	movf	((_BMP280_calib+1)^(0+128)+12),w
  2273  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2274  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2275  03EB  00AF               	movwf	??_BMP280_readPressure+1
  2276  03EC  01B0               	clrf	??_BMP280_readPressure+2
  2277  03ED  01B1               	clrf	??_BMP280_readPressure+3
  2278  03EE  3010               	movlw	16
  2279  03EF                     u1045:
  2280  03EF  1003               	clrc
  2281  03F0  0DAE               	rlf	??_BMP280_readPressure,f
  2282  03F1  0DAF               	rlf	??_BMP280_readPressure+1,f
  2283  03F2  0DB0               	rlf	??_BMP280_readPressure+2,f
  2284  03F3  0DB1               	rlf	??_BMP280_readPressure+3,f
  2285  03F4                     u1040:
  2286  03F4  3EFF               	addlw	-1
  2287  03F5  1D03               	skipz
  2288  03F6  2BEF               	goto	u1045
  2289  03F7  3000               	movlw	0
  2290  03F8  00F3               	movwf	___aldiv@divisor+3
  2291  03F9  3000               	movlw	0
  2292  03FA  00F2               	movwf	___aldiv@divisor+2
  2293  03FB  3000               	movlw	0
  2294  03FC  00F1               	movwf	___aldiv@divisor+1
  2295  03FD  3004               	movlw	4
  2296  03FE  00F0               	movwf	___aldiv@divisor
  2297  03FF  0852               	movf	BMP280_readPressure@var2+3,w
  2298  0400  00F7               	movwf	___aldiv@dividend+3
  2299  0401  0851               	movf	BMP280_readPressure@var2+2,w
  2300  0402  00F6               	movwf	___aldiv@dividend+2
  2301  0403  0850               	movf	BMP280_readPressure@var2+1,w
  2302  0404  00F5               	movwf	___aldiv@dividend+1
  2303  0405  084F               	movf	BMP280_readPressure@var2,w
  2304  0406  00F4               	movwf	___aldiv@dividend
  2305  0407  120A  118A  2016  120A  118A  	fcall	___aldiv
  2306  040C  0870               	movf	?___aldiv,w
  2307  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2308  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2309  040F  07AE               	addwf	??_BMP280_readPressure,f
  2310  0410  0871               	movf	?___aldiv+1,w
  2311  0411  1803               	skipnc
  2312  0412  0F71               	incfsz	?___aldiv+1,w
  2313  0413  2C15               	goto	u1050
  2314  0414  2C16               	goto	u1051
  2315  0415                     u1050:
  2316  0415  07AF               	addwf	??_BMP280_readPressure+1,f
  2317  0416                     u1051:
  2318  0416  0872               	movf	?___aldiv+2,w
  2319  0417  1803               	skipnc
  2320  0418  0F72               	incfsz	?___aldiv+2,w
  2321  0419  2C1B               	goto	u1052
  2322  041A  2C1C               	goto	u1053
  2323  041B                     u1052:
  2324  041B  07B0               	addwf	??_BMP280_readPressure+2,f
  2325  041C                     u1053:
  2326  041C  0873               	movf	?___aldiv+3,w
  2327  041D  1803               	skipnc
  2328  041E  0A73               	incf	?___aldiv+3,w
  2329  041F  07B1               	addwf	??_BMP280_readPressure+3,f
  2330  0420  0831               	movf	??_BMP280_readPressure+3,w
  2331  0421  00D2               	movwf	BMP280_readPressure@var2+3
  2332  0422  0830               	movf	??_BMP280_readPressure+2,w
  2333  0423  00D1               	movwf	BMP280_readPressure@var2+2
  2334  0424  082F               	movf	??_BMP280_readPressure+1,w
  2335  0425  00D0               	movwf	BMP280_readPressure@var2+1
  2336  0426  082E               	movf	??_BMP280_readPressure,w
  2337  0427  00CF               	movwf	BMP280_readPressure@var2
  2338                           
  2339                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2340  0428  3000               	movlw	0
  2341  0429  00F3               	movwf	___aldiv@divisor+3
  2342  042A  3000               	movlw	0
  2343  042B  00F2               	movwf	___aldiv@divisor+2
  2344  042C  3000               	movlw	0
  2345  042D  00F1               	movwf	___aldiv@divisor+1
  2346  042E  3004               	movlw	4
  2347  042F  00F0               	movwf	___aldiv@divisor
  2348  0430  085A               	movf	BMP280_readPressure@var1+3,w
  2349  0431  00F7               	movwf	___aldiv@dividend+3
  2350  0432  0859               	movf	BMP280_readPressure@var1+2,w
  2351  0433  00F6               	movwf	___aldiv@dividend+2
  2352  0434  0858               	movf	BMP280_readPressure@var1+1,w
  2353  0435  00F5               	movwf	___aldiv@dividend+1
  2354  0436  0857               	movf	BMP280_readPressure@var1,w
  2355  0437  00F4               	movwf	___aldiv@dividend
  2356  0438  120A  118A  2016  120A  118A  	fcall	___aldiv
  2357  043D  0873               	movf	?___aldiv+3,w
  2358  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2359  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0440  00A9               	movwf	___lmul@multiplier+3
  2361  0441  0872               	movf	?___aldiv+2,w
  2362  0442  00A8               	movwf	___lmul@multiplier+2
  2363  0443  0871               	movf	?___aldiv+1,w
  2364  0444  00A7               	movwf	___lmul@multiplier+1
  2365  0445  0870               	movf	?___aldiv,w
  2366  0446  00A6               	movwf	___lmul@multiplier
  2367  0447  3000               	movlw	0
  2368  0448  00F3               	movwf	___aldiv@divisor+3
  2369  0449  3000               	movlw	0
  2370  044A  00F2               	movwf	___aldiv@divisor+2
  2371  044B  3000               	movlw	0
  2372  044C  00F1               	movwf	___aldiv@divisor+1
  2373  044D  3004               	movlw	4
  2374  044E  00F0               	movwf	___aldiv@divisor
  2375  044F  085A               	movf	BMP280_readPressure@var1+3,w
  2376  0450  00F7               	movwf	___aldiv@dividend+3
  2377  0451  0859               	movf	BMP280_readPressure@var1+2,w
  2378  0452  00F6               	movwf	___aldiv@dividend+2
  2379  0453  0858               	movf	BMP280_readPressure@var1+1,w
  2380  0454  00F5               	movwf	___aldiv@dividend+1
  2381  0455  0857               	movf	BMP280_readPressure@var1,w
  2382  0456  00F4               	movwf	___aldiv@dividend
  2383  0457  120A  118A  2016  120A  118A  	fcall	___aldiv
  2384  045C  0873               	movf	?___aldiv+3,w
  2385  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2386  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2387  045F  00AD               	movwf	___lmul@multiplicand+3
  2388  0460  0872               	movf	?___aldiv+2,w
  2389  0461  00AC               	movwf	___lmul@multiplicand+2
  2390  0462  0871               	movf	?___aldiv+1,w
  2391  0463  00AB               	movwf	___lmul@multiplicand+1
  2392  0464  0870               	movf	?___aldiv,w
  2393  0465  00AA               	movwf	___lmul@multiplicand
  2394  0466  120A  158A  2573  120A  118A  	fcall	___lmul
  2395  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2396  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2397  046D  0829               	movf	?___lmul+3,w
  2398  046E  00CE               	movwf	_BMP280_readPressure$1120+3
  2399  046F  0828               	movf	?___lmul+2,w
  2400  0470  00CD               	movwf	_BMP280_readPressure$1120+2
  2401  0471  0827               	movf	?___lmul+1,w
  2402  0472  00CC               	movwf	_BMP280_readPressure$1120+1
  2403  0473  0826               	movf	?___lmul,w
  2404  0474  00CB               	movwf	_BMP280_readPressure$1120
  2405                           
  2406                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2407  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2409  0477  082E               	movf	(_BMP280_calib^(0+128)+10),w
  2410  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2412  047A  00A6               	movwf	___lmul@multiplier
  2413  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2414  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2415  047D  082F               	movf	((_BMP280_calib+1)^(0+128)+10),w
  2416  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2417  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0480  00A7               	movwf	___lmul@multiplier+1
  2419  0481  3000               	movlw	0
  2420  0482  1BA7               	btfsc	___lmul@multiplier+1,7
  2421  0483  30FF               	movlw	255
  2422  0484  00A8               	movwf	___lmul@multiplier+2
  2423  0485  00A9               	movwf	___lmul@multiplier+3
  2424  0486  3000               	movlw	0
  2425  0487  00F3               	movwf	___aldiv@divisor+3
  2426  0488  3000               	movlw	0
  2427  0489  00F2               	movwf	___aldiv@divisor+2
  2428  048A  3020               	movlw	32
  2429  048B  00F1               	movwf	___aldiv@divisor+1
  2430  048C  3000               	movlw	0
  2431  048D  00F0               	movwf	___aldiv@divisor
  2432  048E  084E               	movf	_BMP280_readPressure$1120+3,w
  2433  048F  00F7               	movwf	___aldiv@dividend+3
  2434  0490  084D               	movf	_BMP280_readPressure$1120+2,w
  2435  0491  00F6               	movwf	___aldiv@dividend+2
  2436  0492  084C               	movf	_BMP280_readPressure$1120+1,w
  2437  0493  00F5               	movwf	___aldiv@dividend+1
  2438  0494  084B               	movf	_BMP280_readPressure$1120,w
  2439  0495  00F4               	movwf	___aldiv@dividend
  2440  0496  120A  118A  2016  120A  118A  	fcall	___aldiv
  2441  049B  0873               	movf	?___aldiv+3,w
  2442  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2443  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2444  049E  00AD               	movwf	___lmul@multiplicand+3
  2445  049F  0872               	movf	?___aldiv+2,w
  2446  04A0  00AC               	movwf	___lmul@multiplicand+2
  2447  04A1  0871               	movf	?___aldiv+1,w
  2448  04A2  00AB               	movwf	___lmul@multiplicand+1
  2449  04A3  0870               	movf	?___aldiv,w
  2450  04A4  00AA               	movwf	___lmul@multiplicand
  2451  04A5  120A  158A  2573  120A  118A  	fcall	___lmul
  2452  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2453  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2454  04AC  0829               	movf	?___lmul+3,w
  2455  04AD  00C1               	movwf	_BMP280_readPressure$1121+3
  2456  04AE  0828               	movf	?___lmul+2,w
  2457  04AF  00C0               	movwf	_BMP280_readPressure$1121+2
  2458  04B0  0827               	movf	?___lmul+1,w
  2459  04B1  00BF               	movwf	_BMP280_readPressure$1121+1
  2460  04B2  0826               	movf	?___lmul,w
  2461  04B3  00BE               	movwf	_BMP280_readPressure$1121
  2462                           
  2463                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2464  04B4  3000               	movlw	0
  2465  04B5  00F3               	movwf	___aldiv@divisor+3
  2466  04B6  3000               	movlw	0
  2467  04B7  00F2               	movwf	___aldiv@divisor+2
  2468  04B8  3000               	movlw	0
  2469  04B9  00F1               	movwf	___aldiv@divisor+1
  2470  04BA  3002               	movlw	2
  2471  04BB  00F0               	movwf	___aldiv@divisor
  2472  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2473  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2474  04BE  082C               	movf	(_BMP280_calib^(0+128)+8),w
  2475  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2476  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2477  04C1  00A6               	movwf	___lmul@multiplier
  2478  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2479  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2480  04C4  082D               	movf	((_BMP280_calib+1)^(0+128)+8),w
  2481  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2482  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2483  04C7  00A7               	movwf	___lmul@multiplier+1
  2484  04C8  3000               	movlw	0
  2485  04C9  1BA7               	btfsc	___lmul@multiplier+1,7
  2486  04CA  30FF               	movlw	255
  2487  04CB  00A8               	movwf	___lmul@multiplier+2
  2488  04CC  00A9               	movwf	___lmul@multiplier+3
  2489  04CD  085A               	movf	BMP280_readPressure@var1+3,w
  2490  04CE  00AD               	movwf	___lmul@multiplicand+3
  2491  04CF  0859               	movf	BMP280_readPressure@var1+2,w
  2492  04D0  00AC               	movwf	___lmul@multiplicand+2
  2493  04D1  0858               	movf	BMP280_readPressure@var1+1,w
  2494  04D2  00AB               	movwf	___lmul@multiplicand+1
  2495  04D3  0857               	movf	BMP280_readPressure@var1,w
  2496  04D4  00AA               	movwf	___lmul@multiplicand
  2497  04D5  120A  158A  2573  120A  118A  	fcall	___lmul
  2498  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2499  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2500  04DC  0829               	movf	?___lmul+3,w
  2501  04DD  00F7               	movwf	___aldiv@dividend+3
  2502  04DE  0828               	movf	?___lmul+2,w
  2503  04DF  00F6               	movwf	___aldiv@dividend+2
  2504  04E0  0827               	movf	?___lmul+1,w
  2505  04E1  00F5               	movwf	___aldiv@dividend+1
  2506  04E2  0826               	movf	?___lmul,w
  2507  04E3  00F4               	movwf	___aldiv@dividend
  2508  04E4  120A  118A  2016  120A  118A  	fcall	___aldiv
  2509  04E9  0870               	movf	?___aldiv,w
  2510  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2511  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2512  04EC  00AE               	movwf	??_BMP280_readPressure
  2513  04ED  0871               	movf	?___aldiv+1,w
  2514  04EE  00AF               	movwf	??_BMP280_readPressure+1
  2515  04EF  0872               	movf	?___aldiv+2,w
  2516  04F0  00B0               	movwf	??_BMP280_readPressure+2
  2517  04F1  0873               	movf	?___aldiv+3,w
  2518  04F2  00B1               	movwf	??_BMP280_readPressure+3
  2519  04F3  3000               	movlw	0
  2520  04F4  00F3               	movwf	___aldiv@divisor+3
  2521  04F5  3000               	movlw	0
  2522  04F6  00F2               	movwf	___aldiv@divisor+2
  2523  04F7  3000               	movlw	0
  2524  04F8  00F1               	movwf	___aldiv@divisor+1
  2525  04F9  3008               	movlw	8
  2526  04FA  00F0               	movwf	___aldiv@divisor
  2527  04FB  0841               	movf	_BMP280_readPressure$1121+3,w
  2528  04FC  00F7               	movwf	___aldiv@dividend+3
  2529  04FD  0840               	movf	_BMP280_readPressure$1121+2,w
  2530  04FE  00F6               	movwf	___aldiv@dividend+2
  2531  04FF  083F               	movf	_BMP280_readPressure$1121+1,w
  2532  0500  00F5               	movwf	___aldiv@dividend+1
  2533  0501  083E               	movf	_BMP280_readPressure$1121,w
  2534  0502  00F4               	movwf	___aldiv@dividend
  2535  0503  120A  118A  2016  120A  118A  	fcall	___aldiv
  2536  0508  0870               	movf	?___aldiv,w
  2537  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2538  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2539  050B  07AE               	addwf	??_BMP280_readPressure,f
  2540  050C  0871               	movf	?___aldiv+1,w
  2541  050D  1803               	skipnc
  2542  050E  0F71               	incfsz	?___aldiv+1,w
  2543  050F  2D11               	goto	u1060
  2544  0510  2D12               	goto	u1061
  2545  0511                     u1060:
  2546  0511  07AF               	addwf	??_BMP280_readPressure+1,f
  2547  0512                     u1061:
  2548  0512  0872               	movf	?___aldiv+2,w
  2549  0513  1803               	skipnc
  2550  0514  0F72               	incfsz	?___aldiv+2,w
  2551  0515  2D17               	goto	u1062
  2552  0516  2D18               	goto	u1063
  2553  0517                     u1062:
  2554  0517  07B0               	addwf	??_BMP280_readPressure+2,f
  2555  0518                     u1063:
  2556  0518  0873               	movf	?___aldiv+3,w
  2557  0519  1803               	skipnc
  2558  051A  0A73               	incf	?___aldiv+3,w
  2559  051B  07B1               	addwf	??_BMP280_readPressure+3,f
  2560  051C  0831               	movf	??_BMP280_readPressure+3,w
  2561  051D  00C5               	movwf	_BMP280_readPressure$1122+3
  2562  051E  0830               	movf	??_BMP280_readPressure+2,w
  2563  051F  00C4               	movwf	_BMP280_readPressure$1122+2
  2564  0520  082F               	movf	??_BMP280_readPressure+1,w
  2565  0521  00C3               	movwf	_BMP280_readPressure$1122+1
  2566  0522  082E               	movf	??_BMP280_readPressure,w
  2567  0523  00C2               	movwf	_BMP280_readPressure$1122
  2568                           
  2569                           ;BMP280.c: 278:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2570  0524  3000               	movlw	0
  2571  0525  00F3               	movwf	___aldiv@divisor+3
  2572  0526  3004               	movlw	4
  2573  0527  00F2               	movwf	___aldiv@divisor+2
  2574  0528  3000               	movlw	0
  2575  0529  00F1               	movwf	___aldiv@divisor+1
  2576  052A  3000               	movlw	0
  2577  052B  00F0               	movwf	___aldiv@divisor
  2578  052C  0845               	movf	_BMP280_readPressure$1122+3,w
  2579  052D  00F7               	movwf	___aldiv@dividend+3
  2580  052E  0844               	movf	_BMP280_readPressure$1122+2,w
  2581  052F  00F6               	movwf	___aldiv@dividend+2
  2582  0530  0843               	movf	_BMP280_readPressure$1122+1,w
  2583  0531  00F5               	movwf	___aldiv@dividend+1
  2584  0532  0842               	movf	_BMP280_readPressure$1122,w
  2585  0533  00F4               	movwf	___aldiv@dividend
  2586  0534  120A  118A  2016  120A  118A  	fcall	___aldiv
  2587  0539  0873               	movf	?___aldiv+3,w
  2588  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2589  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2590  053C  00DA               	movwf	BMP280_readPressure@var1+3
  2591  053D  0872               	movf	?___aldiv+2,w
  2592  053E  00D9               	movwf	BMP280_readPressure@var1+2
  2593  053F  0871               	movf	?___aldiv+1,w
  2594  0540  00D8               	movwf	BMP280_readPressure@var1+1
  2595  0541  0870               	movf	?___aldiv,w
  2596  0542  00D7               	movwf	BMP280_readPressure@var1
  2597                           
  2598                           ;BMP280.c: 281:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  2599  0543  3000               	movlw	0
  2600  0544  00F3               	movwf	___aldiv@divisor+3
  2601  0545  3000               	movlw	0
  2602  0546  00F2               	movwf	___aldiv@divisor+2
  2603  0547  3080               	movlw	128
  2604  0548  00F1               	movwf	___aldiv@divisor+1
  2605  0549  3000               	movlw	0
  2606  054A  00F0               	movwf	___aldiv@divisor
  2607  054B  3000               	movlw	0
  2608  054C  00AE               	movwf	??_BMP280_readPressure
  2609  054D  3080               	movlw	128
  2610  054E  00AF               	movwf	??_BMP280_readPressure+1
  2611  054F  3000               	movlw	0
  2612  0550  00B0               	movwf	??_BMP280_readPressure+2
  2613  0551  3000               	movlw	0
  2614  0552  00B1               	movwf	??_BMP280_readPressure+3
  2615  0553  0857               	movf	BMP280_readPressure@var1,w
  2616  0554  07AE               	addwf	??_BMP280_readPressure,f
  2617  0555  0858               	movf	BMP280_readPressure@var1+1,w
  2618  0556  1803               	skipnc
  2619  0557  0F58               	incfsz	BMP280_readPressure@var1+1,w
  2620  0558  2D5A               	goto	u1070
  2621  0559  2D5B               	goto	u1071
  2622  055A                     u1070:
  2623  055A  07AF               	addwf	??_BMP280_readPressure+1,f
  2624  055B                     u1071:
  2625  055B  0859               	movf	BMP280_readPressure@var1+2,w
  2626  055C  1803               	skipnc
  2627  055D  0F59               	incfsz	BMP280_readPressure@var1+2,w
  2628  055E  2D60               	goto	u1072
  2629  055F  2D61               	goto	u1073
  2630  0560                     u1072:
  2631  0560  07B0               	addwf	??_BMP280_readPressure+2,f
  2632  0561                     u1073:
  2633  0561  085A               	movf	BMP280_readPressure@var1+3,w
  2634  0562  1803               	skipnc
  2635  0563  0A5A               	incf	BMP280_readPressure@var1+3,w
  2636  0564  07B1               	addwf	??_BMP280_readPressure+3,f
  2637  0565  0831               	movf	??_BMP280_readPressure+3,w
  2638  0566  00A9               	movwf	___lmul@multiplier+3
  2639  0567  0830               	movf	??_BMP280_readPressure+2,w
  2640  0568  00A8               	movwf	___lmul@multiplier+2
  2641  0569  082F               	movf	??_BMP280_readPressure+1,w
  2642  056A  00A7               	movwf	___lmul@multiplier+1
  2643  056B  082E               	movf	??_BMP280_readPressure,w
  2644  056C  00A6               	movwf	___lmul@multiplier
  2645  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2646  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2647  056F  082A               	movf	(_BMP280_calib^(0+128)+6),w
  2648  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0572  00AA               	movwf	___lmul@multiplicand
  2651  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2653  0575  082B               	movf	((_BMP280_calib+1)^(0+128)+6),w
  2654  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0578  00AB               	movwf	___lmul@multiplicand+1
  2657  0579  01AC               	clrf	___lmul@multiplicand+2
  2658  057A  01AD               	clrf	___lmul@multiplicand+3
  2659  057B  120A  158A  2573  120A  118A  	fcall	___lmul
  2660  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0582  0829               	movf	?___lmul+3,w
  2663  0583  00F7               	movwf	___aldiv@dividend+3
  2664  0584  0828               	movf	?___lmul+2,w
  2665  0585  00F6               	movwf	___aldiv@dividend+2
  2666  0586  0827               	movf	?___lmul+1,w
  2667  0587  00F5               	movwf	___aldiv@dividend+1
  2668  0588  0826               	movf	?___lmul,w
  2669  0589  00F4               	movwf	___aldiv@dividend
  2670  058A  120A  118A  2016  120A  118A  	fcall	___aldiv
  2671  058F  0873               	movf	?___aldiv+3,w
  2672  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0592  00DA               	movwf	BMP280_readPressure@var1+3
  2675  0593  0872               	movf	?___aldiv+2,w
  2676  0594  00D9               	movwf	BMP280_readPressure@var1+2
  2677  0595  0871               	movf	?___aldiv+1,w
  2678  0596  00D8               	movwf	BMP280_readPressure@var1+1
  2679  0597  0870               	movf	?___aldiv,w
  2680  0598  00D7               	movwf	BMP280_readPressure@var1
  2681  0599                     l1275:
  2682                           
  2683                           ;BMP280.c: 283:   if (var1 == 0)
  2684  0599  085A               	movf	BMP280_readPressure@var1+3,w
  2685  059A  0459               	iorwf	BMP280_readPressure@var1+2,w
  2686  059B  0458               	iorwf	BMP280_readPressure@var1+1,w
  2687  059C  0457               	iorwf	BMP280_readPressure@var1,w
  2688  059D  1D03               	skipz
  2689  059E  2DA0               	goto	u1081
  2690  059F  2DA1               	goto	u1080
  2691  05A0                     u1081:
  2692  05A0  2DA2               	goto	l1279
  2693  05A1                     u1080:
  2694  05A1  2FEA               	goto	l154
  2695  05A2                     l1279:
  2696                           
  2697                           ;BMP280.c: 286:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  2698  05A2  3000               	movlw	0
  2699  05A3  00AE               	movwf	??_BMP280_readPressure
  2700  05A4  3000               	movlw	0
  2701  05A5  00AF               	movwf	??_BMP280_readPressure+1
  2702  05A6  3010               	movlw	16
  2703  05A7  00B0               	movwf	??_BMP280_readPressure+2
  2704  05A8  3000               	movlw	0
  2705  05A9  00B1               	movwf	??_BMP280_readPressure+3
  2706  05AA  3000               	movlw	0
  2707  05AB  00F3               	movwf	___aldiv@divisor+3
  2708  05AC  3000               	movlw	0
  2709  05AD  00F2               	movwf	___aldiv@divisor+2
  2710  05AE  3010               	movlw	16
  2711  05AF  00F1               	movwf	___aldiv@divisor+1
  2712  05B0  3000               	movlw	0
  2713  05B1  00F0               	movwf	___aldiv@divisor
  2714  05B2  0852               	movf	BMP280_readPressure@var2+3,w
  2715  05B3  00F7               	movwf	___aldiv@dividend+3
  2716  05B4  0851               	movf	BMP280_readPressure@var2+2,w
  2717  05B5  00F6               	movwf	___aldiv@dividend+2
  2718  05B6  0850               	movf	BMP280_readPressure@var2+1,w
  2719  05B7  00F5               	movwf	___aldiv@dividend+1
  2720  05B8  084F               	movf	BMP280_readPressure@var2,w
  2721  05B9  00F4               	movwf	___aldiv@dividend
  2722  05BA  120A  118A  2016  120A  118A  	fcall	___aldiv
  2723  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2724  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2725  05C1  0920               	comf	_adc_P^(0+128),w
  2726  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2727  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2728  05C4  00B2               	movwf	??_BMP280_readPressure+4
  2729  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2730  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2731  05C7  0921               	comf	(_adc_P+1)^(0+128),w
  2732  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2733  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2734  05CA  00B3               	movwf	??_BMP280_readPressure+5
  2735  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  2736  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  2737  05CD  0922               	comf	(_adc_P+2)^(0+128),w
  2738  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2739  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2740  05D0  00B4               	movwf	??_BMP280_readPressure+6
  2741  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  2742  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  2743  05D3  0923               	comf	(_adc_P+3)^(0+128),w
  2744  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2745  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2746  05D6  00B5               	movwf	??_BMP280_readPressure+7
  2747  05D7  0AB2               	incf	??_BMP280_readPressure+4,f
  2748  05D8  1903               	skipnz
  2749  05D9  0AB3               	incf	??_BMP280_readPressure+5,f
  2750  05DA  1903               	skipnz
  2751  05DB  0AB4               	incf	??_BMP280_readPressure+6,f
  2752  05DC  1903               	skipnz
  2753  05DD  0AB5               	incf	??_BMP280_readPressure+7,f
  2754  05DE  0870               	movf	?___aldiv,w
  2755  05DF  02B2               	subwf	??_BMP280_readPressure+4,f
  2756  05E0  0871               	movf	?___aldiv+1,w
  2757  05E1  1C03               	skipc
  2758  05E2  0F71               	incfsz	?___aldiv+1,w
  2759  05E3  2DE5               	goto	u1091
  2760  05E4  2DE6               	goto	u1092
  2761  05E5                     u1091:
  2762  05E5  02B3               	subwf	??_BMP280_readPressure+5,f
  2763  05E6                     u1092:
  2764  05E6  0872               	movf	?___aldiv+2,w
  2765  05E7  1C03               	skipc
  2766  05E8  0F72               	incfsz	?___aldiv+2,w
  2767  05E9  2DEB               	goto	u1093
  2768  05EA  2DEC               	goto	u1094
  2769  05EB                     u1093:
  2770  05EB  02B4               	subwf	??_BMP280_readPressure+6,f
  2771  05EC                     u1094:
  2772  05EC  0873               	movf	?___aldiv+3,w
  2773  05ED  1C03               	skipc
  2774  05EE  0F73               	incfsz	?___aldiv+3,w
  2775  05EF  2DF1               	goto	u1095
  2776  05F0  2DF2               	goto	u1096
  2777  05F1                     u1095:
  2778  05F1  02B5               	subwf	??_BMP280_readPressure+7,f
  2779  05F2                     u1096:
  2780  05F2  0832               	movf	??_BMP280_readPressure+4,w
  2781  05F3  07AE               	addwf	??_BMP280_readPressure,f
  2782  05F4  0833               	movf	??_BMP280_readPressure+5,w
  2783  05F5  1803               	skipnc
  2784  05F6  0F33               	incfsz	??_BMP280_readPressure+5,w
  2785  05F7  2DF9               	goto	u1100
  2786  05F8  2DFA               	goto	u1101
  2787  05F9                     u1100:
  2788  05F9  07AF               	addwf	??_BMP280_readPressure+1,f
  2789  05FA                     u1101:
  2790  05FA  0834               	movf	??_BMP280_readPressure+6,w
  2791  05FB  1803               	skipnc
  2792  05FC  0F34               	incfsz	??_BMP280_readPressure+6,w
  2793  05FD  2DFF               	goto	u1102
  2794  05FE  2E00               	goto	u1103
  2795  05FF                     u1102:
  2796  05FF  07B0               	addwf	??_BMP280_readPressure+2,f
  2797  0600                     u1103:
  2798  0600  0835               	movf	??_BMP280_readPressure+7,w
  2799  0601  1803               	skipnc
  2800  0602  0A35               	incf	??_BMP280_readPressure+7,w
  2801  0603  07B1               	addwf	??_BMP280_readPressure+3,f
  2802  0604  0831               	movf	??_BMP280_readPressure+3,w
  2803  0605  00A9               	movwf	___lmul@multiplier+3
  2804  0606  0830               	movf	??_BMP280_readPressure+2,w
  2805  0607  00A8               	movwf	___lmul@multiplier+2
  2806  0608  082F               	movf	??_BMP280_readPressure+1,w
  2807  0609  00A7               	movwf	___lmul@multiplier+1
  2808  060A  082E               	movf	??_BMP280_readPressure,w
  2809  060B  00A6               	movwf	___lmul@multiplier
  2810  060C  3000               	movlw	0
  2811  060D  00AD               	movwf	___lmul@multiplicand+3
  2812  060E  3000               	movlw	0
  2813  060F  00AC               	movwf	___lmul@multiplicand+2
  2814  0610  300C               	movlw	12
  2815  0611  00AB               	movwf	___lmul@multiplicand+1
  2816  0612  3035               	movlw	53
  2817  0613  00AA               	movwf	___lmul@multiplicand
  2818  0614  120A  158A  2573  120A  118A  	fcall	___lmul
  2819  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2820  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2821  061B  0829               	movf	?___lmul+3,w
  2822  061C  00D6               	movwf	BMP280_readPressure@p+3
  2823  061D  0828               	movf	?___lmul+2,w
  2824  061E  00D5               	movwf	BMP280_readPressure@p+2
  2825  061F  0827               	movf	?___lmul+1,w
  2826  0620  00D4               	movwf	BMP280_readPressure@p+1
  2827  0621  0826               	movf	?___lmul,w
  2828  0622  00D3               	movwf	BMP280_readPressure@p
  2829  0623                     l1281:
  2830                           
  2831                           ;BMP280.c: 288:   if (p < 0x80000000)
  2832  0623  3080               	movlw	128
  2833  0624  0256               	subwf	BMP280_readPressure@p+3,w
  2834  0625  1D03               	skipz
  2835  0626  2E33               	goto	u1113
  2836  0627  3000               	movlw	0
  2837  0628  0255               	subwf	BMP280_readPressure@p+2,w
  2838  0629  1D03               	skipz
  2839  062A  2E33               	goto	u1113
  2840  062B  3000               	movlw	0
  2841  062C  0254               	subwf	BMP280_readPressure@p+1,w
  2842  062D  1D03               	skipz
  2843  062E  2E33               	goto	u1113
  2844  062F  3000               	movlw	0
  2845  0630  0253               	subwf	BMP280_readPressure@p,w
  2846  0631  1D03               	skipz
  2847  0632  2E33               	goto	u1113
  2848  0633                     u1113:
  2849  0633  1803               	btfsc	3,0
  2850  0634  2E36               	goto	u1111
  2851  0635  2E37               	goto	u1110
  2852  0636                     u1111:
  2853  0636  2E5A               	goto	l1285
  2854  0637                     u1110:
  2855  0637                     l1283:
  2856                           
  2857                           ;BMP280.c: 289:     p = (p * 2) / ((uint32_t)var1);
  2858  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0639  085A               	movf	BMP280_readPressure@var1+3,w
  2861  063A  00F3               	movwf	___lldiv@divisor+3
  2862  063B  0859               	movf	BMP280_readPressure@var1+2,w
  2863  063C  00F2               	movwf	___lldiv@divisor+2
  2864  063D  0858               	movf	BMP280_readPressure@var1+1,w
  2865  063E  00F1               	movwf	___lldiv@divisor+1
  2866  063F  0857               	movf	BMP280_readPressure@var1,w
  2867  0640  00F0               	movwf	___lldiv@divisor
  2868  0641  1003               	clrc
  2869  0642  0D53               	rlf	BMP280_readPressure@p,w
  2870  0643  00F4               	movwf	___lldiv@dividend
  2871  0644  0D54               	rlf	BMP280_readPressure@p+1,w
  2872  0645  00F5               	movwf	___lldiv@dividend+1
  2873  0646  0D55               	rlf	BMP280_readPressure@p+2,w
  2874  0647  00F6               	movwf	___lldiv@dividend+2
  2875  0648  0D56               	rlf	BMP280_readPressure@p+3,w
  2876  0649  00F7               	movwf	___lldiv@dividend+3
  2877  064A  120A  158A  2607  120A  118A  	fcall	___lldiv
  2878  064F  0873               	movf	?___lldiv+3,w
  2879  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0652  00D6               	movwf	BMP280_readPressure@p+3
  2882  0653  0872               	movf	?___lldiv+2,w
  2883  0654  00D5               	movwf	BMP280_readPressure@p+2
  2884  0655  0871               	movf	?___lldiv+1,w
  2885  0656  00D4               	movwf	BMP280_readPressure@p+1
  2886  0657  0870               	movf	?___lldiv,w
  2887  0658  00D3               	movwf	BMP280_readPressure@p
  2888  0659  2E7C               	goto	l156
  2889  065A                     l1285:
  2890                           
  2891                           ;BMP280.c: 292:     p = (p / (uint32_t)var1) * 2;
  2892  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2893  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2894  065C  085A               	movf	BMP280_readPressure@var1+3,w
  2895  065D  00F3               	movwf	___lldiv@divisor+3
  2896  065E  0859               	movf	BMP280_readPressure@var1+2,w
  2897  065F  00F2               	movwf	___lldiv@divisor+2
  2898  0660  0858               	movf	BMP280_readPressure@var1+1,w
  2899  0661  00F1               	movwf	___lldiv@divisor+1
  2900  0662  0857               	movf	BMP280_readPressure@var1,w
  2901  0663  00F0               	movwf	___lldiv@divisor
  2902  0664  0856               	movf	BMP280_readPressure@p+3,w
  2903  0665  00F7               	movwf	___lldiv@dividend+3
  2904  0666  0855               	movf	BMP280_readPressure@p+2,w
  2905  0667  00F6               	movwf	___lldiv@dividend+2
  2906  0668  0854               	movf	BMP280_readPressure@p+1,w
  2907  0669  00F5               	movwf	___lldiv@dividend+1
  2908  066A  0853               	movf	BMP280_readPressure@p,w
  2909  066B  00F4               	movwf	___lldiv@dividend
  2910  066C  120A  158A  2607  120A  118A  	fcall	___lldiv
  2911  0671  1003               	clrc
  2912  0672  0D70               	rlf	?___lldiv,w
  2913  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0675  00D3               	movwf	BMP280_readPressure@p
  2916  0676  0D71               	rlf	?___lldiv+1,w
  2917  0677  00D4               	movwf	BMP280_readPressure@p+1
  2918  0678  0D72               	rlf	?___lldiv+2,w
  2919  0679  00D5               	movwf	BMP280_readPressure@p+2
  2920  067A  0D73               	rlf	?___lldiv+3,w
  2921  067B  00D6               	movwf	BMP280_readPressure@p+3
  2922  067C                     l156:
  2923                           
  2924                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2925  067C  0853               	movf	BMP280_readPressure@p,w
  2926  067D  00AE               	movwf	??_BMP280_readPressure
  2927  067E  0854               	movf	BMP280_readPressure@p+1,w
  2928  067F  00AF               	movwf	??_BMP280_readPressure+1
  2929  0680  0855               	movf	BMP280_readPressure@p+2,w
  2930  0681  00B0               	movwf	??_BMP280_readPressure+2
  2931  0682  0856               	movf	BMP280_readPressure@p+3,w
  2932  0683  00B1               	movwf	??_BMP280_readPressure+3
  2933  0684  3003               	movlw	3
  2934  0685                     u1125:
  2935  0685  1003               	clrc
  2936  0686  0CB1               	rrf	??_BMP280_readPressure+3,f
  2937  0687  0CB0               	rrf	??_BMP280_readPressure+2,f
  2938  0688  0CAF               	rrf	??_BMP280_readPressure+1,f
  2939  0689  0CAE               	rrf	??_BMP280_readPressure,f
  2940  068A                     u1120:
  2941  068A  3EFF               	addlw	-1
  2942  068B  1D03               	skipz
  2943  068C  2E85               	goto	u1125
  2944  068D  0831               	movf	??_BMP280_readPressure+3,w
  2945  068E  00AD               	movwf	___lmul@multiplicand+3
  2946  068F  0830               	movf	??_BMP280_readPressure+2,w
  2947  0690  00AC               	movwf	___lmul@multiplicand+2
  2948  0691  082F               	movf	??_BMP280_readPressure+1,w
  2949  0692  00AB               	movwf	___lmul@multiplicand+1
  2950  0693  082E               	movf	??_BMP280_readPressure,w
  2951  0694  00AA               	movwf	___lmul@multiplicand
  2952  0695  0853               	movf	BMP280_readPressure@p,w
  2953  0696  00B2               	movwf	??_BMP280_readPressure+4
  2954  0697  0854               	movf	BMP280_readPressure@p+1,w
  2955  0698  00B3               	movwf	??_BMP280_readPressure+5
  2956  0699  0855               	movf	BMP280_readPressure@p+2,w
  2957  069A  00B4               	movwf	??_BMP280_readPressure+6
  2958  069B  0856               	movf	BMP280_readPressure@p+3,w
  2959  069C  00B5               	movwf	??_BMP280_readPressure+7
  2960  069D  3003               	movlw	3
  2961  069E                     u1135:
  2962  069E  1003               	clrc
  2963  069F  0CB5               	rrf	??_BMP280_readPressure+7,f
  2964  06A0  0CB4               	rrf	??_BMP280_readPressure+6,f
  2965  06A1  0CB3               	rrf	??_BMP280_readPressure+5,f
  2966  06A2  0CB2               	rrf	??_BMP280_readPressure+4,f
  2967  06A3                     u1130:
  2968  06A3  3EFF               	addlw	-1
  2969  06A4  1D03               	skipz
  2970  06A5  2E9E               	goto	u1135
  2971  06A6  0835               	movf	??_BMP280_readPressure+7,w
  2972  06A7  00A9               	movwf	___lmul@multiplier+3
  2973  06A8  0834               	movf	??_BMP280_readPressure+6,w
  2974  06A9  00A8               	movwf	___lmul@multiplier+2
  2975  06AA  0833               	movf	??_BMP280_readPressure+5,w
  2976  06AB  00A7               	movwf	___lmul@multiplier+1
  2977  06AC  0832               	movf	??_BMP280_readPressure+4,w
  2978  06AD  00A6               	movwf	___lmul@multiplier
  2979  06AE  120A  158A  2573  120A  118A  	fcall	___lmul
  2980  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2981  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2982  06B5  0826               	movf	?___lmul,w
  2983  06B6  00B6               	movwf	??_BMP280_readPressure+8
  2984  06B7  0827               	movf	?___lmul+1,w
  2985  06B8  00B7               	movwf	??_BMP280_readPressure+9
  2986  06B9  0828               	movf	?___lmul+2,w
  2987  06BA  00B8               	movwf	??_BMP280_readPressure+10
  2988  06BB  0829               	movf	?___lmul+3,w
  2989  06BC  00B9               	movwf	??_BMP280_readPressure+11
  2990  06BD  300D               	movlw	13
  2991  06BE                     u1145:
  2992  06BE  1003               	clrc
  2993  06BF  0CB9               	rrf	??_BMP280_readPressure+11,f
  2994  06C0  0CB8               	rrf	??_BMP280_readPressure+10,f
  2995  06C1  0CB7               	rrf	??_BMP280_readPressure+9,f
  2996  06C2  0CB6               	rrf	??_BMP280_readPressure+8,f
  2997  06C3                     u1140:
  2998  06C3  3EFF               	addlw	-1
  2999  06C4  1D03               	skipz
  3000  06C5  2EBE               	goto	u1145
  3001  06C6  0839               	movf	??_BMP280_readPressure+11,w
  3002  06C7  00C9               	movwf	_BMP280_readPressure$1123+3
  3003  06C8  0838               	movf	??_BMP280_readPressure+10,w
  3004  06C9  00C8               	movwf	_BMP280_readPressure$1123+2
  3005  06CA  0837               	movf	??_BMP280_readPressure+9,w
  3006  06CB  00C7               	movwf	_BMP280_readPressure$1123+1
  3007  06CC  0836               	movf	??_BMP280_readPressure+8,w
  3008  06CD  00C6               	movwf	_BMP280_readPressure$1123
  3009                           
  3010                           ;BMP280.c: 294:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3011  06CE  3000               	movlw	0
  3012  06CF  00F3               	movwf	___aldiv@divisor+3
  3013  06D0  3000               	movlw	0
  3014  06D1  00F2               	movwf	___aldiv@divisor+2
  3015  06D2  3010               	movlw	16
  3016  06D3  00F1               	movwf	___aldiv@divisor+1
  3017  06D4  3000               	movlw	0
  3018  06D5  00F0               	movwf	___aldiv@divisor
  3019  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3020  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3021  06D8  083A               	movf	(_BMP280_calib^(0+128)+22),w
  3022  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3023  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  3024  06DB  00A6               	movwf	___lmul@multiplier
  3025  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3026  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  3027  06DE  083B               	movf	((_BMP280_calib+1)^(0+128)+22),w
  3028  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3029  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3030  06E1  00A7               	movwf	___lmul@multiplier+1
  3031  06E2  3000               	movlw	0
  3032  06E3  1BA7               	btfsc	___lmul@multiplier+1,7
  3033  06E4  30FF               	movlw	255
  3034  06E5  00A8               	movwf	___lmul@multiplier+2
  3035  06E6  00A9               	movwf	___lmul@multiplier+3
  3036  06E7  0849               	movf	_BMP280_readPressure$1123+3,w
  3037  06E8  00AD               	movwf	___lmul@multiplicand+3
  3038  06E9  0848               	movf	_BMP280_readPressure$1123+2,w
  3039  06EA  00AC               	movwf	___lmul@multiplicand+2
  3040  06EB  0847               	movf	_BMP280_readPressure$1123+1,w
  3041  06EC  00AB               	movwf	___lmul@multiplicand+1
  3042  06ED  0846               	movf	_BMP280_readPressure$1123,w
  3043  06EE  00AA               	movwf	___lmul@multiplicand
  3044  06EF  120A  158A  2573  120A  118A  	fcall	___lmul
  3045  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  3046  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  3047  06F6  0829               	movf	?___lmul+3,w
  3048  06F7  00F7               	movwf	___aldiv@dividend+3
  3049  06F8  0828               	movf	?___lmul+2,w
  3050  06F9  00F6               	movwf	___aldiv@dividend+2
  3051  06FA  0827               	movf	?___lmul+1,w
  3052  06FB  00F5               	movwf	___aldiv@dividend+1
  3053  06FC  0826               	movf	?___lmul,w
  3054  06FD  00F4               	movwf	___aldiv@dividend
  3055  06FE  120A  118A  2016  120A  118A  	fcall	___aldiv
  3056  0703  0873               	movf	?___aldiv+3,w
  3057  0704  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0705  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0706  00DA               	movwf	BMP280_readPressure@var1+3
  3060  0707  0872               	movf	?___aldiv+2,w
  3061  0708  00D9               	movwf	BMP280_readPressure@var1+2
  3062  0709  0871               	movf	?___aldiv+1,w
  3063  070A  00D8               	movwf	BMP280_readPressure@var1+1
  3064  070B  0870               	movf	?___aldiv,w
  3065  070C  00D7               	movwf	BMP280_readPressure@var1
  3066                           
  3067                           ;BMP280.c: 295:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  3068  070D  3000               	movlw	0
  3069  070E  00F3               	movwf	___aldiv@divisor+3
  3070  070F  3000               	movlw	0
  3071  0710  00F2               	movwf	___aldiv@divisor+2
  3072  0711  3020               	movlw	32
  3073  0712  00F1               	movwf	___aldiv@divisor+1
  3074  0713  3000               	movlw	0
  3075  0714  00F0               	movwf	___aldiv@divisor
  3076  0715  0853               	movf	BMP280_readPressure@p,w
  3077  0716  00AE               	movwf	??_BMP280_readPressure
  3078  0717  0854               	movf	BMP280_readPressure@p+1,w
  3079  0718  00AF               	movwf	??_BMP280_readPressure+1
  3080  0719  0855               	movf	BMP280_readPressure@p+2,w
  3081  071A  00B0               	movwf	??_BMP280_readPressure+2
  3082  071B  0856               	movf	BMP280_readPressure@p+3,w
  3083  071C  00B1               	movwf	??_BMP280_readPressure+3
  3084  071D  3002               	movlw	2
  3085  071E                     u1155:
  3086  071E  1003               	clrc
  3087  071F  0CB1               	rrf	??_BMP280_readPressure+3,f
  3088  0720  0CB0               	rrf	??_BMP280_readPressure+2,f
  3089  0721  0CAF               	rrf	??_BMP280_readPressure+1,f
  3090  0722  0CAE               	rrf	??_BMP280_readPressure,f
  3091  0723                     u1150:
  3092  0723  3EFF               	addlw	-1
  3093  0724  1D03               	skipz
  3094  0725  2F1E               	goto	u1155
  3095  0726  0831               	movf	??_BMP280_readPressure+3,w
  3096  0727  00A9               	movwf	___lmul@multiplier+3
  3097  0728  0830               	movf	??_BMP280_readPressure+2,w
  3098  0729  00A8               	movwf	___lmul@multiplier+2
  3099  072A  082F               	movf	??_BMP280_readPressure+1,w
  3100  072B  00A7               	movwf	___lmul@multiplier+1
  3101  072C  082E               	movf	??_BMP280_readPressure,w
  3102  072D  00A6               	movwf	___lmul@multiplier
  3103  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3104  072F  1303               	bcf	3,6	;RP1=0, select bank1
  3105  0730  0838               	movf	(_BMP280_calib^(0+128)+20),w
  3106  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0732  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0733  00AA               	movwf	___lmul@multiplicand
  3109  0734  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0735  1303               	bcf	3,6	;RP1=0, select bank1
  3111  0736  0839               	movf	((_BMP280_calib+1)^(0+128)+20),w
  3112  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0738  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0739  00AB               	movwf	___lmul@multiplicand+1
  3115  073A  3000               	movlw	0
  3116  073B  1BAB               	btfsc	___lmul@multiplicand+1,7
  3117  073C  30FF               	movlw	255
  3118  073D  00AC               	movwf	___lmul@multiplicand+2
  3119  073E  00AD               	movwf	___lmul@multiplicand+3
  3120  073F  120A  158A  2573  120A  118A  	fcall	___lmul
  3121  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3122  0745  1303               	bcf	3,6	;RP1=0, select bank0
  3123  0746  0829               	movf	?___lmul+3,w
  3124  0747  00F7               	movwf	___aldiv@dividend+3
  3125  0748  0828               	movf	?___lmul+2,w
  3126  0749  00F6               	movwf	___aldiv@dividend+2
  3127  074A  0827               	movf	?___lmul+1,w
  3128  074B  00F5               	movwf	___aldiv@dividend+1
  3129  074C  0826               	movf	?___lmul,w
  3130  074D  00F4               	movwf	___aldiv@dividend
  3131  074E  120A  118A  2016  120A  118A  	fcall	___aldiv
  3132  0753  0873               	movf	?___aldiv+3,w
  3133  0754  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0755  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0756  00D2               	movwf	BMP280_readPressure@var2+3
  3136  0757  0872               	movf	?___aldiv+2,w
  3137  0758  00D1               	movwf	BMP280_readPressure@var2+2
  3138  0759  0871               	movf	?___aldiv+1,w
  3139  075A  00D0               	movwf	BMP280_readPressure@var2+1
  3140  075B  0870               	movf	?___aldiv,w
  3141  075C  00CF               	movwf	BMP280_readPressure@var2
  3142                           
  3143                           ;BMP280.c: 297:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  3144  075D  3000               	movlw	0
  3145  075E  00F3               	movwf	___aldiv@divisor+3
  3146  075F  3000               	movlw	0
  3147  0760  00F2               	movwf	___aldiv@divisor+2
  3148  0761  3000               	movlw	0
  3149  0762  00F1               	movwf	___aldiv@divisor+1
  3150  0763  3010               	movlw	16
  3151  0764  00F0               	movwf	___aldiv@divisor
  3152  0765  084F               	movf	BMP280_readPressure@var2,w
  3153  0766  00AE               	movwf	??_BMP280_readPressure
  3154  0767  0850               	movf	BMP280_readPressure@var2+1,w
  3155  0768  00AF               	movwf	??_BMP280_readPressure+1
  3156  0769  0851               	movf	BMP280_readPressure@var2+2,w
  3157  076A  00B0               	movwf	??_BMP280_readPressure+2
  3158  076B  0852               	movf	BMP280_readPressure@var2+3,w
  3159  076C  00B1               	movwf	??_BMP280_readPressure+3
  3160  076D  0857               	movf	BMP280_readPressure@var1,w
  3161  076E  00B2               	movwf	??_BMP280_readPressure+4
  3162  076F  0858               	movf	BMP280_readPressure@var1+1,w
  3163  0770  00B3               	movwf	??_BMP280_readPressure+5
  3164  0771  0859               	movf	BMP280_readPressure@var1+2,w
  3165  0772  00B4               	movwf	??_BMP280_readPressure+6
  3166  0773  085A               	movf	BMP280_readPressure@var1+3,w
  3167  0774  00B5               	movwf	??_BMP280_readPressure+7
  3168  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3169  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3170  0777  0836               	movf	(_BMP280_calib^(0+128)+18),w
  3171  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3173  077A  00B6               	movwf	??_BMP280_readPressure+8
  3174  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3175  077C  1303               	bcf	3,6	;RP1=0, select bank1
  3176  077D  0837               	movf	((_BMP280_calib+1)^(0+128)+18),w
  3177  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3178  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0780  00B7               	movwf	??_BMP280_readPressure+9
  3180  0781  3000               	movlw	0
  3181  0782  1BB7               	btfsc	??_BMP280_readPressure+9,7
  3182  0783  30FF               	movlw	255
  3183  0784  00B8               	movwf	??_BMP280_readPressure+10
  3184  0785  00B9               	movwf	??_BMP280_readPressure+11
  3185  0786  0836               	movf	??_BMP280_readPressure+8,w
  3186  0787  07B2               	addwf	??_BMP280_readPressure+4,f
  3187  0788  0837               	movf	??_BMP280_readPressure+9,w
  3188  0789  1803               	skipnc
  3189  078A  0F37               	incfsz	??_BMP280_readPressure+9,w
  3190  078B  2F8D               	goto	u1160
  3191  078C  2F8E               	goto	u1161
  3192  078D                     u1160:
  3193  078D  07B3               	addwf	??_BMP280_readPressure+5,f
  3194  078E                     u1161:
  3195  078E  0838               	movf	??_BMP280_readPressure+10,w
  3196  078F  1803               	skipnc
  3197  0790  0F38               	incfsz	??_BMP280_readPressure+10,w
  3198  0791  2F93               	goto	u1162
  3199  0792  2F94               	goto	u1163
  3200  0793                     u1162:
  3201  0793  07B4               	addwf	??_BMP280_readPressure+6,f
  3202  0794                     u1163:
  3203  0794  0839               	movf	??_BMP280_readPressure+11,w
  3204  0795  1803               	skipnc
  3205  0796  0A39               	incf	??_BMP280_readPressure+11,w
  3206  0797  07B5               	addwf	??_BMP280_readPressure+7,f
  3207  0798  0832               	movf	??_BMP280_readPressure+4,w
  3208  0799  07AE               	addwf	??_BMP280_readPressure,f
  3209  079A  0833               	movf	??_BMP280_readPressure+5,w
  3210  079B  1803               	skipnc
  3211  079C  0F33               	incfsz	??_BMP280_readPressure+5,w
  3212  079D  2F9F               	goto	u1170
  3213  079E  2FA0               	goto	u1171
  3214  079F                     u1170:
  3215  079F  07AF               	addwf	??_BMP280_readPressure+1,f
  3216  07A0                     u1171:
  3217  07A0  0834               	movf	??_BMP280_readPressure+6,w
  3218  07A1  1803               	skipnc
  3219  07A2  0F34               	incfsz	??_BMP280_readPressure+6,w
  3220  07A3  2FA5               	goto	u1172
  3221  07A4  2FA6               	goto	u1173
  3222  07A5                     u1172:
  3223  07A5  07B0               	addwf	??_BMP280_readPressure+2,f
  3224  07A6                     u1173:
  3225  07A6  0835               	movf	??_BMP280_readPressure+7,w
  3226  07A7  1803               	skipnc
  3227  07A8  0A35               	incf	??_BMP280_readPressure+7,w
  3228  07A9  07B1               	addwf	??_BMP280_readPressure+3,f
  3229  07AA  0831               	movf	??_BMP280_readPressure+3,w
  3230  07AB  00F7               	movwf	___aldiv@dividend+3
  3231  07AC  0830               	movf	??_BMP280_readPressure+2,w
  3232  07AD  00F6               	movwf	___aldiv@dividend+2
  3233  07AE  082F               	movf	??_BMP280_readPressure+1,w
  3234  07AF  00F5               	movwf	___aldiv@dividend+1
  3235  07B0  082E               	movf	??_BMP280_readPressure,w
  3236  07B1  00F4               	movwf	___aldiv@dividend
  3237  07B2  120A  118A  2016  120A  118A  	fcall	___aldiv
  3238  07B7  0870               	movf	?___aldiv,w
  3239  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3240  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3241  07BA  0753               	addwf	BMP280_readPressure@p,w
  3242  07BB  00BA               	movwf	??_BMP280_readPressure+12
  3243  07BC  3000               	movlw	0
  3244  07BD  1803               	skipnc
  3245  07BE  3001               	movlw	1
  3246  07BF  0771               	addwf	?___aldiv+1,w
  3247  07C0  01BC               	clrf	??_BMP280_readPressure+14
  3248  07C1  1803               	skipnc
  3249  07C2  0ABC               	incf	??_BMP280_readPressure+14,f
  3250  07C3  0754               	addwf	BMP280_readPressure@p+1,w
  3251  07C4  00BB               	movwf	??_BMP280_readPressure+13
  3252  07C5  1803               	skipnc
  3253  07C6  0ABC               	incf	??_BMP280_readPressure+14,f
  3254  07C7  0872               	movf	?___aldiv+2,w
  3255  07C8  073C               	addwf	??_BMP280_readPressure+14,w
  3256  07C9  01BD               	clrf	??_BMP280_readPressure+15
  3257  07CA  1803               	skipnc
  3258  07CB  0ABD               	incf	??_BMP280_readPressure+15,f
  3259  07CC  0755               	addwf	BMP280_readPressure@p+2,w
  3260  07CD  00BC               	movwf	??_BMP280_readPressure+14
  3261  07CE  1803               	skipnc
  3262  07CF  0ABD               	incf	??_BMP280_readPressure+15,f
  3263  07D0  0873               	movf	?___aldiv+3,w
  3264  07D1  073D               	addwf	??_BMP280_readPressure+15,w
  3265  07D2  0756               	addwf	BMP280_readPressure@p+3,w
  3266  07D3  00BD               	movwf	??_BMP280_readPressure+15
  3267  07D4  083D               	movf	??_BMP280_readPressure+15,w
  3268  07D5  00D6               	movwf	BMP280_readPressure@p+3
  3269  07D6  083C               	movf	??_BMP280_readPressure+14,w
  3270  07D7  00D5               	movwf	BMP280_readPressure@p+2
  3271  07D8  083B               	movf	??_BMP280_readPressure+13,w
  3272  07D9  00D4               	movwf	BMP280_readPressure@p+1
  3273  07DA  083A               	movf	??_BMP280_readPressure+12,w
  3274  07DB  00D3               	movwf	BMP280_readPressure@p
  3275  07DC                     l1287:
  3276                           
  3277                           ;BMP280.c: 299:   *pres = p;
  3278  07DC  084A               	movf	BMP280_readPressure@pres,w
  3279  07DD  0084               	movwf	4
  3280  07DE  0853               	movf	BMP280_readPressure@p,w
  3281  07DF  1383               	bcf	3,7	;select IRP bank0
  3282  07E0  0080               	movwf	0
  3283  07E1  0A84               	incf	4,f
  3284  07E2  0854               	movf	BMP280_readPressure@p+1,w
  3285  07E3  0080               	movwf	0
  3286  07E4  0A84               	incf	4,f
  3287  07E5  0855               	movf	BMP280_readPressure@p+2,w
  3288  07E6  0080               	movwf	0
  3289  07E7  0A84               	incf	4,f
  3290  07E8  0856               	movf	BMP280_readPressure@p+3,w
  3291  07E9  0080               	movwf	0
  3292  07EA                     l154:
  3293  07EA  0008               	return
  3294  07EB                     __end_of_BMP280_readPressure:
  3295                           
  3296                           	psect	text6
  3297  0D73                     __ptext6:	
  3298 ;; *************** function ___lmul *****************
  3299 ;; Defined at:
  3300 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  multiplier      4    6[BANK0 ] unsigned long 
  3303 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  product         4   10[COMMON] unsigned long 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  4    6[BANK0 ] unsigned long 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       8       0       0       0
  3316 ;;      Locals:         4       0       0       0       0
  3317 ;;      Temps:          1       0       0       0       0
  3318 ;;      Totals:         5       8       0       0       0
  3319 ;;Total ram usage:       13 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_BMP280_readTemperature
  3325 ;;		_BMP280_readPressure
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           
  3330                           ;psect for function ___lmul
  3331  0D73                     ___lmul:
  3332  0D73                     l1191:	
  3333                           ;incstack = 0
  3334                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3335                           
  3336  0D73  3000               	movlw	0
  3337  0D74  00FD               	movwf	___lmul@product+3
  3338  0D75  3000               	movlw	0
  3339  0D76  00FC               	movwf	___lmul@product+2
  3340  0D77  3000               	movlw	0
  3341  0D78  00FB               	movwf	___lmul@product+1
  3342  0D79  3000               	movlw	0
  3343  0D7A  00FA               	movwf	___lmul@product
  3344  0D7B                     l1193:
  3345  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  3347  0D7D  1C26               	btfss	___lmul@multiplier,0
  3348  0D7E  2D80               	goto	u791
  3349  0D7F  2D81               	goto	u790
  3350  0D80                     u791:
  3351  0D80  2D98               	goto	l1197
  3352  0D81                     u790:
  3353  0D81                     l1195:
  3354  0D81  082A               	movf	___lmul@multiplicand,w
  3355  0D82  07FA               	addwf	___lmul@product,f
  3356  0D83  082B               	movf	___lmul@multiplicand+1,w
  3357  0D84  1103               	clrz
  3358  0D85  1803               	skipnc
  3359  0D86  3E01               	addlw	1
  3360  0D87  1903               	skipnz
  3361  0D88  2D8A               	goto	u801
  3362  0D89  07FB               	addwf	___lmul@product+1,f
  3363  0D8A                     u801:
  3364  0D8A  082C               	movf	___lmul@multiplicand+2,w
  3365  0D8B  1103               	clrz
  3366  0D8C  1803               	skipnc
  3367  0D8D  3E01               	addlw	1
  3368  0D8E  1903               	skipnz
  3369  0D8F  2D91               	goto	u802
  3370  0D90  07FC               	addwf	___lmul@product+2,f
  3371  0D91                     u802:
  3372  0D91  082D               	movf	___lmul@multiplicand+3,w
  3373  0D92  1103               	clrz
  3374  0D93  1803               	skipnc
  3375  0D94  3E01               	addlw	1
  3376  0D95  1903               	skipnz
  3377  0D96  2D98               	goto	u803
  3378  0D97  07FD               	addwf	___lmul@product+3,f
  3379  0D98                     u803:
  3380  0D98                     l1197:
  3381  0D98  3001               	movlw	1
  3382  0D99  00F9               	movwf	??___lmul
  3383  0D9A                     u815:
  3384  0D9A  1003               	clrc
  3385  0D9B  0DAA               	rlf	___lmul@multiplicand,f
  3386  0D9C  0DAB               	rlf	___lmul@multiplicand+1,f
  3387  0D9D  0DAC               	rlf	___lmul@multiplicand+2,f
  3388  0D9E  0DAD               	rlf	___lmul@multiplicand+3,f
  3389  0D9F  0BF9               	decfsz	??___lmul,f
  3390  0DA0  2D9A               	goto	u815
  3391  0DA1                     l1199:
  3392  0DA1  3001               	movlw	1
  3393  0DA2                     u825:
  3394  0DA2  1003               	clrc
  3395  0DA3  0CA9               	rrf	___lmul@multiplier+3,f
  3396  0DA4  0CA8               	rrf	___lmul@multiplier+2,f
  3397  0DA5  0CA7               	rrf	___lmul@multiplier+1,f
  3398  0DA6  0CA6               	rrf	___lmul@multiplier,f
  3399  0DA7  3EFF               	addlw	-1
  3400  0DA8  1D03               	skipz
  3401  0DA9  2DA2               	goto	u825
  3402  0DAA  0829               	movf	___lmul@multiplier+3,w
  3403  0DAB  0428               	iorwf	___lmul@multiplier+2,w
  3404  0DAC  0427               	iorwf	___lmul@multiplier+1,w
  3405  0DAD  0426               	iorwf	___lmul@multiplier,w
  3406  0DAE  1D03               	skipz
  3407  0DAF  2DB1               	goto	u831
  3408  0DB0  2DB2               	goto	u830
  3409  0DB1                     u831:
  3410  0DB1  2D7B               	goto	l1193
  3411  0DB2                     u830:
  3412  0DB2                     l1201:
  3413  0DB2  087D               	movf	___lmul@product+3,w
  3414  0DB3  00A9               	movwf	?___lmul+3
  3415  0DB4  087C               	movf	___lmul@product+2,w
  3416  0DB5  00A8               	movwf	?___lmul+2
  3417  0DB6  087B               	movf	___lmul@product+1,w
  3418  0DB7  00A7               	movwf	?___lmul+1
  3419  0DB8  087A               	movf	___lmul@product,w
  3420  0DB9  00A6               	movwf	?___lmul
  3421  0DBA                     l293:
  3422  0DBA  0008               	return
  3423  0DBB                     __end_of___lmul:
  3424                           
  3425                           	psect	text7
  3426  0E07                     __ptext7:	
  3427 ;; *************** function ___lldiv *****************
  3428 ;; Defined at:
  3429 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  divisor         4    0[COMMON] unsigned long 
  3432 ;;  dividend        4    4[COMMON] unsigned long 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  quotient        4    9[COMMON] unsigned long 
  3435 ;;  counter         1   13[COMMON] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  4    0[COMMON] unsigned long 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         8       0       0       0       0
  3446 ;;      Locals:         5       0       0       0       0
  3447 ;;      Temps:          1       0       0       0       0
  3448 ;;      Totals:        14       0       0       0       0
  3449 ;;Total ram usage:       14 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_I2C_Master_Init
  3455 ;;		_BMP280_readPressure
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function ___lldiv
  3461  0E07                     ___lldiv:
  3462  0E07                     l1107:	
  3463                           ;incstack = 0
  3464                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3465                           
  3466  0E07  3000               	movlw	0
  3467  0E08  00FC               	movwf	___lldiv@quotient+3
  3468  0E09  3000               	movlw	0
  3469  0E0A  00FB               	movwf	___lldiv@quotient+2
  3470  0E0B  3000               	movlw	0
  3471  0E0C  00FA               	movwf	___lldiv@quotient+1
  3472  0E0D  3000               	movlw	0
  3473  0E0E  00F9               	movwf	___lldiv@quotient
  3474  0E0F  0873               	movf	___lldiv@divisor+3,w
  3475  0E10  0472               	iorwf	___lldiv@divisor+2,w
  3476  0E11  0471               	iorwf	___lldiv@divisor+1,w
  3477  0E12  0470               	iorwf	___lldiv@divisor,w
  3478  0E13  1903               	skipnz
  3479  0E14  2E16               	goto	u651
  3480  0E15  2E17               	goto	u650
  3481  0E16                     u651:
  3482  0E16  2E64               	goto	l1127
  3483  0E17                     u650:
  3484  0E17                     l1109:
  3485  0E17  01FD               	clrf	___lldiv@counter
  3486  0E18  0AFD               	incf	___lldiv@counter,f
  3487  0E19  2E27               	goto	l1113
  3488  0E1A                     l1111:
  3489  0E1A  3001               	movlw	1
  3490  0E1B  00F8               	movwf	??___lldiv
  3491  0E1C                     u665:
  3492  0E1C  1003               	clrc
  3493  0E1D  0DF0               	rlf	___lldiv@divisor,f
  3494  0E1E  0DF1               	rlf	___lldiv@divisor+1,f
  3495  0E1F  0DF2               	rlf	___lldiv@divisor+2,f
  3496  0E20  0DF3               	rlf	___lldiv@divisor+3,f
  3497  0E21  0BF8               	decfsz	??___lldiv,f
  3498  0E22  2E1C               	goto	u665
  3499  0E23  3001               	movlw	1
  3500  0E24  00F8               	movwf	??___lldiv
  3501  0E25  0878               	movf	??___lldiv,w
  3502  0E26  07FD               	addwf	___lldiv@counter,f
  3503  0E27                     l1113:
  3504  0E27  1FF3               	btfss	___lldiv@divisor+3,7
  3505  0E28  2E2A               	goto	u671
  3506  0E29  2E2B               	goto	u670
  3507  0E2A                     u671:
  3508  0E2A  2E1A               	goto	l1111
  3509  0E2B                     u670:
  3510  0E2B                     l1115:
  3511  0E2B  3001               	movlw	1
  3512  0E2C  00F8               	movwf	??___lldiv
  3513  0E2D                     u685:
  3514  0E2D  1003               	clrc
  3515  0E2E  0DF9               	rlf	___lldiv@quotient,f
  3516  0E2F  0DFA               	rlf	___lldiv@quotient+1,f
  3517  0E30  0DFB               	rlf	___lldiv@quotient+2,f
  3518  0E31  0DFC               	rlf	___lldiv@quotient+3,f
  3519  0E32  0BF8               	decfsz	??___lldiv,f
  3520  0E33  2E2D               	goto	u685
  3521  0E34                     l1117:
  3522  0E34  0873               	movf	___lldiv@divisor+3,w
  3523  0E35  0277               	subwf	___lldiv@dividend+3,w
  3524  0E36  1D03               	skipz
  3525  0E37  2E42               	goto	u695
  3526  0E38  0872               	movf	___lldiv@divisor+2,w
  3527  0E39  0276               	subwf	___lldiv@dividend+2,w
  3528  0E3A  1D03               	skipz
  3529  0E3B  2E42               	goto	u695
  3530  0E3C  0871               	movf	___lldiv@divisor+1,w
  3531  0E3D  0275               	subwf	___lldiv@dividend+1,w
  3532  0E3E  1D03               	skipz
  3533  0E3F  2E42               	goto	u695
  3534  0E40  0870               	movf	___lldiv@divisor,w
  3535  0E41  0274               	subwf	___lldiv@dividend,w
  3536  0E42                     u695:
  3537  0E42  1C03               	skipc
  3538  0E43  2E45               	goto	u691
  3539  0E44  2E46               	goto	u690
  3540  0E45                     u691:
  3541  0E45  2E55               	goto	l1123
  3542  0E46                     u690:
  3543  0E46                     l1119:
  3544  0E46  0870               	movf	___lldiv@divisor,w
  3545  0E47  02F4               	subwf	___lldiv@dividend,f
  3546  0E48  0871               	movf	___lldiv@divisor+1,w
  3547  0E49  1C03               	skipc
  3548  0E4A  0F71               	incfsz	___lldiv@divisor+1,w
  3549  0E4B  02F5               	subwf	___lldiv@dividend+1,f
  3550  0E4C  0872               	movf	___lldiv@divisor+2,w
  3551  0E4D  1C03               	skipc
  3552  0E4E  0F72               	incfsz	___lldiv@divisor+2,w
  3553  0E4F  02F6               	subwf	___lldiv@dividend+2,f
  3554  0E50  0873               	movf	___lldiv@divisor+3,w
  3555  0E51  1C03               	skipc
  3556  0E52  0F73               	incfsz	___lldiv@divisor+3,w
  3557  0E53  02F7               	subwf	___lldiv@dividend+3,f
  3558  0E54                     l1121:
  3559  0E54  1479               	bsf	___lldiv@quotient,0
  3560  0E55                     l1123:
  3561  0E55  3001               	movlw	1
  3562  0E56                     u705:
  3563  0E56  1003               	clrc
  3564  0E57  0CF3               	rrf	___lldiv@divisor+3,f
  3565  0E58  0CF2               	rrf	___lldiv@divisor+2,f
  3566  0E59  0CF1               	rrf	___lldiv@divisor+1,f
  3567  0E5A  0CF0               	rrf	___lldiv@divisor,f
  3568  0E5B  3EFF               	addlw	-1
  3569  0E5C  1D03               	skipz
  3570  0E5D  2E56               	goto	u705
  3571  0E5E                     l1125:
  3572  0E5E  3001               	movlw	1
  3573  0E5F  02FD               	subwf	___lldiv@counter,f
  3574  0E60  1D03               	btfss	3,2
  3575  0E61  2E63               	goto	u711
  3576  0E62  2E64               	goto	u710
  3577  0E63                     u711:
  3578  0E63  2E2B               	goto	l1115
  3579  0E64                     u710:
  3580  0E64                     l1127:
  3581  0E64  087C               	movf	___lldiv@quotient+3,w
  3582  0E65  00F3               	movwf	?___lldiv+3
  3583  0E66  087B               	movf	___lldiv@quotient+2,w
  3584  0E67  00F2               	movwf	?___lldiv+2
  3585  0E68  087A               	movf	___lldiv@quotient+1,w
  3586  0E69  00F1               	movwf	?___lldiv+1
  3587  0E6A  0879               	movf	___lldiv@quotient,w
  3588  0E6B  00F0               	movwf	?___lldiv
  3589  0E6C                     l315:
  3590  0E6C  0008               	return
  3591  0E6D                     __end_of___lldiv:
  3592                           
  3593                           	psect	text8
  3594  0016                     __ptext8:	
  3595 ;; *************** function ___aldiv *****************
  3596 ;; Defined at:
  3597 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  divisor         4    0[COMMON] long 
  3600 ;;  dividend        4    4[COMMON] long 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  quotient        4    2[BANK0 ] long 
  3603 ;;  sign            1    1[BANK0 ] unsigned char 
  3604 ;;  counter         1    0[BANK0 ] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  4    0[COMMON] long 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         8       0       0       0       0
  3615 ;;      Locals:         0       6       0       0       0
  3616 ;;      Temps:          1       0       0       0       0
  3617 ;;      Totals:         9       6       0       0       0
  3618 ;;Total ram usage:       15 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_BMP280_readTemperature
  3624 ;;		_BMP280_readPressure
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           
  3629                           ;psect for function ___aldiv
  3630  0016                     ___aldiv:
  3631  0016                     l1205:	
  3632                           ;incstack = 0
  3633                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3634                           
  3635  0016  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0017  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0018  01A1               	clrf	___aldiv@sign
  3638  0019                     l1207:
  3639  0019  1FF3               	btfss	___aldiv@divisor+3,7
  3640  001A  281C               	goto	u841
  3641  001B  281D               	goto	u840
  3642  001C                     u841:
  3643  001C  282A               	goto	l344
  3644  001D                     u840:
  3645  001D                     l1209:
  3646  001D  09F0               	comf	___aldiv@divisor,f
  3647  001E  09F1               	comf	___aldiv@divisor+1,f
  3648  001F  09F2               	comf	___aldiv@divisor+2,f
  3649  0020  09F3               	comf	___aldiv@divisor+3,f
  3650  0021  0AF0               	incf	___aldiv@divisor,f
  3651  0022  1903               	skipnz
  3652  0023  0AF1               	incf	___aldiv@divisor+1,f
  3653  0024  1903               	skipnz
  3654  0025  0AF2               	incf	___aldiv@divisor+2,f
  3655  0026  1903               	skipnz
  3656  0027  0AF3               	incf	___aldiv@divisor+3,f
  3657  0028  01A1               	clrf	___aldiv@sign
  3658  0029  0AA1               	incf	___aldiv@sign,f
  3659  002A                     l344:
  3660  002A  1FF7               	btfss	___aldiv@dividend+3,7
  3661  002B  282D               	goto	u851
  3662  002C  282E               	goto	u850
  3663  002D                     u851:
  3664  002D  283D               	goto	l1215
  3665  002E                     u850:
  3666  002E                     l1211:
  3667  002E  09F4               	comf	___aldiv@dividend,f
  3668  002F  09F5               	comf	___aldiv@dividend+1,f
  3669  0030  09F6               	comf	___aldiv@dividend+2,f
  3670  0031  09F7               	comf	___aldiv@dividend+3,f
  3671  0032  0AF4               	incf	___aldiv@dividend,f
  3672  0033  1903               	skipnz
  3673  0034  0AF5               	incf	___aldiv@dividend+1,f
  3674  0035  1903               	skipnz
  3675  0036  0AF6               	incf	___aldiv@dividend+2,f
  3676  0037  1903               	skipnz
  3677  0038  0AF7               	incf	___aldiv@dividend+3,f
  3678  0039                     l1213:
  3679  0039  3001               	movlw	1
  3680  003A  00F8               	movwf	??___aldiv
  3681  003B  0878               	movf	??___aldiv,w
  3682  003C  06A1               	xorwf	___aldiv@sign,f
  3683  003D                     l1215:
  3684  003D  3000               	movlw	0
  3685  003E  00A5               	movwf	___aldiv@quotient+3
  3686  003F  3000               	movlw	0
  3687  0040  00A4               	movwf	___aldiv@quotient+2
  3688  0041  3000               	movlw	0
  3689  0042  00A3               	movwf	___aldiv@quotient+1
  3690  0043  3000               	movlw	0
  3691  0044  00A2               	movwf	___aldiv@quotient
  3692  0045                     l1217:
  3693  0045  0873               	movf	___aldiv@divisor+3,w
  3694  0046  0472               	iorwf	___aldiv@divisor+2,w
  3695  0047  0471               	iorwf	___aldiv@divisor+1,w
  3696  0048  0470               	iorwf	___aldiv@divisor,w
  3697  0049  1903               	skipnz
  3698  004A  284C               	goto	u861
  3699  004B  284D               	goto	u860
  3700  004C                     u861:
  3701  004C  289A               	goto	l1237
  3702  004D                     u860:
  3703  004D                     l1219:
  3704  004D  01A0               	clrf	___aldiv@counter
  3705  004E  0AA0               	incf	___aldiv@counter,f
  3706  004F  285D               	goto	l1223
  3707  0050                     l1221:
  3708  0050  3001               	movlw	1
  3709  0051  00F8               	movwf	??___aldiv
  3710  0052                     u875:
  3711  0052  1003               	clrc
  3712  0053  0DF0               	rlf	___aldiv@divisor,f
  3713  0054  0DF1               	rlf	___aldiv@divisor+1,f
  3714  0055  0DF2               	rlf	___aldiv@divisor+2,f
  3715  0056  0DF3               	rlf	___aldiv@divisor+3,f
  3716  0057  0BF8               	decfsz	??___aldiv,f
  3717  0058  2852               	goto	u875
  3718  0059  3001               	movlw	1
  3719  005A  00F8               	movwf	??___aldiv
  3720  005B  0878               	movf	??___aldiv,w
  3721  005C  07A0               	addwf	___aldiv@counter,f
  3722  005D                     l1223:
  3723  005D  1FF3               	btfss	___aldiv@divisor+3,7
  3724  005E  2860               	goto	u881
  3725  005F  2861               	goto	u880
  3726  0060                     u881:
  3727  0060  2850               	goto	l1221
  3728  0061                     u880:
  3729  0061                     l1225:
  3730  0061  3001               	movlw	1
  3731  0062  00F8               	movwf	??___aldiv
  3732  0063                     u895:
  3733  0063  1003               	clrc
  3734  0064  0DA2               	rlf	___aldiv@quotient,f
  3735  0065  0DA3               	rlf	___aldiv@quotient+1,f
  3736  0066  0DA4               	rlf	___aldiv@quotient+2,f
  3737  0067  0DA5               	rlf	___aldiv@quotient+3,f
  3738  0068  0BF8               	decfsz	??___aldiv,f
  3739  0069  2863               	goto	u895
  3740  006A                     l1227:
  3741  006A  0873               	movf	___aldiv@divisor+3,w
  3742  006B  0277               	subwf	___aldiv@dividend+3,w
  3743  006C  1D03               	skipz
  3744  006D  2878               	goto	u905
  3745  006E  0872               	movf	___aldiv@divisor+2,w
  3746  006F  0276               	subwf	___aldiv@dividend+2,w
  3747  0070  1D03               	skipz
  3748  0071  2878               	goto	u905
  3749  0072  0871               	movf	___aldiv@divisor+1,w
  3750  0073  0275               	subwf	___aldiv@dividend+1,w
  3751  0074  1D03               	skipz
  3752  0075  2878               	goto	u905
  3753  0076  0870               	movf	___aldiv@divisor,w
  3754  0077  0274               	subwf	___aldiv@dividend,w
  3755  0078                     u905:
  3756  0078  1C03               	skipc
  3757  0079  287B               	goto	u901
  3758  007A  287C               	goto	u900
  3759  007B                     u901:
  3760  007B  288B               	goto	l1233
  3761  007C                     u900:
  3762  007C                     l1229:
  3763  007C  0870               	movf	___aldiv@divisor,w
  3764  007D  02F4               	subwf	___aldiv@dividend,f
  3765  007E  0871               	movf	___aldiv@divisor+1,w
  3766  007F  1C03               	skipc
  3767  0080  0F71               	incfsz	___aldiv@divisor+1,w
  3768  0081  02F5               	subwf	___aldiv@dividend+1,f
  3769  0082  0872               	movf	___aldiv@divisor+2,w
  3770  0083  1C03               	skipc
  3771  0084  0F72               	incfsz	___aldiv@divisor+2,w
  3772  0085  02F6               	subwf	___aldiv@dividend+2,f
  3773  0086  0873               	movf	___aldiv@divisor+3,w
  3774  0087  1C03               	skipc
  3775  0088  0F73               	incfsz	___aldiv@divisor+3,w
  3776  0089  02F7               	subwf	___aldiv@dividend+3,f
  3777  008A                     l1231:
  3778  008A  1422               	bsf	___aldiv@quotient,0
  3779  008B                     l1233:
  3780  008B  3001               	movlw	1
  3781  008C                     u915:
  3782  008C  1003               	clrc
  3783  008D  0CF3               	rrf	___aldiv@divisor+3,f
  3784  008E  0CF2               	rrf	___aldiv@divisor+2,f
  3785  008F  0CF1               	rrf	___aldiv@divisor+1,f
  3786  0090  0CF0               	rrf	___aldiv@divisor,f
  3787  0091  3EFF               	addlw	-1
  3788  0092  1D03               	skipz
  3789  0093  288C               	goto	u915
  3790  0094                     l1235:
  3791  0094  3001               	movlw	1
  3792  0095  02A0               	subwf	___aldiv@counter,f
  3793  0096  1D03               	btfss	3,2
  3794  0097  2899               	goto	u921
  3795  0098  289A               	goto	u920
  3796  0099                     u921:
  3797  0099  2861               	goto	l1225
  3798  009A                     u920:
  3799  009A                     l1237:
  3800  009A  0821               	movf	___aldiv@sign,w
  3801  009B  1903               	btfsc	3,2
  3802  009C  289E               	goto	u931
  3803  009D  289F               	goto	u930
  3804  009E                     u931:
  3805  009E  28AA               	goto	l1241
  3806  009F                     u930:
  3807  009F                     l1239:
  3808  009F  09A2               	comf	___aldiv@quotient,f
  3809  00A0  09A3               	comf	___aldiv@quotient+1,f
  3810  00A1  09A4               	comf	___aldiv@quotient+2,f
  3811  00A2  09A5               	comf	___aldiv@quotient+3,f
  3812  00A3  0AA2               	incf	___aldiv@quotient,f
  3813  00A4  1903               	skipnz
  3814  00A5  0AA3               	incf	___aldiv@quotient+1,f
  3815  00A6  1903               	skipnz
  3816  00A7  0AA4               	incf	___aldiv@quotient+2,f
  3817  00A8  1903               	skipnz
  3818  00A9  0AA5               	incf	___aldiv@quotient+3,f
  3819  00AA                     l1241:
  3820  00AA  0825               	movf	___aldiv@quotient+3,w
  3821  00AB  00F3               	movwf	?___aldiv+3
  3822  00AC  0824               	movf	___aldiv@quotient+2,w
  3823  00AD  00F2               	movwf	?___aldiv+2
  3824  00AE  0823               	movf	___aldiv@quotient+1,w
  3825  00AF  00F1               	movwf	?___aldiv+1
  3826  00B0  0822               	movf	___aldiv@quotient,w
  3827  00B1  00F0               	movwf	?___aldiv
  3828  00B2                     l354:
  3829  00B2  0008               	return
  3830  00B3                     __end_of___aldiv:
  3831                           
  3832                           	psect	text9
  3833  0F24                     __ptext9:	
  3834 ;; *************** function _BMP280_begin *****************
  3835 ;; Defined at:
  3836 ;;		line 156 in file "BMP280.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  mode            1    wreg     enum E1304
  3839 ;;  T_sampling      1    3[BANK0 ] enum E1309
  3840 ;;  P_sampling      1    4[BANK0 ] enum E1309
  3841 ;;  filter          1    5[BANK0 ] enum E1317
  3842 ;;  standby         1    6[BANK0 ] enum E1324
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  mode            1   13[COMMON] enum E1304
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  2    3[BANK0 ] int 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0, pclath, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3854 ;;      Params:         0       4       0       0       0
  3855 ;;      Locals:         1       0       0       0       0
  3856 ;;      Temps:          0       4       0       0       0
  3857 ;;      Totals:         1       8       0       0       0
  3858 ;;Total ram usage:        9 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    4
  3861 ;; This function calls:
  3862 ;;		_BMP280_Configure
  3863 ;;		_BMP280_Read16
  3864 ;;		_BMP280_Read8
  3865 ;;		_BMP280_Write
  3866 ;; This function is called by:
  3867 ;;		_main
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           
  3872                           ;psect for function _BMP280_begin
  3873  0F24                     _BMP280_begin:
  3874                           
  3875                           ;incstack = 0
  3876                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  3877                           ;BMP280_begin@mode stored from wreg
  3878  0F24  00FD               	movwf	BMP280_begin@mode
  3879  0F25                     l1249:
  3880                           
  3881                           ;BMP280.c: 156: int BMP280_begin(BMP280_mode mode,;BMP280.c: 157:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 158:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 159:                   BMP280_filter filter ,;BMP280.c: 160:                   
      +                          standby_time standby );BMP280.c: 161: {;BMP280.c: 162:   if(BMP280_Read8(0xD0) != 0x58)
  3882  0F25  30D0               	movlw	208
  3883  0F26  120A  158A  24EF  120A  158A  	fcall	_BMP280_Read8
  3884  0F2B  3A58               	xorlw	88
  3885  0F2C  1903               	skipnz
  3886  0F2D  2F2F               	goto	u941
  3887  0F2E  2F30               	goto	u940
  3888  0F2F                     u941:
  3889  0F2F  2F31               	goto	l1253
  3890  0F30                     u940:
  3891  0F30  2FFF               	goto	l134
  3892  0F31                     l1253:
  3893                           
  3894                           ;BMP280.c: 166:   BMP280_Write(0xE0, 0xB6);
  3895  0F31  30B6               	movlw	182
  3896  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  3897  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  3898  0F34  00A7               	movwf	??_BMP280_begin
  3899  0F35  0827               	movf	??_BMP280_begin,w
  3900  0F36  00F2               	movwf	BMP280_Write@_data
  3901  0F37  30E0               	movlw	224
  3902  0F38  120A  158A  2426  120A  158A  	fcall	_BMP280_Write
  3903  0F3D                     l1255:
  3904                           
  3905                           ;BMP280.c: 167:   _delay((unsigned long)((100)*(8000000/4000.0)));
  3906  0F3D  3002               	movlw	2
  3907  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  3908  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  3909  0F40  00A9               	movwf	??_BMP280_begin+2
  3910  0F41  3004               	movlw	4
  3911  0F42  00A8               	movwf	??_BMP280_begin+1
  3912  0F43  30B9               	movlw	185
  3913  0F44  00A7               	movwf	??_BMP280_begin
  3914  0F45                     u1217:
  3915  0F45  0BA7               	decfsz	??_BMP280_begin,f
  3916  0F46  2F45               	goto	u1217
  3917  0F47  0BA8               	decfsz	??_BMP280_begin+1,f
  3918  0F48  2F45               	goto	u1217
  3919  0F49  0BA9               	decfsz	??_BMP280_begin+2,f
  3920  0F4A  2F45               	goto	u1217
  3921  0F4B  2F4C               	nop2
  3922  0F4C                     l1259:	
  3923                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3924                           
  3925                           
  3926                           ;BMP280.c: 170:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3927  0F4C  30F3               	movlw	243
  3928  0F4D  120A  158A  24EF  120A  158A  	fcall	_BMP280_Read8
  3929  0F52  3901               	andlw	1
  3930  0F53  1D03               	btfss	3,2
  3931  0F54  2F56               	goto	u951
  3932  0F55  2F57               	goto	u950
  3933  0F56                     u951:
  3934  0F56  2F3D               	goto	l1255
  3935  0F57                     u950:
  3936  0F57                     l1261:
  3937                           
  3938                           ;BMP280.c: 173:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  3939  0F57  3088               	movlw	136
  3940  0F58  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3941  0F5D  0877               	movf	?_BMP280_Read16+1,w
  3942  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  3943  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  3944  0F60  00A5               	movwf	(_BMP280_calib+1)^(0+128)
  3945  0F61  0876               	movf	?_BMP280_Read16,w
  3946  0F62  00A4               	movwf	_BMP280_calib^(0+128)
  3947                           
  3948                           ;BMP280.c: 174:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  3949  0F63  308A               	movlw	138
  3950  0F64  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3951  0F69  0877               	movf	?_BMP280_Read16+1,w
  3952  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3953  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  3954  0F6C  00A7               	movwf	((_BMP280_calib+1)^(0+128)+2)
  3955  0F6D  0876               	movf	?_BMP280_Read16,w
  3956  0F6E  00A6               	movwf	(_BMP280_calib^(0+128)+2)
  3957                           
  3958                           ;BMP280.c: 175:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  3959  0F6F  308C               	movlw	140
  3960  0F70  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3961  0F75  0877               	movf	?_BMP280_Read16+1,w
  3962  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  3963  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  3964  0F78  00A9               	movwf	((_BMP280_calib+1)^(0+128)+4)
  3965  0F79  0876               	movf	?_BMP280_Read16,w
  3966  0F7A  00A8               	movwf	(_BMP280_calib^(0+128)+4)
  3967                           
  3968                           ;BMP280.c: 177:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  3969  0F7B  308E               	movlw	142
  3970  0F7C  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3971  0F81  0877               	movf	?_BMP280_Read16+1,w
  3972  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  3973  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  3974  0F84  00AB               	movwf	((_BMP280_calib+1)^(0+128)+6)
  3975  0F85  0876               	movf	?_BMP280_Read16,w
  3976  0F86  00AA               	movwf	(_BMP280_calib^(0+128)+6)
  3977                           
  3978                           ;BMP280.c: 178:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  3979  0F87  3090               	movlw	144
  3980  0F88  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3981  0F8D  0877               	movf	?_BMP280_Read16+1,w
  3982  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  3983  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  3984  0F90  00AD               	movwf	((_BMP280_calib+1)^(0+128)+8)
  3985  0F91  0876               	movf	?_BMP280_Read16,w
  3986  0F92  00AC               	movwf	(_BMP280_calib^(0+128)+8)
  3987                           
  3988                           ;BMP280.c: 179:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  3989  0F93  3092               	movlw	146
  3990  0F94  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  3991  0F99  0877               	movf	?_BMP280_Read16+1,w
  3992  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  3993  0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  3994  0F9C  00AF               	movwf	((_BMP280_calib+1)^(0+128)+10)
  3995  0F9D  0876               	movf	?_BMP280_Read16,w
  3996  0F9E  00AE               	movwf	(_BMP280_calib^(0+128)+10)
  3997                           
  3998                           ;BMP280.c: 180:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  3999  0F9F  3094               	movlw	148
  4000  0FA0  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  4001  0FA5  0877               	movf	?_BMP280_Read16+1,w
  4002  0FA6  1683               	bsf	3,5	;RP0=1, select bank1
  4003  0FA7  1303               	bcf	3,6	;RP1=0, select bank1
  4004  0FA8  00B1               	movwf	((_BMP280_calib+1)^(0+128)+12)
  4005  0FA9  0876               	movf	?_BMP280_Read16,w
  4006  0FAA  00B0               	movwf	(_BMP280_calib^(0+128)+12)
  4007                           
  4008                           ;BMP280.c: 181:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  4009  0FAB  3096               	movlw	150
  4010  0FAC  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  4011  0FB1  0877               	movf	?_BMP280_Read16+1,w
  4012  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  4013  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  4014  0FB4  00B3               	movwf	((_BMP280_calib+1)^(0+128)+14)
  4015  0FB5  0876               	movf	?_BMP280_Read16,w
  4016  0FB6  00B2               	movwf	(_BMP280_calib^(0+128)+14)
  4017                           
  4018                           ;BMP280.c: 182:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  4019  0FB7  3098               	movlw	152
  4020  0FB8  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  4021  0FBD  0877               	movf	?_BMP280_Read16+1,w
  4022  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  4023  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  4024  0FC0  00B5               	movwf	((_BMP280_calib+1)^(0+128)+16)
  4025  0FC1  0876               	movf	?_BMP280_Read16,w
  4026  0FC2  00B4               	movwf	(_BMP280_calib^(0+128)+16)
  4027                           
  4028                           ;BMP280.c: 183:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  4029  0FC3  309A               	movlw	154
  4030  0FC4  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  4031  0FC9  0877               	movf	?_BMP280_Read16+1,w
  4032  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  4033  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  4034  0FCC  00B7               	movwf	((_BMP280_calib+1)^(0+128)+18)
  4035  0FCD  0876               	movf	?_BMP280_Read16,w
  4036  0FCE  00B6               	movwf	(_BMP280_calib^(0+128)+18)
  4037                           
  4038                           ;BMP280.c: 184:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  4039  0FCF  309C               	movlw	156
  4040  0FD0  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  4041  0FD5  0877               	movf	?_BMP280_Read16+1,w
  4042  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  4043  0FD7  1303               	bcf	3,6	;RP1=0, select bank1
  4044  0FD8  00B9               	movwf	((_BMP280_calib+1)^(0+128)+20)
  4045  0FD9  0876               	movf	?_BMP280_Read16,w
  4046  0FDA  00B8               	movwf	(_BMP280_calib^(0+128)+20)
  4047                           
  4048                           ;BMP280.c: 185:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  4049  0FDB  309E               	movlw	158
  4050  0FDC  120A  158A  25BB  120A  158A  	fcall	_BMP280_Read16
  4051  0FE1  0877               	movf	?_BMP280_Read16+1,w
  4052  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  4053  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  4054  0FE4  00BB               	movwf	((_BMP280_calib+1)^(0+128)+22)
  4055  0FE5  0876               	movf	?_BMP280_Read16,w
  4056  0FE6  00BA               	movwf	(_BMP280_calib^(0+128)+22)
  4057                           
  4058                           ;BMP280.c: 187:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  4059  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  4060  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  4061  0FE9  0823               	movf	BMP280_begin@T_sampling,w
  4062  0FEA  00A7               	movwf	??_BMP280_begin
  4063  0FEB  0827               	movf	??_BMP280_begin,w
  4064  0FEC  00F6               	movwf	BMP280_Configure@T_sampling
  4065  0FED  0824               	movf	BMP280_begin@P_sampling,w
  4066  0FEE  00A8               	movwf	??_BMP280_begin+1
  4067  0FEF  0828               	movf	??_BMP280_begin+1,w
  4068  0FF0  00F7               	movwf	BMP280_Configure@P_sampling
  4069  0FF1  0825               	movf	BMP280_begin@filter,w
  4070  0FF2  00A9               	movwf	??_BMP280_begin+2
  4071  0FF3  0829               	movf	??_BMP280_begin+2,w
  4072  0FF4  00F8               	movwf	BMP280_Configure@filter
  4073  0FF5  0826               	movf	BMP280_begin@standby,w
  4074  0FF6  00AA               	movwf	??_BMP280_begin+3
  4075  0FF7  082A               	movf	??_BMP280_begin+3,w
  4076  0FF8  00F9               	movwf	BMP280_Configure@standby
  4077  0FF9  087D               	movf	BMP280_begin@mode,w
  4078  0FFA  120A  158A  252B  120A  158A  	fcall	_BMP280_Configure
  4079  0FFF                     l134:
  4080  0FFF  0008               	return
  4081  1000                     __end_of_BMP280_begin:
  4082                           
  4083                           	psect	text10
  4084  0CEF                     __ptext10:	
  4085 ;; *************** function _BMP280_Read8 *****************
  4086 ;; Defined at:
  4087 ;;		line 106 in file "BMP280.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  reg_addr        1    wreg     unsigned char 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  reg_addr        1    8[COMMON] unsigned char 
  4092 ;;  ret             1    9[COMMON] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      unsigned char 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       0       0       0       0
  4103 ;;      Locals:         2       0       0       0       0
  4104 ;;      Temps:          2       0       0       0       0
  4105 ;;      Totals:         4       0       0       0       0
  4106 ;;Total ram usage:        4 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    2
  4109 ;; This function calls:
  4110 ;;		_I2C_Master_Read
  4111 ;;		_I2C_Master_Start
  4112 ;;		_I2C_Master_Stop
  4113 ;;		_I2C_Master_Write
  4114 ;; This function is called by:
  4115 ;;		_BMP280_begin
  4116 ;;		_BMP280_ForcedMeasurement
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function _BMP280_Read8
  4122  0CEF                     _BMP280_Read8:
  4123                           
  4124                           ;incstack = 0
  4125                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  4126                           ;BMP280_Read8@reg_addr stored from wreg
  4127  0CEF  00F8               	movwf	BMP280_Read8@reg_addr
  4128  0CF0                     l1143:
  4129                           
  4130                           ;BMP280.c: 106: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 107: {;BMP280.c: 108:  
      +                           uint8_t ret;;BMP280.c: 110:   I2C_Master_Start();
  4131  0CF0  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Start
  4132                           
  4133                           ;BMP280.c: 111:   I2C_Master_Write( 0xEE);
  4134  0CF5  30EE               	movlw	238
  4135  0CF6  00F0               	movwf	I2C_Master_Write@d
  4136  0CF7  3000               	movlw	0
  4137  0CF8  00F1               	movwf	I2C_Master_Write@d+1
  4138  0CF9  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4139                           
  4140                           ;BMP280.c: 112:   I2C_Master_Write(reg_addr);
  4141  0CFE  0878               	movf	BMP280_Read8@reg_addr,w
  4142  0CFF  00F6               	movwf	??_BMP280_Read8
  4143  0D00  01F7               	clrf	??_BMP280_Read8+1
  4144  0D01  0876               	movf	??_BMP280_Read8,w
  4145  0D02  00F0               	movwf	I2C_Master_Write@d
  4146  0D03  0877               	movf	??_BMP280_Read8+1,w
  4147  0D04  00F1               	movwf	I2C_Master_Write@d+1
  4148  0D05  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4149                           
  4150                           ;BMP280.c: 113:   I2C_Master_Start();
  4151  0D0A  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Start
  4152                           
  4153                           ;BMP280.c: 114:   I2C_Master_Write( 0xEE | 1);
  4154  0D0F  30EF               	movlw	239
  4155  0D10  00F0               	movwf	I2C_Master_Write@d
  4156  0D11  3000               	movlw	0
  4157  0D12  00F1               	movwf	I2C_Master_Write@d+1
  4158  0D13  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4159                           
  4160                           ;BMP280.c: 115:   ret = I2C_Master_Read(0);
  4161  0D18  3000               	movlw	0
  4162  0D19  00F0               	movwf	I2C_Master_Read@a
  4163  0D1A  00F1               	movwf	I2C_Master_Read@a+1
  4164  0D1B  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  4165  0D20  0870               	movf	?_I2C_Master_Read,w
  4166  0D21  00F6               	movwf	??_BMP280_Read8
  4167  0D22  0876               	movf	??_BMP280_Read8,w
  4168  0D23  00F9               	movwf	BMP280_Read8@ret
  4169                           
  4170                           ;BMP280.c: 116:   I2C_Master_Stop();
  4171  0D24  120A  158A  23F3  120A  158A  	fcall	_I2C_Master_Stop
  4172  0D29                     l1145:
  4173                           
  4174                           ;BMP280.c: 118:   return ret;
  4175  0D29  0879               	movf	BMP280_Read8@ret,w
  4176  0D2A                     l124:
  4177  0D2A  0008               	return
  4178  0D2B                     __end_of_BMP280_Read8:
  4179                           
  4180                           	psect	text11
  4181  0DBB                     __ptext11:	
  4182 ;; *************** function _BMP280_Read16 *****************
  4183 ;; Defined at:
  4184 ;;		line 122 in file "BMP280.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  reg_addr        1    wreg     unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  reg_addr        1   10[COMMON] unsigned char 
  4189 ;;  ret             2   11[COMMON] struct .
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  2    6[COMMON] unsigned int 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0, pclath, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4199 ;;      Params:         2       0       0       0       0
  4200 ;;      Locals:         3       0       0       0       0
  4201 ;;      Temps:          2       0       0       0       0
  4202 ;;      Totals:         7       0       0       0       0
  4203 ;;Total ram usage:        7 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:    2
  4206 ;; This function calls:
  4207 ;;		_I2C_Master_Read
  4208 ;;		_I2C_Master_Start
  4209 ;;		_I2C_Master_Stop
  4210 ;;		_I2C_Master_Write
  4211 ;; This function is called by:
  4212 ;;		_BMP280_begin
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           
  4217                           ;psect for function _BMP280_Read16
  4218  0DBB                     _BMP280_Read16:
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  4222                           ;BMP280_Read16@reg_addr stored from wreg
  4223  0DBB  00FA               	movwf	BMP280_Read16@reg_addr
  4224  0DBC                     l1149:
  4225                           
  4226                           ;BMP280.c: 122: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 123: {;BMP280.c: 128:
      +                             } ret;;BMP280.c: 130:   I2C_Master_Start();
  4227  0DBC  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Start
  4228                           
  4229                           ;BMP280.c: 131:   I2C_Master_Write( 0xEE);
  4230  0DC1  30EE               	movlw	238
  4231  0DC2  00F0               	movwf	I2C_Master_Write@d
  4232  0DC3  3000               	movlw	0
  4233  0DC4  00F1               	movwf	I2C_Master_Write@d+1
  4234  0DC5  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4235                           
  4236                           ;BMP280.c: 132:   I2C_Master_Write(reg_addr);
  4237  0DCA  087A               	movf	BMP280_Read16@reg_addr,w
  4238  0DCB  00F8               	movwf	??_BMP280_Read16
  4239  0DCC  01F9               	clrf	??_BMP280_Read16+1
  4240  0DCD  0878               	movf	??_BMP280_Read16,w
  4241  0DCE  00F0               	movwf	I2C_Master_Write@d
  4242  0DCF  0879               	movf	??_BMP280_Read16+1,w
  4243  0DD0  00F1               	movwf	I2C_Master_Write@d+1
  4244  0DD1  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4245                           
  4246                           ;BMP280.c: 133:   I2C_Master_Start();
  4247  0DD6  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Start
  4248                           
  4249                           ;BMP280.c: 134:   I2C_Master_Write(0xEE | 1);
  4250  0DDB  30EF               	movlw	239
  4251  0DDC  00F0               	movwf	I2C_Master_Write@d
  4252  0DDD  3000               	movlw	0
  4253  0DDE  00F1               	movwf	I2C_Master_Write@d+1
  4254  0DDF  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4255                           
  4256                           ;BMP280.c: 135:   ret.b[0] = I2C_Master_Read( 1);
  4257  0DE4  3001               	movlw	1
  4258  0DE5  00F0               	movwf	I2C_Master_Read@a
  4259  0DE6  3000               	movlw	0
  4260  0DE7  00F1               	movwf	I2C_Master_Read@a+1
  4261  0DE8  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  4262  0DED  0870               	movf	?_I2C_Master_Read,w
  4263  0DEE  00F8               	movwf	??_BMP280_Read16
  4264  0DEF  0878               	movf	??_BMP280_Read16,w
  4265  0DF0  00FB               	movwf	BMP280_Read16@ret
  4266                           
  4267                           ;BMP280.c: 136:   ret.b[1] = I2C_Master_Read( 0);
  4268  0DF1  3000               	movlw	0
  4269  0DF2  00F0               	movwf	I2C_Master_Read@a
  4270  0DF3  00F1               	movwf	I2C_Master_Read@a+1
  4271  0DF4  120A  158A  2453  120A  158A  	fcall	_I2C_Master_Read
  4272  0DF9  0870               	movf	?_I2C_Master_Read,w
  4273  0DFA  00F8               	movwf	??_BMP280_Read16
  4274  0DFB  0878               	movf	??_BMP280_Read16,w
  4275  0DFC  00FC               	movwf	BMP280_Read16@ret+1
  4276                           
  4277                           ;BMP280.c: 137:   I2C_Master_Stop();
  4278  0DFD  120A  158A  23F3  120A  158A  	fcall	_I2C_Master_Stop
  4279  0E02                     l1151:
  4280                           
  4281                           ;BMP280.c: 139:   return(ret.w);
  4282  0E02  087C               	movf	BMP280_Read16@ret+1,w
  4283  0E03  00F7               	movwf	?_BMP280_Read16+1
  4284  0E04  087B               	movf	BMP280_Read16@ret,w
  4285  0E05  00F6               	movwf	?_BMP280_Read16
  4286  0E06                     l127:
  4287  0E06  0008               	return
  4288  0E07                     __end_of_BMP280_Read16:
  4289                           
  4290                           	psect	text12
  4291  0C53                     __ptext12:	
  4292 ;; *************** function _I2C_Master_Read *****************
  4293 ;; Defined at:
  4294 ;;		line 74 in file "I2C.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  a               2    0[COMMON] unsigned short 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  temp            2    4[COMMON] unsigned short 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  2    0[COMMON] unsigned short 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0, pclath, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4308 ;;      Params:         2       0       0       0       0
  4309 ;;      Locals:         2       0       0       0       0
  4310 ;;      Temps:          2       0       0       0       0
  4311 ;;      Totals:         6       0       0       0       0
  4312 ;;Total ram usage:        6 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    1
  4315 ;; This function calls:
  4316 ;;		_I2C_Master_Wait
  4317 ;; This function is called by:
  4318 ;;		_BMP280_Read8
  4319 ;;		_BMP280_Read16
  4320 ;;		_BMP280_Update
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           
  4325                           ;psect for function _I2C_Master_Read
  4326  0C53                     _I2C_Master_Read:
  4327  0C53                     l1089:	
  4328                           ;incstack = 0
  4329                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4330                           
  4331                           
  4332                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4333  0C53  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4334  0C58                     l1091:
  4335                           
  4336                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4337  0C58  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0C59  1303               	bcf	3,6	;RP1=0, select bank1
  4339  0C5A  1591               	bsf	17,3	;volatile
  4340                           
  4341                           ;I2C.c: 79:     I2C_Master_Wait();
  4342  0C5B  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4343  0C60                     l1093:
  4344                           
  4345                           ;I2C.c: 80:     temp = SSPBUF;
  4346  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0C62  0813               	movf	19,w	;volatile
  4349  0C63  00F2               	movwf	??_I2C_Master_Read
  4350  0C64  01F3               	clrf	??_I2C_Master_Read+1
  4351  0C65  0872               	movf	??_I2C_Master_Read,w
  4352  0C66  00F4               	movwf	I2C_Master_Read@temp
  4353  0C67  0873               	movf	??_I2C_Master_Read+1,w
  4354  0C68  00F5               	movwf	I2C_Master_Read@temp+1
  4355  0C69                     l1095:
  4356                           
  4357                           ;I2C.c: 81:     I2C_Master_Wait();
  4358  0C69  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4359  0C6E                     l1097:
  4360                           
  4361                           ;I2C.c: 82:     if(a == 1){
  4362  0C6E  0370               	decf	I2C_Master_Read@a,w
  4363  0C6F  0471               	iorwf	I2C_Master_Read@a+1,w
  4364  0C70  1D03               	btfss	3,2
  4365  0C71  2C73               	goto	u641
  4366  0C72  2C74               	goto	u640
  4367  0C73                     u641:
  4368  0C73  2C78               	goto	l95
  4369  0C74                     u640:
  4370  0C74                     l1099:
  4371                           
  4372                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4373  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  4374  0C75  1303               	bcf	3,6	;RP1=0, select bank1
  4375  0C76  1291               	bcf	17,5	;volatile
  4376                           
  4377                           ;I2C.c: 84:     }else{
  4378  0C77  2C7B               	goto	l96
  4379  0C78                     l95:
  4380                           
  4381                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4382  0C78  1683               	bsf	3,5	;RP0=1, select bank1
  4383  0C79  1303               	bcf	3,6	;RP1=0, select bank1
  4384  0C7A  1691               	bsf	17,5	;volatile
  4385  0C7B                     l96:	
  4386                           ;I2C.c: 86:     }
  4387                           
  4388                           
  4389                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4390  0C7B  1611               	bsf	17,4	;volatile
  4391  0C7C                     l1101:
  4392                           
  4393                           ;I2C.c: 88:     return temp;
  4394  0C7C  0875               	movf	I2C_Master_Read@temp+1,w
  4395  0C7D  00F1               	movwf	?_I2C_Master_Read+1
  4396  0C7E  0874               	movf	I2C_Master_Read@temp,w
  4397  0C7F  00F0               	movwf	?_I2C_Master_Read
  4398  0C80                     l97:
  4399  0C80  0008               	return
  4400  0C81                     __end_of_I2C_Master_Read:
  4401                           
  4402                           	psect	text13
  4403  0D2B                     __ptext13:	
  4404 ;; *************** function _BMP280_Configure *****************
  4405 ;; Defined at:
  4406 ;;		line 143 in file "BMP280.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  mode            1    wreg     enum E1304
  4409 ;;  T_sampling      1    6[COMMON] enum E1309
  4410 ;;  P_sampling      1    7[COMMON] enum E1309
  4411 ;;  filter          1    8[COMMON] enum E1317
  4412 ;;  standby         1    9[COMMON] enum E1324
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  mode            1    0[BANK0 ] enum E1304
  4415 ;;  _config         1    2[BANK0 ] unsigned char 
  4416 ;;  _ctrl_meas      1    1[BANK0 ] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         4       0       0       0       0
  4427 ;;      Locals:         0       3       0       0       0
  4428 ;;      Temps:          3       0       0       0       0
  4429 ;;      Totals:         7       3       0       0       0
  4430 ;;Total ram usage:       10 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    3
  4433 ;; This function calls:
  4434 ;;		_BMP280_Write
  4435 ;; This function is called by:
  4436 ;;		_BMP280_begin
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _BMP280_Configure
  4442  0D2B                     _BMP280_Configure:
  4443                           
  4444                           ;incstack = 0
  4445                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  4446                           ;BMP280_Configure@mode stored from wreg
  4447  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  4448  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  4449  0D2D  00A0               	movwf	BMP280_Configure@mode
  4450  0D2E                     l1155:
  4451                           
  4452                           ;BMP280.c: 143: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 144:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 145: {;BMP280.c: 146:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 148:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  4453  0D2E  0878               	movf	BMP280_Configure@filter,w
  4454  0D2F  00FA               	movwf	??_BMP280_Configure
  4455  0D30  3002               	movlw	2
  4456  0D31                     u735:
  4457  0D31  1003               	clrc
  4458  0D32  0DFA               	rlf	??_BMP280_Configure,f
  4459  0D33  3EFF               	addlw	-1
  4460  0D34  1D03               	skipz
  4461  0D35  2D31               	goto	u735
  4462  0D36  0879               	movf	BMP280_Configure@standby,w
  4463  0D37  00FB               	movwf	??_BMP280_Configure+1
  4464  0D38  3004               	movlw	4
  4465  0D39                     u745:
  4466  0D39  1003               	clrc
  4467  0D3A  0DFB               	rlf	??_BMP280_Configure+1,f
  4468  0D3B  3EFF               	addlw	-1
  4469  0D3C  1D03               	skipz
  4470  0D3D  2D39               	goto	u745
  4471  0D3E  1003               	clrc
  4472  0D3F  0D7B               	rlf	??_BMP280_Configure+1,w
  4473  0D40  047A               	iorwf	??_BMP280_Configure,w
  4474  0D41  39FC               	andlw	252
  4475  0D42  00FC               	movwf	??_BMP280_Configure+2
  4476  0D43  087C               	movf	??_BMP280_Configure+2,w
  4477  0D44  00A2               	movwf	BMP280_Configure@_config
  4478                           
  4479                           ;BMP280.c: 149:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  4480  0D45  0877               	movf	BMP280_Configure@P_sampling,w
  4481  0D46  00FA               	movwf	??_BMP280_Configure
  4482  0D47  3002               	movlw	2
  4483  0D48                     u755:
  4484  0D48  1003               	clrc
  4485  0D49  0DFA               	rlf	??_BMP280_Configure,f
  4486  0D4A  3EFF               	addlw	-1
  4487  0D4B  1D03               	skipz
  4488  0D4C  2D48               	goto	u755
  4489  0D4D  0876               	movf	BMP280_Configure@T_sampling,w
  4490  0D4E  00FB               	movwf	??_BMP280_Configure+1
  4491  0D4F  3004               	movlw	4
  4492  0D50                     u765:
  4493  0D50  1003               	clrc
  4494  0D51  0DFB               	rlf	??_BMP280_Configure+1,f
  4495  0D52  3EFF               	addlw	-1
  4496  0D53  1D03               	skipz
  4497  0D54  2D50               	goto	u765
  4498  0D55  1003               	clrc
  4499  0D56  0D7B               	rlf	??_BMP280_Configure+1,w
  4500  0D57  047A               	iorwf	??_BMP280_Configure,w
  4501  0D58  0420               	iorwf	BMP280_Configure@mode,w
  4502  0D59  00FC               	movwf	??_BMP280_Configure+2
  4503  0D5A  087C               	movf	??_BMP280_Configure+2,w
  4504  0D5B  00A1               	movwf	BMP280_Configure@_ctrl_meas
  4505  0D5C                     l1157:
  4506                           
  4507                           ;BMP280.c: 151:   BMP280_Write(0xF5, _config);
  4508  0D5C  0822               	movf	BMP280_Configure@_config,w
  4509  0D5D  00FA               	movwf	??_BMP280_Configure
  4510  0D5E  087A               	movf	??_BMP280_Configure,w
  4511  0D5F  00F2               	movwf	BMP280_Write@_data
  4512  0D60  30F5               	movlw	245
  4513  0D61  120A  158A  2426  120A  158A  	fcall	_BMP280_Write
  4514  0D66                     l1159:
  4515                           
  4516                           ;BMP280.c: 152:   BMP280_Write(0xF4, _ctrl_meas);
  4517  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  4518  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  4519  0D68  0821               	movf	BMP280_Configure@_ctrl_meas,w
  4520  0D69  00FA               	movwf	??_BMP280_Configure
  4521  0D6A  087A               	movf	??_BMP280_Configure,w
  4522  0D6B  00F2               	movwf	BMP280_Write@_data
  4523  0D6C  30F4               	movlw	244
  4524  0D6D  120A  158A  2426  120A  158A  	fcall	_BMP280_Write
  4525  0D72                     l130:
  4526  0D72  0008               	return
  4527  0D73                     __end_of_BMP280_Configure:
  4528                           
  4529                           	psect	text14
  4530  0C26                     __ptext14:	
  4531 ;; *************** function _BMP280_Write *****************
  4532 ;; Defined at:
  4533 ;;		line 96 in file "BMP280.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  reg_addr        1    wreg     unsigned char 
  4536 ;;  _data           1    2[COMMON] unsigned char 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  reg_addr        1    5[COMMON] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0, pclath, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4548 ;;      Params:         1       0       0       0       0
  4549 ;;      Locals:         1       0       0       0       0
  4550 ;;      Temps:          2       0       0       0       0
  4551 ;;      Totals:         4       0       0       0       0
  4552 ;;Total ram usage:        4 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    2
  4555 ;; This function calls:
  4556 ;;		_I2C_Master_Start
  4557 ;;		_I2C_Master_Stop
  4558 ;;		_I2C_Master_Write
  4559 ;; This function is called by:
  4560 ;;		_BMP280_Configure
  4561 ;;		_BMP280_begin
  4562 ;;		_BMP280_ForcedMeasurement
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           
  4567                           ;psect for function _BMP280_Write
  4568  0C26                     _BMP280_Write:
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  4572                           ;BMP280_Write@reg_addr stored from wreg
  4573  0C26  00F5               	movwf	BMP280_Write@reg_addr
  4574  0C27                     l1105:
  4575                           
  4576                           ;BMP280.c: 96: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 97: {;BMP280
      +                          .c: 98:   I2C_Master_Start();
  4577  0C27  120A  158A  23EA  120A  158A  	fcall	_I2C_Master_Start
  4578                           
  4579                           ;BMP280.c: 99:   I2C_Master_Write(0xEE);
  4580  0C2C  30EE               	movlw	238
  4581  0C2D  00F0               	movwf	I2C_Master_Write@d
  4582  0C2E  3000               	movlw	0
  4583  0C2F  00F1               	movwf	I2C_Master_Write@d+1
  4584  0C30  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4585                           
  4586                           ;BMP280.c: 100:   I2C_Master_Write (reg_addr);
  4587  0C35  0875               	movf	BMP280_Write@reg_addr,w
  4588  0C36  00F3               	movwf	??_BMP280_Write
  4589  0C37  01F4               	clrf	??_BMP280_Write+1
  4590  0C38  0873               	movf	??_BMP280_Write,w
  4591  0C39  00F0               	movwf	I2C_Master_Write@d
  4592  0C3A  0874               	movf	??_BMP280_Write+1,w
  4593  0C3B  00F1               	movwf	I2C_Master_Write@d+1
  4594  0C3C  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4595                           
  4596                           ;BMP280.c: 101:   I2C_Master_Write( _data);
  4597  0C41  0872               	movf	BMP280_Write@_data,w
  4598  0C42  00F3               	movwf	??_BMP280_Write
  4599  0C43  01F4               	clrf	??_BMP280_Write+1
  4600  0C44  0873               	movf	??_BMP280_Write,w
  4601  0C45  00F0               	movwf	I2C_Master_Write@d
  4602  0C46  0874               	movf	??_BMP280_Write+1,w
  4603  0C47  00F1               	movwf	I2C_Master_Write@d+1
  4604  0C48  120A  158A  23FC  120A  158A  	fcall	_I2C_Master_Write
  4605                           
  4606                           ;BMP280.c: 102:   I2C_Master_Stop();
  4607  0C4D  120A  158A  23F3  120A  158A  	fcall	_I2C_Master_Stop
  4608  0C52                     l121:
  4609  0C52  0008               	return
  4610  0C53                     __end_of_BMP280_Write:
  4611                           
  4612                           	psect	text15
  4613  0BFC                     __ptext15:	
  4614 ;; *************** function _I2C_Master_Write *****************
  4615 ;; Defined at:
  4616 ;;		line 65 in file "I2C.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  d               2    0[COMMON] unsigned int 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, pclath, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         2       0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0
  4633 ;;      Totals:         2       0       0       0       0
  4634 ;;Total ram usage:        2 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    1
  4637 ;; This function calls:
  4638 ;;		_I2C_Master_Wait
  4639 ;; This function is called by:
  4640 ;;		_BMP280_Write
  4641 ;;		_BMP280_Read8
  4642 ;;		_BMP280_Read16
  4643 ;;		_BMP280_Update
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           
  4648                           ;psect for function _I2C_Master_Write
  4649  0BFC                     _I2C_Master_Write:
  4650  0BFC                     l1085:	
  4651                           ;incstack = 0
  4652                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4653                           
  4654                           
  4655                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4656  0BFC  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4657  0C01                     l1087:
  4658                           
  4659                           ;I2C.c: 68:     SSPBUF = d;
  4660  0C01  0870               	movf	I2C_Master_Write@d,w
  4661  0C02  1283               	bcf	3,5	;RP0=0, select bank0
  4662  0C03  1303               	bcf	3,6	;RP1=0, select bank0
  4663  0C04  0093               	movwf	19	;volatile
  4664  0C05                     l92:
  4665  0C05  0008               	return
  4666  0C06                     __end_of_I2C_Master_Write:
  4667                           
  4668                           	psect	text16
  4669  0BF3                     __ptext16:	
  4670 ;; *************** function _I2C_Master_Stop *****************
  4671 ;; Defined at:
  4672 ;;		line 55 in file "I2C.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0, pclath, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4686 ;;      Params:         0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0
  4689 ;;      Totals:         0       0       0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    1
  4693 ;; This function calls:
  4694 ;;		_I2C_Master_Wait
  4695 ;; This function is called by:
  4696 ;;		_BMP280_Write
  4697 ;;		_BMP280_Read8
  4698 ;;		_BMP280_Read16
  4699 ;;		_BMP280_Update
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           
  4704                           ;psect for function _I2C_Master_Stop
  4705  0BF3                     _I2C_Master_Stop:
  4706  0BF3                     l1081:	
  4707                           ;incstack = 0
  4708                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4709                           
  4710                           
  4711                           ;I2C.c: 57:     I2C_Master_Wait();
  4712  0BF3  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4713  0BF8                     l1083:
  4714                           
  4715                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4716  0BF8  1683               	bsf	3,5	;RP0=1, select bank1
  4717  0BF9  1303               	bcf	3,6	;RP1=0, select bank1
  4718  0BFA  1511               	bsf	17,2	;volatile
  4719  0BFB                     l89:
  4720  0BFB  0008               	return
  4721  0BFC                     __end_of_I2C_Master_Stop:
  4722                           
  4723                           	psect	text17
  4724  0BEA                     __ptext17:	
  4725 ;; *************** function _I2C_Master_Start *****************
  4726 ;; Defined at:
  4727 ;;		line 39 in file "I2C.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0, pclath, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4741 ;;      Params:         0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0
  4744 ;;      Totals:         0       0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    1
  4748 ;; This function calls:
  4749 ;;		_I2C_Master_Wait
  4750 ;; This function is called by:
  4751 ;;		_BMP280_Write
  4752 ;;		_BMP280_Read8
  4753 ;;		_BMP280_Read16
  4754 ;;		_BMP280_Update
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function _I2C_Master_Start
  4760  0BEA                     _I2C_Master_Start:
  4761  0BEA                     l1077:	
  4762                           ;incstack = 0
  4763                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4764                           
  4765                           
  4766                           ;I2C.c: 41:     I2C_Master_Wait();
  4767  0BEA  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4768  0BEF                     l1079:
  4769                           
  4770                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4771  0BEF  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0BF0  1303               	bcf	3,6	;RP1=0, select bank1
  4773  0BF1  1411               	bsf	17,0	;volatile
  4774  0BF2                     l83:
  4775  0BF2  0008               	return
  4776  0BF3                     __end_of_I2C_Master_Start:
  4777                           
  4778                           	psect	text18
  4779  0009                     __ptext18:	
  4780 ;; *************** function _I2C_Master_Wait *****************
  4781 ;; Defined at:
  4782 ;;		line 32 in file "I2C.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4796 ;;      Params:         0       0       0       0       0
  4797 ;;      Locals:         0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0
  4799 ;;      Totals:         0       0       0       0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_I2C_Master_Start
  4806 ;;		_I2C_Master_Stop
  4807 ;;		_I2C_Master_Write
  4808 ;;		_I2C_Master_Read
  4809 ;;		_I2C_Master_RepeatedStart
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           
  4814                           ;psect for function _I2C_Master_Wait
  4815  0009                     _I2C_Master_Wait:
  4816  0009                     l1073:	
  4817                           ;incstack = 0
  4818                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4819                           
  4820  0009                     l77:	
  4821                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4822                           
  4823  0009  1683               	bsf	3,5	;RP0=1, select bank1
  4824  000A  1303               	bcf	3,6	;RP1=0, select bank1
  4825  000B  1914               	btfsc	20,2	;volatile
  4826  000C  280E               	goto	u621
  4827  000D  280F               	goto	u620
  4828  000E                     u621:
  4829  000E  2809               	goto	l77
  4830  000F                     u620:
  4831  000F                     l1075:
  4832  000F  0811               	movf	17,w	;volatile
  4833  0010  391F               	andlw	31
  4834  0011  1D03               	btfss	3,2
  4835  0012  2814               	goto	u631
  4836  0013  2815               	goto	u630
  4837  0014                     u631:
  4838  0014  2809               	goto	l77
  4839  0015                     u630:
  4840  0015                     l80:
  4841  0015  0008               	return
  4842  0016                     __end_of_I2C_Master_Wait:
  4843  007E                     btemp	set	126	;btemp
  4844  007E                     wtemp0	set	126
  4845                           
  4846                           	psect	config
  4847                           
  4848                           ;Config register CONFIG1 @ 0x2007
  4849                           ;	Oscillator Selection bits
  4850                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4851                           ;	Watchdog Timer Enable bit
  4852                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4853                           ;	Power-up Timer Enable bit
  4854                           ;	PWRTE = OFF, PWRT disabled
  4855                           ;	RE3/MCLR pin function select bit
  4856                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4857                           ;	Code Protection bit
  4858                           ;	CP = OFF, Program memory code protection is disabled
  4859                           ;	Data Code Protection bit
  4860                           ;	CPD = OFF, Data memory code protection is disabled
  4861                           ;	Brown Out Reset Selection bits
  4862                           ;	BOREN = ON, BOR enabled
  4863                           ;	Internal External Switchover bit
  4864                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4865                           ;	Fail-Safe Clock Monitor Enabled bit
  4866                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4867                           ;	Low Voltage Programming Enable bit
  4868                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4869                           ;	In-Circuit Debugger Mode bit
  4870                           ;	DEBUG = 0x1, unprogrammed default
  4871  2007                     	org	8199
  4872  2007  23F4               	dw	9204
  4873                           
  4874                           ;Config register CONFIG2 @ 0x2008
  4875                           ;	Brown-out Reset Selection bit
  4876                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4877                           ;	Flash Program Memory Self Write Enable bits
  4878                           ;	WRT = OFF, Write protection off
  4879  2008                     	org	8200
  4880  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      78
    BANK1            80      0      28
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK0[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_BMP280_begin
    _I2C_Master_Init->___lldiv
    _BMP280_readTemperature->_BMP280_Update
    _BMP280_readTemperature->___lmul
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___lldiv
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure
    _BMP280_begin->_BMP280_Read16
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   23235
                                             59 BANK0      3     3      0
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             14 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              6 COMMON     8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7474
                                             14 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              9 COMMON     5     5      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                             13 COMMON     1     1      0
                                              3 BANK0      8     4      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              6 COMMON     7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              6 COMMON     7     3      4
                                              0 BANK0      3     3      0
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      78       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      1C       7       35.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      78      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 12 01:26:55 2021

               _BMP280_Configure 0D2B                               l45 0C25                               l80 0015  
                             l74 0CEE                               l83 0BF2                               l92 0C05  
                             l77 0009                               l95 0C78                               l96 0C7B  
                             l89 0BFB                               l97 0C80                               fsr 0004  
                            l121 0C52                              l130 0D72                              l124 0D2A  
                            l134 0FFF                              l150 02C4                              l127 0E06  
                            l154 07EA                              l315 0E6C                              l147 0F23  
                            l156 067C                              l344 002A                              l354 00B2  
                            l293 0DBA                              _GIE 005F          BMP280_Configure@_config 0022  
                            u620 000F                              u621 000E                              u630 0015  
                            u710 0E64                              u631 0014                              u711 0E63  
                            u640 0C74                              u720 0CCE                              u641 0C73  
                            u705 0E56                              u801 0D8A                              u650 0E17  
                            u802 0D91                              u651 0E16                              u803 0D98  
                            u900 007C                              u901 007B                              u725 0CC9  
                            u670 0E2B                              u830 0DB2                              u735 0D31  
                            u671 0E2A                              u831 0DB1                              u815 0D9A  
                            u920 009A                              u840 001D                              u745 0D39  
                            u921 0099                              u905 0078                              u841 001C  
                            u665 0E1C                              u825 0DA2                              u930 009F  
                            u850 002E                              u690 0E46                              u770 0EC8  
                            u755 0D48                              u931 009E                              u915 008C  
                            u851 002D                              u691 0E45                              u940 0F30  
                            u860 004D                              u780 0F12                              u765 0D50  
                            u941 0F2F                              u861 004C                              u685 0E2D  
                            u950 0F57                              u790 0D81                              u951 0F56  
                            u695 0E42                              u791 0D80                              u775 0EC3  
                            u880 0061                              u960 00CF                              u881 0060  
                            u785 0F0D                              u875 0052                              u971 00F8  
                            u972 00F9                              u981 0180                              u973 00FE  
                            u965 00CA                              u982 0181                              u974 00FF  
                            u895 0063                              u991 01C9                              u983 0186  
                            u975 0104                              u992 01CA                              u984 0187  
                            u976 0105                              u993 01CF                              u985 018C  
                            u994 01D0                              u986 018D                              u995 01D5  
                            u996 01D6                              fsr0 0004                              indf 0000  
   __size_of_BMP280_readPressure 0526           BMP280_begin@P_sampling 0024                             l1101 0C7C  
                           l1111 0E1A                             l1105 0C27                             l1121 0E54  
                           l1113 0E27                             l1201 0DB2                             l1211 002E  
                           l1123 0E55                             l1115 0E2B                             l1107 0E07  
                           l1131 0CB7                             l1221 0050                             l1213 0039  
                           l1205 0016                             l1125 0E5E                             l1117 0E34  
                           l1109 0E17                             l1141 0CED                             l1133 0CBB  
                           l1151 0E02                             l1143 0CF0                             l1231 008A  
                           l1223 005D                             l1215 003D                             l1207 0019  
                           l1119 0E46                             l1127 0E64                             l1135 0CBE  
                           l1073 0009                             l1081 0BF3                             l1145 0D29  
                           l1241 00AA                             l1233 008B                             l1225 0061  
                           l1217 0045                             l1209 001D                             l1161 0E6D  
                           l1137 0CEB                             l1075 000F                             l1083 0BF8  
                           l1155 0D2E                             l1091 0C58                             l1235 0094  
                           l1227 006A                             l1219 004D                             l1171 0E8A  
                           l1163 0E6E                             l1139 0CEC                             l1077 0BEA  
                           l1085 0BFC                             l1157 0D5C                             l1093 0C60  
                           l1149 0DBC                             l1261 0F57                             l1253 0F31  
                           l1229 007C                             l1237 009A                             l1181 0ED9  
                           l1173 0E93                             l1165 0E73                             l1245 0C06  
                           l1079 0BEF                             l1087 0C01                             l1159 0D66  
                           l1095 0C69                             l1255 0F3D                             l1239 009F  
                           l1191 0D73                             l1183 0EE6                             l1175 0EA0  
                           l1167 0E7C                             l1247 0C16                             l1097 0C6E  
                           l1089 0C53                             l1249 0F25                             l1193 0D7B  
                           l1281 0623                             l1273 02C8                             l1185 0EF3  
                           l1177 0EAD                             l1169 0E85                             l1265 00B6  
                           l1099 0C74                             l1259 0F4C                             l1195 0D81  
                           l1283 0637                             l1275 0599                             l1187 0EFF  
                           l1179 0EBA                             l1267 024B                             l1291 0C81  
                           l1197 0D98                             l1285 065A                             l1189 0F04  
                           l1269 026E                             l1293 0C94                             l1199 0DA1  
                           l1287 07DC                             l1279 05A2                             l1295 0CA3  
                           l1297 0CA7                             l1299 0CAD                             u1000 029C  
                           u1001 029D                             u1010 02EE                             u1002 02A2  
                           u1011 02EF                             u1003 02A3                             u1100 05F9  
                           u1020 03C3                             u1012 02F4                             u1101 05FA  
                           u1013 02F5                             u1110 0637                             u1102 05FF  
                           u1030 03CD                             u1111 0636                             u1103 0600  
                           u1031 03CE                             u1120 068A                             u1040 03F4  
                           u1032 03D3                             u1113 0633                             u1033 03D4  
                           u1025 03BE                             u1130 06A3                             u1050 0415  
                           u1051 0416                             u1140 06C3                             u1060 0511  
                           u1052 041B                             u1125 0685                             u1061 0512  
                           u1053 041C                             u1045 03EF                             u1150 0723  
                           u1070 055A                             u1062 0517                             u1135 069E  
                           u1071 055B                             u1063 0518                             u1207 0C9C  
                           u1160 078D                             u1080 05A1                             u1072 0560  
                           u1217 0F45                             u1161 078E                             u1145 06BE  
                           u1081 05A0                             u1073 0561                             u1170 079F  
                           u1162 0793                             u1171 07A0                             u1163 0794  
                           u1155 071E                             u1091 05E5                             u1172 07A5  
                           u1092 05E6                             u1173 07A6                             u1093 05EB  
                           u1094 05EC                             u1095 05F1                             u1096 05F2  
                           _PEIE 005E                             _TXIF 0064          BMP280_Configure@standby 0079  
                           _main 0C81                             btemp 007E                             start 0000  
__size_of_BMP280_readTemperature 0212           BMP280_begin@T_sampling 0023            __size_of_BMP280_Read8 003C  
               ?_I2C_Master_Init 0020                 ?_I2C_Master_Read 0070                 ?_I2C_Master_Wait 0070  
          __size_of_BMP280_Write 002D                 ?_I2C_Master_Stop 0070            __size_of_BMP280_begin 00DC  
                __end_of___aldiv 00B3                            ?_main 0070                            _ANSEL 0188  
                __end_of___lldiv 0E6D                            _RCREG 001A                  BMP280_Read8@ret 0079  
    _BMP280_readTemperature$1118 004B      _BMP280_readTemperature$1119 0046                            _SPBRG 0099  
                          _PORTA 0005                            _PORTB 0006                            _PORTD 0008  
                          _TRISA 0085                            _TRISB 0086                            _TRISD 0088  
                          _SSPIE 0463                            _SSPIF 0063                            _TXREG 0019  
            ___lmul@multiplicand 002A                            _adc_P 00A0                            _adc_T 0062  
                          _setup 0C06                            status 0003                            wtemp0 007E  
                   _BMP280_Read8 0CEF                     _BMP280_Write 0C26                     _BMP280_calib 00A4  
                   _BMP280_begin 0F24                  __initialization 07EB                     __end_of_main 0CB7  
         __size_of_BMP280_Read16 004C                           ??_main 005B           __size_of_BMP280_Update 00B7  
         _BMP280_readTemperature 00B3                ?_I2C_Master_Start 0070                ?_I2C_Master_Write 0070  
               BMP280_Read16@ret 007B               ??_I2C_Master_Start 0070               ??_I2C_Master_Write 0072  
                         ?_setup 0070                           _ANSELH 0189                           _SPBRGH 009A  
                         _SSPADD 0093                           _TRISC3 043B                           _TRISC4 043C  
                         _SSPCON 0014                           _SSPBUF 0013                           ___lmul 0D73  
                      ??___aldiv 0078                        ??___lldiv 0078                           _t_fine 005E  
     BMP280_Configure@P_sampling 0077         __end_of_BMP280_Configure 0D73                    _BMP280_Read16 0DBB  
        __end_of__initialization 07FC       BMP280_Configure@T_sampling 0076                    _BMP280_Update 0E6D  
                 __pcstackCOMMON 0070              _BMP280_readPressure 02C5                    __end_of_setup 0C26  
               BMP280_Update@ret 007A             ?_BMP280_readPressure 0070                          ??_setup 007E  
                     __pbssBANK0 005E                       __pbssBANK1 00A0                   ?_BMP280_Read16 0076  
                 ?_BMP280_Update 0070          BMP280_readPressure@var1 0057          BMP280_readPressure@var2 004F  
        BMP280_readPressure@pres 004A                       __pmaintext 0C81                          ?___lmul 0026  
                 ___lmul@product 007A                 BMP280_begin@mode 007D            ??_BMP280_readPressure 002E  
                        _SSPCON2 0091                          _SSPSTAT 0094       BMP280_Configure@_ctrl_meas 0021  
           BMP280_Write@reg_addr 0075                          ___aldiv 0016                  __size_of___lmul 0048  
                        ___lldiv 0E07          ?_BMP280_readTemperature 0070                          __ptext1 0C06  
                        __ptext2 0CB7                          __ptext3 00B3                          __ptext4 0E6D  
                        __ptext5 02C5                          __ptext6 0D73                          __ptext7 0E07  
                        __ptext8 0016                          __ptext9 0F24                 ___aldiv@dividend 0074  
       __size_of_I2C_Master_Init 0038         __size_of_I2C_Master_Read 002E         __size_of_I2C_Master_Wait 000D  
       __size_of_I2C_Master_Stop 0009                  ??_BMP280_Read16 0078                          clrloop0 0BE3  
           end_of_initialization 07FC                  ??_BMP280_Update 0076            BMP280_Read16@reg_addr 007A  
             BMP280_begin@filter 0025        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0070                  ___lldiv@counter 007D                        _RCSTAbits 0018  
               ___aldiv@quotient 0022                 I2C_Master_Init@c 0020                 I2C_Master_Read@a 0070  
 __end_of_BMP280_readTemperature 02C5                        _TRISCbits 0087                ?_BMP280_Configure 0076  
             ??_BMP280_Configure 007A           BMP280_Configure@filter 0078                        _TXSTAbits 0098  
                 __end_of___lmul 0DBB                      _BAUDCTLbits 0187              start_initialization 07EB  
              ??_I2C_Master_Init 0024                ??_I2C_Master_Read 0072                ??_I2C_Master_Wait 0070  
              ??_I2C_Master_Stop 0070                         ??___lmul 0079             BMP280_Configure@mode 0020  
                      ___latbits 0002                    __pcstackBANK0 0020                    ?_BMP280_Read8 0070  
               _I2C_Master_Start 0BEA                 _I2C_Master_Write 0BFC                    ?_BMP280_Write 0072  
                  ?_BMP280_begin 0023             BMP280_readPressure@p 0053                BMP280_Write@_data 0072  
                       ?___aldiv 0070                         ?___lldiv 0070      __end_of_BMP280_readPressure 07EB  
                 __size_of_setup 0020                  ___aldiv@divisor 0070                  ___aldiv@counter 0020  
                 ??_BMP280_Read8 0076                        clear_ram0 0BE2                   ??_BMP280_Write 0073  
                       _PIE1bits 008C                   ??_BMP280_begin 0027         _BMP280_readPressure$1120 004B  
       _BMP280_readPressure$1121 003E         _BMP280_readPressure$1122 0042         _BMP280_readPressure$1123 0046  
            I2C_Master_Read@temp 0074                ___lmul@multiplier 0026            __end_of_BMP280_Read16 0E07  
          __end_of_BMP280_Update 0F24        __size_of_BMP280_Configure 0048                 __size_of___aldiv 009D  
               __size_of___lldiv 0066                  _I2C_Master_Init 0CB7                  _I2C_Master_Read 0C53  
                _I2C_Master_Wait 0009                  _I2C_Master_Stop 0BF3                         __ptext10 0CEF  
                       __ptext11 0DBB                         __ptext12 0C53                         __ptext13 0D2B  
                       __ptext14 0C26                         __ptext15 0BFC                         __ptext16 0BF3  
                       __ptext17 0BEA                         __ptext18 0009       BMP280_readTemperature@var1 003E  
     BMP280_readTemperature@var2 0042       BMP280_readTemperature@temp 004A                    __size_of_main 0036  
                       _pressure 0066             __end_of_BMP280_Read8 0D2B         __end_of_I2C_Master_Start 0BF3  
       __end_of_I2C_Master_Write 0C06             __end_of_BMP280_Write 0C53             __end_of_BMP280_begin 1000  
           BMP280_Read8@reg_addr 0078                 ___lldiv@dividend 0074              BMP280_begin@standby 0026  
       ??_BMP280_readTemperature 002E          __end_of_I2C_Master_Init 0CEF          __end_of_I2C_Master_Read 0C81  
        __end_of_I2C_Master_Wait 0016          __end_of_I2C_Master_Stop 0BFC                      _temperature 006A  
               ___lldiv@quotient 0079                I2C_Master_Write@d 0070                     ___aldiv@sign 0021  
                    _SSPCON2bits 0091  
